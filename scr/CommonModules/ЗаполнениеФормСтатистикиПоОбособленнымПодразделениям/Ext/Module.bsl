#Область ПрограммныйИнтерфейс

// Процедура заполняет отбор компоновки данных по обособленным подразделениям.
// Далее отбор по подразделениям накладывается на другие отборы источника данных (см. ЗаполнениеФормСтатистики.ЗаполнитьФормуСтатистики()).
//
// Параметры:
//  ОтборПоПодразделениям		- Неопределено	- исходящий параметр, в который помещается заполненный отбор.
//								  Если отбор в процедуре не будет определен, то на источники данных формы статистики отбор по подразделению не накладывается. 			
//  Организация					- СправочникСсылка.Организации - организация, по которой заполняется стат. отчет
//  ОбособленноеПодразделение	- СправочникСсылка.ПодразделенияОрганизаций - подразделение, по которому заполняется стат. отчет
//  ИсключитьДанныеОбособленныхПодразделений 
//								- Булево - признак, что стат. отчет заполняется по организации, без входящих в нее обособленных подразделений
//
Процедура ЗаполнитьОтборПоОбособленнымПодразделениям(ОтборПоПодразделениям, Организация, ОбособленноеПодразделение, ИсключитьДанныеОбособленныхПодразделений) Экспорт
	
	Если Не БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОбособленноеПодразделение) И НЕ ИсключитьДанныеОбособленныхПодразделений Тогда
		Возврат;
	КонецЕсли;	
	
	ОтборПоПодразделениям 	= Новый ОтборКомпоновкиДанных;
	ЗначениеОтбора 			= Неопределено;
	ВидСравненияКомпоновки  = ВидСравненияКомпоновкиДанных.Равно;
	
	Подразделения = Новый Массив;
	ЗаполнитьПараметрыОтбораПоОбособленнымПодразделениям(Организация, ИсключитьДанныеОбособленныхПодразделений, ОбособленноеПодразделение, Подразделения);
	
	Если ИсключитьДанныеОбособленныхПодразделений Тогда
		
		// Заполнение по организации без обособленных подразделений.
		// Массив Подразделения содержит как минимум 1 элемент
		Если Подразделения.Количество() = 1 Тогда
			// Добавляем в отбор условие, что подразделение не равно найденному обособленному подразделению.
			ЗначениеОтбора 			= Подразделения[0];
			ВидСравненияКомпоновки 	= ВидСравненияКомпоновкиДанных.НеРавно;
		Иначе	
			// Добавляем в отбор условие, что подразделение не в списке обособленных подразделений
			ЗначениеОтбора = Новый СписокЗначений;
			ЗначениеОтбора.ЗагрузитьЗначения(Подразделения);
			ВидСравненияКомпоновки 	= ВидСравненияКомпоновкиДанных.НеВСписке;
		КонецЕсли;	
		
	ИначеЕсли Подразделения.Количество() > 0 Тогда
		
		// Заполнение по выбранному обособленному подразделению.
		// Массив Подразделения содержит как минимум 1 элемент
		Если Подразделения.Количество() = 1 Тогда
			// Добавляем в отбор условие, что подразделение равно выбранному обособленному подразделению.
			ЗначениеОтбора 			= Подразделения[0];
			ВидСравненияКомпоновки 	= ВидСравненияКомпоновкиДанных.Равно;
		Иначе	
			// Добавляем в отбор условие, что подразделение в списке обособленных подразделений
			ЗначениеОтбора = Новый СписокЗначений;
			ЗначениеОтбора.ЗагрузитьЗначения(Подразделения);
			ВидСравненияКомпоновки 	= ВидСравненияКомпоновкиДанных.ВСписке;
		КонецЕсли;	
				
		// Отбираем счета, на которых установлен учет по подразделениям
		БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
			ОтборПоПодразделениям,
			"УчетПоПодразделениям",
			Истина);
		
	КонецЕсли;
	
	Если ЗначениеОтбора <> Неопределено Тогда
	
		БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
			ОтборПоПодразделениям,
			"ОбособленноеПодразделение",
			ЗначениеОтбора,
			ВидСравненияКомпоновки);
			
	КонецЕсли;		
				
КонецПроцедуры
	
// Процедура заполняет параметры отбора данных при заполнении стат. отчета отдельно по обособленным подразделениям.
//
// Параметры:
//  Организация					- СправочникСсылка.Организации - 
//  ИсключитьДанныеОбособленныхПодразделений - Булево - указывает на то, что отчет заполняется по организации,
//									исключая данные обособленных подразделений. Может модифицироваться в процедуре.
//									Если в результате значение = Истина, то Подразделения содержит массив обособленных подразделений,
//									данные по которым исключаются из отчета.
//  ОбособленноеПодразделение	- СправочникСсылка.ПодразделенияОрганизаций - обособленное подразделение, выбранное в шапке стат. отчета.
//									Имеет смысл, если ИсключитьДанныеОбособленныхПодразделений = Ложь. В этом случае 
//									параметр Подразделения содержит массив обособленных подразделений,
//									по которым заполняется отчет. 
//  Подразделения				- Массив - массив обособленных подразделений. Заполняется в процедуре. 
//									Имеет различный смысл в зависимости от значения параметра ИсключитьДанныеОбособленныхПодразделений.
//
Процедура ЗаполнитьПараметрыОтбораПоОбособленнымПодразделениям(Организация, ИсключитьДанныеОбособленныхПодразделений, ОбособленноеПодразделение, Подразделения) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОбособленноеПодразделение) И НЕ ИсключитьДанныеОбособленныхПодразделений Тогда
		Возврат;
	КонецЕсли;	
	
	ОтборПоПодразделениям 	= Новый ОтборКомпоновкиДанных;
	ЗначениеОтбора 			= Неопределено;
	ВидСравненияКомпоновки  = ВидСравненияКомпоновкиДанных.Равно;
	
	Если ИсключитьДанныеОбособленныхПодразделений Тогда
		
		// Исключаем данные обособленных подразделений, у которых:
		//  - заполнен код ОКПО
		//  - код ОКПО не равен ОКПО организации
	
		КодПоОКПО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "КодПоОКПО");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПодразделенияОрганизаций.Ссылка
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			|ГДЕ
			|	ПодразделенияОрганизаций.Владелец = &Организация
			|	И ПодразделенияОрганизаций.ОбособленноеПодразделение
			|	И ПодразделенияОрганизаций.КодПоОКПО <> &КодПоОКПО
			|	И ПодразделенияОрганизаций.КодПоОКПО <> """"";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("КодПоОКПО",   КодПоОКПО);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			// У организации нет обособленных подразделений, данные которых нужно исключить.
			// Вообще не устанавливаем отбор по подразделениям.
			ИсключитьДанныеОбособленныхПодразделений = Ложь;
			Возврат;
		КонецЕсли;	
		
		Подразделения = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
		
	Иначе
		
		КодПоОКПО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбособленноеПодразделение, "КодПоОКПО");
		
		Если ЗначениеЗаполнено(КодПоОКПО) Тогда
			// Добавляем в отбор все подразделения с таким кодом ОКПО
			Запрос = Новый Запрос;
			
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("КодПоОКПО",   КодПоОКПО);
			
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ПодразделенияОрганизаций.Ссылка
				|ИЗ
				|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
				|ГДЕ
				|	ПодразделенияОрганизаций.Владелец = &Организация
				|	И ПодразделенияОрганизаций.ОбособленноеПодразделение
				|	И ПодразделенияОрганизаций.КодПоОКПО = &КодПоОКПО";
			
			РезультатЗапроса = Запрос.Выполнить();
			Подразделения = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
						
		Иначе
			// Отбор только по одному указанному элементу
			Подразделения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОбособленноеПодразделение);
		КонецЕсли;	
				
	КонецЕсли;
					
КонецПроцедуры
	
Процедура ДобавитьФормыЗаполняемыеВЦеломПоОрганизации(ФормыСтатистики) Экспорт 
	
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФорма1П");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФорма3ТОРГПМ");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФорма5З");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФормаМПм");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФормаП3");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФормаП6");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФормаПМ");
	
КонецПроцедуры

Процедура ДобавитьФормыЗаполняемыеОтдельноПоОбособленнымПодразделениям(ФормыСтатистики) Экспорт 
	
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФорма11");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФорма1Услуги");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФорма7Травматизм");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФормаПМПром");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФормаПУслуги");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФормаП1");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФормаП2");
	ФормыСтатистики.Добавить("РегламентированныйОтчетСтатистикаФормаП5М");
	
КонецПроцедуры

#КонецОбласти



#Область СлужебныйПрограммныйИнтерфейс

// Выполняет проверку на корректность ввода даты расхода в заявке и общей заявке.
// 
// Параметры:
//  ДатаРасхода  - Дата
//  СтруктураПараметров  - Структура
//  ВыводитьСообщения    - Булево - выводить ли сообщение.
// 
// Возвращаемое значение:
//  ДатаКорректна - Булево.
// 
Функция ДатаРасходаКорректна(СтруктураПараметров,ВыводитьСообщения=Ложь)  Экспорт

	ДатаКорректна = Истина;
	ТекстСообщения = "";
	
	Если СтруктураПараметров.Свойство("ДатаДокумента") Тогда
		
		Если СтруктураПараметров.ДатаРасхода < НачалоДня(СтруктураПараметров.ДатаДокумента) Тогда
			
			ТекстСообщения = "Дата расхода не может быть ранее даты документа.";
			ДатаКорректна  = Ложь;
			
		КонецЕсли; 
	
	КонецЕсли; 
	
	Если НЕ ДатаКорректна И ВыводитьСообщения Тогда
		
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,"Объект.ДатаРасхода");
	
	КонецЕсли; 
	
	Возврат ДатаКорректна;

КонецФункции // ДатаРасходаКорректна()

// Функция - Выполняет проверку крайней даты платежа 
// на превышение даты расхода в заявке или  даты прихода в документе "ПланируемоеПоступлениеДенежныхСредств".
// 
//  Параметры:
//      СтруктураПараметров  - Структура
//      ВыводитьСообщения    - Булево - выводить ли сообщение.
// 
// Возвращаемое значение:
//   Позже   - Булево.
// 
Функция ДатаПозжеЧемДатаПлатежаКрайняя(СтруктураПараметров,ВыводитьСообщения=Ложь)  Экспорт

	Позже = Ложь;
	ТекстСообщения = "";
		
	Если СтруктураПараметров.Дата > СтруктураПараметров.ДатаПлатежаКрайняя Тогда
			
		ТекстСообщения = "Крайняя дата платежа не может быть ранее даты расхода.";
		
		Если СтруктураПараметров.ВидДаты = "Дата поступления" Тогда
		
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "платежа", "");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "расхода", "поступления");
		
		КонецЕсли; 
		
		Позже = Истина;
	
	 КонецЕсли; 
	  
	Если Позже И ВыводитьСообщения Тогда
	
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,"Объект.ДатаПлатежаКрайняя");
	
	КонецЕсли; 
	
	Возврат Позже;
	
КонецФункции // ДатаРасходаМеньшеЧемДатаПлатежаКрайняя()

// Выполняет проверку на корректность ввода даты поступления 
// документе "бит_ПланируемоеПоступлениеДенежныхСредств".
// 
// Параметры:
//  ДатаРасхода  - Дата
//  СтруктураПараметров  - Структура
//  ВыводитьСообщения    - Булево - выводить ли сообщение.
// 
// Возвращаемое значение:
//  ДатаКорректна - Булево.
// 
Функция ДатаПоступленияКорректна(СтруктураПараметров,ВыводитьСообщения=Ложь)  Экспорт

	ДатаКорректна = Истина;
	ТекстСообщения = "";
	
	Если СтруктураПараметров.Свойство("ДатаДокумента") Тогда
		
		Если СтруктураПараметров.ДатаПоступления < НачалоДня(СтруктураПараметров.ДатаДокумента) Тогда
			
			ТекстСообщения = "Дата поступления не может быть ранее даты документа.";
			ДатаКорректна  = Ложь;
			
		КонецЕсли; 
	
	КонецЕсли; 
	
	Если НЕ ДатаКорректна И ВыводитьСообщения Тогда
	
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,"Объект.ДатаПоступления");

	
	КонецЕсли; 
	
	Возврат ДатаКорректна;

КонецФункции // ДатаПоступленияКорректна()

// Процедура вызывается при нажатии на гиперссылку на график платежей.
// 
// Параметры:
//  ДокументОбъект - объект документа, 
//  ФормаДокумента - форма документа.
// 
Процедура ОткрытьГрафикПлатежей(ДокументОбъект, ФормаДокумента) Экспорт

	// Попытаемся найти график платежей.
	ГрафикПлатежей = бит_Казначейство.НайтиДокументГрафикаПлатежей(ДокументОбъект.Ссылка);

    Если Не ЗначениеЗаполнено(ГрафикПлатежей) Тогда
        // Открывать нечего.
        Возврат;
    КонецЕсли;
	
	// Откроем форму для просмотра графика платежей. 
	Параметры = Новый Структура("Ключ", ГрафикПлатежей);
	
	ФормаГрафикаПлатежей = ПолучитьФорму("Документ.бит_ДополнительныеУсловияПоДоговору.ФормаОбъекта", Параметры);
	ФормаГрафикаПлатежей.ВладелецФормы 				   = ФормаДокумента;
	ФормаГрафикаПлатежей.ЗакрыватьПриЗакрытииВладельца = Истина;
	
	ФормаГрафикаПлатежей.Открыть();
	
КонецПроцедуры // ОткрытьГрафикПлатежей()

// Процедура открывает форму платежного документа.
// 
// Параметры:
//  ПлатежнаяПозиция  - ДокументСсылка.бит_ПлатежнаяПозиция. По умолчанию Неопределено.
//  ФормаДокумента 	  - форма документа.
//  ПлатежныйДокумент - ДокументСсылка. По умолчанию Неопределено.
// 
Процедура ОткрытьПлатежныйДокумент(ПлатежнаяПозиция = Неопределено
								  ,ФормаДокумента
								  ,ПлатежныйДокумент = Неопределено) Экспорт

	Если Не ПлатежнаяПозиция = Неопределено Тогда
		// Попытаемся найти платежный документ.
		ПлатежныйДокумент = бит_Казначейство.НайтиПлатежныйДокументПоПлатежнойПозиции(ПлатежнаяПозиция);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПлатежныйДокумент) Тогда
        // Открывать нечего.
        Возврат;
    КонецЕсли;
	
	// Получим имя платежного документа.
	ИмяДокумента = бит_ОбщегоНазначения.ПолучитьИмяДокумента(ПлатежныйДокумент);
	
	// Откроем форму для просмотра платежного документа. 
	Параметры = Новый Структура("Ключ", ПлатежныйДокумент);
	
	ФормаПлатежногоДокумента = ПолучитьФорму("Документ." + ИмяДокумента + ".ФормаОбъекта", Параметры);
	ФормаПлатежногоДокумента.ВладелецФормы 				   = ФормаДокумента;
	ФормаПлатежногоДокумента.ЗакрыватьПриЗакрытииВладельца = Истина;
	
	ФормаПлатежногоДокумента.Открыть();
	
КонецПроцедуры // ОткрытьПлатежныйДокумент()

#КонецОбласти

//ОК(СофтЛаб) Вдовиченко Г.В. 20181101 №3103

#Область СлужебныеПроцедурыИФункции

Процедура ок_КонтрольЗавершенияРаботыРегалментногоЗаданияПодписаниеЭД() Экспорт

	Данные = ок_ОбменСКонтрагентамиКлиент.ПолучитьПараметрыПриложения();
	ДанныеРегламентногоЗадания = Данные.Получить("ок_РегламентноеЗаданиеОбменСКонтрагентами");
	Если ДанныеРегламентногоЗадания = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-12-27 (#3594)
	ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ОтразитьЗаписьЛогаОценкиПроизводительности("Проверка завершения сеанса подписания ЭДО. Осталось подписать: документов - " + ДанныеРегламентногоЗадания.КоличествоНазначенныхОповещений
																								+ "; служебных документов - " + ДанныеРегламентногоЗадания.КоличествоНазначенныхОповещенийСлужебныеДокументы);
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-12-27 (#3594)
	
	//выход по таймауту макссмальной длительности
	МаксимальнаяДлительность = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("РегламентноеЗаданияПодписаниеЭД", "МаксимальноеВремяРаботы");
	Если Не ЗначениеЗаполнено(МаксимальнаяДлительность) ИЛИ ТипЗнч(МаксимальнаяДлительность) <> Тип("Число") Тогда
		МаксимальнаяДлительность = 1800;
	КонецЕсли;	
	
	Если ДанныеРегламентногоЗадания.ДатаЗапуска + ок_ОбменСКонтрагентамиСлужебныйВызовСервера.МаксимальнаяДлительностьРегламентноеЗаданияПодписаниеЭД() < ТекущаяДата() Тогда
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-12-27 (#3594)
		ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ОтразитьЗаписьЛогаОценкиПроизводительности("Завершение сеанса подписания ЭДО по достижению максимальной длительности работы (сек) - " + МаксимальнаяДлительность);
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-12-27 (#3594)
		
		//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-15 (#3849)
		ДатаНачалаРЗ = Данные.Получить("ДатаНачалаРЗ");
		Если ДатаНачалаРЗ <> Неопределено Тогда
			ЭтоРЗ = Данные.Получить("ЭтоРЗ");
			Если ТипЗнч(ЭтоРЗ) <> Тип("Булево") Тогда
				ЭтоРЗ = Истина;
			КонецЕсли;
			ЕстьОшибки = Данные.Получить("ЕстьОшибки");
			Если ТипЗнч(ЕстьОшибки)<> Тип("Булево") Тогда
				ЕстьОшибки = Ложь;
			КонецЕсли;
			
			КоличествоПодписанныхДокументов = Данные.Получить("КоличествоПодписанныхДокументов");
			Если ТипЗнч(КоличествоПодписанныхДокументов)<> Тип("Число") Тогда
				КоличествоПодписанныхДокументов = 0;
			КонецЕсли;
			
			КоличествоСлужебныхПодписанныхДокументов = Данные.Получить("КоличествоСлужебныхПодписанныхДокументов");
			Если ТипЗнч(КоличествоСлужебныхПодписанныхДокументов)<> Тип("Число") Тогда
				КоличествоСлужебныхПодписанныхДокументов = 0;
			КонецЕсли;
			
			КоличествоДокументовКПодписанию = Данные.Получить("КоличествоДокументовКПодписанию");
			Если ТипЗнч(КоличествоДокументовКПодписанию)<> Тип("Число") Тогда
				КоличествоДокументовКПодписанию = 0;
			КонецЕсли;
			
			КоличествоСлужебныхДокументовКПодписанию = Данные.Получить("КоличествоСлужебныхДокументовКПодписанию");
			Если ТипЗнч(КоличествоСлужебныхДокументовКПодписанию)<> Тип("Число") Тогда
				КоличествоСлужебныхДокументовКПодписанию = 0;
			КонецЕсли;
			
			ДокументыКПодписанию = Данные.Получить("ДокументыКПодписанию");
			Если ТипЗнч(ДокументыКПодписанию)<> Тип("Массив") Тогда
				ДокументыКПодписанию = Новый Массив;
			КонецЕсли;
			
			ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ЗафиксироватьНеизвестнуюОшибкуПоНеподписанным(ДокументыКПодписанию);
			ДокументыКПодписанию.Очистить();
			Данные.Вставить("ДокументыКПодписанию", ДокументыКПодписанию);
			
			СлужебныеДокументыКПодписанию = Данные.Получить("СлужебныеДокументыКПодписанию");
			Если ТипЗнч(СлужебныеДокументыКПодписанию)<> Тип("Массив") Тогда
				СлужебныеДокументыКПодписанию = Новый Массив;
			КонецЕсли;
			
			ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ЗафиксироватьНеизвестнуюОшибкуПоНеподписанным(СлужебныеДокументыКПодписанию);
			СлужебныеДокументыКПодписанию.Очистить();
			Данные.Вставить("СлужебныеДокументыКПодписанию", СлужебныеДокументыКПодписанию);

			Если КоличествоДокументовКПодписанию <> КоличествоПодписанныхДокументов Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			Если КоличествоСлужебныхДокументовКПодписанию <> КоличествоСлужебныхПодписанныхДокументов Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			ВсегоПодписано = КоличествоПодписанныхДокументов + КоличествоСлужебныхПодписанныхДокументов;
			
			СтруктураДляРС = ок_ОбменСКонтрагентамиСлужебныйВызовСервера.СформироватьСтруктуруДляИнформацииПоРЗ(ДатаНачалаРЗ,
																												"Подписать ЭД (ОК)",
																												ЭтоРЗ,
																												ЕстьОшибки,
																												ВсегоПодписано);
																												
			
			
			СтруктураДляРС.ДопИнформация = "Количество документов к подписанию - " + КоличествоДокументовКПодписанию + "
											|Количество подписанных документов - " + КоличествоПодписанныхДокументов + "
											|Количество служебных документов к подписанию - " + КоличествоСлужебныхДокументовКПодписанию + "
											|Количество подписанных служебных документов - " + КоличествоСлужебныхПодписанныхДокументов;
			
			ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ЗафиксироватьИнформациюПоРЗ(СтруктураДляРС);
		КонецЕсли;
		//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-15 (#3849)
		
		ЗавершитьРаботуСистемы(Ложь, Ложь);
	КонецЕсли;	
	
	//выход по окончанию обработки оповещений
	Если ДанныеРегламентногоЗадания.КоличествоНазначенныхОповещенийСлужебныеДокументы = 0 
		И ДанныеРегламентногоЗадания.КоличествоНазначенныхОповещений = 0 Тогда
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-12-27 (#3594)
		ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ОтразитьЗаписьЛогаОценкиПроизводительности("Завершение сеанса подписания ЭДО");
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-12-27 (#3594)
		
		//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-15 (#3849)
		ДатаНачалаРЗ = Данные.Получить("ДатаНачалаРЗ");
		Если ДатаНачалаРЗ <> Неопределено Тогда
			ЭтоРЗ = Данные.Получить("ЭтоРЗ");
			Если ТипЗнч(ЭтоРЗ) <> Тип("Булево") Тогда
				ЭтоРЗ = Истина;
			КонецЕсли;
			ЕстьОшибки = Данные.Получить("ЕстьОшибки");
			Если ТипЗнч(ЕстьОшибки)<> Тип("Булево") Тогда
				ЕстьОшибки = Ложь;
			КонецЕсли;
			
			КоличествоПодписанныхДокументов = Данные.Получить("КоличествоПодписанныхДокументов");
			Если ТипЗнч(КоличествоПодписанныхДокументов)<> Тип("Число") Тогда
				КоличествоПодписанныхДокументов = 0;
			КонецЕсли;
			
			КоличествоСлужебныхПодписанныхДокументов = Данные.Получить("КоличествоСлужебныхПодписанныхДокументов");
			Если ТипЗнч(КоличествоСлужебныхПодписанныхДокументов)<> Тип("Число") Тогда
				КоличествоСлужебныхПодписанныхДокументов = 0;
			КонецЕсли;
			
			КоличествоДокументовКПодписанию = Данные.Получить("КоличествоДокументовКПодписанию");
			Если ТипЗнч(КоличествоДокументовКПодписанию)<> Тип("Число") Тогда
				КоличествоДокументовКПодписанию = 0;
			КонецЕсли;
			
			КоличествоСлужебныхДокументовКПодписанию = Данные.Получить("КоличествоСлужебныхДокументовКПодписанию");
			Если ТипЗнч(КоличествоСлужебныхДокументовКПодписанию)<> Тип("Число") Тогда
				КоличествоСлужебныхДокументовКПодписанию = 0;
			КонецЕсли;
			
			ДокументыКПодписанию = Данные.Получить("ДокументыКПодписанию");
			Если ТипЗнч(ДокументыКПодписанию)<> Тип("Массив") Тогда
				ДокументыКПодписанию = Новый Массив;
			КонецЕсли;
			
			ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ЗафиксироватьНеизвестнуюОшибкуПоНеподписанным(ДокументыКПодписанию);
			
			СлужебныеДокументыКПодписанию = Данные.Получить("СлужебныеДокументыКПодписанию");
			Если ТипЗнч(СлужебныеДокументыКПодписанию)<> Тип("Массив") Тогда
				СлужебныеДокументыКПодписанию = Новый Массив;
			КонецЕсли;
			
			ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ЗафиксироватьНеизвестнуюОшибкуПоНеподписанным(СлужебныеДокументыКПодписанию);
			СлужебныеДокументыКПодписанию.Очистить();
			Данные.Вставить("СлужебныеДокументыКПодписанию", СлужебныеДокументыКПодписанию);
			
			Если КоличествоДокументовКПодписанию <> КоличествоПодписанныхДокументов Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			Если КоличествоСлужебныхДокументовКПодписанию <> КоличествоСлужебныхПодписанныхДокументов Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			ВсегоПодписано = КоличествоПодписанныхДокументов + КоличествоСлужебныхПодписанныхДокументов;
			
			СтруктураДляРС = ок_ОбменСКонтрагентамиСлужебныйВызовСервера.СформироватьСтруктуруДляИнформацииПоРЗ(ДатаНачалаРЗ,
																												"Подписать ЭД (ОК)",
																												ЭтоРЗ,
																												ЕстьОшибки,
																												ВсегоПодписано);
																												
			СтруктураДляРС.ДопИнформация = "Количество документов к подписанию - " + КоличествоДокументовКПодписанию + "
											|Количество подписанных документов - " + КоличествоПодписанныхДокументов + "
											|Количество служебных документов к подписанию - " + КоличествоСлужебныхДокументовКПодписанию + "
											|Количество подписанных служебных документов - " + КоличествоСлужебныхПодписанныхДокументов;
			
			ок_ОбменСКонтрагентамиСлужебныйВызовСервера.ЗафиксироватьИнформациюПоРЗ(СтруктураДляРС);
		КонецЕсли;
		//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-15 (#3849)
		
		ЗавершитьРаботуСистемы(Ложь, Ложь);
		
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Процедура заполняет группу на форме "ГруппаРедакторФормул".
// 
// Параметры:
//  Элементы - ВсеЭлементыФормы.
//  Команды	 - КомандыФормы.
// 
Процедура рф_ДобавитьЭлементыРедактораФормул(Элементы, Команды) Экспорт
		
	// ----------------------------------------------------------------------
	// ГруппаКоманднаяПанельРедактораФормул
	ГруппаКомПанельРф = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаКоманднаяПанельРедактораФормул", Элементы.ГруппаРедакторФормул, Ложь);
		// ОТКЛЮЧЕНО до решения проблемы представления элементов списка.
		// ГруппаКоманднаяПанельРедактораФормулЛево
		ГруппаКоманднаяПанельРедактораФормулЛево = рф_ДобавитьКоманднуюПанель(Элементы, "РедактораФормулЛево", ГруппаКомПанельРф, ГоризонтальноеПоложениеЭлемента.Лево, 3);
			//рф_ДобавитьКомандуКнопку(Элементы, Команды, "Вернуть", "", "Отменить", ГруппаКоманднаяПанельРедактораФормулЛево, "Подключаемый_РедакторФормул_Вернуть");
			//КомандаВернуть = Команды.Найти("РедакторФормул_Вернуть");
			//КомандаВернуть.Картинка = БиблиотекаКартинок.Назад;
				
		// ГруппаКоманднаяПанельРедактораФормулПоля
		ГруппаКоманднаяПанельРедактораФормулПоля = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаКоманднаяПанельРедактораФормулПоля", ГруппаКомПанельРф, Ложь);
			// ОТКЛЮЧЕНО до решения проблемы представления элементов списка.
			//// РфСтрокаНазад
			//ПолеСписокДействий = Элементы.Добавить("рфСтрокаНазад", Тип("ПолеФормы"), ГруппаКоманднаяПанельРедактораФормулПоля);
			//ПолеСписокДействий.Вид 		 		 	 	= ВидПоляФормы.ПолеВвода; 
			//ПолеСписокДействий.ПутьКДанным 		 	    = "рфСтрокаНазад";
			//ПолеСписокДействий.КнопкаВыпадающегоСписка  = Истина;
			//ПолеСписокДействий.Ширина 			  		= 1;
			//ПолеСписокДействий.ПоложениеЗаголовка 		= ПоложениеЗаголовкаЭлементаФормы.Нет;
			//ПолеСписокДействий.РастягиватьПоГоризонтали = Ложь;
			//ПолеСписокДействий.УстановитьДействие("ОбработкаВыбора", "Подключаемый_СтрокаНазадОбработкаВыбора");
			// РфФормула (Текст)
			ПолеПросмотраФормулы = Элементы.Добавить("рфФормулаТекст", Тип("ПолеФормы"), ГруппаКоманднаяПанельРедактораФормулПоля);
			ПолеПросмотраФормулы.Вид 		    		  = ВидПоляФормы.ПолеВвода;
			ПолеПросмотраФормулы.ПутьКДанным    		  = "рфФормула";
			ПолеПросмотраФормулы.ТолькоПросмотр 		  = Истина;
			ПолеПросмотраФормулы.РедактированиеТекста	  = Ложь;
			ПолеПросмотраФормулы.ЦветТекста	    		  = Новый Цвет(83, 106, 194);
			ПолеПросмотраФормулы.РастягиватьПоГоризонтали = Истина;
		// ГруппаКоманднаяПанельРедактораФормулПраво.
		ГруппаКоманднаяПанельРедактораФормулПраво = рф_ДобавитьКоманднуюПанель(Элементы, "РедактораФормулПраво", ГруппаКомПанельРф, ГоризонтальноеПоложениеЭлемента.Право, 16);
			рф_ДобавитьКомандуКнопку(Элементы, Команды, "ОК"	 , "ОК"	    , "Закончить редактирование", ГруппаКоманднаяПанельРедактораФормулПраво, "Подключаемый_РедакторФормул_ЗавершитьРедактирование");
			рф_ДобавитьКомандуКнопку(Элементы, Команды, "Закрыть", "Закрыть", "Закрыть редактор формул" , ГруппаКоманднаяПанельРедактораФормулПраво, "Подключаемый_РедакторФормул_ЗавершитьРедактирование");
			КомандаЗакрыть = Команды.Найти("РедакторФормул_Закрыть");
			КомандаЗакрыть.Картинка    = БиблиотекаКартинок.Закрыть;
			КомандаЗакрыть.Отображение = ОтображениеКнопки.КартинкаИТекст;
	
	// ----------------------------------------------------------------------
	// ГруппаРедакторФормулГоризонтальная
	ГруппаРедакторФормулГоризонтальная = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаРедакторФормулГоризонтальная", Элементы.ГруппаРедакторФормул, Ложь);
	ГруппаРедакторФормулГоризонтальная.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
	
		// Калькулятор
		рф_ДобавитьЭлементыКалькулятора(Элементы, Команды, ГруппаРедакторФормулГоризонтальная);
		
		// РфФормула (Поле ввода формулы)
		ПолеВводаФормулы = Элементы.Добавить("рфФормула", Тип("ПолеФормы"), ГруппаРедакторФормулГоризонтальная);
		ПолеВводаФормулы.Вид 		 			= ВидПоляФормы.ПолеТекстовогоДокумента;
		ПолеВводаФормулы.ПутьКДанным 			= "рфФормула";
		ПолеВводаФормулы.Высота 	 			= 4;
		//ПолеВводаФормулы.РастягиватьПоВертикали = Ложь;
		ПолеВводаФормулы.ПоложениеЗаголовка 	= ПоложениеЗаголовкаЭлементаФормы.Нет;
		ПолеВводаФормулы.УстановитьДействие("ПриИзменении", "Подключаемый_ФормулаПриИзменении");
					
		// ГруппаВыбранныеОбласти
		ГруппаВыбранныеОбласти = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаВыбранныеОбласти", ГруппаРедакторФормулГоризонтальная);
		НоваяТаблица = Элементы.Добавить("рфВыбранныеОбласти", Тип("ТаблицаФормы"), ГруппаВыбранныеОбласти);
		НоваяТаблица.ПутьКДанным 			  = "рфВыбранныеОбласти";
		НоваяТаблица.ИзменятьПорядокСтрок 	  = Ложь;
		НоваяТаблица.ИзменятьСоставСтрок  	  = Ложь;
		НоваяТаблица.Высота 				  = 4;
		//НоваяТаблица.РастягиватьПоВертикали   = Ложь;
		НоваяТаблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
		НоваяТаблица.УстановитьДействие("Выбор", "Подключаемый_ВыбранныеОбластиВыбор");
		НовоеПолеТаблицы = Элементы.Добавить("рфВыбранныеОбластиИмяОбласти", Тип("ПолеФормы"), НоваяТаблица);
		НовоеПолеТаблицы.Вид 		 	= ВидПоляФормы.ПолеВвода;
		НовоеПолеТаблицы.ПутьКДанным 	= "рфВыбранныеОбласти.ИмяОбласти";
		НовоеПолеТаблицы.ТолькоПросмотр = Истина; 	
		// Изменение кода. Начало. 11.12.2013{{
		Если Элементы.найти("Бюджет") <> Неопределено Тогда
			НовоеПолеТаблицы.Видимость      = Ложь;
			НовоеПолеТаблицы = Элементы.Добавить("рфВыбранныеОбластиЗаголовокОбласти", Тип("ПолеФормы"), НоваяТаблица);
			НовоеПолеТаблицы.Вид 		 	= ВидПоляФормы.ПолеВвода;
			НовоеПолеТаблицы.ПутьКДанным 	= "рфВыбранныеОбласти.ЗаголовокОбласти";
			НовоеПолеТаблицы.ТолькоПросмотр = Истина; 
		КонецЕсли;
		// Изменение кода. Конец. 11.12.2013}}
		          	
КонецПроцедуры // Рф_ДобавитьЭлементыРедактораФормул()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция добавляет группу
// 
// Параметры:
//  Элементы 				- ВсеЭлементыФормы.
//  ИмяГруппы  				- Строка.
//  ГруппаРодитель  		- Строка.
//  ГруппировкаВертикальная - Булево (По умолчанию = Истина).
//  
// Возвращаемое значение:
//   Тип.Вид   - описание.
// 
Функция рф_ДобавитьКоманднуюПанель(Элементы, ИмяГруппы, ГруппаРодитель, ГоризонтальноеПоложение, ШиринаЭлемента)

	НоваяГруппа = Элементы.Добавить("ГруппаКоманднаяПанель" + ИмяГруппы, Тип("ГруппаФормы"), ГруппаРодитель);
	НоваяГруппа.Вид 					 = ВидГруппыФормы.КоманднаяПанель;
	НоваяГруппа.ГоризонтальноеПоложение  = ГоризонтальноеПоложение;
	НоваяГруппа.Ширина					 = ШиринаЭлемента;
	НоваяГруппа.РастягиватьПоГоризонтали = Ложь;

	Возврат НоваяГруппа;
	
КонецФункции // Рф_ДобавитьКоманднуюПанель()

// Функция добавляет группу
// 
// Параметры:
//  Элементы 				- ВсеЭлементыФормы.
//  ИмяГруппы  				- Строка.
//  ГруппаРодитель  		- Строка.
//  ГруппировкаВертикальная - Булево (По умолчанию = Истина).
//  
// Возвращаемое значение:
//   Тип.Вид   - описание.
// 
Функция рф_ДобавитьОбычнуюГруппу(Элементы, ИмяГруппы, ГруппаРодитель, ГруппировкаВертикальная = Истина)

	НоваяГруппа = Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), ГруппаРодитель);
	НоваяГруппа.Вид 				= ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Группировка 		= ?(ГруппировкаВертикальная, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
	НоваяГруппа.Отображение 		= ОтображениеОбычнойГруппы.Нет;
	НоваяГруппа.ОтображатьЗаголовок = Ложь;

	Возврат НоваяГруппа;
	
КонецФункции // Рф_ДобавитьОбычнуюГруппу()

// Процедура добавляет команду и кнопку.
// 
// Параметры:
//  Элементы		 - ВсеЭлементыФормы.
//  Команды			 - КомандыФормы.
//  ПостфиксИмени    - Строка.
//  ЗаголовокКоманды - Строка.
//  ПодсказкаКоманды - Строка (По умолчанию = "").
//  ГруппаРодитель   - Группа формы.
//  ДействиеКоманды  - Строка.
//  ШиринаКнопки 	 - Число (По умолчанию = 0).
//  ВысотаКнопки 	 - Число (По умолчанию = 0).
// 
Процедура рф_ДобавитьКомандуКнопку(Элементы, Команды, ПостфиксИмени, ЗаголовокКоманды, ПодсказкаКоманды = "", ГруппаРодитель, ДействиеКоманды, ШиринаКнопки = 0, ВысотаКнопки = 0)

	НоваяКоманда = Команды.Добавить("РедакторФормул_" + ПостфиксИмени);
	НоваяКоманда.Действие  = ДействиеКоманды;
	НоваяКоманда.Заголовок = ЗаголовокКоманды;
	НоваяКоманда.Подсказка = ПодсказкаКоманды;
		
	НоваяКнопка = Элементы.Добавить("РедакторФормул_" + ПостфиксИмени, Тип("КнопкаФормы"), ГруппаРодитель);
	НоваяКнопка.ИмяКоманды = НоваяКоманда.Имя;	
	НоваяКнопка.Ширина     = ШиринаКнопки;
	НоваяКнопка.Высота     = ВысотаКнопки;

КонецПроцедуры // Рф_ДобавитьКомандуКнопку()

// Процедура добавялет кнопки редактора формул.
// 
// Параметры:
//  Элементы		 				   - ВсеЭлементыФормы.
//  Команды			 				   - КомандыФормы.
//  ГруппаРедакторФормулГоризонтальная - ГруппаФормы.
// 
Процедура рф_ДобавитьЭлементыКалькулятора(Элементы, Команды, ГруппаРедакторФормулГоризонтальная)
	
	// Имя обработчика команд:
	// "РедакторФормул_Цифра", "РедакторФормул_Запятая", "РедакторФормул_СкобкаЛевая", "РедакторФормул_СкобкаПравая",
	// "РедакторФормул_Плюс" , "РедакторФормул_Минус"  , "РедакторФормул_Умножить"   , "РедакторФормул_Разделить",
	// "РедакторФормул_Обратное", "РедакторФормул_Очистить" .
	ИмяОбработчикаПростыхКоманд = "Подключаемый_РедакторФормул_ПростыеКоманды";
	
	// ----------------------------------------------------------------------
	// ГруппаЦифры
	ГруппаЦифры = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаЦифры", ГруппаРедакторФормулГоризонтальная);
	

	// ГруппаЦифры0Запятая
	ГруппаЦифры0Скобки = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаЦифры0Скобки", ГруппаЦифры, Ложь);
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_0"	  , "0"  , , ГруппаЦифры0Скобки, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "СкобкаЛевая" , "("  , , ГруппаЦифры0Скобки, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_СкобкаЛевая"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "СкобкаПравая", ")"  , , ГруппаЦифры0Скобки, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_СкобкаПравая"
		
	// ГруппаЦифры123
	ГруппаЦифры123 = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаЦифры123", ГруппаЦифры, Ложь);
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_1", "1", , ГруппаЦифры123, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_2", "2", , ГруппаЦифры123, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_3", "3", , ГруппаЦифры123, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"
		
	// ГруппаЦифры456
	ГруппаЦифры456 = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаЦифры456", ГруппаЦифры, Ложь);
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_4", "4", , ГруппаЦифры456, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_5", "5", , ГруппаЦифры456, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_6", "6", , ГруппаЦифры456, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"
		
	// ГруппаЦифры789
	ГруппаЦифры789 = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаЦифры789", ГруппаЦифры, Ложь);
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_7", "7", , ГруппаЦифры789, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_8", "8", , ГруппаЦифры789, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Цифра_9", "9", , ГруппаЦифры789, ИмяОбработчикаПростыхКоманд);// "РедакторФормул_Цифра"


	// ----------------------------------------------------------------------
	// ГруппаЗнаки
	ГруппаЗнаки = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаЗнаки", ГруппаРедакторФормулГоризонтальная);
	
	// ГруппаФункции1
	ГруппаФункции1 = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаФункции1", ГруппаЗнаки, Ложь);
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Очистить" , "C", "Очистить формулу"     , ГруппаФункции1, "Подключаемый_РедакторФормул_Очистить", 5);
    рф_ДобавитьКомандуКнопку(Элементы, Команды, "Плюс" , "+", 							 , ГруппаФункции1, ИмяОбработчикаПростыхКоманд, 4);// "РедакторФормул_Плюс"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Минус", "-", 							 , ГруппаФункции1, ИмяОбработчикаПростыхКоманд, 4);// "РедакторФормул_Минус"
		
	// ГруппаФункции2
	ГруппаФункции2 = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаФункции2", ГруппаЗнаки, Ложь);
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Обратное", "1/x" , "Обратное от 1"   , ГруппаФункции2, ИмяОбработчикаПростыхКоманд, 5);// "РедакторФормул_Обратное"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Умножить" , "*", 					  , ГруппаФункции2, ИмяОбработчикаПростыхКоманд, 4);// "РедакторФормул_Умножить"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Разделить", "/", 					  , ГруппаФункции2, ИмяОбработчикаПростыхКоманд, 4);// "РедакторФормул_Разделить"
		
	// ГруппаФункции3
	ГруппаФункции3 = рф_ДобавитьОбычнуюГруппу(Элементы, "ГруппаФункции3", ГруппаЗнаки, Ложь);
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Функция" , "f(x)", "Вставить функцию"   , ГруппаФункции3, "Подключаемый_РедакторФормул_Функция" , 5);
	Элементы.РедакторФормул_Функция.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша.F, Ложь, Ложь, Истина);
    рф_ДобавитьКомандуКнопку(Элементы, Команды, "Запятая" , ","   , 				     , ГруппаФункции3, ИмяОбработчикаПростыхКоманд, 4);// "РедакторФормул_Запятая"
	рф_ДобавитьКомандуКнопку(Элементы, Команды, "Равно", "=", "Закончить редактирование" , ГруппаФункции3, "Подключаемый_РедакторФормул_ЗавершитьРедактирование", 4);
    	
КонецПроцедуры // Рф_ДобавитьЭлементыКалькулятора()

#КонецОбласти

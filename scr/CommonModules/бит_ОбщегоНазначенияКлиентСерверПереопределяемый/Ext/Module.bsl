////////////////////////////////////////////////////////////////////////////////
//
// Учитывает особенности реализации в конфигурации-носителе.
// При обновлении библиотеки переносить только состав процедур и функций без содержимого.
//  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Функция получает имя справочника с физическими лицами.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяСправочникаФизическихЛиц() Экспорт
	
	Возврат "ФизическиеЛица";
	
КонецФункции

// Функция получает имя типа ЦФО в зависимости от текущего решения.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяТипаЦФО() Экспорт
	
	Возврат "СправочникСсылка.Подразделения";
	
КонецФункции

// Функция получает имя справочника ЦФО в зависимости от текущего решения.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяСправочникаЦФО() Экспорт
		
	Возврат "Подразделения";
	
КонецФункции

// Функция получает имя справочника Виды ЦФО в зависимости от текущего решения.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяСправочникаВидыЦФО() Экспорт

	Возврат "ВидыЦФО";
	
КонецФункции

// Функция получает имя справочника Проекты в зависимости от текущего решения.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяСправочникаПроекты() Экспорт
	
	Возврат "Проекты";
	
КонецФункции

// Функция получает имя реквизита Проект в зависимости от текущего решения.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяРеквизитаПроект() Экспорт
	
	Возврат "бит_Проект";
	
КонецФункции

// Функция получает имя типа справочника Проекты в зависимости от текущего решения.
// 
// Возвращаемое значение:
//   Строка.
// 
Функция ИмяТипаПроекты() Экспорт
	
	Возврат "СправочникСсылка.Проекты";
	
КонецФункции

// Функция получает имя типа Сценарии бюджетирования в зависимости от текущего решения.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяТипаСценарииБюджетирования() Экспорт

	Возврат "СправочникСсылка.СценарииПланирования";
	
КонецФункции

// Функция получает имя справочника Сценарии бюджетирования в зависимости от текущего решения.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяСправочникаСценарииБюджетирования() Экспорт

	Возврат "СценарииПланирования";
	
КонецФункции

// Возвращает имя табличной части справочника ГруппыПользователей в зависимости от текущего решения.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяТабЧастиГруппыПользователей() Экспорт

	Возврат "Состав";
	
КонецФункции

// Функция получает имя типового справочника сохраненных настроек.
//    
// Возвращаемое значение:
//   Строка.
// 
Функция ИмяСправочникаСохраненныхНастроек() Экспорт

	Возврат "УдалитьСохраненныеНастройки";
	
КонецФункции

// Функция получает имя справочника единиц измерения.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяСправочникаЕдиницыИзмерения() Экспорт
	
	Возврат "КлассификаторЕдиницИзмерения";
	
КонецФункции

// Функция получает имя типового справочника банковских счетов.
//    
// Возвращаемое значение:
//   Строка
// 
Функция ИмяСправочникаБанковскихСчетов() Экспорт

	Возврат "БанковскиеСчета";
	
КонецФункции

// Функция получает имя типа ОсновныеСредства.
// 
// Возвращаемое значение:
//   Строка.
// 
Функция ИмяТипаОсновныеСредства() Экспорт 
	
	Возврат "СправочникСсылка.ОсновныеСредства";
	
КонецФункции

// Функция получает имя перечисления ВидыДоговоровКонтрагентов.
// 
// Возвращаемое значение:
//   Строка.
// 
Функция ИмяПеречисленияВидовДоговоровКонтрагентов() Экспорт 
		
	Возврат "ВидыДоговоровКонтрагентов";
	
КонецФункции

// Функция получает имя справочника НоменклатурныеГруппы.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяСправочникаНоменклатурныеГруппы() Экспорт 
	
	Возврат "НоменклатурныеГруппы";
	
КонецФункции

// Функция получает имя типа НоменклатурныеГруппы.
// 
// Возвращаемое значение:
//   Строка.
// 
Функция ИмяТипаНоменклатурныеГруппы() Экспорт 
	
	Возврат "СправочникСсылка.НоменклатурныеГруппы";
	
КонецФункции

// Функция получает наименование реквизита НоменклатурнаяГруппа справочника 
// Номенклатура в зависимости от конфигурации.
// 
// Возвращаемое значение:
//  ИмяРеквизита - строка. 
//
Функция ИмяРеквизитаНоменклатурнаяГруппа() Экспорт

	Возврат "НоменклатурнаяГруппа";

КонецФункции
 
// Функция получает имя справочника ОсновныеСредства.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяСправочникаОсновныеСредства() Экспорт 
	
	Возврат "ОсновныеСредства";
	
КонецФункции

// Функция получает имя справочника ОбъектыСтроительства.
//
// Возвращаемое значение:
//  Строка.
//
Функция ИмяСправочникаОбъектыСтроительства() Экспорт 
	
	Возврат "ОбъектыСтроительства";
	
КонецФункции

// Функция получает наименование реквизита ВидДоговора справочника 
// ДоговорыКонтрагентов в зависимости от конфигурации.
// 
// Возвращаемое значение:
//  Строка.
// 
Функция ИмяРеквизитаВидовДоговора() Экспорт 

	Возврат "ВидДоговора";
	
КонецФункции

// Функция получает имя документа ПередачаОС.
//
// Возвращаемое значение:
//  Строка.
//
Функция ИмяДокументаПередачаОС() Экспорт 
	
	Возврат "ПередачаОС";
	
КонецФункции

// Функция получает имя документа ПередачаОС.
//
// Возвращаемое значение:
//  Строка.
//
Функция ИмяДокументаПередачаНМА() Экспорт 
		
	Возврат "ПередачаНМА";
	
КонецФункции

// Функция получает имя документа по списанию денежных средств со счета.
// СписаниеСРасчетногоСчета или ПлатежноеПоручениеИсходящее.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  ИмяДокумента - Строка.
//
Функция ИмяДокументаСписанияБезналичныхДенежныхСредств() Экспорт
	
	Возврат "СписаниеСРасчетногоСчета";
	
КонецФункции

// Функция получает имя документа по поступлению денежных средств на счет.
// ПоступлениеНаРасчетныйСчет или ПлатежноеПоручениеВходящее.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  ИмяДокумента - Строка.
//
Функция ИмяДокументаПоступленияБезналичныхДенежныхСредств() Экспорт
	
	Возврат "ПоступлениеНаРасчетныйСчет";
	
КонецФункции // ПолучитьИмяДокументаПоПоступлениюДС()

Функция СхемаДвиженияДокументовПоПлатежамИзменена() Экспорт

	Возврат Истина;	

КонецФункции

Функция ДокументыСРасшифровкой() Экспорт

	ДокументыСРасшифровкой = Новый Массив;
	ДокументыСРасшифровкой.Добавить(Тип("ДокументСсылка.СписаниеСРасчетногоСчета"));
	ДокументыСРасшифровкой.Добавить(Тип("ДокументСсылка.ПоступлениеНаРасчетныйСчет"));
	ДокументыСРасшифровкой.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
	ДокументыСРасшифровкой.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер"));

	Возврат  ДокументыСРасшифровкой;
	
КонецФункции

Функция ДокументыПоступленияДенежныхСредств()  Экспорт

	ДокументыПоступления = Новый Массив;
	ДокументыПоступления.Добавить(Тип("ДокументСсылка.ПоступлениеНаРасчетныйСчет"));
	ДокументыПоступления.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер"));
	
	Возврат  ДокументыПоступления;
	
КонецФункции

Функция ДокументыСписанияДенежныхСредств()  Экспорт

	ДокументыСписания = Новый Массив;
	ДокументыСписания.Добавить(Тип("ДокументСсылка.СписаниеСРасчетногоСчета"));
	ДокументыСписания.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
	
	Возврат  ДокументыСписания;
	
КонецФункции

#КонецОбласти
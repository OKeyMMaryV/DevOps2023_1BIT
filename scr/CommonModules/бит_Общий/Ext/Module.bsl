
Процедура бит_ПередЗаписьюДоговораДозаполнениеРеквизитовПередЗаписью(Источник, Отказ) Экспорт
	
		
	СтруктураПрофилей = Новый Соответствие;
	СтруктураПрофилей.Вставить("58.03", Справочники.бит_ТипыДоговоров.ЗаймыВыданные);
	
	СтруктураПрофилей.Вставить("66.03", Справочники.бит_ТипыДоговоров.ЗаймыПолученные);
	СтруктураПрофилей.Вставить("66.04", Справочники.бит_ТипыДоговоров.ЗаймыПолученные);
	СтруктураПрофилей.Вставить("67.03", Справочники.бит_ТипыДоговоров.ЗаймыПолученные);
	СтруктураПрофилей.Вставить("67.23", Справочники.бит_ТипыДоговоров.ЗаймыПолученные);
	СтруктураПрофилей.Вставить("67.24", Справочники.бит_ТипыДоговоров.ЗаймыПолученные);
	
	СтруктураПрофилей.Вставить("66.01", Справочники.бит_ТипыДоговоров.КредитыПолученные);
	СтруктураПрофилей.Вставить("66.02", Справочники.бит_ТипыДоговоров.КредитыПолученные);
	СтруктураПрофилей.Вставить("66.11", Справочники.бит_ТипыДоговоров.КредитыПолученные);
	СтруктураПрофилей.Вставить("66.22", Справочники.бит_ТипыДоговоров.КредитыПолученные);
	СтруктураПрофилей.Вставить("67.01", Справочники.бит_ТипыДоговоров.КредитыПолученные);
	СтруктураПрофилей.Вставить("67.02", Справочники.бит_ТипыДоговоров.КредитыПолученные);
	
	ТипДоговора = СтруктураПрофилей.Получить(Источник.СБ_ПрофильРазноски);
	
	Если ЗначениеЗаполнено(ТипДоговора) Тогда
		Источник.бит_ТипДоговора = ТипДоговора;
	КонецЕсли;
	
	
КонецПроцедуры


// BIT AMerkuulov 25-05-2015 ++
Процедура бит_УстановкаСрокаИсполненияПриЗаписи(Источник, Отказ) Экспорт
	
	//ОКЕЙ Беднягин Е.А. (ПервыйБИТ) Начало 2021-04-22 (#НТП_БП06_ФР05)
	// Устарела.
	// Новая подписка: ок_СрокИсполнения_ПриЗаписи
	// Новая процедура: ОК_ПодпискиНаСобытия.ок_СрокИсполнения_ПриЗаписи
	Возврат;
	//ОКЕЙ Беднягин Е.А. (ПервыйБИТ) Конец 2021-04-22 (#НТП_БП06_ФР05)

	Если НЕ Отказ Тогда
		
		СрокИсполнения = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Срок исполнения");
		
		Если ЗначениеЗаполнено(СрокИсполнения) Тогда
			
			Отбор = Новый Структура;
			Отбор.Вставить("Объект", 		Источник.Ссылка);
			Отбор.Вставить("Свойство",		СрокИсполнения);
			ДанныеЗаписи = РегистрыСведений.ДополнительныеСведения.Получить(Отбор);
			
			Если ДанныеЗаписи.Значение = Неопределено Тогда
				
				Запись = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
				Запись.Объект = Источник.Ссылка;
				Запись.Свойство = СрокИсполнения;
				Запись.Значение = Источник.Дата;
				Запись.Записать();
				
			КонецЕсли;
			
			
		КонецЕсли;
		
		
	КонецЕсли;
	
	
КонецПроцедуры
// BIT AMerkuulov 25-05-2015 --


//+Сундукова 25.03.16
Функция СледующаяРабочаяДата(ДатаОбр) экспорт
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление (
	//ПроизводственныйКалендарь = КалендарныеГрафики.ПроизводственныйКалендарьРоссийскойФедерации();
	ПроизводственныйКалендарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление )
	СоотвествиеДат = Новый Соответствие;
	ИсходныеСроки = новый Массив;
	ТекДата = НачалоДня(ДатаОбр)+60*60*24;	
	ИсходныеСроки.Добавить(ТекДата);	
	Если ЗначениеЗаполнено(ПроизводственныйКалендарь) Тогда		
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление (
		//СоотвествиеДат   = КалендарныеГрафики.ПолучитьДатыРабочихДней(ПроизводственныйКалендарь,ИсходныеСроки, Ложь, Ложь, Истина);
		СоотвествиеДат   = КалендарныеГрафики.ДатыБлижайшихРабочихДней(ПроизводственныйКалендарь,ИсходныеСроки, Ложь, Ложь, Истина);
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление )
		ПерваяРабочаяДата =  СоотвествиеДат[ТекДата];
	Иначе
		ПерваяРабочаяДата = ТекДата;
	КонецЕсли;		
	возврат ПерваяРабочаяДата;
КонецФункции
//+Сундукова 25.03.16

// ОКЕЙ Гиль А.В.(Софтлаб) Начало 22.09.2019 (#3487) 
Функция ПолучитьСписокИменНастроекДляОтбораПоГруппеОрганизации() Экспорт
	
	СписокНастроек = Новый Массив;
	
	СписокНастроек.Добавить("Организация Лоджистикс");
	СписокНастроек.Добавить("Организация ОКЕЙ");
	
	Возврат СписокНастроек;
	
КонецФункции

Функция ОрганизацияВходитВНастройкиМеханизмаИмпортаДанных(ОрганизацияПоиска) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Группа КАК Группа
	|ИЗ
	|	РегистрСведений.бит_ок_НастройкиМеханизмаИмпортаДанных КАК бит_ок_НастройкиМеханизмаИмпортаДанных
	|ГДЕ
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Группа = &Группа
	|	И бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки В(&СписокИменНастроекОтбора)
	|	И бит_ок_НастройкиМеханизмаИмпортаДанных.Значение ССЫЛКА Справочник.Организации
	|	И бит_ок_НастройкиМеханизмаИмпортаДанных.Значение = &ОрганизацияПоиска";
	
	Запрос.УстановитьПараметр("Группа", "Организации");
	Запрос.УстановитьПараметр("СписокИменНастроекОтбора", ПолучитьСписокИменНастроекДляОтбораПоГруппеОрганизации());
	Запрос.УстановитьПараметр("ОрганизацияПоиска", ОрганизацияПоиска);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();	
		
КонецФункции

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-11-27 (#МДМ)
//Функция КонтрагентИмеетДоговорПоОрганизацииВходящейВНастройкиМеханизмаИмпортаДанных(Контрагент) Экспорт
Функция КонтрагентИмеетДоговорПоОрганизацииВходящейВНастройкиМеханизмаИмпортаДанных(Контрагент, ИсключитьОрганизациюОкей = Ложь) Экспорт
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-11-27 (#МДМ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_НастройкиМеханизмаИмпортаДанных КАК НастройкиМеханизмаИмпортаДанных
	|		ПО (НастройкиМеханизмаИмпортаДанных.Группа = ""Организации"")
	|			И ДоговорыКонтрагентов.Организация = НастройкиМеханизмаИмпортаДанных.Значение
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-12-15 (#МДМ)
	|			И &ИсключитьОрганизациюОкей
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-12-15 (#МДМ)
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец = &Владелец
	|	И НастройкиМеханизмаИмпортаДанных.ИмяНастройки В(&СписокИменНастроекОтбора)";
	
	Запрос.УстановитьПараметр("Владелец", Контрагент);
	Запрос.УстановитьПараметр("СписокИменНастроекОтбора", ПолучитьСписокИменНастроекДляОтбораПоГруппеОрганизации());
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-12-15 (#МДМ)
	Запрос.УстановитьПараметр("ИсключитьОрганизациюОкей", Истина);
	Если ИсключитьОрганизациюОкей Тогда
		
		Организация_Окей = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация ОКЕЙ");
		Запрос.УстановитьПараметр("Организация_Окей", Организация_Окей);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ИсключитьОрганизациюОкей", "И &ИсключитьОрганизациюОкей
																				|			И ДоговорыКонтрагентов.Организация <> &Организация_Окей");
	
	КонецЕсли; 
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-12-15 (#МДМ)
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
		
КонецФункции
// ОКЕЙ Гиль А.В.(Софтлаб) Конец 22.09.2019 (#3487)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-11-27 (#МДМ)
Функция КонтрагентИмеетДоговорПоНаправлениюПоОрганизации(Контрагент, Организация, НаправлениеДоговора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец = &Владелец
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.бит_НаправлениеДоговора = &НаправлениеДоговора";
	
	Запрос.УстановитьПараметр("Владелец", 				Контрагент);
	Запрос.УстановитьПараметр("Организация", 			Организация);
	Запрос.УстановитьПараметр("НаправлениеДоговора", 	НаправлениеДоговора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
		
КонецФункции

Функция КонтрагентИмеетДоговорПоПараметрам(Контрагент, Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец = &Владелец
	|	И &Параметры";
	
	Запрос.УстановитьПараметр("Владелец", Контрагент);
	Запрос.УстановитьПараметр("Параметры", Истина);
	
	Если ТипЗнч(Параметры) = Тип("Структура") Тогда
		
		Для каждого ЭлементСтруктуры Из Параметры Цикл
			
			УсловиеСвязи = "=";
			Если ТипЗнч(ЭлементСтруктуры.Значение) = Тип("Массив") Тогда
				УсловиеСвязи = "В";
			КонецЕсли;
			
			Запрос.УстановитьПараметр(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &Параметры", "И ДоговорыКонтрагентов." + ЭлементСтруктуры.Ключ + " " + УсловиеСвязи + " (&" + ЭлементСтруктуры.Ключ + ")
																	|	И &Параметры");
			
		КонецЦикла; 
		
	КонецЕсли; 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
		
КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-11-27 (#МДМ)

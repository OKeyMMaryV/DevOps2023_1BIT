
#Область СлужебныйПрограммныйИнтерфейс

// Получение описания вычета для представления пользователю.
//	Параметры:
//		Вычет - СправочникСсылка.ВидыВычетовНДФЛ - 
//		ВключатьКодВычетаВОписание - булево - необязателен
// 	Возвращает: 
//		Строку описания.
Функция ПолучитьОписаниеВычета(Вычет, ВключатьКодВычетаВОписание = Ложь) Экспорт
	Если ЗначениеЗаполнено(Вычет) Тогда
		ДанныеВычета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Вычет, "ПолноеНаименование, Код");
		Возврат ?(ВключатьКодВычетаВОписание, ДанныеВычета.Код + " ", "") + ДанныеВычета.ПолноеНаименование
	Иначе
		Возврат НСтр("ru = 'Вычет не указан'");
	КонецЕсли;
КонецФункции

Функция ПолучитьОписаниеКодаДохода(КодДохода) Экспорт
	
	ОписаниеКодаДохода = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КодДохода, "ВычетРассчитываетсяАвтоматически, ВычетПоУмолчанию, ИмеетЕдинственныйВычет");
	ОписаниеКодаДохода.Вставить("КатегорияДохода", УчетНДФЛПовтИсп.КатегорияДоходаПоЕгоКоду(КодДохода));
	
	Возврат ОписаниеКодаДохода;
КонецФункции	

Функция ВычетыКДоходам(ГодНалоговогоПериода) Экспорт
	Возврат УчетНДФЛ.ВычетыКДоходам(ГодНалоговогоПериода);	
КонецФункции

Процедура ПрочитатьДанныеФизическогоЛицаВДанныеДокумента(ФизическоеЛицо, КонецНалоговогоПериода, ДанныеФизическогоЛица = Неопределено) Экспорт
	МассивФизЛиц = Новый Массив;
	МассивФизЛиц.Добавить(ФизическоеЛицо);
	
	Если ДанныеФизическогоЛица = Неопределено Тогда
		ДанныеФизическогоЛица = Новый Структура;
		ПолучаемыеПоля = "ИНН,Фамилия,Имя,Отчество,АдресПоПрописке,АдресПоПропискеПредставление,ДокументВид,ДокументСерия,ДокументНомер,Страна,ДатаРождения,АдресЗаПределамиРФ,АдресЗаПределамиРФПредставление"; 
		ТаблицаДанныхФизЛица = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, МассивФизЛиц, ПолучаемыеПоля, КонецНалоговогоПериода); 
		Если ТаблицаДанныхФизЛица.Количество() > 0 Тогда
			СтрокаДанныхФизЛица = ТаблицаДанныхФизЛица[0];
			
			ДанныеФизическогоЛица.Вставить("ФизическоеЛицо", ФизическоеЛицо);
			ДанныеФизическогоЛица.Вставить("ДатаРождения", СтрокаДанныхФизЛица.ДатаРождения);
			ДанныеФизическогоЛица.Вставить("Фамилия", СтрокаДанныхФизЛица.Фамилия);
			ДанныеФизическогоЛица.Вставить("Имя", СтрокаДанныхФизЛица.Имя);
			ДанныеФизическогоЛица.Вставить("Отчество", СтрокаДанныхФизЛица.Отчество);
			ДанныеФизическогоЛица.Вставить("Гражданство", СтрокаДанныхФизЛица.Страна);
			ДанныеФизическогоЛица.Вставить("ВидДокумента", СтрокаДанныхФизЛица.ДокументВид);
			ДанныеФизическогоЛица.Вставить("Серия", СтрокаДанныхФизЛица.ДокументСерия);
			ДанныеФизическогоЛица.Вставить("Номер", СтрокаДанныхФизЛица.ДокументНомер);
			ДанныеФизическогоЛица.Вставить("АдресРегистрации", СтрокаДанныхФизЛица.АдресПоПрописке);
			ДанныеФизическогоЛица.Вставить("АдресРегистрацииПредставление", СтрокаДанныхФизЛица.АдресПоПропискеПредставление);
			ДанныеФизическогоЛица.Вставить("АдресЗарубежом", СтрокаДанныхФизЛица.АдресЗаПределамиРФ);
			ДанныеФизическогоЛица.Вставить("АдресЗарубежомПредставление", СтрокаДанныхФизЛица.АдресЗаПределамиРФПредставление);

		КонецЕсли;	
		
	КонецЕсли;	
	
	СтатусРезидент = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент");
	
	ДанныеОСтатусеНДФЛ = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, МассивФизЛиц, "СтатусНалогоплательщика", КонецНалоговогоПериода);
	
	Если ДанныеОСтатусеНДФЛ.Количество() > 0 Тогда
		ДанныеФизическогоЛица.Вставить("СтатусНалогоплательщика", ?(ЗначениеЗаполнено(ДанныеОСтатусеНДФЛ[0].СтатусНалогоплательщика), ДанныеОСтатусеНДФЛ[0].СтатусНалогоплательщика, СтатусРезидент));
	Иначе                                                                                                     
		ДанныеФизическогоЛица.Вставить("СтатусНалогоплательщика", СтатусРезидент);
	КонецЕсли;	
	
КонецПроцедуры	

Процедура КатегорииДоходовНДФЛОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(Перечисления.КатегорииДоходовНДФЛ.ВсеЗначения())
	
КонецПроцедуры

#КонецОбласти

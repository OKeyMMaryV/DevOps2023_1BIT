
#Область СлужебныйПрограммныйИнтерфейс

// Функция формирует имя реквизита шапки проформы.
// 
// Параметры:
//  вхИмя - Строка.
// 
// Возвращаемое значение:
//  РезИмя - Строка.
// 
Функция ИмяРеквизитаШапки(вхИмя, Префикс = "Шапка") Экспорт

	РезИмя = Префикс+"_"+вхИмя;

	Возврат РезИмя;
	
КонецФункции // ИмяРеквизитаШапки()

// Функция формирует имя таблицы проформы.
// 
// Параметры:
//  вхИмя - Строка.
// 
// Возвращаемое значение:
//  РезИмя - Строка.
// 
Функция ИмяТаблицыФормы(вхИмя, Префикс = "Таблица") Экспорт

	РезИмя = Префикс+"_"+вхИмя;

	Возврат РезИмя;
	
КонецФункции // ИмяТаблицыФормы()

// Процедура заполняет данные в реквизиты формы из табличной части Данные.
// 
// Параметры:
//  ТекущаяФорма - УправляемаяФорма.
//  ПсевдоОбъект - Структура.
//  ВосстанавливатьСтандартные - Булево.
// 
Процедура ВосстановитьДанныеШапки(ТекущаяФорма, ПсевдоОбъект, ВосстанавливатьСтандартные = Ложь) Экспорт
	
	Если ВосстанавливатьСтандартные Тогда
		
		Для каждого КиЗ Из ПсевдоОбъект.СтандартныеРеквизиты Цикл
			
			ИмяРеквизита = ИмяРеквизитаШапки(КиЗ.Ключ);
			ТекущаяФорма[ИмяРеквизита] = КиЗ.Значение;
			
		КонецЦикла; 
		
	КонецЕсли; 
	
	Для каждого КиЗ Из ПсевдоОбъект.Реквизиты Цикл
		
		ИмяРеквизита = ИмяРеквизитаШапки(КиЗ.Ключ);
		ТекущаяФорма[ИмяРеквизита] = КиЗ.Значение;
		
	КонецЦикла; 
	
КонецПроцедуры // ВосстановитьДанныеШапки()

// Процедура заполняет данные в реквизиты формы из табличной части ДанныеТабличныхЧастей.
// 
// Параметры:
//  ТекущаяФорма - УправляемаяФорма.
//  ПсевдоОбъект - Структура.
// 
Процедура ВосстановитьДанныеТабличныхЧастей(ТекущаяФорма, ПсевдоОбъект) Экспорт
	
	Для каждого КиЗ Из ПсевдоОбъект.ТабличныеЧасти Цикл
		
		МодельТЧ = КиЗ.Значение;
		ИмяТаблицы = ИмяТаблицыФормы(КиЗ.Ключ);
		ТекущаяФорма[ИмяТаблицы].Очистить();		
		
		Для каждого МодельСтроки Из МодельТЧ Цикл
			
			НоваяСтрока = ТекущаяФорма[ИмяТаблицы].Добавить();
			
			Для каждого КиЗР Из МодельСтроки Цикл
				
				НоваяСтрока[КиЗР.Ключ] = КиЗР.Значение;
				
			КонецЦикла; 
			
		КонецЦикла; 
		
	КонецЦикла; 
	
КонецПроцедуры // ВосстановитьДанныеШапки()

// Функция добавляет поле формы на форму.
// 
// Параметры:
//  Имя - Строка.
//  ПутьКДанным - Строка.
//  НастройкиОтображения - Структура.
//  ЭлементКонтейнер     - ЭлементФормы.
// 
// Возвращаемое значение:
//  ЭУ - ПолеФормы.
// 
Функция ДобавитьПолеФормы(КоллекцияЭлементов, Имя, ПутьКДанным, НастройкиОтображения, ЭлементКонтейнер = Неопределено) Экспорт

	ЭУ = КоллекцияЭлементов.Добавить(Имя, Тип("ПолеФормы"), ЭлементКонтейнер);
	ЭУ.ПутьКДанным = ПутьКДанным;		
	
	Если НастройкиОтображения.ВидПоля = "ПолеФлажка" Тогда
		
		ЭУ.Вид = ВидПоляФормы.ПолеФлажка;
		
	Иначе
		
		ЭУ.Вид                       = ВидПоляФормы.ПолеВвода;
		ЭУ.АвтоОтметкаНезаполненного = НастройкиОтображения.ПроверкаЗаполнения;
		// ЭУ.Ширина                    = НастройкиОтображения.Ширина;
		// ЭУ.КнопкаВыбора              = НастройкиОтображения.КнопкаВыбора;
		// ЭУ.КнопкаОткрытия            = НастройкиОтображения.КнопкаОткрытия;
		// ЭУ.КнопкаРегулирования       = НастройкиОтображения.КнопкаРегулирования;
		// ЭУ.КнопкаОчистки             = НастройкиОтображения.КнопкаОчистки;
		
	КонецЕсли; 
	
	Возврат ЭУ;
	
КонецФункции // ДобавитьПолеФормы()

// Процедура удаляет динамически созданные реквизиты и элементы формы.
// 
Процедура УдалитьДинамическиеЭлементы(ТекущаяФорма) Экспорт
	
	// Удаление "динамически созданных" реквизитов.
	МассивРеквизитов = ТекущаяФорма.ПолучитьРеквизиты();
	
	УдаляемыеРеквизиты = Новый Массив;
	Для каждого РеквФормы Из МассивРеквизитов Цикл
		
		Если Найти(РеквФормы.Имя,"Шапка_") > 0 ИЛИ Найти(РеквФормы.Имя,"Таблица_") > 0 Тогда
			
			УдаляемыеРеквизиты.Добавить(РеквФормы.Имя);
			
		КонецЕсли; 
		
	КонецЦикла; // МассивРеквизитов
	
	ТекущаяФорма.ИзменитьРеквизиты(,УдаляемыеРеквизиты);
	
	// Удаление "динамически созданных" элементов управления.	
	УдаляемыеЭлементы = Новый Массив;
	Для каждого ЭлФормы Из ТекущаяФорма.Элементы Цикл
		
		Если ТипЗнч(ЭлФормы) = Тип("ПолеФормы") И Найти(ЭлФормы.Имя,"Шапка_") > 0 Тогда
			
			// Удаляем динамические элементы шапки
			УдаляемыеЭлементы.Добавить(ЭлФормы);
			
		ИначеЕсли ТипЗнч(ЭлФормы) = Тип("ГруппаФормы") И Найти(ЭлФормы.Имя,"Страница_")>0 Тогда	
			
			// Достаточно удалить страницы на которых расположены таблицы.
			УдаляемыеЭлементы.Добавить(ЭлФормы);
			
		КонецЕсли; 
		
	КонецЦикла; // Элементы
	
	Для каждого ЭлФормы Из УдаляемыеЭлементы Цикл
		
		ТекущаяФорма.Элементы.Удалить(ЭлФормы);
		
	КонецЦикла; 
	
КонецПроцедуры // УдалитьДинамическиеЭлементы()

// Процедура добавляет реквизиты и элементы управления по настройке формы.
// 
Процедура ДобавитьДинамическиеЭлементы(ТекущаяФорма, ПсевдоМетаданные, СтрПар) Экспорт
	
	флДобавлятьСтандартные = ?(СтрПар.Свойство("ДобавлятьСтандартныеРеквизиты") И СтрПар.ДобавлятьСтандартныеРеквизиты = Истина, Истина, Ложь);
	
	Элементы = ТекущаяФорма.Элементы;
	
	// Добавление реквизитов и элементов управления шапки.
	ДобавляемыеРеквизиты = Новый Массив;
	
	Если флДобавлятьСтандартные Тогда
		
		Для каждого КиЗ Из ПсевдоМетаданные.СтандартныеРеквизиты Цикл
			
			МетаРеквизит = КиЗ.Значение;
			
			ТекИмя = ИмяРеквизитаШапки(МетаРеквизит.Имя);
			НовыйРеквизит = Новый РеквизитФормы(ТекИмя, МетаРеквизит.Тип, , МетаРеквизит.Синоним, Истина);
			ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
			
		КонецЦикла; 
		
	КонецЕсли; 
	
	Для каждого КиЗ Из ПсевдоМетаданные.Реквизиты Цикл
		
		МетаРеквизит = КиЗ.Значение;
		
		ТекИмя = ИмяРеквизитаШапки(МетаРеквизит.Имя);
		НовыйРеквизит = Новый РеквизитФормы(ТекИмя, МетаРеквизит.Тип, , МетаРеквизит.Синоним, Истина);
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		 
	КонецЦикла; 
	
	ТекущаяФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Если флДобавлятьСтандартные Тогда
		
		Для каждого КиЗ Из ПсевдоМетаданные.СтандартныеРеквизиты Цикл
			
			МетаРеквизит = КиЗ.Значение;
			ТекИмя = ИмяРеквизитаШапки(МетаРеквизит.Имя);
			НовоеПоле = ДобавитьПолеФормы(ТекущаяФорма.Элементы, ТекИмя, ТекИмя, МетаРеквизит.НастройкиОтображения, ТекущаяФорма.Элементы[СтрПар.ПоляШапки]);
			
		КонецЦикла; 
		
	КонецЕсли; 
	
	Для каждого КиЗ Из ПсевдоМетаданные.Реквизиты Цикл
		
		МетаРеквизит = КиЗ.Значение;
		ТекИмя = ИмяРеквизитаШапки(МетаРеквизит.Имя);
		НовоеПоле = ДобавитьПолеФормы(ТекущаяФорма.Элементы, ТекИмя, ТекИмя, МетаРеквизит.НастройкиОтображения, ТекущаяФорма.Элементы[СтрПар.ПоляШапки]);
				
	КонецЦикла; 
	
	// Добавление реквизитов и элементов управления табличных частей.
	ДобавляемыеРеквизиты = Новый Массив;	
	Для каждого КиЗ Из ПсевдоМетаданные.ТабличныеЧасти Цикл
		
		МетаТабЧасть = КиЗ.Значение;
		
		ИмяТаблицы = "Таблица_"+МетаТабЧасть.Имя;
		
		Описание = Новый ОписаниеТипов("ТаблицаЗначений");
		
		НоваяТаблица = Новый РеквизитФормы(ИмяТаблицы, Описание,  ,МетаТабЧасть.Синоним, Истина); 
		ДобавляемыеРеквизиты.Добавить(НоваяТаблица);
		
		Для каждого КиЗР Из МетаТабЧасть.Реквизиты Цикл
			
			МетаРеквизит = КиЗР.Значение;
			НовыйРеквизит = Новый РеквизитФормы(МетаРеквизит.Имя, МетаРеквизит.Тип, ИмяТаблицы, МетаРеквизит.Синоним);
			ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
			
		КонецЦикла; 
		
	КонецЦикла; 
	
	ТекущаяФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для каждого КиЗ Из ПсевдоМетаданные.ТабличныеЧасти Цикл
		
		МетаТабЧасть = КиЗ.Значение;
		
		ИмяСтраницы = "Страница_"+МетаТабЧасть.Имя;
		НоваяСтраница = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы[СтрПар.Страницы]);
		НоваяСтраница.Вид = ВидГруппыФормы.Страница;
		НоваяСтраница.Заголовок = МетаТабЧасть.Синоним;
		
		Если ЗначениеЗаполнено(СтрПар.СтраницаПоУмолчанию) Тогда
			
			Элементы.Переместить(НоваяСтраница, Элементы[СтрПар.Страницы], Элементы[СтрПар.СтраницаПоУмолчанию]);
			
		КонецЕсли; 
		
		ИмяТаблицы = "Таблица_"+МетаТабЧасть.Имя;		
		НоваяТаблица = Элементы.Добавить(ИмяТаблицы, Тип("ТаблицаФормы"), НоваяСтраница);
		НоваяТаблица.ПутьКДанным = ИмяТаблицы;
		
		Для каждого КиЗР Из МетаТабЧасть.Реквизиты Цикл
			
			МетаРеквизит = КиЗР.Значение;
			
			ИмяЭлемента = ИмяТаблицы+"_"+МетаРеквизит.Имя;
			ПутьКДанным = ИмяТаблицы+"."+МетаРеквизит.Имя;
			НовоеПоле = ДобавитьПолеФормы(Элементы, ИмяЭлемента, ПутьКДанным, МетаРеквизит.НастройкиОтображения, НоваяТаблица);
			
		КонецЦикла; 
		
		
	КонецЦикла; 
	
	Если НЕ НоваяСтраница = Неопределено Тогда
		Элементы[СтрПар.Страницы].ТекущаяСтраница = НоваяСтраница;
	Иначе
		Если ЗначениеЗаполнено(СтрПар.СтраницаПоУмолчанию) Тогда
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[СтрПар.СтраницаПоУмолчанию];
			
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры // ДобавитьДинамическиеЭлементы()

// Процедура сохраняет данные из реквизитов формы в табличные части Данные и ДанныеТабличныхЧастей.
// 
// Параметры:
//  ТекущийОбъект - СправочникОбъект.
//  МодельОбъекта - Структура.
//  ПсевдоМета - Структура.
// 
Процедура СохранитьДанныеФормы(ТекущийОбъект, МодельОбъекта, ПсевдоМета) Экспорт
	
	ТекущийОбъект.Данные.Очистить();
	ТекущийОбъект.ДанныеТабличныхЧастей.Очистить();
	
	Для каждого КиЗ Из ПсевдоМета.Реквизиты Цикл
		
		Имя = КиЗ.Ключ;
		ПсевдоМетаРеквизит = КиЗ.Значение;
		
		НоваяСтрока = ТекущийОбъект.Данные.Добавить();
		НоваяСтрока.ИмяРеквизита = Имя;
		НоваяСтрока.ОписаниеРеквизита = ПсевдоМетаРеквизит.ОписаниеРеквизита;
		НоваяСтрока.Значение = МодельОбъекта.Реквизиты[Имя];
		
	КонецЦикла; 
	
	Для каждого КиЗ Из ПсевдоМета.ТабличныеЧасти Цикл
		
		ИмяТЧ = КиЗ.Ключ;
		ПсевдоМетаТЧ = КиЗ.Значение;
		
		МодельТЧ = МодельОбъекта.ТабличныеЧасти[ИмяТЧ];
		
		нс = 1;
		Для каждого МодельСтроки Из МодельТЧ Цикл
			
			Для каждого КиЗР Из ПсевдоМетаТЧ.Реквизиты Цикл
				
			    НоваяСтрока = ТекущийОбъект.ДанныеТабличныхЧастей.Добавить();
				
				Имя = КиЗР.Ключ;
				ПсевдоМетаРеквизит = КиЗР.Значение;
				
				НоваяСтрока.ИмяТабличнойЧасти = ИмяТЧ;
				НоваяСтрока.ИмяРеквизита = Имя;
				НоваяСтрока.ОписаниеРеквизита = ПсевдоМетаРеквизит.ОписаниеРеквизита;
				НоваяСтрока.Значение = МодельСтроки[Имя];
				НоваяСтрока.НомерСтрокиТабличнойЧасти = нс;
				
			КонецЦикла; 
			
			нс = нс + 1;
		КонецЦикла; // Модель строки
		
	КонецЦикла; 
	
КонецПроцедуры // СохранитьДанныеФормы()

#КонецОбласти

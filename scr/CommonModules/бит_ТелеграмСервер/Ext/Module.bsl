
#Область ПрограммныйИнтерфейс

// Процедура - Основная процедура работы с Ботом Telegram.
//
Процедура ОбработатьОповещенияБоту() Экспорт
	
	Если Метаданные.ОбщиеМодули.Найти("ОбщегоНазначения") <> Неопределено Тогда
		
		Модуль = Вычислить("ОбщегоНазначения");
		Модуль.ПриНачалеВыполненияРегламентногоЗадания();
		Если НЕ ПолучитьФункциональнуюОпцию("бит_ПолучатьИнформациюОтБотаТелеграм") Тогда
			ВызватьИсключение НСтр("ru = 'Регламентное задание недоступно по функциональным опциям.'");
		КонецЕсли;	
		
	КонецЕсли; 
	
	ГлавныйБот = бит_ТелеграмПовтИсп.ГлавныйБот();
	
	СлужебныеОповещения(ГлавныйБот);
	СообщенияБота(ГлавныйБот);
	
КонецПроцедуры

// Функция - возвращает HTTPСоединение созданное средствами 1с.
// 
// Возвращаемое значение:
//  HTTPСоединение - HTTPСоединение.
//
Функция НовоеHTTPСоединение() Экспорт

	НастройкиПрокси = бит_ТелеграмПовтИсп.НастройкиПрокси();
	
	Если НастройкиПрокси = Неопределено Тогда
		НастройкиПрокси = НоваяСтруктураПрокси();
	КонецЕсли; 
	
	Соединение = ?(НЕ НастройкиПрокси.ВключитьПрокси
					, Новый HTTPСоединение("api.telegram.org",,,,,5,Новый ЗащищенноеСоединениеOpenSSL)
					, Новый HTTPСоединение("api.telegram.org",,,,НовыеНастройкиПрокси(НастройкиПрокси),5,Новый ЗащищенноеСоединениеOpenSSL));
	
	Возврат Соединение;
	
КонецФункции // СформироватьHTTPСоединение()

// Функция - Новая структура прокси.
// 
// Возвращаемое значение:
//  СтруктураПрокси - Структура.
//
Функция НоваяСтруктураПрокси() Экспорт 

	СтруктураПрокси = Новый Структура("ВключитьПрокси, Сервер, Порт, АутентификацияОС, Логин, Пароль");
									
	СтруктураПрокси.ВключитьПрокси 		= Ложь;
	СтруктураПрокси.Сервер 				= "";
	СтруктураПрокси.Порт 				= 0;
	СтруктураПрокси.АутентификацияОС 	= Ложь;
	СтруктураПрокси.Логин 				= "";
	СтруктураПрокси.Пароль 				= "";
	
	Возврат СтруктураПрокси;

КонецФункции // СтруктураПрокси()
 
// Процедура - фиксирует в реестре обмена новое сообщение из базы.
//
// Параметры:
//  ТекстСообщения	 - Строка - Текст сообщения.
//  Чат				 - СправочникСсылка.бит_ЧатыTelegram - чат.
//
Процедура НовоеСообщениеЧатуИзБазы(ТекстСообщения, Чат) Экспорт 

	ИДСообщения = НовоеИДСообщенияДляОтправки();
	
	стрСообщенияТелеграмИсходящее = Новый Структура();
	
	стрСообщенияТелеграмИсходящее.Вставить("ВидЗапросаТелеграм"	, Перечисления.бит_ВидыЗапросовТелеграм.СообщениеЧатуИзБазы);
	стрСообщенияТелеграмИсходящее.Вставить("Состояние"			, Перечисления.бит_ВидыСостоянийТелеграм.ОжидаетОтправления);
	стрСообщенияТелеграмИсходящее.Вставить("Чат"				, Чат);
	стрСообщенияТелеграмИсходящее.Вставить("СообщениеИД"		, ИДСообщения);
	стрСообщенияТелеграмИсходящее.Вставить("Сообщение"			, ТекстСообщения);
	стрСообщенияТелеграмИсходящее.Вставить("ДатаОтправки"		, ТекущаяДатаСеанса());
	
	НоваяЗаписьВРеестрОбмена(стрСообщенияТелеграмИсходящее);

КонецПроцедуры // НовоеСообщениеЧатуИзБазы()

// Процедура - фиксирует в реестре обмена новое сообщение о статусе.
//
// Параметры:
//  СтатусРегистрации	 - ПеречислениеСсылка.бит_СтатусРегистрацииТелеграм - статус.
//  Чат					 - СправочникСсылка.бит_ЧатыTelegram - чат.
//
Процедура НовоеСообщениеОСтатусеРегистрации(СтатусРегистрации, Чат) Экспорт 

	ИДСообщения = НовоеИДСообщенияДляОтправки();
	
	Если СтатусРегистрации = Перечисления.бит_СтатусРегистрацииТелеграм.Запрещено Тогда
	
		ТекстСообщения = Нстр("ru = 'Статус регистрации вашего чата: заблокирован.'");
		
	ИначеЕсли СтатусРегистрации = Перечисления.бит_СтатусРегистрацииТелеграм.ОжидаетРегистрации Тогда
	
		ТекстСообщения = Нстр("ru = 'Статус регистрации вашего чата: на рассмотрении.'");
		
	ИначеЕсли СтатусРегистрации = Перечисления.бит_СтатусРегистрацииТелеграм.Разрешено Тогда
	
		ТекстСообщения = Нстр("ru = 'Статус регистрации вашего чата: разрешен доступ к командам.'")+НовыйТекстКлавиатурыСДоступнымиКомандами(ДоступныеКомандыЧату(Чат),Истина);
		
	Иначе	
		Возврат;
	КонецЕсли; 
	
	стрСообщенияТелеграмИсходящее = Новый Структура();
	
	стрСообщенияТелеграмИсходящее.Вставить("ВидЗапросаТелеграм"	, Перечисления.бит_ВидыЗапросовТелеграм.ПодтверждениеРегистрации);
	стрСообщенияТелеграмИсходящее.Вставить("Состояние"			, Перечисления.бит_ВидыСостоянийТелеграм.ОжидаетОтправления);
	стрСообщенияТелеграмИсходящее.Вставить("Чат"				, Чат);
	стрСообщенияТелеграмИсходящее.Вставить("СообщениеИД"		, ИДСообщения);
	стрСообщенияТелеграмИсходящее.Вставить("Сообщение"			, ТекстСообщения);
	стрСообщенияТелеграмИсходящее.Вставить("ДатаОтправки"		, ТекущаяДатаСеанса());
	
	НоваяЗаписьВРеестрОбмена(стрСообщенияТелеграмИсходящее);

КонецПроцедуры

// Функция - Проверить наличие администраторов бота.
//
// Параметры:
//  БотТелеграм	 - СправочникСсылка.бит_БотыTelegram - боты.
// 
// Возвращаемое значение:
//  Результат - Булево.
//
Функция ПроверитьНаличиеАдминистраторовБота(БотТелеграм) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Бот", БотТелеграм);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЧатыДляСлужебныхОповещений.Чат
	               |ИЗ
	               |	РегистрСведений.бит_ЧатыДляСлужебныхОповещенийТелеграм КАК ЧатыДляСлужебныхОповещений
	               |ГДЕ
	               |	ЧатыДляСлужебныхОповещений.Бот = &Бот";
	
	РезультатЗапроса = Запрос.Выполнить().Пустой();
	
	Возврат НЕ РезультатЗапроса;
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура СлужебныеОповещения(БотТелеграм)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Бот", БотТелеграм);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЧатыДляСлужебныхОповещений.Чат,
	               |	РеестрОбменаСТелеграм.ВидЗапросаТелеграм,
	               |	РеестрОбменаСТелеграм.СообщениеИД,
	               |	РеестрОбменаСТелеграм.Состояние,
	               |	РеестрОбменаСТелеграм.Сообщение,
	               |	РеестрОбменаСТелеграм.ДатаОтправки,
	               |	ЧатыДляСлужебныхОповещений.Чат.ИД
	               |ИЗ
	               |	РегистрСведений.бит_ЧатыДляСлужебныхОповещенийТелеграм КАК ЧатыДляСлужебныхОповещений
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_РеестрОбменаСТелеграм КАК РеестрОбменаСТелеграм
	               |		ПО ЧатыДляСлужебныхОповещений.Чат = РеестрОбменаСТелеграм.Чат
	               |ГДЕ
	               |	ЧатыДляСлужебныхОповещений.Регистрация = ИСТИНА
	               |	И РеестрОбменаСТелеграм.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСостоянийТелеграм.ОжидаетОтправления)
	               |	И РеестрОбменаСТелеграм.ВидЗапросаТелеграм = ЗНАЧЕНИЕ(Перечисление.бит_ВидыЗапросовТелеграм.РегистрацияЧата)
	               |	И ЧатыДляСлужебныхОповещений.Бот = &Бот
	               |	И ЧатыДляСлужебныхОповещений.Чат.ОсновнойБот = &Бот
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЧатыДляСлужебныхОповещений.Чат,
	               |	РеестрОбменаСТелеграм.ВидЗапросаТелеграм,
	               |	РеестрОбменаСТелеграм.СообщениеИД,
	               |	РеестрОбменаСТелеграм.Состояние,
	               |	РеестрОбменаСТелеграм.Сообщение,
	               |	РеестрОбменаСТелеграм.ДатаОтправки,
	               |	ЧатыДляСлужебныхОповещений.Чат.ИД
	               |ИЗ
	               |	РегистрСведений.бит_ЧатыДляСлужебныхОповещенийТелеграм КАК ЧатыДляСлужебныхОповещений
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_РеестрОбменаСТелеграм КАК РеестрОбменаСТелеграм
	               |		ПО ЧатыДляСлужебныхОповещений.Чат = РеестрОбменаСТелеграм.Чат
	               |ГДЕ
	               |	ЧатыДляСлужебныхОповещений.Помощь = ИСТИНА
	               |	И РеестрОбменаСТелеграм.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСостоянийТелеграм.ОжидаетОтправления)
	               |	И РеестрОбменаСТелеграм.ВидЗапросаТелеграм = ЗНАЧЕНИЕ(Перечисление.бит_ВидыЗапросовТелеграм.ПомощьЧату)
	               |	И ЧатыДляСлужебныхОповещений.Бот = &Бот
	               |	И ЧатыДляСлужебныхОповещений.Чат.ОсновнойБот = &Бот
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеестрОбменаСТелеграм.Чат,
	               |	РеестрОбменаСТелеграм.ВидЗапросаТелеграм,
	               |	РеестрОбменаСТелеграм.СообщениеИД,
	               |	РеестрОбменаСТелеграм.Состояние,
	               |	РеестрОбменаСТелеграм.Сообщение,
	               |	РеестрОбменаСТелеграм.ДатаОтправки,
	               |	РеестрОбменаСТелеграм.Чат.ИД
	               |ИЗ
	               |	РегистрСведений.бит_РеестрОбменаСТелеграм КАК РеестрОбменаСТелеграм
	               |ГДЕ
	               |	РеестрОбменаСТелеграм.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСостоянийТелеграм.ОжидаетОтправления)
	               |	И РеестрОбменаСТелеграм.ВидЗапросаТелеграм В (ЗНАЧЕНИЕ(Перечисление.бит_ВидыЗапросовТелеграм.СообщениеЧатуИзБазы), ЗНАЧЕНИЕ(Перечисление.бит_ВидыЗапросовТелеграм.ПодтверждениеРегистрации))";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОтправитьСообщениеБоту(БотТелеграм.Токен, Формат(Выборка.ЧатИД, "ЧГ=0"), Выборка.Сообщение);
		
		НаборЗаписей = РегистрыСведений.бит_РеестрОбменаСТелеграм.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Чат.Установить(Выборка.Чат);
		НаборЗаписей.Отбор.ВидЗапросаТелеграм.Установить(Выборка.ВидЗапросаТелеграм);
		НаборЗаписей.Отбор.СообщениеИД.Установить(Выборка.СообщениеИД);
		
		НоваяЗапись              		= НаборЗаписей.Добавить();
		НоваяЗапись.Чат				 	= Выборка.Чат;
		НоваяЗапись.ВидЗапросаТелеграм 	= Выборка.ВидЗапросаТелеграм;
		НоваяЗапись.СообщениеИД 		= Выборка.СообщениеИД;
		НоваяЗапись.Сообщение 		 	= Выборка.Сообщение;
		НоваяЗапись.Состояние 		 	= Перечисления.бит_ВидыСостоянийТелеграм.Отправлено;
		НоваяЗапись.ДатаОтправки 		= ТекущаяДатаСеанса();
		Попытка
		
			НаборЗаписей.Записать();
			
		Исключение
		
		КонецПопытки; 
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура СообщенияБота(БотТелеграм)
	
	НачальнаяВерсияОбновленияТелеграм = Константы.бит_ВерсияОбновленияБотаТелеграм.Получить();
	ВерсияОбновленияТелеграм = НачальнаяВерсияОбновленияТелеграм;
	Ответ = ПолучитьСообщенияБота(ВерсияОбновленияТелеграм, БотТелеграм.Токен);
	
	ЧтениеДжейсон = Новый ЧтениеJSON();
	ЧтениеДжейсон.УстановитьСтроку(Ответ);
	
	стрОтвета = ПрочитатьJSON(ЧтениеДжейсон);
	Если стрОтвета.Свойство("ok")
		И стрОтвета.ok Тогда
		
		Для Каждого стрСообщенияТелеграм Из стрОтвета.result Цикл
			
			Если ВерсияОбновленияТелеграм = стрСообщенияТелеграм.update_id Тогда
				Продолжить;
			КонецЕсли;
			
			Сообщение = НовоеСообщениеБоту(стрСообщенияТелеграм, БотТелеграм);
			
			Если НЕ Сообщение = "" Тогда
				ОтправитьСообщениеБоту(БотТелеграм.Токен, стрСообщенияТелеграм.ЧатИД, Сообщение);
				стрСообщенияТелеграм.Вставить("ОтветноеСообщение", Сообщение);
				НоваяЗаписьВРеестрОбмена(стрСообщенияТелеграм);
			КонецЕсли;
			
			ВерсияОбновленияТелеграм = стрСообщенияТелеграм.update_id;
			
		КонецЦикла;
	КонецЕсли;
	
	Если НачальнаяВерсияОбновленияТелеграм <> ВерсияОбновленияТелеграм Тогда
	
		Константы.бит_ВерсияОбновленияБотаТелеграм.Установить(ВерсияОбновленияТелеграм);
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОтправитьСообщениеБоту(ТокенБота, ЧатИД, Текст)
	
	СоединениеТелеграм = НовоеHTTPСоединение();
	
	ЗапросТелеграм = Новый HTTPЗапрос("/bot"+ТокенБота+"/sendMessage?chat_id="+Формат(ЧатИД, "ЧГ=0")+"&text="+Текст);
	РезультатЗапроса = СоединениеТелеграм.ОтправитьДляОбработки(ЗапросТелеграм);
	
КонецПроцедуры

Функция ПолучитьСообщенияБота(ВерсияОбновленияТелеграм, ТокенБота)
	
	Попытка
		
		СоединениеТелеграм = НовоеHTTPСоединение();
		
		ЗапросТелеграм = Новый HTTPЗапрос("/bot"+ТокенБота+"/getUpdates"+?(Формат(ВерсияОбновленияТелеграм, "ЧГ=0") ="", "", "?offset="+Формат(ВерсияОбновленияТелеграм, "ЧГ=0")));
		
		РезультатЗапроса = СоединениеТелеграм.ОтправитьДляОбработки(ЗапросТелеграм);
		
		Ответ = РезультатЗапроса.ПолучитьТелоКакСтроку();
		
	Исключение
		Ответ = "{""ok"":false}";
	КонецПопытки;
	
	Возврат Ответ;
	
КонецФункции

Процедура НовыйСправочникЧатТелеграм(ЧатИД, НаименованиеЧата, БотТелеграм)

	СпрОб = Справочники.бит_ЧатыTelegram.СоздатьЭлемент();
	СпрОб.Наименование 	= НаименованиеЧата;
	СпрОб.ИД 			= ЧатИД;
	СпрОб.ОсновнойБот 	= БотТелеграм;
	СпрОб.СтатусРегистрации = Перечисления.бит_СтатусРегистрацииТелеграм.ОжидаетРегистрации;
	СпрОб.ДополнительныеСвойства.Вставить("Автоматически", Истина);
	СпрОб.Записать();

КонецПроцедуры // СоздатьЧат()

Функция СформироватьИмяПользователяЧата(Юзернейм)
	
	ИмяПользователя = "";
	Если Юзернейм.Свойство("last_name") Тогда
		ИмяПользователя = Юзернейм.last_name;
	КонецЕсли;
	Если Юзернейм.Свойство("first_name") Тогда
		ИмяПользователя = ИмяПользователя + " " + Юзернейм.first_name;
	КонецЕсли;
	Если Юзернейм.Свойство("username") Тогда
		ИмяПользователя = ИмяПользователя + "(" + Юзернейм.username + ")";
	КонецЕсли;
	
	Возврат СокрЛП(ИмяПользователя);
	
КонецФункции

#Область ФормированиеСообщенияБоту

Функция НовоеСообщениеБоту(стрСообщенияТелеграм, БотТелеграм)
	
	ТекстОтвета = "";
	
	Если стрСообщенияТелеграм.Свойство("callback_query") Тогда
	
		ЧатИД 				= стрСообщенияТелеграм.callback_query.message.chat.id;
		СообщениеИД 		= стрСообщенияТелеграм.callback_query.message.message_id;
		Сообщение 			= стрСообщенияТелеграм.callback_query.data;
		ДатаОтправки 		= Дата(1970,1,1) + СтрЗаменить(Строка(стрСообщенияТелеграм.callback_query.message.date), " ", "");
		ТипЧата 			= стрСообщенияТелеграм.callback_query.message.chat.type;
		ИмяПользователяЧата = СформироватьИмяПользователяЧата(стрСообщенияТелеграм.callback_query.from); 
		
		// это параметр
		Если СтрРазделить(Сообщение, "/", Ложь).Количество()>1 Тогда
			
			ТекстОтвета = НажатиеНаКнопкуПериода(стрСообщенияТелеграм.callback_query.message.text, СтрРазделить(Сообщение, "/", Ложь), ЧатИД);
			
		КонецЕсли; 
		
	ИначеЕсли стрСообщенияТелеграм.Свойство("message") Тогда 	
		
		Если НЕ стрСообщенияТелеграм.message.Свойство("contact") Тогда
		
			ЧатИД 				= стрСообщенияТелеграм.message.chat.id;
			СообщениеИД 		= стрСообщенияТелеграм.message.message_id;
			Сообщение 			= ?(стрСообщенияТелеграм.message.Свойство("text"), стрСообщенияТелеграм.message.text, "");
			ДатаОтправки 		= Дата(1970,1,1) + СтрЗаменить(Строка(стрСообщенияТелеграм.message.date), " ", "");
			ТипЧата 			= стрСообщенияТелеграм.message.chat.type;
			ИмяПользователяЧата = СформироватьИмяПользователяЧата(стрСообщенияТелеграм.message.from); 
			
		Иначе
			ОтправитьСообщениеБоту(БотТелеграм.Токен,стрСообщенияТелеграм.message.contact.user_id,Нстр("ru = 'Ваши контакты отправлены администратору.&reply_markup={""hide_keyboard"":true}'"));
			ОтправитьКонтактПоСлужебнымЧатам(БотТелеграм,стрСообщенияТелеграм.message.contact.phone_number,СформироватьИмяПользователяЧата(стрСообщенияТелеграм.message.contact));
			Возврат ТекстОтвета;
		КонецЕсли; 
	Иначе	
		Возврат ТекстОтвета;
	КонецЕсли; 
	
	стрСообщенияТелеграм.Вставить("Состояние"			, Перечисления.бит_ВидыСостоянийТелеграм.Получено);
	стрСообщенияТелеграм.Вставить("ВидЗапросаТелеграм"	, Перечисления.бит_ВидыЗапросовТелеграм.ПустаяСсылка());
	стрСообщенияТелеграм.Вставить("ЧатИД"				, ЧатИД);
	стрСообщенияТелеграм.Вставить("СообщениеИД"			, СообщениеИД);
	стрСообщенияТелеграм.Вставить("Сообщение"			, Сообщение);
	стрСообщенияТелеграм.Вставить("ДатаОтправки"		, МестноеВремя(ДатаОтправки,ЧасовойПоясСеанса()));
	
	ПеречислениеРегистрация = Перечисления.бит_ВидыЗапросовТелеграм.РегистрацияЧата;
	
	Если НЕ ПустаяСтрока(стрСообщенияТелеграм.Сообщение) Тогда
		ЭтоТекст = Истина;
		СообщениеОтБота = стрСообщенияТелеграм.Сообщение;
	Иначе
		ЭтоТекст = Ложь;
		СообщениеОтБота = "";
	КонецЕсли;
	
	Если НЕ ТекстОтвета = "" Тогда
		
		стрСообщенияТелеграм.ВидЗапросаТелеграм = Перечисления.бит_ВидыЗапросовТелеграм.ПроизвольнаяКоманда;
		Возврат ТекстОтвета;
		
	КонецЕсли; 
	
	стрЧата = НайтиЧат(стрСообщенияТелеграм.ЧатИД);
	
	Если стрЧата = Неопределено Тогда
		
		Если ТипЧата <> "private" Тогда
			
		Иначе
			стрСообщенияТелеграм.ВидЗапросаТелеграм = ПеречислениеРегистрация;
			ТекстОтвета = РегистрацияЧата(СообщениеОтБота, БотТелеграм, стрСообщенияТелеграм,ИмяПользователяЧата);
		КонецЕсли;
	ИначеЕсли стрЧата.СтатусРегистрации = Перечисления.бит_СтатусРегистрацииТелеграм.ОжидаетРегистрации Тогда
		
		стрСообщенияТелеграм.ВидЗапросаТелеграм = ПеречислениеРегистрация;
		ТекстОтвета = Нстр("ru = 'Регистрация чата находится на рассмотрении.'");
		
	ИначеЕсли стрЧата.СтатусРегистрации = Перечисления.бит_СтатусРегистрацииТелеграм.Запрещено Тогда
		
		стрСообщенияТелеграм.ВидЗапросаТелеграм = ПеречислениеРегистрация;
		ТекстОтвета = Нстр("ru = 'Чат заблокирован.'");
		
	Иначе
		Если ВРег(СообщениеОтБота) = ВРег("/help") Тогда
			
			стрСообщенияТелеграм.ВидЗапросаТелеграм = Перечисления.бит_ВидыЗапросовТелеграм.ПомощьЧату;
			ТекстОтвета = Нстр("ru = 'Ваша просьба отправлена. Хотите отправить администратору свои контакты?&reply_markup={""keyboard"":[[{""text"":""Отправить контакты"",""request_contact"":true}]],""resize_keyboard"":true,""one_time_keyboard"":true}'");
			
			ОповеститьСлужебныеЧаты(БотТелеграм,стрСообщенияТелеграм,ИмяПользователяЧата,,Истина);
			
		ИначеЕсли ВРег(СообщениеОтБота) = ВРег("/more") Тогда
			
			стрСообщенияТелеграм.ВидЗапросаТелеграм = Перечисления.бит_ВидыЗапросовТелеграм.ПроизвольнаяКоманда;
			ТекстОтвета = НовыйСписокСоВсемиКомандами(ДоступныеКомандыЧату(стрЧата.Чат));
			
		ИначеЕсли ВРег(СообщениеОтБота) = ВРег("/hideKeyboard") Тогда
			
			стрСообщенияТелеграм.ВидЗапросаТелеграм = Перечисления.бит_ВидыЗапросовТелеграм.ПроизвольнаяКоманда;
			ТекстОтвета = Нстр("ru = 'Скрыть клавиатуру.&reply_markup={""hide_keyboard"":true}'");
			
		ИначеЕсли НЕ ЭтоТекст Тогда
			
			стрСообщенияТелеграм.ВидЗапросаТелеграм = Перечисления.бит_ВидыЗапросовТелеграм.ПроизвольнаяКоманда;
			ТекстОтвета = Нстр("ru = 'Для ввода команды используется текст.'");
			
		// произвольный период с командой
		ИначеЕсли СтрРазделить(СокрЛП(СообщениеОтБота), "/", Ложь).Количество()>1
			ИЛИ СтрРазделить(СокрЛП(СообщениеОтБота), "/", Ложь).Количество()>2 Тогда 
			
			стрСообщенияТелеграм.ВидЗапросаТелеграм = Перечисления.бит_ВидыЗапросовТелеграм.ПроизвольнаяКоманда;
			РазделительныйМассив = СтрРазделить(СокрЛП(СообщениеОтБота), "/", Ложь);
			ТекстОтвета = КомандаСПроизвольнымПериодом(РазделительныйМассив, РазделительныйМассив.Количество(), стрЧата.Чат);
			
		Иначе
			стрСообщенияТелеграм.ВидЗапросаТелеграм = Перечисления.бит_ВидыЗапросовТелеграм.ПроизвольнаяКоманда;
			ТекстОтвета = ВыполнитьКомандуТелеграм(СообщениеОтБота, стрЧата.Чат, Новый Массив);
			
		КонецЕсли;
			
		Если ТекстОтвета = "" Тогда
			ТекстОтвета = Нстр("ru = 'Доступные команды:'")+НовыйТекстКлавиатурыСДоступнымиКомандами(ДоступныеКомандыЧату(стрЧата.Чат),Истина);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТекстОтвета;
	
КонецФункции

Функция РегистрацияЧата(СообщениеОтБота, БотТелеграм, стрСообщенияТелеграм, ИмяПользователяЧата)

	Если НЕ ВРег(СообщениеОтБота) = ВРег("/registration")
		И НЕ ВРег(СообщениеОтБота) = ВРег("/start")
		И БотТелеграм.НуженПинКод Тогда
		
		Если СообщениеОтБота = БотТелеграм.ПинКод Тогда
			
			НовыйСправочникЧатТелеграм(стрСообщенияТелеграм.ЧатИД, ИмяПользователяЧата, БотТелеграм);
			ТекстОтвета = Нстр("ru = 'Регистрация на рассмотрении.'");
			ОповеститьСлужебныеЧаты(БотТелеграм, стрСообщенияТелеграм, ИмяПользователяЧата, Истина);
		Иначе	
			ТекстОтвета = Нстр("ru = 'Необходимо ввести пин код.'");
		КонецЕсли; 
		
	ИначеЕсли ВРег(СообщениеОтБота) = ВРег("/registration") Тогда
		Если БотТелеграм.НуженПинКод Тогда
			ТекстОтвета = Нстр("ru = 'Необходимо ввести пин код.'");
		Иначе
			НовыйСправочникЧатТелеграм(стрСообщенияТелеграм.ЧатИД, ИмяПользователяЧата, БотТелеграм);
			ТекстОтвета = Нстр("ru = 'Регистрация на рассмотрении.'");
			ОповеститьСлужебныеЧаты(БотТелеграм, стрСообщенияТелеграм, ИмяПользователяЧата, Истина);
		КонецЕсли;
	Иначе
		ТекстОтвета = Нстр("ru = 'Пройдите регистрацию нажав /registration'");
		
	КонецЕсли;

	Возврат ТекстОтвета;
	
КонецФункции // РегистрацияЧата()

Функция НажатиеНаКнопкуПериода(ТекстКомандыСПериодом, РазделительныйМассив, ЧатИД)

	стрЧата = НайтиЧат(ЧатИД);
	
	Если стрЧата = Неопределено Тогда
	
		ТекстОтвета = Нстр("ru = 'Не найден Чат!'");
		Возврат ТекстОтвета;
		
	КонецЕсли; 
	
	МассивПараметров = Новый Массив;
	
	ИмяКоманды = "/"+СтрРазделить(ТекстКомандыСПериодом, "/", Ложь)[1];
	Если РазделительныйМассив[1] = "Дата" Тогда
		
		Если ВариантСтандартнойДатыНачала[РазделительныйМассив[0]] = ВариантСтандартнойДатыНачала.ПроизвольнаяДата Тогда
			
			ТекстОтвета = Нстр("ru = 'Введите Период в формате ГГГГ.ММ.ДД и имя /команды. Например: ""'")
							+ Формат(ТекущаяДата(), "ДФ=yyyy.MM.dd") + " " 
							+ ИмяКоманды + """";
			
		Иначе	
			Вариант = Новый СтандартнаяДатаНачала(ВариантСтандартнойДатыНачала[РазделительныйМассив[0]]);
			СтруктураПараметра = Новый Структура("Период", Вариант.Дата); 
			МассивПараметров.Добавить(СтруктураПараметра);
			
			ТекстОтвета = ВыполнитьКомандуТелеграм(ИмяКоманды, стрЧата.Чат, МассивПараметров);
			
		КонецЕсли; 
	Иначе	
		Если ВариантСтандартногоПериода[РазделительныйМассив[0]] = ВариантСтандартногоПериода.ПроизвольныйПериод Тогда
			
			ТекстОтвета = Нстр("ru = 'Введите НачалоПериода и КонецПериода в формате ГГГГ.ММ.ДД и имя /команды. Например: ""'")
						+ Формат(НачалоМесяца(ТекущаяДата()), "ДФ=yyyy.MM.dd") + ":" 
						+ Формат(КонецМесяца(ТекущаяДата()), "ДФ=yyyy.MM.dd") + " " 
						+ ИмяКоманды + """";
			
		Иначе	
			Вариант = Новый СтандартныйПериод(ВариантСтандартногоПериода[РазделительныйМассив[0]]);
			СтруктураПараметра = Новый Структура; 
			СтруктураПараметра.Вставить("НачалоПериода"	, Вариант.ДатаНачала); 
			СтруктураПараметра.Вставить("КонецПериода"	, Вариант.ДатаОкончания); 
			МассивПараметров.Добавить(СтруктураПараметра);
			
			ТекстОтвета = ВыполнитьКомандуТелеграм(ИмяКоманды, стрЧата.Чат, МассивПараметров);
			
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат ТекстОтвета;

КонецФункции

Функция КомандаСПроизвольнымПериодом(РазделительныйМассив, КоличествоЭлементов, Чат)

	МассивПараметров = Новый Массив;
	
	Попытка
		
		МассивДат = СтрРазделить(СокрЛП(РазделительныйМассив[0]), ":", Ложь);
		
		Если МассивДат.Количество() = 2 Тогда
		
			НачалоПериода 	= Дата(СтрЗаменить(МассивДат[0],".",""));
			КонецПериода 	= Дата(СтрЗаменить(МассивДат[1],".",""));
			
			СтруктураПараметра = Новый Структура;
			СтруктураПараметра.Вставить("НачалоПериода"	, НачалоПериода); 
			СтруктураПараметра.Вставить("КонецПериода"	, КонецПериода);
			
		Иначе
			
			Период = Дата(СтрЗаменить(МассивДат[0],".",""));
			
			СтруктураПараметра = Новый Структура("Период", Период); 
			
		КонецЕсли; 
		
		ИмяКоманды = "/"+РазделительныйМассив[1];
		
		МассивПараметров.Добавить(СтруктураПараметра);
		
	Исключение
		ТекстОтвета = Нстр("ru = 'Не удалось преобразовать дату, повторите попытку.'");
		Возврат ТекстОтвета;
	КонецПопытки; 
	
	ТекстОтвета = ВыполнитьКомандуТелеграм(ИмяКоманды, Чат, МассивПараметров);
	
	Возврат ТекстОтвета;
	
КонецФункции

Функция НовыйСписокСоВсемиКомандами(ТаблицаКоманд)

	ТекстОтвета = "";
	
	Для каждого ком Из ТаблицаКоманд Цикл
	
		ТекстОтвета = ТекстОтвета + ком.Наименование + " " + ком.Определение + Символы.ПС;
	
	КонецЦикла; 
	
	ТекстОтвета = ТекстОтвета + "/help" + " " + "Помощь" + Символы.ПС;
	ТекстОтвета = ТекстОтвета + "/hideKeyboard" + " " + "Скрыть нижнюю клавиатуру" + Символы.ПС;
	
	Возврат ТекстОтвета;

КонецФункции
 
#КонецОбласти 

Функция НовыеНастройкиПрокси(СтрНастройки) 

	Если СтрНастройки = Неопределено Тогда
		Возврат Неопределено;	
	КонецЕсли; 
	
	Если СтрНастройки.ВключитьПрокси Тогда
	
		Прокси = Новый ИнтернетПрокси();
		
		Если СтрНастройки.АутентификацияОС Тогда
			Прокси.Установить("https", СтрНастройки.Сервер, СтрНастройки.Порт);
		Иначе	
			Прокси.Установить("https", СтрНастройки.Сервер, СтрНастройки.Порт, СтрНастройки.Логин, СтрНастройки.Пароль, Ложь);
		КонецЕсли; 
		
	Иначе	
		Прокси = Неопределено;
	КонецЕсли; 

	Возврат Прокси;
	
КонецФункции // СформироватьНастройкиПрокси()

Функция НайтиЧат(НомерЧата)
	
	СтрЧата = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЧатИД", НомерЧата);
	Запрос.Текст = "ВЫБРАТЬ
	               |	бит_ЧатыTelegram.Ссылка КАК Чат,
	               |	бит_ЧатыTelegram.СтатусРегистрации
	               |ИЗ
	               |	Справочник.бит_ЧатыTelegram КАК бит_ЧатыTelegram
	               |ГДЕ
	               |	бит_ЧатыTelegram.ИД = &ЧатИД
	               |	И бит_ЧатыTelegram.ПометкаУдаления = ЛОЖЬ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		СтрЧата = Новый Структура;
		СтрЧата.Вставить("СтатусРегистрации", Выборка.СтатусРегистрации);
		СтрЧата.Вставить("Чат"				, Выборка.Чат);
	КонецЕсли;
	
	Возврат СтрЧата;
	
КонецФункции

Процедура НоваяЗаписьВРеестрОбмена(стрСообщенияТелеграм)
	
	СообщениеИД 		= стрСообщенияТелеграм.СообщениеИД;
	ВидЗапросаТелеграм 	= стрСообщенияТелеграм.ВидЗапросаТелеграм;
	Сообщение 			= стрСообщенияТелеграм.Сообщение;
	Состояние 			= стрСообщенияТелеграм.Состояние;
	ДатаОтправки 		= стрСообщенияТелеграм.ДатаОтправки;
	
	Если стрСообщенияТелеграм.Свойство("Чат") Тогда
		
		ЧатТелеграм = стрСообщенияТелеграм.Чат;
		
	ИначеЕсли стрСообщенияТелеграм.Свойство("ЧатИД") Тогда
		
		стрЧата = НайтиЧат(стрСообщенияТелеграм.ЧатИД);
		Если стрЧата = Неопределено Тогда
		
			ЧатТелеграм = Справочники.бит_ЧатыTelegram.ПустаяСсылка();
		Иначе	
			ЧатТелеграм = стрЧата.Чат;
		КонецЕсли; 
		
	Иначе	
		ЧатТелеграм = Справочники.бит_ЧатыTelegram.ПустаяСсылка();
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.бит_РеестрОбменаСТелеграм.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Чат.Установить(ЧатТелеграм);
	НаборЗаписей.Отбор.ВидЗапросаТелеграм.Установить(ВидЗапросаТелеграм);
	НаборЗаписей.Отбор.СообщениеИД.Установить(СообщениеИД);
	
	НоваяЗапись              		= НаборЗаписей.Добавить();
	НоваяЗапись.Чат				 	= ЧатТелеграм;
	НоваяЗапись.ВидЗапросаТелеграм 	= ВидЗапросаТелеграм;
	НоваяЗапись.СообщениеИД 		= СообщениеИД;
	НоваяЗапись.Сообщение 		 	= Сообщение;
	НоваяЗапись.Состояние 		 	= Состояние;
	НоваяЗапись.ДатаОтправки 		= ДатаОтправки;
	Попытка
	
		НаборЗаписей.Записать();
	
	Исключение
		
	КонецПопытки; 
	
	Если стрСообщенияТелеграм.Свойство("ОтветноеСообщение") Тогда
		
		НаборЗаписей = РегистрыСведений.бит_РеестрОбменаСТелеграм.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Чат.Установить(ЧатТелеграм);
		НаборЗаписей.Отбор.ВидЗапросаТелеграм.Установить(ВидЗапросаТелеграм);
		НаборЗаписей.Отбор.СообщениеИД.Установить(СообщениеИД+1);
		
		НоваяЗапись              		= НаборЗаписей.Добавить();
		НоваяЗапись.Чат				 	= ЧатТелеграм;
		НоваяЗапись.ВидЗапросаТелеграм 	= ВидЗапросаТелеграм;
		НоваяЗапись.СообщениеИД 		= СообщениеИД+1;
		НоваяЗапись.Сообщение 		 	= стрСообщенияТелеграм.ОтветноеСообщение;
		НоваяЗапись.Состояние 		 	= Перечисления.бит_ВидыСостоянийТелеграм.Отправлено;
		НоваяЗапись.ДатаОтправки 		= ТекущаяДатаСеанса();
		Попытка
		
			НаборЗаписей.Записать();
		
		Исключение
		
		КонецПопытки; 
		
	КонецЕсли;

КонецПроцедуры

Процедура ОповеститьСлужебныеЧаты(БотТелеграм, стрСообщенияТелеграм, ИмяПользователяЧата, ЭтоРегистрация=Ложь, ЭтоПомощь=Ложь)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Помощь"		, ЭтоПомощь);
	Запрос.УстановитьПараметр("Регистрация"	, ЭтоРегистрация);
	Запрос.УстановитьПараметр("Бот"			, БотТелеграм);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЧатыДляСлужебныхОповещений.Чат,
	               |	ЧатыДляСлужебныхОповещений.Чат.Наименование КАК Имя
	               |ИЗ
	               |	РегистрСведений.бит_ЧатыДляСлужебныхОповещенийТелеграм КАК ЧатыДляСлужебныхОповещений
	               |ГДЕ
	               |	ЧатыДляСлужебныхОповещений.Помощь = &Помощь
	               |	И ЧатыДляСлужебныхОповещений.Бот = &Бот
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЧатыДляСлужебныхОповещений.Чат,
	               |	ЧатыДляСлужебныхОповещений.Чат.Наименование
	               |ИЗ
	               |	РегистрСведений.бит_ЧатыДляСлужебныхОповещенийТелеграм КАК ЧатыДляСлужебныхОповещений
	               |ГДЕ
	               |	ЧатыДляСлужебныхОповещений.Регистрация = &Регистрация
	               |	И ЧатыДляСлужебныхОповещений.Бот = &Бот";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		стрСообщенияТелеграмИсходящее = Новый Структура();
		
		Если ЭтоРегистрация Тогда
		
			ТекстСообщения = Нстр("ru = 'Чат %1 отправил запрос на регистрацию.'");
			стрСообщенияТелеграмИсходящее.Вставить("ВидЗапросаТелеграм"	, Перечисления.бит_ВидыЗапросовТелеграм.РегистрацияЧата);
		Иначе	
			ТекстСообщения = Нстр("ru = 'Чату %1 нужна помощь.'");
			стрСообщенияТелеграмИсходящее.Вставить("ВидЗапросаТелеграм"	, Перечисления.бит_ВидыЗапросовТелеграм.ПомощьЧату);
		КонецЕсли; 
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1", ИмяПользователяЧата);
		
		стрСообщенияТелеграмИсходящее.Вставить("Состояние"			, Перечисления.бит_ВидыСостоянийТелеграм.ОжидаетОтправления);
		стрСообщенияТелеграмИсходящее.Вставить("Чат"				, Выборка.Чат);
		стрСообщенияТелеграмИсходящее.Вставить("СообщениеИД"		, стрСообщенияТелеграм.СообщениеИД+2);
		стрСообщенияТелеграмИсходящее.Вставить("Сообщение"			, ТекстСообщения);
		стрСообщенияТелеграмИсходящее.Вставить("ДатаОтправки"		, ТекущаяДатаСеанса());
		
		НоваяЗаписьВРеестрОбмена(стрСообщенияТелеграмИсходящее);
		
	КонецЦикла;
	
КонецПроцедуры

Функция НовоеИДСообщенияДляОтправки()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	бит_РеестрОбменаСТелеграм.СообщениеИД КАК СообщениеИД
	|ИЗ
	|	РегистрСведений.бит_РеестрОбменаСТелеграм КАК бит_РеестрОбменаСТелеграм
	|
	|УПОРЯДОЧИТЬ ПО
	|	СообщениеИД УБЫВ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ИДСообщения = Выборка.СообщениеИД+1;
	
	КонецЦикла;
	
	ИДСообщения = ?(ЗначениеЗаполнено(ИДСообщения), ИДСообщения, 1);
	
	Возврат ИДСообщения;
	
КонецФункции

Процедура ОтправитьКонтактПоСлужебнымЧатам(БотТелеграм, НомерТелефона, ИмяПользователяЧата)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Бот", БотТелеграм);
	Запрос.Текст = "ВЫБРАТЬ
	|	ЧатыДляСлужебныхОповещений.Чат,
	|	ЧатыДляСлужебныхОповещений.Чат.ИД
	|ИЗ
	|	РегистрСведений.бит_ЧатыДляСлужебныхОповещенийТелеграм КАК ЧатыДляСлужебныхОповещений
	|ГДЕ
	|	ЧатыДляСлужебныхОповещений.Помощь = ИСТИНА
	|	И ЧатыДляСлужебныхОповещений.Бот = &Бот";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОтправитьКонтактыБоту(БотТелеграм.Токен, Формат(Выборка.ЧатИД,"ЧГ=0"),НомерТелефона,ИмяПользователяЧата);
	КонецЦикла;	

КонецПроцедуры

Процедура ОтправитьКонтактыБоту(ТокенБота, ЧатИД, НомерТелефона, ИмяПользователя)
	
	СоединениеТелеграм = НовоеHTTPСоединение();
	
	ЗапросТелеграм = Новый HTTPЗапрос("/bot"+ТокенБота+"/sendContact?chat_id="+Формат(ЧатИД, "ЧГ=0")+"&phone_number="+НомерТелефона+"&first_name="+ИмяПользователя);
	РезультатЗапроса = СоединениеТелеграм.ОтправитьДляОбработки(ЗапросТелеграм);
	
КонецПроцедуры

Функция ДоступныеКомандыЧату(Чат)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Чат", Чат);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	""/"" + КомандаБоту.Наименование КАК Наименование,
	               |	""/"" + КомандаБоту.НаименованиеВВерхнемРегистре КАК НаименованиеВРег,
	               |	КомандаБоту.Определение КАК Определение,
	               |	КомандаБоту.ТекстКлавиатуры КАК ТекстКлавиатуры,
	               |	КомандаБоту.Запрос КАК Запрос,
	               |	КомандаБоту.ИспользоватьТолькоПериод КАК ИспользоватьТолькоПериод,
	               |	КомандаБоту.ИспользоватьНачалоИКонецПериода КАК ИспользоватьНачалоИКонецПериода,
	               |	ДоступныеКоманды.НомерСтроки,
	               |	КомандаБоту.Параметры.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		Наименование,
	               |		Значение
	               |	)
	               |ИЗ
	               |	Справочник.бит_ЧатыTelegram.ДоступныеКоманды КАК ДоступныеКоманды
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_КомандыБотуТелеграм КАК КомандаБоту
	               |		ПО ДоступныеКоманды.КомандаТелеграм = КомандаБоту.Ссылка
	               |ГДЕ
	               |	ДоступныеКоманды.Ссылка = &Чат";
				   
	ТаблицаКоманд = Запрос.Выполнить().Выгрузить();

	Возврат ТаблицаКоманд;
	
КонецФункции

Функция ДоступныеВариантыДатыНачала()

	ОписаниеСтрока = Новый ОписаниеТипов("Строка");
	
	ТаблицаВариантов = Новый ТаблицаЗначений;
	ТаблицаВариантов.Колонки.Добавить("Наименование"   ,ОписаниеСтрока);
	ТаблицаВариантов.Колонки.Добавить("ТекстКлавиатуры",ОписаниеСтрока);
	
	Для каждого эл Из ВариантСтандартнойДатыНачала Цикл
		
		Если эл = ВариантСтандартнойДатыНачала.НачалоЭтогоДня
			ИЛИ эл = ВариантСтандартнойДатыНачала.НачалоЭтойНедели
			ИЛИ эл = ВариантСтандартнойДатыНачала.НачалоЭтогоМесяца
			ИЛИ эл = ВариантСтандартнойДатыНачала.НачалоЭтогоКвартала
			ИЛИ эл = ВариантСтандартнойДатыНачала.НачалоЭтогоГода
			ИЛИ эл = ВариантСтандартнойДатыНачала.ПроизвольнаяДата
			Тогда
		
			СтрокаТаблицы = ТаблицаВариантов.Добавить();
			СтрокаТаблицы.Наименование 		= СтрЗаменить(эл, " ", "")+"/Дата";
			СтрокаТаблицы.ТекстКлавиатуры 	= эл;
		
		КонецЕсли; 
	
	КонецЦикла; 

	Возврат ТаблицаВариантов;
	
КонецФункции

Функция ДоступныеВариантыПериода()

	ОписаниеСтрока = Новый ОписаниеТипов("Строка");
	
	ТаблицаВариантов = Новый ТаблицаЗначений;
	ТаблицаВариантов.Колонки.Добавить("Наименование"   ,ОписаниеСтрока);
	ТаблицаВариантов.Колонки.Добавить("ТекстКлавиатуры",ОписаниеСтрока);
	
	Для каждого эл Из ВариантСтандартногоПериода Цикл
		
		Если эл = ВариантСтандартногоПериода.Сегодня
			ИЛИ эл = ВариантСтандартногоПериода.ЭтаНеделя
			ИЛИ эл = ВариантСтандартногоПериода.ЭтотМесяц
			ИЛИ эл = ВариантСтандартногоПериода.ЭтотКвартал
			ИЛИ эл = ВариантСтандартногоПериода.ЭтотГод
			ИЛИ эл = ВариантСтандартногоПериода.ПроизвольныйПериод
			Тогда
		
			СтрокаТаблицы = ТаблицаВариантов.Добавить();
			СтрокаТаблицы.Наименование 		= СтрЗаменить(эл, " ", "")+"/Период";
			СтрокаТаблицы.ТекстКлавиатуры 	= эл;
		
		КонецЕсли; 
	
	КонецЦикла; 

	Возврат ТаблицаВариантов;
	
КонецФункции

Функция НовыйТекстКлавиатурыСДоступнымиКомандами(ТаблицаКнопок, ЭтоКоманды)

	КоличествоКоманд = ТаблицаКнопок.Количество();
	Если КоличествоКоманд = 0 Тогда
		Возврат Символы.ПС+Нстр("ru = 'Нет доступных команд вашему чату. Назначить их можно в справочнике Чаты Telegram.'");
	КонецЕсли; 
	
	Если ЭтоКоманды Тогда
	
		ТаблицаКнопок.Сортировать("ТекстКлавиатуры Убыв");
	
	КонецЕсли; 
	
	ТекстКлавиатуры = "&reply_markup={""inline_keyboard"":[[";
	
	Сч=0;
	счетчик = 0;
	КоличествоКомандВСтроке = 2;
	Если ЭтоКоманды Тогда
	
		МаксимальноеКоличествоКоманд = 9;
	Иначе	
		МаксимальноеКоличествоКоманд = 25;
	КонецЕсли; 
	МаксимальнаяДлинаТекстаКлавиатуры = 25;
	Для каждого СтрКоманды Из ТаблицаКнопок Цикл
		
		счетчик = счетчик + 1;
		Если счетчик < МаксимальноеКоличествоКоманд Тогда
			
			Если СтрДлина(СтрКоманды.ТекстКлавиатуры)>МаксимальнаяДлинаТекстаКлавиатуры Тогда
				Сч=КоличествоКомандВСтроке-1;
			КонецЕсли; 
			
			ТекстКлавиатуры = ТекстКлавиатуры + "{""text"":""" + СтрКоманды.ТекстКлавиатуры + """,""callback_data"":""" + СтрКоманды.Наименование + """}";
		Иначе  	
			ТекстКлавиатуры = ТекстКлавиатуры + "{""text"":""Больше команд"",""callback_data"":""/more""}]";
			Прервать;
		КонецЕсли; 
		
		Если КоличествоКоманд=счетчик Тогда
		
			ТекстКлавиатуры = ТекстКлавиатуры + "]";
			Прервать;
		КонецЕсли; 
		
		Если КоличествоКомандВСтроке=Сч+1 Тогда
		
			ТекстКлавиатуры = ТекстКлавиатуры + "],[";
			Сч=0;
		Иначе
		
			ТекстКлавиатуры = ТекстКлавиатуры + ",";
			Сч=Сч+1;
		КонецЕсли; 
		
	КонецЦикла; 
	
	ТекстКлавиатуры = ТекстКлавиатуры + "]}";
	
	Возврат ТекстКлавиатуры;
	
КонецФункции

Функция ВыполнитьКомандуТелеграм(ИмяКоманды, Чат, МассивПараметров)

	ТекстОтвета = "";
	ТаблицаКоманд = ДоступныеКомандыЧату(Чат);
	
	СтрОтбор = Новый Структура("НаименованиеВРег", ВРег(ИмяКоманды)); 
	МассивСтрок = ТаблицаКоманд.НайтиСтроки(СтрОтбор);
	
	Если МассивСтрок.Количество()>0 Тогда
	
		СтрокаКоманды = МассивСтрок[0];
		
		Если ЗначениеЗаполнено(СтрокаКоманды.Запрос) Тогда
			
			Если СтрокаКоманды.ИспользоватьТолькоПериод
				И МассивПараметров.Количество()=0 Тогда
				
				ТекстОтвета = Нстр("ru = 'Выберете вариант для '")+СтрокаКоманды.Наименование+НовыйТекстКлавиатурыСДоступнымиКомандами(ДоступныеВариантыДатыНачала(),Ложь);
				
			ИначеЕсли СтрокаКоманды.ИспользоватьНачалоИКонецПериода	
				И МассивПараметров.Количество()=0 Тогда
				
				ТекстОтвета = Нстр("ru = 'Выберете вариант для '")+СтрокаКоманды.Наименование+НовыйТекстКлавиатурыСДоступнымиКомандами(ДоступныеВариантыПериода(),Ложь);
				
			Иначе
				Попытка
					
					Запрос = Новый Запрос;
					Запрос.Текст = СтрокаКоманды.Запрос;
					
					// Приходящие параметры
					Для каждого парам Из МассивПараметров Цикл
						
						Для каждого стр Из парам Цикл
						
							Запрос.УстановитьПараметр(стр.Ключ, стр.Значение);
						
						КонецЦикла; 
					
					КонецЦикла; 
					
					// Параметры команды
					Для каждого парам Из СтрокаКоманды.Параметры Цикл
						
						Если СтрНайти(парам.Значение, "ТекущаяДатаСеанса()")>0 Тогда
						
							Запрос.УстановитьПараметр(парам.Наименование, НачалоДня(ТекущаяДатаСеанса()));
						Иначе	
							Запрос.УстановитьПараметр(парам.Наименование, парам.Значение);
						КонецЕсли; 
					КонецЦикла; 
					
					Результат = Запрос.Выполнить();
					Выборка = Результат.Выбрать();
					
					Пока Выборка.Следующий() Цикл
					
						Для каждого КолонкаЗапроса Из Результат.Колонки Цикл
							
							Если СтрНайти(КолонкаЗапроса.Имя, "Сумма")>0 Тогда
							
								ТекстОтвета = ТекстОтвета + " " + Формат(Выборка[КолонкаЗапроса.Имя], "ЧДЦ=2");
								
							Иначе	
								ТекстОтвета = ТекстОтвета + " " + Выборка[КолонкаЗапроса.Имя];
							КонецЕсли; 
						
						КонецЦикла; 
						
						ТекстОтвета = ТекстОтвета + Символы.ПС;
						
					КонецЦикла;
					
					Если Результат.Пустой() Тогда
					
						ТекстОтвета = Нстр("ru = 'Нет данных.'");
					
					КонецЕсли; 
					
				Исключение
					ТекстОтвета = Нстр("ru = 'Не удалось получить данные.'");
				КонецПопытки; 
			
			КонецЕсли; 
			
		Иначе	
			
			ТекстОтвета = Нстр("ru = 'Не заполнен текст запроса команды.'");
		
		КонецЕсли; 
		
	КонецЕсли; 

	Возврат ТекстОтвета;
	
КонецФункции

#КонецОбласти 

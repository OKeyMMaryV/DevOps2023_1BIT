////////////////////////////////////////////////////////////////////////////////
// Переопределяемые процедуры, вызываемые из обработчиков форм, таких как:
// "ПриСозданииНаСервере", "ПриЧтенииНаСервере", "ПередЗаписьюНаСервере", 
// "ПослеЗаписи", а также при изменении некоторых реквизитов табличной части,
// таких как "Номенклатура", "Характеристика".
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ЗаполнениеОбработчиковФормы

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//   Форма - форма, из обработчика события которой происходит вызов процедуры.
//  см. справочную информацию по событиям управляемой формы.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	#Область НТПиМП
	//ОКЕЙ Беднягин Е.А. (ПервыйБИТ) Начало 2021-04-03 (#НТП_БП06_ФР01, #НТП_БП06_ФР02)
	Если Форма.ИмяФормы = "Документ.КорректировкаДолга.Форма.ФормаДокумента" Тогда
		
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ок_ЭтоПереносЗадолженностиПоставщику", Новый ОписаниеТипов("Булево")));		
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ок_ФВБ", Новый ОписаниеТипов("ДокументСсылка.бит_ФормаВводаБюджета")));
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
		
		Форма.УстановитьДействие("ОбработкаВыбора", "Подключаемый_ОбработкаВыбора");
		Форма.Элементы.ТаблицаДебиторскаяЗадолженностьСделка.УстановитьДействие("ПриИзменении", "Подключаемый_ТаблицаДебиторскаяЗадолженностьСделкаПриИзменении");
		
		КомандаФормы = Форма.Команды.Добавить("ок_ПодборОстатковПоВзаиморасчетам");
		КомандаФормы.Действие = "Подключаемый_ПодборОстатковПоВзаиморасчетам";
		КомандаФормы.Заголовок = НСтр("ru = 'Подбор остатков по взаиморасчетам'");
		
		КнопкаФормы = Форма.Элементы.Добавить("ок_ПодборОстатковПоВзаиморасчетам", Тип("КнопкаФормы"), Форма.Элементы.ТаблицаКредиторскаяЗадолженностьЗаполнить);
		КнопкаФормы.ИмяКоманды = "ок_ПодборОстатковПоВзаиморасчетам";
	КонецЕсли;	
	//ОКЕЙ Беднягин Е.А. (ПервыйБИТ) Конец 2021-04-03 (#НТП_БП06_ФР01, #НТП_БП06_ФР02)
	
	//ОКЕЙ Первухин В.С. (ПервыйБИТ) Начало 2021-07-13 (ФР-МП-08)      
	Если Форма.ИмяФормы = "Обработка.СБ_ВыгрузкаБанковскихВыписокВAXAPTA.Форма.Форма" Тогда
		КомандаПодобратьСписокБанковскихВыписок 			=	Форма.Команды.Добавить("ок_ПодобратьСписокБанковскихВыписок");
		КомандаПодобратьСписокБанковскихВыписок.Действие 	=	"Подключаемый_ПодобратьСписокБанковскихВыписок";
		КомандаПодобратьСписокБанковскихВыписок.Заголовок	=	НСтр("ru = 'Подбор'");
		
		ЭлементПодобратьСписокБанковскихВыписок 			=	Форма.Элементы.Добавить("ок_ПодобратьСписокБанковскихВыписок", Тип("КнопкаФормы"), 
																	Форма.Элементы.СписокБанковскихВыписок.КоманднаяПанель);
		ЭлементПодобратьСписокБанковскихВыписок.Вид			=	ВидКнопкиФормы.ОбычнаяКнопка;
		ЭлементПодобратьСписокБанковскихВыписок.ИмяКоманды	=	"ок_ПодобратьСписокБанковскихВыписок";
	КонецЕсли;
	//ОКЕЙ Первухин В.С. (ПервыйБИТ) Конец 2021-07-13 (ФР-МП-08)

	#КонецОбласти
		
	#Область БП05 
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Начало 2021-02-16 (#ТП_БП05_ФР02)
	// Вывод новых реквизитов на типовую форму элемента справочника.
	Если Форма.ИмяФормы = "Справочник.ДенежныеДокументы.Форма.ФормаЭлемента" Тогда
		ПолеВидРасхода				=	Форма.Элементы.Вставить("ок_ВидРасхода", Тип("ПолеФормы"), Форма, Форма.Элементы.Стоимость);	      
		ПолеВидРасхода.Заголовок	=	НСтр("ru = 'Вид расхода'");
		ПолеВидРасхода.Вид			=	ВидПоляФормы.ПолеВвода;
		ПолеВидРасхода.ПутьКДанным	=	"Объект.ок_ВидРасхода";
		ПолеВидРасхода.УстановитьДействие("ПриИзменении", "Подключаемый_ВидРасходаПриИзменении");
		
		ПолеНомерБилета				=	Форма.Элементы.Вставить("ок_НомерБилета", Тип("ПолеФормы"), Форма, Форма.Элементы.Стоимость);	      
		ПолеНомерБилета.Заголовок	=	НСтр("ru = 'Номер билета'");
		ПолеНомерБилета.Вид			=	ВидПоляФормы.ПолеВвода;
		ПолеНомерБилета.ПутьКДанным	=	"Объект.ок_НомерБилета";
		ПолеНомерБилета.УстановитьДействие("ПриИзменении", "Подключаемый_НомерБилетаПриИзменении");
		
		ПолеДатаБилета				=	Форма.Элементы.Вставить("ок_ДатаБилета", Тип("ПолеФормы"), Форма, Форма.Элементы.Стоимость);	      
		ПолеДатаБилета.Заголовок	=	НСтр("ru = 'Дата билета'");
		ПолеДатаБилета.Вид			=	ВидПоляФормы.ПолеВвода;
		ПолеДатаБилета.ПутьКДанным	=	"Объект.ок_ДатаБилета";
		ПолеДатаБилета.УстановитьДействие("ПриИзменении", "Подключаемый_ДатаБилетаПриИзменении");
		
		ПолеМаршрут				=	Форма.Элементы.Вставить("ок_Маршрут", Тип("ПолеФормы"), Форма, Форма.Элементы.Стоимость);	      
		ПолеМаршрут.Заголовок	=	НСтр("ru = 'Маршрут'");
		ПолеМаршрут.Вид			=	ВидПоляФормы.ПолеВвода;
		ПолеМаршрут.ПутьКДанным	=	"Объект.ок_Маршрут";
		ПолеМаршрут.УстановитьДействие("ПриИзменении", "Подключаемый_МаршрутПриИзменении");
		
		ПолеПодотчетноеЛицо				=	Форма.Элементы.Вставить("ок_ПодотчетноеЛицо", Тип("ПолеФормы"), Форма, Форма.Элементы.Стоимость);	      
		ПолеПодотчетноеЛицо.Заголовок	=	НСтр("ru = 'Подотчетное лицо'");
		ПолеПодотчетноеЛицо.Вид			=	ВидПоляФормы.ПолеВвода;
		ПолеПодотчетноеЛицо.ПутьКДанным	=	"Объект.ок_ПодотчетноеЛицо";
		ПолеПодотчетноеЛицо.УстановитьДействие("ПриИзменении", "Подключаемый_ПодотчетноеЛицоПриИзменении");

		
		ГруппаСтоимостьНДС						=	Форма.Элементы.Вставить("ок_ГруппаСтоимостьНДС", Тип("ГруппаФормы"), Форма, Форма.Элементы.Стоимость);
		ГруппаСтоимостьНДС.Вид					=	ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСтоимостьНДС.ОтображатьЗаголовок	=	Ложь;
		ГруппаСтоимостьНДС.Отображение			=	ОтображениеОбычнойГруппы.Нет;
		ГруппаСтоимостьНДС.Группировка			=	ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		
		ПолеНДС				=	Форма.Элементы.Добавить("ок_НДС", Тип("ПолеФормы"), Форма.Элементы.ок_ГруппаСтоимостьНДС);	      
		ПолеНДС.Заголовок	=	НСтр("ru = 'НДС'");
		ПолеНДС.Вид			=	ВидПоляФормы.ПолеВвода;
		ПолеНДС.ПутьКДанным	=	"Объект.ок_НДС";
		
		ПолеСтоимость = Форма.Элементы.Стоимость;
		Форма.Элементы.Переместить(ПолеСтоимость, Форма.Элементы.ок_ГруппаСтоимостьНДС, ПолеНДС);
	КонецЕсли;
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Конец 2021-02-16 (#ТП_БП05_ФР02)
	
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Начало 2021-02-17 (#ТП_БП05_ФР04)
	Если Форма.ИмяФормы = "Документ.ПоступлениеДенежныхДокументов.Форма.ФормаДокумента" Тогда
		ПолеПодотчетноеЛицо				=	Форма.Элементы.Добавить("ок_ДенежныеДокументыПодотчетноеЛицо", Тип("ПолеФормы"), Форма.Элементы.ДенежныеДокументы);	      
		ПолеПодотчетноеЛицо.Заголовок	=	НСтр("ru = 'Подотчетное лицо'");
		ПолеПодотчетноеЛицо.Вид			=	ВидПоляФормы.ПолеВвода;
		ПолеПодотчетноеЛицо.ПутьКДанным	=	"Объект.ДенежныеДокументы.ок_ПодотчетноеЛицо";
		
		КомандаСоздатьНаОснованииВыдачаДД			=	Форма.Команды.Добавить("ок_СоздатьНаОснованииВыдачаДД");
		КомандаСоздатьНаОснованииВыдачаДД.Действие	=	"Подключаемый_СоздатьНаОснованииВыдачаДД";
		КомандаСоздатьНаОснованииВыдачаДД.Заголовок	=	НСтр("ru = 'Создать выдачу ден.документов'");
		
		ЭлементСоздатьНаОснованииВыдачаДД				=	Форма.Элементы.Добавить("ок_СоздатьНаОснованииВыдачаДД", Тип("КнопкаФормы"), 
																Форма.КоманднаяПанель.ПодчиненныеЭлементы.ГруппаКнопкиКоманднойПанели.ПодчиненныеЭлементы.ГруппаВажныеКоманды);
		ЭлементСоздатьНаОснованииВыдачаДД.Вид			=	ВидКнопкиФормы.ОбычнаяКнопка;
		ЭлементСоздатьНаОснованииВыдачаДД.ИмяКоманды	=	"ок_СоздатьНаОснованииВыдачаДД";
	КонецЕсли;
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Конец 2021-02-17 (#ТП_БП05_ФР04)
	
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Начало 2021-03-14 (#ТП_БП05_ФР07, #ТП_БП05_ФР08)
	Если Форма.ИмяФормы = "Документ.бит_ЗаявкаНаРасходованиеСредств.Форма.ФормаДокумента" Тогда
		ПолеНеФормироватьПлатежноеПоручение				=	Форма.Элементы.Вставить("ОК_НеФормироватьПлатежноеПоручение", Тип("ПолеФормы"), 
																Форма.Элементы.ГруппаДополнительно, Форма.Элементы.НазначениеПлатежа_Список);	      
		ПолеНеФормироватьПлатежноеПоручение.Заголовок	=	НСтр("ru = 'Не формировать платежное поручение'");
		ПолеНеФормироватьПлатежноеПоручение.Вид			=	ВидПоляФормы.ПолеФлажка;
		ПолеНеФормироватьПлатежноеПоручение.ПутьКДанным	=	"Объект.ОК_НеФормироватьПлатежноеПоручение";
		
		ПолеРаспределениеПрогнозПлатежа					=	Форма.Элементы.Добавить("Распределениеок_ПрогнозПлатежа", Тип("ПолеФормы"), Форма.Элементы.Распределение);	      
		ПолеРаспределениеПрогнозПлатежа.Заголовок		=	НСтр("ru = 'Прогноз платежа'");
		ПолеРаспределениеПрогнозПлатежа.Вид				=	ВидПоляФормы.ПолеВвода;
		ПолеРаспределениеПрогнозПлатежа.ПутьКДанным		=	"Объект.Распределение.ок_ПрогнозПлатежа";
		ПолеРаспределениеПрогнозПлатежа.ТолькоПросмотр	=	Истина;
		
		ЭлементСпособСоздания = Форма.Элементы.СпособСоздания;
		ЭлементСпособСоздания.СписокВыбора.Добавить(11,"11. Формирование ЗнРДС по подотчетным лицам");

	КонецЕсли;
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Конец 2021-03-14 (#ТП_БП05_ФР07, #ТП_БП05_ФР08)
	
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Начало 2021-04-26 (#ТП_БП05_ФР05)
	Если Форма.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаОбщая" Тогда
		ПолеПодотчетноеЛицо				=	Форма.Элементы.Вставить("ок_ПодотчетноеЛицо", Тип("ПолеФормы"), Форма.Элементы.Услуги, Форма.Элементы.УслугиНоменклатура);	      
		ПолеПодотчетноеЛицо.Заголовок	=	НСтр("ru = 'Подотчетное лицо'");
		ПолеПодотчетноеЛицо.Вид			=	ВидПоляФормы.ПолеВвода;
		ПолеПодотчетноеЛицо.ПутьКДанным	=	"Объект.Услуги.ок_ПодотчетноеЛицо";
		ПолеПодотчетноеЛицо.УстановитьДействие("ПриИзменении", "Подключаемый_ПодотчетноеЛицоПриИзменении");
	КонецЕсли;
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Конец 2021-04-26 (#ТП_БП05_ФР05)
	
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Начало 2021-05-06 (#ТП_БП05_ФР15) 	
	Если Форма.ИмяФормы = "Справочник.ФизическиеЛица.Форма.ФормаЭлемента" Тогда
		ЕстьПраво = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ок_ДанныеФизическихЛицБОСС);
		Если ЕстьПраво Тогда
			СтраницаДанныеФизЛицБОСС			= Форма.Элементы.Добавить("ок_СтраницаДанныеФизЛицБОСС", Тип("ГруппаФормы"), Форма.Элементы.Страницы);
			СтраницаДанныеФизЛицБОСС.Вид        = ВидГруппыФормы.Страница;
			СтраницаДанныеФизЛицБОСС.Заголовок  = НСтр("ru = 'Данные физ лиц БОСС'");
			
			ДобавляемыеРеквизиты	= Новый Массив;
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_ДанныеФизическихЛицБОСС", Новый ОписаниеТипов("ДинамическийСписок")));
			Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			
			Форма.ок_ДанныеФизическихЛицБОСС.ПроизвольныйЗапрос	=	Ложь;
			Форма.ок_ДанныеФизическихЛицБОСС.ОсновнаяТаблица	=	"РегистрСведений.ок_ДанныеФизическихЛицБОСС";
			
			Отбор					=	Форма.ок_ДанныеФизическихЛицБОСС.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Отбор.ВидСравнения		=	ВидСравненияКомпоновкиДанных.Равно;
			Отбор.ПравоеЗначение	=	Форма.ФизическоеЛицо.Ссылка;
			Отбор.ЛевоеЗначение		=	Новый ПолеКомпоновкиДанных("ФизическоеЛицо");
			Отбор.РежимОтображения	=	РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			Отбор.Использование		=	Истина;
			
			
			ЭлементСписок = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОСС", Тип("ТаблицаФормы"), СтраницаДанныеФизЛицБОСС);
			ЭлементСписок.ПутьКДанным                    = "ок_ДанныеФизическихЛицБОСС";
			ЭлементСписок.Отображение                    = ОтображениеТаблицы.Список;
			ЭлементСписок.ПоложениеУправленияПоиском     = ПоложениеУправленияПоиском.Нет;
			ЭлементСписок.ПоложениеУправленияПоиском     = ПоложениеУправленияПоиском.Нет;
			ЭлементСписок.ПоложениеСостоянияПросмотра    = ПоложениеСостоянияПросмотра.Нет;
			ЭлементСписок.ПоложениеСтрокиПоиска          = ПоложениеСтрокиПоиска.Нет;
			ЭлементСписок.ПоложениеКоманднойПанели       = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
			ЭлементСписок.ТолькоПросмотр = Истина;
			
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССПериод", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Период";
			НоваяКолонка.Видимость                  = Истина;      
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССФизическоеЛицо", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ФизическоеЛицо";
			НоваяКолонка.Видимость                  = Истина;  	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССТабельныйНомер", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ТабельныйНомер";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССОрганизация", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Организация";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССКодБОСС", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.КодБОСС";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССФамилия", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Фамилия";
			НоваяКолонка.Видимость                  = Истина;	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССИмя", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Имя";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССОтчество", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Отчество";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДатаРождения", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ДатаРождения";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССГражданство", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Гражданство";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОСССерияДокумента", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.СерияДокумента";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССНомерДокумента", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.НомерДокумента";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДатаВыдачиДокумента", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ДатаВыдачиДокумента";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССКемВыданДокумент", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.КемВыданДокумент";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДолжность", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Должность";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССФункция", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Функция";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССОбъект", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Объект";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДатаПриема", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ДатаПриема";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДатаУвольнения", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ДатаУвольнения";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССКодПриемаНаРаботу", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.КодПриемаНаРаботу";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССБИКБанка", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.БИКБанка";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССНомерРасчетногоСчета", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.НомерРасчетногоСчета";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССФункцияКод", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ФункцияКод";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССОбъектКод", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ОбъектКод";
			НоваяКолонка.Видимость                  = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Справочник.ФизическиеЛица.Форма.ФормаСписка" Тогда
		ДобавляемыеРеквизиты	= Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_Организация", Новый ОписаниеТипов("СправочникСсылка.Организации")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_ДанныеФизическихЛицБОСС", Новый ОписаниеТипов("ДинамическийСписок")));
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		ЭлементГруппаОрганизация =	Форма.Элементы.Вставить("ок_ГруппаОрганизация", Тип("ГруппаФормы"),, Форма.Элементы.Список);
		ЭлементГруппаОрганизация.Вид					=	ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппаОрганизация.Группировка			=	ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ЭлементГруппаОрганизация.ОтображатьЗаголовок	=	Ложь;
		
		ПолеОрганизация = Форма.Элементы.Вставить("ок_Организация", Тип("ПолеФормы"), Форма.Элементы.ок_ГруппаОрганизация);	      
		ПолеОрганизация.Заголовок							=	НСтр("ru = 'Организация'");
		ПолеОрганизация.Видимость							=	ЗначениеЗаполнено(Форма.ок_Организация);
		ПолеОрганизация.Вид									=	ВидПоляФормы.ПолеНадписи;
		ПолеОрганизация.ПутьКДанным							=	"ок_Организация";
		Форма.ок_ДанныеФизическихЛицБОСС.ПроизвольныйЗапрос	=	Истина;
		Форма.ок_ДанныеФизическихЛицБОСС.ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ок_ДанныеФизическихЛицБОСССрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(ок_ДанныеФизическихЛицБОСССрезПоследних.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследняяЗаписьПредв
		|ИЗ
		|	РегистрСведений.ок_ДанныеФизическихЛицБОСС.СрезПоследних КАК ок_ДанныеФизическихЛицБОСССрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ок_ДанныеФизическихЛицБОСССрезПоследних.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ок_ДанныеФизическихЛицБОСС.Период КАК Период,
		|	ок_ДанныеФизическихЛицБОСС.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ок_ДанныеФизическихЛицБОСС.ТабельныйНомер КАК ТабельныйНомер,
		|	ок_ДанныеФизическихЛицБОСС.Организация КАК Организация,
		|	ок_ДанныеФизическихЛицБОСС.КодБОСС КАК КодБОСС,
		|	ок_ДанныеФизическихЛицБОСС.Фамилия КАК Фамилия,
		|	ок_ДанныеФизическихЛицБОСС.Имя КАК Имя,
		|	ок_ДанныеФизическихЛицБОСС.Отчество КАК Отчество,
		|	ок_ДанныеФизическихЛицБОСС.ДатаРождения КАК ДатаРождения,
		|	ок_ДанныеФизическихЛицБОСС.Гражданство КАК Гражданство,
		|	ок_ДанныеФизическихЛицБОСС.СерияДокумента КАК СерияДокумента,
		|	ок_ДанныеФизическихЛицБОСС.НомерДокумента КАК НомерДокумента,
		|	ок_ДанныеФизическихЛицБОСС.ДатаВыдачиДокумента КАК ДатаВыдачиДокумента,
		|	ок_ДанныеФизическихЛицБОСС.КемВыданДокумент КАК КемВыданДокумент,
		|	ок_ДанныеФизическихЛицБОСС.Должность КАК Должность,
		|	ок_ДанныеФизическихЛицБОСС.Функция КАК Функция,
		|	ок_ДанныеФизическихЛицБОСС.Объект КАК Объект,
		|	ок_ДанныеФизическихЛицБОСС.ДатаПриема КАК ДатаПриема,
		|	ок_ДанныеФизическихЛицБОСС.ДатаУвольнения КАК ДатаУвольнения,
		|	ок_ДанныеФизическихЛицБОСС.КодПриемаНаРаботу КАК КодПриемаНаРаботу,
		|	ок_ДанныеФизическихЛицБОСС.БИКБанка КАК БИКБанка,
		|	ок_ДанныеФизическихЛицБОСС.НомерРасчетногоСчета КАК НомерРасчетногоСчета,
		|	ок_ДанныеФизическихЛицБОСС.ФункцияКод КАК ФункцияКод,
		|	ок_ДанныеФизическихЛицБОСС.ОбъектКод КАК ОбъектКод
		|ИЗ
		|	ВТ_ПоследняяЗаписьПредв КАК ВТ_ПоследняяЗаписьПредв
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ок_ДанныеФизическихЛицБОСС КАК ок_ДанныеФизическихЛицБОСС
		|		ПО (ок_ДанныеФизическихЛицБОСС.Период = ВТ_ПоследняяЗаписьПредв.Период)
		|			И (ок_ДанныеФизическихЛицБОСС.ФизическоеЛицо = ВТ_ПоследняяЗаписьПредв.ФизическоеЛицо)";
		
		Если Форма.Параметры.Свойство("ок_Организация") Тогда
			Форма.ок_Организация = Форма.Параметры.ок_Организация;
		КонецЕсли;
		
		ЕстьПраво = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ок_ДанныеФизическихЛицБОСС);
		Если ЕстьПраво Тогда
			КомандаЗагрузитьИзБОСС				=	Форма.Команды.Добавить("ок_ЗагрузитьИзБОСС");
			КомандаЗагрузитьИзБОСС.Действие		=	"Подключаемый_ЗагрузитьИзБОСС";
			КомандаЗагрузитьИзБОСС.Заголовок	=	НСтр("ru = 'Загрузить из БОСС'");
			
			ЭлементЗагрузитьИзБОСС = Форма.Элементы.Добавить("ок_ЗагрузитьИзБОСС", Тип("КнопкаФормы"),Форма.Элементы.ок_ГруппаОрганизация);
			ЭлементЗагрузитьИзБОСС.ИмяКоманды = "ок_ЗагрузитьИзБОСС";
			
			ЭлементСписок = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОСС", Тип("ТаблицаФормы"));
			ЭлементСписок.ПутьКДанным                    = "ок_ДанныеФизическихЛицБОСС";
			ЭлементСписок.Отображение                    = ОтображениеТаблицы.Список;
			ЭлементСписок.ПоложениеУправленияПоиском     = ПоложениеУправленияПоиском.Нет;
			ЭлементСписок.ПоложениеУправленияПоиском     = ПоложениеУправленияПоиском.Нет;
			ЭлементСписок.ПоложениеСостоянияПросмотра    = ПоложениеСостоянияПросмотра.Нет;
			ЭлементСписок.ПоложениеСтрокиПоиска          = ПоложениеСтрокиПоиска.Нет;
			ЭлементСписок.ПоложениеКоманднойПанели       = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
			ЭлементСписок.ТолькоПросмотр = Истина;
			
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССПериод", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Период";
			НоваяКолонка.Видимость                  = Истина;      
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССФизическоеЛицо", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ФизическоеЛицо";
			НоваяКолонка.Видимость                  = Истина;  	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССТабельныйНомер", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ТабельныйНомер";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССОрганизация", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Организация";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССКодБОСС", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.КодБОСС";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССФамилия", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Фамилия";
			НоваяКолонка.Видимость                  = Истина;	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССИмя", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Имя";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССОтчество", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Отчество";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДатаРождения", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ДатаРождения";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССГражданство", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Гражданство";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОСССерияДокумента", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.СерияДокумента";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССНомерДокумента", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.НомерДокумента";
			НоваяКолонка.Видимость                  = Истина; 	
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДатаВыдачиДокумента", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ДатаВыдачиДокумента";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССКемВыданДокумент", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.КемВыданДокумент";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДолжность", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Должность";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССФункция", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Функция";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССОбъект", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.Объект";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДатаПриема", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ДатаПриема";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССДатаУвольнения", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ДатаУвольнения";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССКодПриемаНаРаботу", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.КодПриемаНаРаботу";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССБИКБанка", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.БИКБанка";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССНомерРасчетногоСчета", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.НомерРасчетногоСчета";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССФункцияКод", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ФункцияКод";
			НоваяКолонка.Видимость                  = Истина;
			НоваяКолонка = Форма.Элементы.Добавить("ок_СписокДанныеФизическихЛицБОССОбъектКод", Тип("ПолеФормы"), ЭлементСписок);
			НоваяКолонка.ПутьКДанным                = "ок_ДанныеФизическихЛицБОСС.ОбъектКод";
			НоваяКолонка.Видимость                  = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Документ.АвансовыйОтчет.Форма.ФормаДокумента" Тогда
		Форма.Элементы.ФизЛицо.УстановитьДействие("НачалоВыбора", "Подключаемый_ФизЛицоНачалоВыбора");
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Конец 2021-05-06 (#ТП_БП05_ФР15) 	
		
		//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-05-19 (#ТП_БП05_ФР12, #ТП_БП05_ФР13)
		ДобавляемыеРеквизиты	= Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_ПредыдущийОстатокПерерасход", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15, 2))));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_ПолученоАвансов", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15, 2))));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_Израсходовано", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15, 2))));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_Остаток", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15, 2))));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_ИтогоПоАО", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15, 2))));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_НадписьДней", Новый ОписаниеТипов("Строка")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_ЕстьСуточные", Новый ОписаниеТипов("Булево")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_НормыСуточных", Новый ОписаниеТипов()));
		
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  
		
		// Вывод реквизитов в шапку
		ПолеОстаток = Форма.Элементы.Вставить("ок_ПредыдущийОстатокПерерасход", Тип("ПолеФормы"), Форма.Элементы.ГруппаШапкаПравая);	      
		ПолеОстаток.Заголовок = НСтр("ru = 'Предыдущий остаток/ Перерасход'");
		ПолеОстаток.Вид = ВидПоляФормы.ПолеВвода;
		ПолеОстаток.ПутьКДанным = "ок_ПредыдущийОстатокПерерасход";
		ПолеОстаток.ТолькоПросмотр = Истина;
		
		// Группа Итоги по регистру
		ЭлементГруппаИтоги = Форма.Элементы.ГруппаИтогиПоДокументу;
		ЭлементГруппаИтоги.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		
		ЭлементГруппаИтогиПоРегистру = Форма.Элементы.Вставить("ок_ГруппаИтогиПоРегистру", Тип("ГруппаФормы"), ЭлементГруппаИтоги);
		ЭлементГруппаИтогиПоРегистру.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппаИтогиПоРегистру.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ЭлементГруппаИтогиПоРегистру.ОтображатьЗаголовок = Истина;
		ЭлементГруппаИтогиПоРегистру.Заголовок = "Данные по регистру";
		ЭлементГруппаИтогиПоРегистру.ЦветФона = ЦветаСтиля.ИтогиФонГруппы;
		
		ПолеАвансы = Форма.Элементы.Вставить("ок_ПолученоАвансов", Тип("ПолеФормы"), ЭлементГруппаИтогиПоРегистру);	      
		ПолеАвансы.Заголовок = НСтр("ru = 'Получено авансов'");
		ПолеАвансы.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеАвансы.ПутьКДанным = "ок_ПолученоАвансов";
		ПолеАвансы.ТолькоПросмотр = Истина;
		
		ПолеИзрасходовано = Форма.Элементы.Вставить("ок_Израсходовано", Тип("ПолеФормы"), ЭлементГруппаИтогиПоРегистру);	      
		ПолеИзрасходовано.Заголовок = НСтр("ru = 'Израсходовано'");
		ПолеИзрасходовано.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеИзрасходовано.ПутьКДанным = "ок_Израсходовано";
		ПолеИзрасходовано.ТолькоПросмотр = Истина;
		
		ПолеОстаток = Форма.Элементы.Вставить("ок_Остаток", Тип("ПолеФормы"), ЭлементГруппаИтогиПоРегистру);	      
		ПолеОстаток.Заголовок = НСтр("ru = 'Остаток'");
		ПолеОстаток.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеОстаток.ПутьКДанным = "ок_Остаток";
		ПолеОстаток.ТолькоПросмотр = Истина;
		
		ПолеИтогоАО = Форма.Элементы.Вставить("ок_ИтогоПоАО", Тип("ПолеФормы"), ЭлементГруппаИтогиПоРегистру);	      
		ПолеИтогоАО.Заголовок = НСтр("ru = 'Итого по АО'");
		ПолеИтогоАО.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеИтогоАО.ПутьКДанным = "ок_ИтогоПоАО";
		ПолеИтогоАО.ТолькоПросмотр = Истина;
		
		// Группа Период
		ЭлементГруппаПериод = Форма.Элементы.Вставить("ок_ГруппаПериод", Тип("ГруппаФормы"), Форма.Элементы.ГруппаШапкаЛевая);
		ЭлементГруппаПериод.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппаПериод.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ЭлементГруппаПериод.ОтображатьЗаголовок = ложь;
		
		ПолеДатаНачалаКомандировки = Форма.Элементы.Вставить("ок_ДатаНачалаКомандировки", Тип("ПолеФормы"), ЭлементГруппаПериод);	      
		ПолеДатаНачалаКомандировки.Заголовок = НСтр("ru = 'Период с'");
		ПолеДатаНачалаКомандировки.Вид = ВидПоляФормы.ПолеВвода;
		ПолеДатаНачалаКомандировки.ПутьКДанным = "Объект.ДатаНачалаКомандировки";
		ПолеДатаНачалаКомандировки.УстановитьДействие("ПриИзменении", "Подключаемый_ДатаНачалаКомандировкиПриИзменении");  
		
		ПолеДатаОкончанияКомандировки = Форма.Элементы.Вставить("ок_ДатаОкончанияКомандировки", Тип("ПолеФормы"), ЭлементГруппаПериод);	      
		ПолеДатаОкончанияКомандировки.Заголовок = НСтр("ru = 'по'");
		ПолеДатаОкончанияКомандировки.Вид = ВидПоляФормы.ПолеВвода;
		ПолеДатаОкончанияКомандировки.ПутьКДанным = "Объект.ДатаОкончанияКомандировки";
		ПолеДатаОкончанияКомандировки.УстановитьДействие("ПриИзменении", "Подключаемый_ДатаОкончанияКомандировкиПриИзменении");
		
		КомандаВыбратьПериод = Форма.Команды.Добавить("ок_ВыбратьПериод");
		КомандаВыбратьПериод.Действие = "Подключаемый_ВыбратьПериод";
		КомандаВыбратьПериод.Заголовок = НСтр("ru = 'Выбрать период'");
		
		КнопкаВыбратьПериод = Форма.Элементы.Добавить("ок_ВыбратьПериод", Тип("КнопкаФормы"), ЭлементГруппаПериод);
		КнопкаВыбратьПериод.ИмяКоманды = "ок_ВыбратьПериод";
		КнопкаВыбратьПериод.Отображение = ОтображениеКнопки.Картинка;
		КнопкаВыбратьПериод.Картинка = БиблиотекаКартинок.ПолеВводаВыбрать; 
		
		ПолеНадписьДней = Форма.Элементы.Вставить("ок_НадписьДней", Тип("ПолеФормы"), ЭлементГруппаПериод);	      
		ПолеНадписьДней.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ПолеНадписьДней.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеНадписьДней.ПутьКДанным = "ок_НадписьДней";
		
		// Группа Суточные
		ЭлементГруппаСуточные = Форма.Элементы.Вставить("ок_ГруппаСуточные", Тип("ГруппаФормы"), Форма.Элементы.ГруппаШапкаЛевая);
		ЭлементГруппаСуточные.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппаСуточные.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ЭлементГруппаСуточные.ОтображатьЗаголовок = ложь;
		
		ПолеСуточныеСумма = Форма.Элементы.Вставить("ок_СуточныеСумма", Тип("ПолеФормы"), ЭлементГруппаСуточные);	      
		ПолеСуточныеСумма.Заголовок = НСтр("ru = 'Суточные'");
		ПолеСуточныеСумма.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеСуточныеСумма.Гиперссылка = Истина;
		ПолеСуточныеСумма.ПутьКДанным = "Объект.Суточные.ИтогСумма";
		ПолеСуточныеСумма.УстановитьДействие("Нажатие", "Подключаемый_СуточныеСуммаНажатие");
		
		ПолеСуточныеВалюта = Форма.Элементы.Вставить("ок_ВалютаДокументаСуточные", Тип("ПолеФормы"), ЭлементГруппаСуточные);	      
		ПолеСуточныеВалюта.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеСуточныеВалюта.ПутьКДанным = "Объект.ВалютаДокумента";
		ПолеСуточныеВалюта.РастягиватьПоГоризонтали = Ложь;
		ПолеСуточныеВалюта.АвтоМаксимальнаяШирина = Ложь;
		
		ПолеСуточныеСверхНормы = Форма.Элементы.Вставить("ок_СуточныеСуммаСверхНормы", Тип("ПолеФормы"), ЭлементГруппаСуточные);	      
		ПолеСуточныеСверхНормы.Заголовок = НСтр("ru = 'В т.ч. сверх нормы'");
		ПолеСуточныеСверхНормы.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеСуточныеСверхНормы.ПутьКДанным = "Объект.Суточные.ИтогСуммаСверхНормы";
		
		// Вывод колонок в таб.часть Товары	
		ПолеТоварыПериод = Форма.Элементы.Вставить("ок_ТоварыПериод", Тип("ПолеФормы"), Форма.Элементы.Товары);	      
		ПолеТоварыПериод.Заголовок = НСтр("ru = 'Период'");
		ПолеТоварыПериод.Вид = ВидПоляФормы.ПолеВвода;
		ПолеТоварыПериод.ПутьКДанным = "Объект.Товары.ок_Период"; 
		
		ПолеТоварыЦФО = Форма.Элементы.Вставить("ок_ТоварыЦФО", Тип("ПолеФормы"), Форма.Элементы.Товары);	      
		ПолеТоварыЦФО.Заголовок = НСтр("ru = 'ЦФО'");
		ПолеТоварыЦФО.Вид = ВидПоляФормы.ПолеВвода;
		ПолеТоварыЦФО.ПутьКДанным = "Объект.Товары.ок_ЦФО";
				
		ПолеТоварыСтатьяОборотов = Форма.Элементы.Вставить("ок_ТоварыСтатьяОборотов", Тип("ПолеФормы"), Форма.Элементы.Товары);	      
		ПолеТоварыСтатьяОборотов.Заголовок = НСтр("ru = 'Статья оборотов'");
		ПолеТоварыСтатьяОборотов.Вид = ВидПоляФормы.ПолеВвода;
		ПолеТоварыСтатьяОборотов.ПутьКДанным = "Объект.Товары.ок_СтатьяОборотов";
		
		ПолеТоварыОбъект = Форма.Элементы.Вставить("ок_ТоварыАналитика2", Тип("ПолеФормы"), Форма.Элементы.Товары);	      
		ПолеТоварыОбъект.Заголовок = НСтр("ru = 'Объект'");
		ПолеТоварыОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ПолеТоварыОбъект.ПутьКДанным = "Объект.Товары.ок_Аналитика_2";
		ПолеТоварыОбъект.ВыбиратьТип = Ложь;
		МассивТипов = Новый Массив(); 
		МассивТипов.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства")); 
		ОписаниеОбъектСтроительства = Новый ОписаниеТипов(МассивТипов);
		ПолеТоварыОбъект.ОграничениеТипа = ОписаниеОбъектСтроительства;
		ПолеТоварыОбъект = ОписаниеОбъектСтроительства.ПривестиЗначение(ПолеТоварыОбъект); 
		
		ПолеТоварыПроект = Форма.Элементы.Вставить("ок_ТоварыПроект", Тип("ПолеФормы"), Форма.Элементы.Товары);	      
		ПолеТоварыПроект.Заголовок = НСтр("ru = 'Проект'");
		ПолеТоварыПроект.Вид = ВидПоляФормы.ПолеВвода;
		ПолеТоварыПроект.ПутьКДанным = "Объект.Товары.ок_Проект";
		ПолеТоварыПроект.Видимость = Ложь;
		
		// Вывод колонок в таб.часть Прочее
		ПолеПрочееПериод = Форма.Элементы.Вставить("ок_ПрочееПериод", Тип("ПолеФормы"), Форма.Элементы.Прочее);	      
		ПолеПрочееПериод.Заголовок = НСтр("ru = 'Период'");
		ПолеПрочееПериод.Вид = ВидПоляФормы.ПолеВвода;
		ПолеПрочееПериод.ПутьКДанным = "Объект.Прочее.ок_Период"; 
				
		ПолеПрочееЦФО = Форма.Элементы.Вставить("ок_ПрочееЦФО", Тип("ПолеФормы"), Форма.Элементы.Прочее);	      
		ПолеПрочееЦФО.Заголовок = НСтр("ru = 'ЦФО'");
		ПолеПрочееЦФО.Вид = ВидПоляФормы.ПолеВвода;
		ПолеПрочееЦФО.ПутьКДанным = "Объект.Прочее.ок_ЦФО";
		ПолеПрочееЦФО.УстановитьДействие("ПриИзменении", "Подключаемый_ПрочееЦФОПриИзменении");
		
		ПолеПрочееСтатьяОборотов = Форма.Элементы.Вставить("ок_ПрочееСтатьяОборотов", Тип("ПолеФормы"), Форма.Элементы.Прочее);	      
		ПолеПрочееСтатьяОборотов.Заголовок = НСтр("ru = 'Статья оборотов'");
		ПолеПрочееСтатьяОборотов.Вид = ВидПоляФормы.ПолеВвода;
		ПолеПрочееСтатьяОборотов.ПутьКДанным = "Объект.Прочее.ок_СтатьяОборотов";
		ПолеПрочееСтатьяОборотов.УстановитьДействие("ПриИзменении", "Подключаемый_ПрочееСтатьяОборотовПриИзменении"); 
		
		ПолеПрочееОбъект = Форма.Элементы.Вставить("ок_ПрочееАналитика_2", Тип("ПолеФормы"), Форма.Элементы.Прочее);	      
		ПолеПрочееОбъект.Заголовок = НСтр("ru = 'Объект'");
		ПолеПрочееОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ПолеПрочееОбъект.ПутьКДанным = "Объект.Прочее.ок_Аналитика_2";
		ПолеПрочееОбъект.УстановитьДействие("ПриИзменении", "Подключаемый_ПрочееАналитика_2ПриИзменении");
		ПолеПрочееОбъект.ВыбиратьТип = Ложь;
		МассивТипов = Новый Массив(); 
		МассивТипов.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства")); 
		ОписаниеОбъектСтроительства = Новый ОписаниеТипов(МассивТипов);
		ПолеПрочееОбъект.ОграничениеТипа = ОписаниеОбъектСтроительства;
		ПолеПрочееОбъект = ОписаниеОбъектСтроительства.ПривестиЗначение(ПолеПрочееОбъект);
				
		ПолеПрочееПроект = Форма.Элементы.Вставить("ок_ПрочееПроект", Тип("ПолеФормы"), Форма.Элементы.Прочее);	      
		ПолеПрочееПроект.Заголовок = НСтр("ru = 'Проект'");
		ПолеПрочееПроект.Вид = ВидПоляФормы.ПолеВвода;
		ПолеПрочееПроект.ПутьКДанным = "Объект.Прочее.ок_Проект";
		ПолеПрочееПроект.Видимость = Ложь;
		
		// Создать на основании
		КомандаСоздатьНаОснованииПрогнозПлатежа = Форма.Команды.Добавить("ок_ПрогнозПлатежа");
		КомандаСоздатьНаОснованииПрогнозПлатежа.Действие = "Подключаемый_ПрогнозПлатежа";
		КомандаСоздатьНаОснованииПрогнозПлатежа.Заголовок = НСтр("ru = 'Прогноз платежа'");
		
		ЭлементСоздатьНаОснованииПрогнозПлатежа = Форма.Элементы.Добавить("ок_ПрогнозПлатежа", Тип("КнопкаФормы"), Форма.Элементы.ФормаСоздатьНаОсновании);
		ЭлементСоздатьНаОснованииПрогнозПлатежа.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		ЭлементСоздатьНаОснованииПрогнозПлатежа.ИмяКоманды = "ок_ПрогнозПлатежа";
		
		// Команда "Заполнить" (ТЧ Авансы)
		КомандаАвансыЗаполнить = Форма.Команды.Добавить("ок_АвансыЗаполнить");
		КомандаАвансыЗаполнить.Действие = "Подключаемый_АвансыЗаполнить";
		КомандаАвансыЗаполнить.Заголовок = НСтр("ru = 'Заполнить'");
		КомандаАвансыЗаполнить.Подсказка = НСтр("ru = 'Заполнение табличной части по остаткам регистра'");
		
		ЭлементАвансыЗаполнить = Форма.Элементы.Добавить("ок_АвансыЗаполнить", Тип("КнопкаФормы"), Форма.Элементы.ВыданныеАвансы.КоманднаяПанель);
		ЭлементАвансыЗаполнить.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		ЭлементАвансыЗаполнить.ИмяКоманды = "ок_АвансыЗаполнить";
		
		// Группа команд "Заполнить" (ТЧ Товары)
		ЭлементГруппаЗаполнить = Форма.Элементы.Вставить("ок_ГруппаЗаполнитьТовары", Тип("ГруппаФормы"), Форма.Элементы.Товары.КоманднаяПанель);
		ЭлементГруппаЗаполнить.Вид = ВидГруппыФормы.Подменю;
		ЭлементГруппаЗаполнить.Заголовок = НСтр("ru = 'Заполнить'");
		
		КомандаТоварыЗаполнить = Форма.Команды.Добавить("ок_ЗаполнитьПоУправленческимАналитикамТовары");
		КомандаТоварыЗаполнить.Действие = "Подключаемый_ЗаполнитьПоУправленческимАналитикамТовары";
		КомандаТоварыЗаполнить.Заголовок = НСтр("ru = 'Заполнить по управленческим аналитикам'");
		
		ЭлементТоварыЗаполнить = Форма.Элементы.Добавить("ок_ЗаполнитьПоУправленческимАналитикамТовары", Тип("КнопкаФормы"), ЭлементГруппаЗаполнить);
		ЭлементТоварыЗаполнить.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		ЭлементТоварыЗаполнить.ИмяКоманды = "ок_ЗаполнитьПоУправленческимАналитикамТовары";
		
		ЭлементТоварыДозаполнить = Форма.Команды.Добавить("ок_ДозаполнитьПоУправленческимАналитикамТовары");
		ЭлементТоварыДозаполнить.Действие = "Подключаемый_ДозаполнитьПоУправленческимАналитикамТовары";
		ЭлементТоварыДозаполнить.Заголовок = НСтр("ru = 'Дозаполнить по управленческим аналитикам'");
		
		ЭлементТоварыДозаполнить = Форма.Элементы.Добавить("ок_ДозаполнитьПоУправленческимАналитикамТовары", Тип("КнопкаФормы"), ЭлементГруппаЗаполнить);
		ЭлементТоварыДозаполнить.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		ЭлементТоварыДозаполнить.ИмяКоманды = "ок_ДозаполнитьПоУправленческимАналитикамТовары";
		
		// Группа команд "Заполнить" (ТЧ Прочее)
		ЭлементГруппаЗаполнитьПрочее = Форма.Элементы.Вставить("ок_ГруппаЗаполнитьПрочее", Тип("ГруппаФормы"), Форма.Элементы.Прочее.КоманднаяПанель);
		ЭлементГруппаЗаполнитьПрочее.Вид = ВидГруппыФормы.Подменю;
		ЭлементГруппаЗаполнитьПрочее.Заголовок = НСтр("ru = 'Заполнить'");
		
		КомандаПрочееЗаполнить = Форма.Команды.Добавить("ок_ЗаполнитьПоУправленческимАналитикамПрочее");
		КомандаПрочееЗаполнить.Действие = "Подключаемый_ЗаполнитьПоУправленческимАналитикамПрочее";
		КомандаПрочееЗаполнить.Заголовок = НСтр("ru = 'Заполнить по управленческим аналитикам'");
		
		ЭлементПрочееЗаполнить = Форма.Элементы.Добавить("ок_ЗаполнитьПоУправленческимАналитикамПрочее", Тип("КнопкаФормы"), ЭлементГруппаЗаполнитьПрочее);
		ЭлементПрочееЗаполнить.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		ЭлементПрочееЗаполнить.ИмяКоманды = "ок_ЗаполнитьПоУправленческимАналитикамПрочее";
		
		ЭлементТоварыДозаполнить = Форма.Команды.Добавить("ок_ДозаполнитьПоУправленческимАналитикамПрочее");
		ЭлементТоварыДозаполнить.Действие = "Подключаемый_ДозаполнитьПоУправленческимАналитикамПрочее";
		ЭлементТоварыДозаполнить.Заголовок = НСтр("ru = 'Дозаполнить по управленческим аналитикам'");
		
		ЭлементТоварыДозаполнить = Форма.Элементы.Добавить("ок_ДозаполнитьПоУправленческимАналитикамПрочее", Тип("КнопкаФормы"), ЭлементГруппаЗаполнитьПрочее);
		ЭлементТоварыДозаполнить.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		ЭлементТоварыДозаполнить.ИмяКоманды = "ок_ДозаполнитьПоУправленческимАналитикамПрочее";
		
		ЭлементТоварыДозаполнить = Форма.Команды.Добавить("ок_ЗаполнитьПоДенежнымДокументам");
		ЭлементТоварыДозаполнить.Действие = "Подключаемый_ЗаполнитьПоДенежнымДокументам";
		ЭлементТоварыДозаполнить.Заголовок = НСтр("ru = 'Заполнить по денежным документам'");
		
		ЭлементТоварыДозаполнить = Форма.Элементы.Добавить("ок_ЗаполнитьПоДенежнымДокументам", Тип("КнопкаФормы"), ЭлементГруппаЗаполнитьПрочее);
		ЭлементТоварыДозаполнить.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		ЭлементТоварыДозаполнить.ИмяКоманды = "ок_ЗаполнитьПоДенежнымДокументам";
		
		// Обработчики ТЧ Товары
		ЭлементТоварыДатаВходящегоДокумента = Форма.Элементы.ТоварыДатаВходящегоДокумента;
		ЭлементТоварыДатаВходящегоДокумента.УстановитьДействие("ПриИзменении", "Подключаемый_ТоварыДатаВходящегоДокументаПриИзменении"); 
		
		
		// Обработчики ТЧ Прочее
		ЭлементПрочееДатаВходящегоДокумента = Форма.Элементы.ПрочееДатаВходящегоДокумента;
		ЭлементПрочееДатаВходящегоДокумента.УстановитьДействие("ПриИзменении", "Подключаемый_ПрочееДатаВходящегоДокументаПриИзменении");
		
		
	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-05-19 (#ТП_БП05_ФР12, #ТП_БП05_ФР13)

	КонецЕсли;  
		
	Если Форма.ИмяФормы = "Документ.бит_ЗаявкаНаРасходованиеСредствОбщая.Форма.ФормаДокумента" Тогда
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Начало 2021-05-12 (#ТП_БП05_ФР15)
		Форма.УстановитьДействие("ОбработкаВыбора", "Подключаемый_ОбработкаВыбора");
	//ОКЕЙ Завьялова Е.А. (ПервыйБИТ) Конец 2021-05-12 (#ТП_БП05_ФР15)
	
	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Начало 2021-05-28 (#ТП_БП05_ФР12, #ТП_БП05_ФР13)
		ПолеОснование = Форма.Элементы.Вставить("ок_ДокументОснование", Тип("ПолеФормы"), Форма.Элементы.ГруппаШапкаЛево);	      
		ПолеОснование.Заголовок = НСтр("ru = 'Документ основание'");
		ПолеОснование.Вид = ВидПоляФормы.ПолеВвода;
		ПолеОснование.ПутьКДанным = "Объект.ок_ДокументОснование";
	//ОКЕЙ Дмитриева В.В. (ПервыйБИТ) Конец 2021-05-28 (#ТП_БП05_ФР12, #ТП_БП05_ФР13)
	КонецЕсли;
	
	#КонецОбласти
	
	#Область БП11
	//ОКЕЙ Лещенко Д.Ю. (ПервыйБИТ) Начало 2021-04-05 (#ТП_БП11_ФР04)
	Если Форма.ИмяФормы = "Справочник.ДоговорыКонтрагентов.Форма.ФормаЭлемента" Тогда
		ПолеОчищатьСубконто3 = Форма.Элементы.Добавить("ок_ОчищатьСубконто3", Тип("ПолеФормы"), Форма.Элементы.ГруппаПрочееГруппаПрочее);	      
		ПолеОчищатьСубконто3.Заголовок = НСтр("ru = 'Очищать субконто 3'");
		ПолеОчищатьСубконто3.Вид = ВидПоляФормы.ПолеФлажка;
		ПолеОчищатьСубконто3.ПутьКДанным = "Объект.ок_ОчищатьСубконто3";
	КонецЕсли;
	//ОКЕЙ Лещенко Д.Ю. (ПервыйБИТ) Конец 2021-04-05 (#ТП_БП11_ФР04)
	
	//ОКЕЙ Беднягин Е.А. (ПервыйБИТ) Начало 2021-04-20 (#ТП_БП11_ФР01)
	Если Форма.ИмяФормы = "Документ.ПриходныйКассовыйОрдер.Форма.ФормаДокумента" Тогда
		
		ПолеФормы = Форма.Элементы.Добавить("ок_Объект", Тип("ПолеФормы"), Форма.Элементы.ГруппаШапкаПравая);	      
		ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
		ПолеФормы.ПутьКДанным = "Объект.ок_Объект";
	КонецЕсли;	
	//ОКЕЙ Беднягин Е.А. (ПервыйБИТ) Конец 2021-04-20 (#ТП_БП11_ФР01)
	
	//ОКЕЙ Беднягин Е.А. (ПервыйБИТ) Начало 2021-04-20 (#ТП_БП11_ФР05)		
	Если Форма.ИмяФормы = "Документ.РасходныйКассовыйОрдер.Форма.ФормаДокумента" Тогда
		ПолеФормы = Форма.Элементы.Добавить("ок_Объект", Тип("ПолеФормы"), Форма.Элементы.ГруппаШапкаПравая);	      
		ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
		ПолеФормы.ПутьКДанным = "Объект.ок_Объект";
		Форма.Элементы.Контрагент.УстановитьДействие("НачалоВыбора", "Подключаемый_КонтрагентНачалоВыбора");
	КонецЕсли;
	//ОКЕЙ Беднягин Е.А. (ПервыйБИТ) Конец 2021-04-20 (#ТП_БП11_ФР05)
	
	//ОКЕЙ Первухин В.С. (ПервыйБИТ) Начало 2021-09-21 (#ТП_БП11_ФР04)
	Если Форма.ИмяФормы = "Документ.ОплатаПлатежнойКартой.Форма.ФормаДокумента" Тогда
		ПолеФормы 				=	Форма.Элементы.Добавить("ок_Объект", Тип("ПолеФормы"), Форма.Элементы.ГруппаШапкаПравая);	      
		ПолеФормы.Вид 			=	ВидПоляФормы.ПолеВвода;
		ПолеФормы.ПутьКДанным	=	"Объект.ок_Объект";
	КонецЕсли;	
	//ОКЕЙ Первухин В.С. (ПервыйБИТ) Конец 2021-09-21 (#ТП_БП11_ФР04)
	
	//ОКЕЙ Балыков А.Г. (ПервыйБИТ) Начало 2021-09-22 (#ТП_БП11_ФР14)
	Если Форма.ИмяФормы = "Отчет.КассоваяКнига.Форма.ФормаОтчета" Тогда
		
		ДобавляемыеРеквизиты	= Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ок_Объект", Новый ОписаниеТипов("СправочникСсылка.ОбъектыСтроительства")));
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		РеквизитОбъект = Форма.Элементы.Добавить("ок_Объект", Тип("ПолеФормы"), Форма.Элементы.ГруппаОтборы);
		РеквизитОбъект.Заголовок   = НСтр("ru = 'Объект'");
		РеквизитОбъект.Вид         = ВидПоляФормы.ПолеВвода;
		РеквизитОбъект.ПутьКДанным = "ок_Объект";
		
	
	КонецЕсли;
	
	Если Форма.ИмяФормы = "РегистрСведений.НомераЛистовКассовойКниги.Форма.ФормаСписка" Тогда
		РеквизитОбъект = Форма.Элементы.Добавить("ок_Объект", Тип("ПолеФормы"), Форма.Элементы.Список);
		РеквизитОбъект.Заголовок   = НСтр("ru = 'Объект'");
		РеквизитОбъект.Вид         = ВидПоляФормы.ПолеВвода;
		РеквизитОбъект.ПутьКДанным = "Список.ок_Объект";	
		
		Форма.Элементы.Переместить(РеквизитОбъект, Форма.Элементы.Список, Форма.Элементы.ПлатежныйАгент);
	КонецЕсли;
	
	Если Форма.ИмяФормы = "РегистрСведений.НомераЛистовКассовойКниги.Форма.ФормаЗаписи" Тогда
		РеквизитОбъект = Форма.Элементы.Вставить("ок_Объект", Тип("ПолеФормы"), Форма, Форма.Элементы.ПлатежныйАгент);
		РеквизитОбъект.Заголовок   = НСтр("ru = 'Объект'");
		РеквизитОбъект.Вид         = ВидПоляФормы.ПолеВвода;
		РеквизитОбъект.ПутьКДанным = "Запись.ок_Объект";
	КонецЕсли;
	//ОКЕЙ Балыков А.Г. (ПервыйБИТ) Конец 2021-09-22 (#ТП_БП11_ФР14)
	
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-04-26 (#ТП_БП11_ФР04)
	Если Форма.ИмяФормы = "Документ.ОплатаПлатежнойКартой.Форма.ФормаУправленияПараметрамиЭквайринга" Тогда
		// Создание реквизитов
		ДобавляемыеРеквизиты = Новый Массив; //Определяем массив добавляемых реквизитов
		
		НовыйРеквизит = Новый РеквизитФормы("ок_ВидыПереводов", Новый ОписаниеТипов("ПеречислениеСсылка.ОК_ВидыПереводов")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы("ок_СтатьяДвиженияДенежныхСредств", Новый ОписаниеТипов("СправочникСсылка.СтатьиДвиженияДенежныхСредств"));
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		// Выведем на форму реквизиты
		НовыйЭлемент = Форма.Элементы.Добавить("ок_ВидыПереводов", Тип("ПолеФормы"), Форма);
		НовыйЭлемент.Вид 			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.Заголовок		= "Виды переводов";
		НовыйЭлемент.Видимость		= Ложь;
		НовыйЭлемент.ПутьКДанным 	= "ок_ВидыПереводов";
		
		НовыйЭлемент = Форма.Элементы.Добавить("ок_СтатьяДвиженияДенежныхСредств", Тип("ПолеФормы"), Форма);
		НовыйЭлемент.Вид 			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.Заголовок		= "Статья движения денежных средств";
		НовыйЭлемент.Видимость		= Ложь;
		НовыйЭлемент.ПутьКДанным	= "ок_СтатьяДвиженияДенежныхСредств";
		
		// Установим действие существующему реквизиту 
		Форма.Элементы.СчетРасчетов.УстановитьДействие("ПриИзменении", "Подключаемый_СчетРасчетовПриИзменении");
		
		// Заполним значениями из параметров
		Если Форма.Параметры.Свойство("ок_ВидыПереводов") Тогда
			Форма.ок_ВидыПереводов = Форма.Параметры.ок_ВидыПереводов;	
		КонецЕсли;
		
		Если Форма.Параметры.Свойство("ок_СтатьяДвиженияДенежныхСредств") Тогда
			Форма.ок_СтатьяДвиженияДенежныхСредств = Форма.Параметры.ок_СтатьяДвиженияДенежныхСредств;	
		КонецЕсли;		
	КонецЕсли;
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-04-26 (#ТП_БП11_ФР04)
	
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-04-27 (#ТП_БП11_ФР15)
	Если Форма.ИмяФормы = "РегистрСведений.ЛимитОстаткаКассыОрганизаций.Форма.ФормаЗаписи" Тогда
		НовыйЭлемент = Форма.Элементы.Вставить("ок_Объект", Тип("ПолеФормы"), Форма, Форма.Элементы.Лимит);
		НовыйЭлемент.Вид 			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным 	= "Запись.ок_Объект";
	КонецЕсли;
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-04-27 (#ТП_БП11_ФР15)
	
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-04-27 (#ТП_БП11_ФР15)
	Если Форма.ИмяФормы = "РегистрСведений.ЛимитОстаткаКассыОрганизаций.Форма.ФормаСписка" Тогда
		НовыйЭлемент = Форма.Элементы.Вставить("ок_Объект", Тип("ПолеФормы"), Форма.Элементы.Список, Форма.Элементы.Лимит);
		НовыйЭлемент.Вид 			= ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным 	= "Список.ок_Объект";
	КонецЕсли;
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-04-27 (#ТП_БП11_ФР15)
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти



////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// +СБ. Михайлов Никита. 2014-04-05. Загрузка платежных документов AXAPTA 
Процедура Задание_ЗагрузкаПД_AXAPTA() Экспорт
	
	ОписаниеОшибки = "";
	МассивЗаданий = Новый Массив;
	ПериодНачалаОтбора = Константы.СБ_ЗагрузкаПД_AXAPTA_ДатаНачалаЗагрузки.Получить();
	
	Если НЕ ЗначениеЗаполнено(ПериодНачалаОтбора) Тогда
		
		ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
								 УровеньЖурналаРегистрации.Предупреждение,
								 ,
								 ,
								 "Не задана дата начала загрузки документов");
		
	ИначеЕсли НЕ СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.УстановитьСоединение(ОписаниеОшибки) Тогда
		
		ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
								 УровеньЖурналаРегистрации.Ошибка,
								 ,
								 ,
								 "Не удалось инициализовать подключение к внешнему источнику для чтения данных: " + ОписаниеОшибки);
		                   		
	Иначе
		
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		//ОК Довбешка 17.03.2015
		//"ВЫБРАТЬ ПЕРВЫЕ 1000    
		"ВЫБРАТЬ
		//ОК Довбешка
		|	Данные.RECID КАК RECID
		|ИЗ
		|	ВнешнийИсточникДанных.СБ_ПлатежныеПорученияAXAPTA.Таблица.dbo_ExportDataTo1cPaymOrder КАК Данные
		|ГДЕ
		|	Данные.ORDERDATE >= &ПериодНачалаОтбора
		|	И Данные.POSTED1C8 = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Данные.ORDERDATE,
		|	RECID";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ПериодНачалаОтбора", ПериодНачалаОтбора);
		
		Выборка = Запрос.Выполнить().Выбрать();
// +СБ. Широков Николай. 2014-10-06. 
		НайтиРаспровестиВведенныеДокументы(Выборка);
// -СБ. Широков Николай 		
		Пока Выборка.Следующий() Цикл
			
			Задание = ЗаданиеНаОбработкуПакета(Выборка);	
			МассивЗаданий.Добавить(Задание);
			
		КонецЦикла;
		
		ОжидатьЗавершения = Истина;
		Пока ОжидатьЗавершения Цикл
			
			Попытка
				
				ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
				ОжидатьЗавершения = Ложь;
				
			Исключение
// +СБ. Широков Николай. 2014-10-03. 
				ЗавершенныеЗадания = Новый Массив;
// -СБ. Широков Николай 				
				
				Текст = ОписаниеОшибки();
				Для каждого Задание Из МассивЗаданий Цикл
					
					НайденноеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Задание.УникальныйИдентификатор);
					Если НайденноеЗадание.Состояние <> СостояниеФоновогоЗадания.Активно Тогда
// +СБ. Широков Николай. 2014-10-03. 
//                    	МассивЗаданий.Удалить(Задание);
						ЗавершенныеЗадания.Добавить(Задание);
// -СБ. Широков Николай 							
					КонецЕсли; 
					
				КонецЦикла; 
				
// +СБ. Широков Николай. 2014-10-03. 
				Для каждого Задание Из ЗавершенныеЗадания Цикл
					МассивЗаданий.Удалить(МассивЗаданий.Найти(Задание));
				КонецЦикла; 
// -СБ. Широков Николай 							
				
				Если МассивЗаданий.Количество() = 0 Тогда
					ОжидатьЗавершения = Ложь;	
				КонецЕсли; 
				
			КонецПопытки; 
		
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры	// -СБ. Михайлов Никита

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-01-23 (#3621)
Процедура Задание_ЗагрузкаПД_AXAPTA_Версия2() Экспорт
	
	ОписаниеОшибки = "";
	МассивЗаданий = Новый Массив;
	ПериодНачалаОтбора = Константы.СБ_ЗагрузкаПД_AXAPTA_ДатаНачалаЗагрузки.Получить();
	
	Если НЕ ЗначениеЗаполнено(ПериодНачалаОтбора) Тогда
		
		ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
								 УровеньЖурналаРегистрации.Предупреждение,
								 ,
								 ,
								 "Не задана дата начала загрузки документов");
		
	ИначеЕсли НЕ СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.УстановитьСоединение(ОписаниеОшибки) Тогда
		
		ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
								 УровеньЖурналаРегистрации.Ошибка,
								 ,
								 ,
								 "Не удалось инициализовать подключение к внешнему источнику для чтения данных: " + ОписаниеОшибки);
		                   		
	Иначе
		
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Данные.RECID КАК RECID
		|ИЗ
		|	ВнешнийИсточникДанных.СБ_ПлатежныеПорученияAXAPTA.Таблица.dbo_ExportDataTo1cPaymOrder КАК Данные
		|ГДЕ
		|	Данные.ORDERDATE >= &ПериодНачалаОтбора
		|	И Данные.POSTED1C8 = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Данные.ORDERDATE,
		|	RECID";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ПериодНачалаОтбора", ПериодНачалаОтбора);
		
		Выборка = Запрос.Выполнить().Выбрать();
		НайтиРаспровестиВведенныеДокументы(Выборка);
		Пока Выборка.Следующий() Цикл
			
			Задание = ЗаданиеНаОбработкуПакета_Версия2(Выборка);	
			МассивЗаданий.Добавить(Задание);
			
		КонецЦикла;
		
		ОжидатьЗавершения = Истина;
		Пока ОжидатьЗавершения Цикл
			
			Попытка
				
				ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
				ОжидатьЗавершения = Ложь;
				
			Исключение
				ЗавершенныеЗадания = Новый Массив;
				Текст = ОписаниеОшибки();
				Для каждого Задание Из МассивЗаданий Цикл
					
					НайденноеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Задание.УникальныйИдентификатор);
					Если НайденноеЗадание.Состояние <> СостояниеФоновогоЗадания.Активно Тогда
						ЗавершенныеЗадания.Добавить(Задание);
					КонецЕсли; 
					
				КонецЦикла; 
				
				Для каждого Задание Из ЗавершенныеЗадания Цикл
					МассивЗаданий.Удалить(МассивЗаданий.Найти(Задание));
				КонецЦикла; 
				
				Если МассивЗаданий.Количество() = 0 Тогда
					ОжидатьЗавершения = Ложь;	
				КонецЕсли; 
				
			КонецПопытки; 
		
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-01-23 (#3621)

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// +СБ. Михайлов Никита. 2014-05-05. Загрузка платежных документов AXAPTA 
Функция ЗаданиеНаОбработкуПакета(Выборка)
	
	ИмяМетода = "СБ_ЗагрузкаПД_AXAPTA.ЗагрузитьПлатежныеДокументыAXAPTA";
	ШаблонНаименованияЗадания = "Загрузка платежных документов AXAPTA с RECID %1 по RECID %2, записей: %3";
	МассивИдентификаторов = Новый Массив;
	Параметры = Новый Массив;
	ПервыйИдентификатор = Выборка.RECID;
	КоличествоЗаписей = 1;
	
	МассивИдентификаторов.Добавить(Выборка.RECID);
	Пока КоличествоЗаписей < 100 // ВАЖНО! Порядок условий именно такой
	   И Выборка.Следующий() Цикл
	   
	   МассивИдентификаторов.Добавить(Выборка.RECID);
	   КоличествоЗаписей = КоличествоЗаписей + 1;
	   
   	КонецЦикла;
    ПоследнийИдентификатор = Выборка.RECID;
	   
    Параметры.Добавить(Новый ФиксированныйМассив(МассивИдентификаторов));
	НаименованиеЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								ШаблонНаименованияЗадания,
								ПервыйИдентификатор,
								ПоследнийИдентификатор,
								КоличествоЗаписей);
								
	ЗаданиеЗагрузки = ФоновыеЗадания.Выполнить(ИмяМетода, Параметры,, НаименованиеЗадания);
	
	Возврат ЗаданиеЗагрузки;
	
КонецФункции // -СБ. Михайлов Никита

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-01-23 (#3621)
Функция ЗаданиеНаОбработкуПакета_Версия2(Выборка)
	
	ИмяМетода = "СБ_ЗагрузкаПД_AXAPTA.ЗагрузитьПлатежныеДокументыAXAPTA_Версия2";
	ШаблонНаименованияЗадания = "Загрузка платежных документов AXAPTA с RECID %1 по RECID %2, записей: %3";
	МассивИдентификаторов = Новый Массив;
	Параметры = Новый Массив;
	ПервыйИдентификатор = Выборка.RECID;
	КоличествоЗаписей = 1;
	
	МассивИдентификаторов.Добавить(Выборка.RECID);
	Пока КоличествоЗаписей < 100 // ВАЖНО! Порядок условий именно такой
	   И Выборка.Следующий() Цикл
	   
	   МассивИдентификаторов.Добавить(Выборка.RECID);
	   КоличествоЗаписей = КоличествоЗаписей + 1;
	   
   	КонецЦикла;
    ПоследнийИдентификатор = Выборка.RECID;
	   
    Параметры.Добавить(Новый ФиксированныйМассив(МассивИдентификаторов));
	НаименованиеЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								ШаблонНаименованияЗадания,
								ПервыйИдентификатор,
								ПоследнийИдентификатор,
								КоличествоЗаписей);
								
	ЗаданиеЗагрузки = ФоновыеЗадания.Выполнить(ИмяМетода, Параметры,, НаименованиеЗадания);
	
	Возврат ЗаданиеЗагрузки;
	
КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-01-23 (#3621)

// +СБ. Широков Николай. 2014-10-06. Оптимизация
Процедура НайтиРаспровестиВведенныеДокументы(Выборка) Экспорт

	МассивИД = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		МассивИД.Добавить(Выборка.RECID);		
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бит_ЗаявкаНаРасходованиеСредств.Ссылка,
	|	бит_ЗаявкаНаРасходованиеСредств.Проведен
	|ПОМЕСТИТЬ Заявки
	|ИЗ
	|	Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
	|ГДЕ
	|	бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA В(&МассивИД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_ПлатежнаяПозиция.Ссылка
	|ИЗ
	|	Документ.бит_ПлатежнаяПозиция КАК бит_ПлатежнаяПозиция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Заявки КАК Заявки
	|		ПО бит_ПлатежнаяПозиция.ДокументОснование = Заявки.Ссылка
	|			И (бит_ПлатежнаяПозиция.Проведен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.Ссылка
	|ИЗ
	|	Заявки КАК Заявки
	|ГДЕ
	|	Заявки.Проведен";
	Запрос.УстановитьПараметр("МассивИД", МассивИД);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПлатежнаяПозиция = РезультатыЗапроса[1].Выбрать();
	Пока ВыборкаПлатежнаяПозиция.Следующий() Цикл
		
		ПлатежнаяПозицияОбъект = ВыборкаПлатежнаяПозиция.Ссылка.ПолучитьОбъект();
		ПлатежнаяПозицияОбъект.ДополнительныеСвойства.Вставить("НеВыполнятьДополнительныеДействияПриОтменеПроведения");
		ПлатежнаяПозицияОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
	КонецЦикла; 
	
	ВыборкаЗаявки = РезультатыЗапроса[2].Выбрать();
	Пока ВыборкаЗаявки.Следующий() Цикл
		
		ЗаявкаОбъект = ВыборкаЗаявки.Ссылка.ПолучитьОбъект();
		ЗаявкаОбъект.ДополнительныеСвойства.Вставить("НеВыполнятьДополнительныеДействияПриОтменеПроведения");
		ЗаявкаОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
		НаборЗаписей = РегистрыСведений.бит_УстановленныеВизы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(ВыборкаЗаявки.Ссылка);
		НаборЗаписей.Записать();
		
	КонецЦикла; 
	
	Выборка.Сбросить();

КонецПроцедуры // -СБ. Широков Николай 

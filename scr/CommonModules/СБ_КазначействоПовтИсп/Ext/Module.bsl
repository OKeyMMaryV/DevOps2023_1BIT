////////////////////////////////////////////////////////////////////////////////
// Подсистема "Казначейство".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ПолучитьЗначениеКонстанты(Идентификатор, ЗначениеПоУмолчанию =  Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗначенияКонстант.Значение,
	|	ЗначенияКонстант.ЗначениеВХранилище,
	|	ВЫБОР
	|		КОГДА ЗначенияКонстант.ЗначениеВХранилище
	|			ТОГДА ЗначенияКонстант.ХранилищеЗначения
	|	КОНЕЦ КАК ХранилищеЗначения
	|ИЗ
	|	РегистрСведений.СБ_НастройкиКазначейства КАК ЗначенияКонстант
	|ГДЕ
	|	ЗначенияКонстант.Идентификатор = &Идентификатор";
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ЗначениеПоУмолчанию;
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Возврат ?(Выборка.ЗначениеВХранилище,  Выборка.ХранилищеЗначения.Получить(), Выборка.Значение);
		
	КонецЕсли; 
	
КонецФункции

Функция ПодразделениеПоПрофилюРазноски(Организация, ПрофильРазноски) Экспорт
	
	ПустаяСсылка = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	
	Если ПустаяСтрока(ПрофильРазноски) Тогда
		Возврат ПустаяСсылка;	
	КонецЕсли; 
	
	Если Организация.Пустая() Тогда
		Возврат ПустаяСсылка;	
	КонецЕсли; 
	//
	//СписокОрганизаций_НеПогашатьЗадолженность = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("СписокОрганизаций_НеПогашатьЗадолженность");
	//Если СписокОрганизаций_НеПогашатьЗадолженность = Неопределено Тогда 
	//	Возврат ПустаяСсылка;	
	//КонецЕсли; 
	//
	//Если СписокОрганизаций_НеПогашатьЗадолженность.НайтиПоЗначению(Организация) = Неопределено Тогда
	//	Возврат ПустаяСсылка;	
	//КонецЕсли; 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПодразделенияОрганизаций.Ссылка
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Владелец
	|	И ПодразделенияОрганизаций.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Владелец", 		Организация);
	Запрос.УстановитьПараметр("Наименование",	ПрофильРазноски);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ПустаяСсылка;
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;
	
КонецФункции // ()

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-15 (#3101)
Функция ПредопределенныеОрганизации() Экспорт
		
	ПредопределенныеОрганизации = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки,
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Значение
	|ИЗ
	|	РегистрСведений.бит_ок_НастройкиМеханизмаИмпортаДанных КАК бит_ок_НастройкиМеханизмаИмпортаДанных
	|ГДЕ
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Группа = &Группа";
	Запрос.УстановитьПараметр("Группа", "Организации");

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ПредопределенныеОрганизации;
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ПредопределенныеОрганизации.Вставить(Выборка.ИмяНастройки, Выборка.Значение);
	КонецЦикла; 
	
	Возврат ПредопределенныеОрганизации;
	
КонецФункции // ПредопределенныеОрганизации()
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-15 (#3101)

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


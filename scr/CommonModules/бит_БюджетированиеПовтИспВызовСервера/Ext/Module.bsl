
#Область СлужебныйПрограммныйИнтерфейс

Функция НастройкиУчетаАналитикСтатьиОборотов(Знач СтатьяОборотов) Экспорт
	
	Если бит_ОбщегоНазначения.ЭтоСемействоБП() Тогда
		НастройкиУчетаАналитик	= ПоляУчетаБП();
		ТекстЗапроса			= ТекстЗапросаБП();
	Иначе
		НастройкиУчетаАналитик	= ПоляУчетаERP();
		ТекстЗапроса			= ТекстЗапросаERP();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтатьяОборотов) Тогда
		Возврат НастройкиУчетаАналитик;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СтатьяОборотов",	СтатьяОборотов);
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(НастройкиУчетаАналитик, Выборка);
	КонецЕсли;
	
	Возврат НастройкиУчетаАналитик;
	
КонецФункции

Функция ПолучитьСвойстваСтатьи(Знач Статья) Экспорт
		
	Разрезы = Новый Массив();
	Если бит_ОбщегоНазначения.ЭтоСемействоБП() Тогда
		Разрезы.Добавить("Контрагент");
		Разрезы.Добавить("ДоговорКонтрагента");
		Разрезы.Добавить("Проект");
		Разрезы.Добавить("НоменклатурнаяГруппа");
		Разрезы.Добавить("БанковскийСчет");
		
		Для Индекс = 1 По 7 Цикл
			Разрезы.Добавить("Аналитика_" + Индекс);
		КонецЦикла; 
	Иначе	
		Для Индекс = 1 По 12 Цикл
			Разрезы.Добавить("Аналитика_" + Индекс);
		КонецЦикла; 
	КонецЕсли; 
	
	СвойстваСтатьи = Новый Структура; 
	СвойстваСтатьи.Вставить("Родитель",					  Справочники.бит_СтатьиОборотов.ПустаяСсылка());
	СвойстваСтатьи.Вставить("Код",						  "");
	СвойстваСтатьи.Вставить("Наименование",				  "");
	СвойстваСтатьи.Вставить("Кодификатор",				  "");
	СвойстваСтатьи.Вставить("ВидСтатьи",				  Справочники.бит_ВидыСтатейОборотов.ПустаяСсылка());
	СвойстваСтатьи.Вставить("РасходДоход",				  Перечисления.бит_РасходДоход.ПустаяСсылка());
	СвойстваСтатьи.Вставить("Нормируемая",				  Ложь);
	СвойстваСтатьи.Вставить("ЕдиницаИзмерения",			  Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка());
	СвойстваСтатьи.Вставить("СтавкаНДС",				  Перечисления.СтавкиНДС.ПустаяСсылка());
	СвойстваСтатьи.Вставить("ЭтоКоэффициент",			  Ложь);
	СвойстваСтатьи.Вставить("НеКонтролировать_Сумма",	  Истина);
	СвойстваСтатьи.Вставить("НеКонтролировать_Количество",Истина);
	СвойстваСтатьи.Вставить("НеКонтролировать_Заявки",	  Истина);
	СвойстваСтатьи.Вставить("НеКонтролировать_Бюджеты",	  Истина);
	СвойстваСтатьи.Вставить("НеКонтролировать_Графики",	  Истина);
	
	СвойстваСтатьи.Вставить("Суммовой",		  Ложь);
	СвойстваСтатьи.Вставить("Количественный", Ложь);
	
	Для каждого Разрез Из Разрезы Цикл
		СвойстваСтатьи.Вставить(Разрез, Ложь);
		СвойстваСтатьи.Вставить(Разрез + "ПроверятьЗаполнение", Ложь);
	КонецЦикла; 
	
	Если НЕ ЗначениеЗаполнено(Статья) Тогда
		Возврат СвойстваСтатьи;
	КонецЕсли; 

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	бит_СтатьиОборотов.Ссылка КАК Ссылка,
	|	бит_СтатьиОборотов.Родитель КАК Родитель,
	|	бит_СтатьиОборотов.Код КАК Код,
	|	бит_СтатьиОборотов.Наименование КАК Наименование,
	|	бит_СтатьиОборотов.НаименованиеПолное КАК НаименованиеПолное,
	|	бит_СтатьиОборотов.Кодификатор КАК Кодификатор,
	|	бит_СтатьиОборотов.ВидСтатьи КАК ВидСтатьи,
	|	бит_СтатьиОборотов.РасходДоход КАК РасходДоход,
	|	бит_СтатьиОборотов.Нормируемая КАК Нормируемая,
	|	бит_СтатьиОборотов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	бит_СтатьиОборотов.СтавкаНДС КАК СтавкаНДС,
	|	бит_СтатьиОборотов.ЭтоКоэффициент КАК ЭтоКоэффициент,
	|	бит_СтатьиОборотов.НеКонтролировать_Сумма КАК НеКонтролировать_Сумма,
	|	бит_СтатьиОборотов.НеКонтролировать_Количество КАК НеКонтролировать_Количество,
	|	бит_СтатьиОборотов.НеКонтролировать_Заявки КАК НеКонтролировать_Заявки,
	|	бит_СтатьиОборотов.НеКонтролировать_Бюджеты КАК НеКонтролировать_Бюджеты,
	|	бит_СтатьиОборотов.НеКонтролировать_Графики КАК НеКонтролировать_Графики,
	|	&ПоляРазрезов КАК ПоляРазрезов,
	|	бит_СтатьиОборотов.Учет_Количество КАК Учет_Количество,
	|	бит_СтатьиОборотов.Учет_Сумма КАК Учет_Сумма
	|ИЗ
	|	Справочник.бит_СтатьиОборотов КАК бит_СтатьиОборотов
	|ГДЕ
	|	бит_СтатьиОборотов.Ссылка = &Статья";
	
	ПоляРазрезов = Новый Массив(); 
	ШаблонУчет 		   = "	бит_СтатьиОборотов.Учет_%1 КАК Учет_%1,";
	ШаблонОбязательный = "	бит_СтатьиОборотов.Обязательный_%1 КАК Обязательный_%1,";
	
	Для каждого Разрез Из Разрезы Цикл
		ПоляРазрезов.Добавить(СтрШаблон(ШаблонУчет, Разрез));
		ПоляРазрезов.Добавить(СтрШаблон(ШаблонОбязательный, Разрез));
	КонецЦикла; 
	ПоляРазрезовСтр = СтрСоединить(ПоляРазрезов, Символы.ПС);
	ТекстЗапроса  	= СтрЗаменить(ТекстЗапроса, "&ПоляРазрезов КАК ПоляРазрезов,", ПоляРазрезовСтр);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Статья", Статья);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаСтатья = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаСтатья.Следующий() Цикл
		СвойстваСтатьи = Новый Структура; 
		ЗаполнитьЗначенияСвойств(СвойстваСтатьи, ВыборкаСтатья);
		СвойстваСтатьи.Вставить("Суммовой",ВыборкаСтатья.Учет_Сумма);
		СвойстваСтатьи.Вставить("Количественный", ВыборкаСтатья.Учет_Количество);
		
		Для каждого Разрез Из Разрезы Цикл
			СвойстваСтатьи.Вставить(Разрез,ВыборкаСтатья["Учет_" + Разрез]);
			СвойстваСтатьи.Вставить(Разрез + "ПроверятьЗаполнение", ВыборкаСтатья["Обязательный_" + Разрез]);
		КонецЦикла; 
	КонецЦикла;
	
	Возврат СвойстваСтатьи;
	
КонецФункции

// Возвращает описание измерений регистра "Обороты по бюджету". 
//
// Параметры:
//  ИменаИсключений	 - Строка - перечень измерений регистра, разделенных запятой, которые не нужно описывать.
// 
// Возвращаемое значение:
//  ИзмеренияБюджетирования - фиксированная структура.
//
Функция ИзмеренияБюджетирования(ИменаИсключений = "") Экспорт

	Если ПустаяСтрока(ИменаИсключений) Тогда
		Исключения = Новый Массив();
	Иначе
		Исключения = СтрРазделить(ИменаИсключений,",");
	КонецЕсли; 	

	Исключения.Добавить("Валюта");
	НастройкиИзмерений = НастройкиДополнительныхИзмерений();
	ИзмеренияРегистра = Метаданные.РегистрыНакопления.бит_ОборотыПоБюджетам.Измерения;
	
	ДанныеРегистра = Новый Структура; 
	ДанныеРегистра.Вставить("КоличествоИзмерений", 0);
	Для Индекс = 1 По ИзмеренияРегистра.Количество() Цикл
		ДанныеРегистра.Вставить("Измерение" + Индекс, 			   	  	   Неопределено);
		ДанныеРегистра.Вставить("Измерение" + Индекс + "Представление",    Неопределено);
		ДанныеРегистра.Вставить("Измерение" + Индекс + "ТипЗначения",      Неопределено);
		ДанныеРегистра.Вставить("Измерение" + Индекс + "Предопределенное", Ложь);
	КонецЦикла; 
	
	Индекс = 0;
	Для каждого Измерение Из ИзмеренияРегистра Цикл

		Если Исключения.Найти(Измерение.Имя) <> Неопределено Тогда
			Продолжить;		
		КонецЕсли; 
		
		Если СтрНачинаетсяС(Измерение.Имя, "Аналитика_") Тогда
			Настройка = НастройкиИзмерений.Получить(Измерение.Имя); 
			Если Настройка = Неопределено Тогда
				Продолжить;
			Иначе	
				Представление 	 = Настройка.Синоним;
				Предопределенное = Ложь;
				ТипЗначения 	 = Настройка.ТипЗначения;
			КонецЕсли; 
		Иначе	
			Представление 	 = Измерение.Представление();
			Предопределенное = Истина;
			ТипЗначения      = Измерение.Тип;
		КонецЕсли; 
		
		Индекс = Индекс + 1;
		ДанныеРегистра.Вставить("Измерение" + Индекс, 			   		   Измерение.Имя);
		ДанныеРегистра.Вставить("Измерение" + Индекс + "Представление",    Представление);
		ДанныеРегистра.Вставить("Измерение" + Индекс + "ТипЗначения",      ТипЗначения);
		ДанныеРегистра.Вставить("Измерение" + Индекс + "Предопределенное", Ложь);
	КонецЦикла;
	
	ДанныеРегистра.Вставить("КоличествоИзмерений", Индекс);
	Возврат Новый ФиксированнаяСтруктура(ДанныеРегистра);
	
КонецФункции

Функция НастройкиДополнительныхИзмерений() Экспорт

	Возврат бит_МеханизмДопИзмерений.ПолучитьНастройкиДополнительныхИзмерений();

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПоляУчетаБП()
	
	ПоляУчета = Новый Структура;
	ПоляУчета.Вставить("Контрагент",			Ложь);
	ПоляУчета.Вставить("ДоговорКонтрагента",	Ложь);
	ПоляУчета.Вставить("Проект",				Ложь);
	ПоляУчета.Вставить("НоменклатурнаяГруппа",	Ложь);
	ПоляУчета.Вставить("БанковскийСчет",		Ложь);
	ПоляУчета.Вставить("Аналитика_1",			Ложь);
	ПоляУчета.Вставить("Аналитика_2",			Ложь);
	ПоляУчета.Вставить("Аналитика_3",			Ложь);
	ПоляУчета.Вставить("Аналитика_4",			Ложь);
	ПоляУчета.Вставить("Аналитика_5",			Ложь);
	ПоляУчета.Вставить("Аналитика_6",			Ложь);
	ПоляУчета.Вставить("Аналитика_7",			Ложь);
	
	Возврат ПоляУчета;

КонецФункции

Функция ТекстЗапросаБП()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтатьиОборотов.Учет_Количество КАК Количество,
	|	СтатьиОборотов.Учет_Сумма КАК Сумма,
	|	СтатьиОборотов.Учет_Контрагент КАК Контрагент,
	|	СтатьиОборотов.Учет_ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СтатьиОборотов.Учет_Проект КАК Проект,
	|	СтатьиОборотов.Учет_НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	СтатьиОборотов.Учет_БанковскийСчет КАК БанковскийСчет,
	|	СтатьиОборотов.Учет_Аналитика_1 КАК Аналитика_1,
	|	СтатьиОборотов.Учет_Аналитика_2 КАК Аналитика_2,
	|	СтатьиОборотов.Учет_Аналитика_3 КАК Аналитика_3,
	|	СтатьиОборотов.Учет_Аналитика_4 КАК Аналитика_4,
	|	СтатьиОборотов.Учет_Аналитика_5 КАК Аналитика_5,
	|	СтатьиОборотов.Учет_Аналитика_6 КАК Аналитика_6,
	|	СтатьиОборотов.Учет_Аналитика_7 КАК Аналитика_7
	|ИЗ
	|	Справочник.бит_СтатьиОборотов КАК СтатьиОборотов
	|ГДЕ
	|	СтатьиОборотов.Ссылка = &СтатьяОборотов";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПоляУчетаERP()
	
	ПоляУчета = Новый Структура;
	ПоляУчета.Вставить("Аналитика_1",	Ложь);
	ПоляУчета.Вставить("Аналитика_2",	Ложь);
	ПоляУчета.Вставить("Аналитика_3",	Ложь);
	ПоляУчета.Вставить("Аналитика_4",	Ложь);
	ПоляУчета.Вставить("Аналитика_5",	Ложь);
	ПоляУчета.Вставить("Аналитика_6",	Ложь);
	ПоляУчета.Вставить("Аналитика_7",	Ложь);
	ПоляУчета.Вставить("Аналитика_8",	Ложь);
	ПоляУчета.Вставить("Аналитика_9",	Ложь);
	ПоляУчета.Вставить("Аналитика_10",	Ложь);
	ПоляУчета.Вставить("Аналитика_11",	Ложь);
	ПоляУчета.Вставить("Аналитика_12",	Ложь);
	
	Возврат ПоляУчета;

КонецФункции

Функция ТекстЗапросаERP()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтатьиОборотов.Учет_Количество КАК Количество,
	|	СтатьиОборотов.Учет_Сумма КАК Сумма,
	|	СтатьиОборотов.Учет_Аналитика_1 КАК Аналитика_1,
	|	СтатьиОборотов.Учет_Аналитика_2 КАК Аналитика_2,
	|	СтатьиОборотов.Учет_Аналитика_3 КАК Аналитика_3,
	|	СтатьиОборотов.Учет_Аналитика_4 КАК Аналитика_4,
	|	СтатьиОборотов.Учет_Аналитика_5 КАК Аналитика_5,
	|	СтатьиОборотов.Учет_Аналитика_6 КАК Аналитика_6,
	|	СтатьиОборотов.Учет_Аналитика_7 КАК Аналитика_7,
	|	СтатьиОборотов.Учет_Аналитика_8 КАК Аналитика_8,
	|	СтатьиОборотов.Учет_Аналитика_9 КАК Аналитика_9,
	|	СтатьиОборотов.Учет_Аналитика_10 КАК Аналитика_10,
	|	СтатьиОборотов.Учет_Аналитика_11 КАК Аналитика_11,
	|	СтатьиОборотов.Учет_Аналитика_12 КАК Аналитика_12
	|ИЗ
	|	Справочник.бит_СтатьиОборотов КАК СтатьиОборотов
	|ГДЕ
	|	СтатьиОборотов.Ссылка = &СтатьяОборотов";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

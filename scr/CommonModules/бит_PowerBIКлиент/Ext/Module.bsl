//////////////////////////////////////////////////////////////////////////////////////
//
// Клиентские методы формы ФормаВыгрузкиМодели обработки бит_ПанельУправленияPowerBI.
//
//////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Сохраняет модели Power BI (*.pbit) по выбранному пути.
//
// Параметры:
//  ИмяМакетаМоделиОтчета	 - Строка	 - Имя макета обработки бит_ПанельУправленияPowerBI, для веб или FTP публикации данных.
//  Путь					 - Строка	 - Каталог сохранения модели .
//  ОткрытьВPowerBI			 - Булево	 - Открыть модель в программе Power BI сразу после сохранения.
//  ОткрытьПапкуСФайлом		 - Булево	 - Открыть папку с сохраненным файлом.
//
Процедура СохранитьМодель(ИмяМакетаМоделиОтчета, Путь, ОткрытьВPowerBI, ОткрытьПапкуСФайлом) Экспорт

	ОписаниеФайла = бит_PowerBIВызовСервера.ПоместитьФайлВоВременноеХранилищеНаСервере(ИмяМакетаМоделиОтчета);
	ТекстСообщения = НСтр("ru = 'Для сохранения файлов рекомендуется установить расширение для веб-клиента 1С:Предприятие.'");
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("АдресВоВременномХранилище",	ОписаниеФайла.АдресВоВременномХранилище);
	ДополнительныеПараметры.Вставить("Представление",				ОписаниеФайла.Представление);
	ДополнительныеПараметры.Вставить("Путь",						Путь);
	ДополнительныеПараметры.Вставить("ОткрытьВPowerBI",				ОткрытьВPowerBI);
	ДополнительныеПараметры.Вставить("ОткрытьПапкуСФайлом",			ОткрытьПапкуСФайлом);
	Обработчик = Новый ОписаниеОповещения("ВыгрузитьВФайлЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Обработчик, ТекстСообщения);

КонецПроцедуры

// Завершает получение модели Power BI из временного хранилища.
//
// Параметры:
//  Подключено				 - Булево	 - Признак подключения расширения работы с файлами.
//  ДополнительныеПараметры	 - Структура - Содержит ключи:
//  	* АдресВоВременномХранилище	- Строка - Адрес во временном хранилище.
//  	* Представление				- Строка - Имя файла.
//  	* Путь						- Строка - Путь сохранения файла на рабочей станции клиента.
//  	* ОткрытьВPowerBI			- Булево - Открыть модель в программе Power BI сразу после сохранения.
//  	* ОткрытьПапкуСФайлом		- Булево - Открыть папку с сохраненным файлом.
//
Процедура ВыгрузитьВФайлЗавершение(Подключено, ДополнительныеПараметры) Экспорт
	
	Если Не Подключено Тогда
		ПолучитьФайл(ДополнительныеПараметры.АдресВоВременномХранилище, ДополнительныеПараметры.Представление, Истина);
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла	= ДополнительныеПараметры.Путь;
	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, ДополнительныеПараметры.АдресВоВременномХранилище));
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьПолучениеФайловЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	НачатьПолучениеФайлов(ОписаниеОповещения, ПолучаемыеФайлы, ПолноеИмяФайла, Ложь);
	
КонецПроцедуры

// Завершает выгрузку файла модели Power BI, в каталог указанный пользователем и выполняет выбранные действия.
//
// Параметры:
//  ПолученныеФайлы			 - Массив	 - Описание местоположения файла на клиенте.
//  ДополнительныеПараметры	 - Структура - Содержит ключи:
//  	* ОткрытьВPowerBI		- Булево - Открыть модель в программе Power BI сразу после сохранения.
//  	* ОткрытьПапкуСФайлом	- Булево - Открыть папку с сохраненным файлом.
//
Процедура НачатьПолучениеФайловЗавершение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт

	Если ПолученныеФайлы = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'При сохранении возникла ошибка'"));
	Иначе
		// Открыть Файл.
		ИмяОткрываемогоФайла = ПолученныеФайлы[0].Имя;
		СистемнаяИнфо = Новый СистемнаяИнформация;
		Если СистемнаяИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 Или СистемнаяИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
			ИмяОткрываемогоФайла = СтрЗаменить(ИмяОткрываемогоФайла, "/", "\");
		КонецЕсли;
		
		Если ДополнительныеПараметры.ОткрытьВPowerBI Тогда
			ФайловаяСистемаКлиент.ЗапуститьПрограмму(ИмяОткрываемогоФайла);
		КонецЕсли;
		
		Если ДополнительныеПараметры.ОткрытьПапкуСФайлом Тогда
			ОбщегоНазначенияКлиент.ОткрытьПроводник(ИмяОткрываемогоФайла);
		КонецЕсли;
		
	КонецЕсли;
	
	Оповестить("ЗакрытьФормуМоделиPowerBI");
	
КонецПроцедуры

// Функция - Получить настройки транспорта.
// 
// Возвращаемое значение:
//  Структура - Содержит ключи:
//  	* FTPСервер							- Строка - Адрес FTP-сервера.
//  	* FTPКаталог						- Строка - Каталог на FTP-сервере.
//  	* FTPСоединениеПорт					- Число - Номер порта на FTP-сервере.
//  	* FTPСоединениеПассивноеСоединение	- Булево - Пассивное соединение, если значение Истина, иначе активное.
//  	* FTPСоединениеПользователь			- Строка - Имя пользователя.
//  	* FTPСоединениеПароль				- Строка - Пароль.
//
Функция ПолучитьFTPНастройкиСоединения() Экспорт
	
	FTPНастройкиСоединения = Новый Структура();
	FTPНастройкиСоединения.Вставить("FTPАдрес",							"");
	FTPНастройкиСоединения.Вставить("FTPСервер",						"");
	FTPНастройкиСоединения.Вставить("FTPКаталог",						"");
	FTPНастройкиСоединения.Вставить("FTPСоединениеПорт",				21);
	FTPНастройкиСоединения.Вставить("FTPСоединениеПассивноеСоединение",Истина);
	FTPНастройкиСоединения.Вставить("FTPСоединениеПользователь",		"");
	FTPНастройкиСоединения.Вставить("FTPСоединениеПароль",				"");
	
	Возврат FTPНастройкиСоединения;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Преобразовывает текстовое представление статуса кода маркировки МОТП в значение перечисления.
//
// Параметры:
//  ЗначениеПоиска - Строка - значение для перекодировки
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыКодовМаркировкиСУЗ - статус кода маркировки.
//
Функция СтатусКодаМаркировки(Знач ЗначениеПоиска) Экспорт
	
	ЗначениеПоиска = ВРег(ЗначениеПоиска);
	
	Если ЗначениеПоиска = "GENERATED" Тогда
		Возврат Перечисления.СтатусыКодовМаркировкиСУЗ.Сгенерирован;
	ИначеЕсли ЗначениеПоиска = "UTILISED" Тогда
		Возврат Перечисления.СтатусыКодовМаркировкиСУЗ.Использован;
	ИначеЕсли ЗначениеПоиска = "DROPPED_OUT" Тогда
		Возврат Перечисления.СтатусыКодовМаркировкиСУЗ.Отбракован;
	ИначеЕсли ЗначениеПоиска = "PACKED" Тогда
		Возврат Перечисления.СтатусыКодовМаркировкиСУЗ.Упакован;
	КонецЕсли;
	
	ВызватьИсключение
		СтрШаблон(
			НСтр("ru = 'Неизвестный статус кода маркировки: %1'"),
			ЗначениеПоиска);
	
КонецФункции

// Преобразовывает текстовое представление статуса кода маркировки МОТП в значение перечисления.
//
// Параметры:
//  ЗначениеПоиска - Строка - значение для перекодировки
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыКодовМаркировкиСУЗ - статус кода маркировки.
//
Функция СтатусОбработкиОтчета(Знач ЗначениеПоиска) Экспорт
	
	ЗначениеПоиска = ВРег(ЗначениеПоиска);
	
	Если ЗначениеПоиска = "DRAFT" Тогда
		Возврат Перечисления.СтатусыОбработкиСообщенийИСМП.ЗаявкаПринята;
	ИначеЕсли ЗначениеПоиска = "PENDING" Тогда
		Возврат Перечисления.СтатусыОбработкиСообщенийИСМП.ЗаявкаОбрабатывается;
	ИначеЕсли ЗначениеПоиска = "READY_TO_SEND" Тогда
		Возврат Перечисления.СтатусыОбработкиСообщенийИСМП.ЗаявкаОбрабатывается;
	ИначеЕсли ЗначениеПоиска = "REJECTED" Тогда
		Возврат Перечисления.СтатусыОбработкиСообщенийИСМП.ЗаявкаОтклонена;
	ИначеЕсли ЗначениеПоиска = "SENT" Тогда
		Возврат Перечисления.СтатусыОбработкиСообщенийИСМП.ЗаявкаВыполнена;
	КонецЕсли;
	
	ВызватьИсключение
		СтрШаблон(
			НСтр("ru = 'Неизвестный статус отчета СУЗ: %1'"),
			ЗначениеПоиска);
	
КонецФункции

// Преобразовывает вид операции ИС МП в вид отчета об использовании кодов маркировки.
//
// Параметры:
//  ЗначениеПоиска - ПеречислениеСсылка.ВидыОперацийИСМП - значение для перекодировки
// 
// Возвращаемое значение:
//  Строка - Вид отчета об использовании кодов маркировки.
//
Функция ВидОтчетаОбИспользованииКодовМаркировки(Знач ЗначениеПоиска) Экспорт
	
	Если ЗначениеПоиска = Перечисления.ВидыОперацийИСМП.ОтчетОПередачеКМНаПроизводственнуюЛинию Тогда
		Возврат "USED_FOR_PRODUCTION";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыОперацийИСМП.ОтчетОПередачеКМНаПринтер Тогда
		Возврат "SENT_TO_PRINTER";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыОперацийИСМП.ОтчетОПечатиКМ Тогда
		Возврат "PRINTED";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыОперацийИСМП.ОтчетОПотереРаспечатанныхКМ Тогда
		Возврат "PRINTER_LOST";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыОперацийИСМП.ОтчетОВерификацииНанесенныхКМ Тогда
		Возврат "VERIFIED";
	КонецЕсли;
	
	ВызватьИсключение
		СтрШаблон(
			НСтр("ru = 'Неизвестный вид отчета об использовании КМ СУЗ: %1'"),
			ЗначениеПоиска);
	
КонецФункции

// Преобразовывает вид операции ИС МП в вид отчета об использовании кодов маркировки.
//
// Параметры:
//  ЗначениеПоиска - ПеречислениеСсылка.ВидыОперацийИСМП - значение для перекодировки
// 
// Возвращаемое значение:
//  Строка - Вид отчета об использовании кодов маркировки.
//
Функция ПричинаСписанияКМ(Знач ЗначениеПоиска) Экспорт
	
	Если ЗначениеПоиска = Перечисления.ПричиныСписанияКодовМаркировкиИСМП.Испорчен Тогда
		Возврат "DEFECT";
	ИначеЕсли ЗначениеПоиска = Перечисления.ПричиныСписанияКодовМаркировкиИСМП.ИстечениеСрока Тогда
		Возврат "EXPIRY";
	ИначеЕсли ЗначениеПоиска = Перечисления.ПричиныСписанияКодовМаркировкиИСМП.Уничтожен Тогда
		Возврат "OTHER";
	ИначеЕсли ЗначениеПоиска = Перечисления.ПричиныСписанияКодовМаркировкиИСМП.Утерян Тогда
		Возврат "OTHER";
	ИначеЕсли ЗначениеПоиска = Перечисления.ПричиныСписанияКодовМаркировкиИСМП.Прочее Тогда
		Возврат "OTHER";	
	КонецЕсли;
	
	ВызватьИсключение
		СтрШаблон(
			НСтр("ru = 'Неизвестная причина списания КМ СУЗ: %1'"),
			ЗначениеПоиска);
	
КонецФункции

// Преобразовывает текстовое представление статуса кода маркировки МОТП в значение перечисления.
//
// Параметры:
//  ЗначениеПоиска - Строка - значение для перекодировки
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыКодовМаркировкиСУЗ - статус кода маркировки.
//
Функция СтатусБизнесЗаказа(Знач ЗначениеПоиска) Экспорт
	
	ЗначениеПоиска = ВРег(ЗначениеПоиска);
	
	Если ЗначениеПоиска = "CREATED" Тогда
		Возврат Перечисления.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМП.СУЗПринятКОбработке;
	ИначеЕсли ЗначениеПоиска = "PENDING" Тогда
		Возврат Перечисления.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМП.СУЗПринятКОбработке;
	ИначеЕсли ЗначениеПоиска = "APPROVED" Тогда
		Возврат Перечисления.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМП.СУЗПодтвержденИСМП;
	ИначеЕсли ЗначениеПоиска = "READY" Тогда
		Возврат Перечисления.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМП.СУЗПринятКПроизводству;
	ИначеЕсли ЗначениеПоиска = "CLOSED" Тогда
		Возврат Перечисления.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМП.Выполнен;
	ИначеЕсли ЗначениеПоиска = "DECLINED" Тогда
		Возврат Перечисления.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМП.Ошибка;
	КонецЕсли;
	
	ВызватьИсключение
		СтрШаблон(
			НСтр("ru = 'Неизвестный статус отчета СУЗ: %1'"),
			ЗначениеПоиска);
	
КонецФункции

// Преобразовывает текстовое представление статуса кода маркировки МОТП в значение перечисления.
//
// Параметры:
//  ЗначениеПоиска - Строка - значение для перекодировки
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыКодовМаркировкиСУЗ - статус кода маркировки.
//
Функция СтатусПулаКодовМаркировки_V1(Знач ЗначениеПоиска) Экспорт
	
	ЗначениеПоиска = ВРег(ЗначениеПоиска);
	
	Если ЗначениеПоиска = "PENDING" Тогда
		Возврат Перечисления.СтатусыПулаКодовМаркировкиСУЗ.Обрабатывается;
	ИначеЕсли ЗначениеПоиска = "READY" Тогда
		Возврат Перечисления.СтатусыПулаКодовМаркировкиСУЗ.Готов;
	ИначеЕсли ЗначениеПоиска = "REJECTED" Тогда
		Возврат Перечисления.СтатусыПулаКодовМаркировкиСУЗ.Ошибка;
	ИначеЕсли ЗначениеПоиска = "CLOSED" Тогда
		Возврат Перечисления.СтатусыПулаКодовМаркировкиСУЗ.Закрыт;
	КонецЕсли;
	
	ВызватьИсключение
		СтрШаблон(
			НСтр("ru = 'Неизвестный статус пула кода маркировки: %1'"),
			ЗначениеПоиска);
	
КонецФункции

// Преобразовывает текстовое представление статуса кода маркировки МОТП в значение перечисления.
//
// Параметры:
//  ЗначениеПоиска - Строка - значение для перекодировки
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыКодовМаркировкиСУЗ - статус кода маркировки.
//
Функция СтатусПулаКодовМаркировки_V2(Знач ЗначениеПоиска) Экспорт
	
	ЗначениеПоиска = ВРег(ЗначениеПоиска);
	
	Если ЗначениеПоиска = "PENDING" Тогда
		Возврат Перечисления.СтатусыПулаКодовМаркировкиСУЗ.Обрабатывается;
	ИначеЕсли ЗначениеПоиска = "ACTIVE" Тогда
		Возврат Перечисления.СтатусыПулаКодовМаркировкиСУЗ.Готов;
	ИначеЕсли ЗначениеПоиска = "CLOSED" Тогда
		Возврат Перечисления.СтатусыПулаКодовМаркировкиСУЗ.Закрыт;
	ИначеЕсли ЗначениеПоиска = "REJECTED" Тогда
		Возврат Перечисления.СтатусыПулаКодовМаркировкиСУЗ.Отклонен;
	ИначеЕсли ЗначениеПоиска = "EXHAUSTED" Тогда
		Возврат Перечисления.СтатусыПулаКодовМаркировкиСУЗ.Закрыт;
	КонецЕсли;
	
	ВызватьИсключение
		СтрШаблон(
			НСтр("ru = 'Неизвестный статус пула кода маркировки: %1'"),
			ЗначениеПоиска);
	
КонецФункции

// Перекодирует способ выпуска товаров в для обмена с СУЗ ИС МП.
//
// Параметры:
//  ЗначениеПоиска - Строка, ПеречислениеСсылка.СпособыВводаВОборотСУЗ - значение для перекодировки.
//  Назначение     - Строка - СУЗ, ИСМП или ОСТАТКИ
//
// Возвращаемое значение:
//  Строка, ПеречислениеСсылка.СпособыВводаВОборотСУЗ - Результат перекодирования.
//
Функция СпособВыпускаВОборот(Знач ЗначениеПоиска, Назначение = "СУЗ") Экспорт
	
	Если ЗначениеПоиска = "PRODUCTION" Или ЗначениеПоиска = "LOCAL" Или ЗначениеПоиска = "PRODUCED_IN_RF" Тогда
		Результат = Перечисления.СпособыВводаВОборотСУЗ.Производство;
	ИначеЕсли ЗначениеПоиска = "IMPORT" Или ЗначениеПоиска = "FOREIGN" Или ЗначениеПоиска = "IMPORTED_INTO_RF" Тогда
		Результат = Перечисления.СпособыВводаВОборотСУЗ.Импорт;
	ИначеЕсли ЗначениеПоиска = "REMAINS" Тогда
		Результат = Перечисления.СпособыВводаВОборотСУЗ.МаркировкаОстатков;
	ИначеЕсли ЗначениеПоиска = "CROSSBORDER" Тогда
		Результат = Перечисления.СпособыВводаВОборотСУЗ.ТрансграничнаяТорговля;
		
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыВводаВОборотСУЗ.Производство И Назначение = "СУЗ" Тогда
		Результат = "PRODUCTION";
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыВводаВОборотСУЗ.Производство И Назначение = "ИСМП" Тогда
		Результат = "LOCAL";
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыВводаВОборотСУЗ.Производство И Назначение = "ОСТАТКИ" Тогда
		Результат = "PRODUCED_IN_RF";
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыВводаВОборотСУЗ.Импорт И Назначение = "СУЗ" Тогда
		Результат = "IMPORT";
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыВводаВОборотСУЗ.Импорт И Назначение = "ИСМП" Тогда
		Результат = "FOREIGN";
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыВводаВОборотСУЗ.Импорт И Назначение = "ОСТАТКИ" Тогда
		Результат = "IMPORTED_INTO_RF";
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыВводаВОборотСУЗ.МаркировкаОстатков Тогда
		Результат = "REMAINS";
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыВводаВОборотСУЗ.ТрансграничнаяТорговля Тогда
		Результат = "CROSSBORDER";
	Иначе
		ВызватьИсключение
		СтрШаблон(
			НСтр("ru = 'Неизвестный способ выпуска в оборот: %1'"),
			ЗначениеПоиска);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Перекодирует вид средства идентификации для обмена с СУЗ ИС МП.
//
// Параметры:
//  ЗначениеПоиска - Строка, ПеречислениеСсылка.ВидыСредствИдентификацииСУЗ - Значение для перекодировки.
// 
// Возвращаемое значение:
//  Строка, ПеречислениеСсылка.ВидыСредствИдентификацииСУЗ - Результат перекодирования.
//
Функция ВидСредстваИдентификации(Знач ЗначениеПоиска) Экспорт
	
	Если ЗначениеПоиска = "GLUED" Тогда
		Результат = Перечисления.ВидыСредствИдентификацииСУЗ.Клеевой;
	ИначеЕсли ЗначениеПоиска = "PRINTED" Тогда
		Результат = Перечисления.ВидыСредствИдентификацииСУЗ.Печатный;
	ИначеЕсли ЗначениеПоиска = "HINGED" Тогда
		Результат =  Перечисления.ВидыСредствИдентификацииСУЗ.Навесной;
	
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыСредствИдентификацииСУЗ.Клеевой Тогда
		Результат =  "GLUED";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыСредствИдентификацииСУЗ.Печатный Тогда
		Результат =  "PRINTED";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыСредствИдентификацииСУЗ.Навесной Тогда
		Результат =  "HINGED";
	Иначе
		ВызватьИсключение
			СтрШаблон(
				НСтр("ru = 'Неизвестный вид средства идентификации: %1'"),
				ЗначениеПоиска);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Перекодирует вид маркировки для обмена с СУЗ ИС МП.
//
// Параметры:
//  ЗначениеПоиска - Строка, ПеречислениеСсылка.ВидыМаркировкиСУЗ - значение для перекодировки.
// 
// Возвращаемое значение:
//  Строка, ПеречислениеСсылка.ВидыМаркировкиСУЗ - Результат перекодирования.
//
Функция ВидМаркировки(Знач ЗначениеПоиска) Экспорт
	
	Если ЗначениеПоиска = "PRODUCT" Тогда
		Результат = Перечисления.ВидыМаркировкиСУЗ.НаТовар;
	ИначеЕсли ЗначениеПоиска = "PRODUCT_LABEL" Тогда
		Результат = Перечисления.ВидыМаркировкиСУЗ.НаТоварныйЯрлык;
	ИначеЕсли ЗначениеПоиска = "PRODUCT_PACKAGE" Тогда
		Результат =  Перечисления.ВидыМаркировкиСУЗ.НаПотребительскуюУпаковку;
	
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыМаркировкиСУЗ.НаТовар Тогда
		Результат =  "PRODUCT";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыМаркировкиСУЗ.НаПотребительскуюУпаковку Тогда
		Результат =  "PRODUCT_PACKAGE";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыМаркировкиСУЗ.НаТоварныйЯрлык Тогда
		Результат =  "PRODUCT_LABEL";
	Иначе
		ВызватьИсключение
			СтрШаблон(
				НСтр("ru = 'Неизвестный вид вид маркировки: %1'"),
				ЗначениеПоиска);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Перекодирует шаблон кода маркировки для обмена с СУЗ ИС МП.
//
// Параметры:
//  ЗначениеПоиска - Строка, ПеречислениеСсылка.ШаблоныКодовМаркировкиСУЗ - значение для перекодировки.
// 
// Возвращаемое значение:
//  Строка, ПеречислениеСсылка.ШаблоныКодовМаркировкиСУЗ - Результат перекодирования.
//
Функция ШаблонКодаМаркировки(Знач ЗначениеПоиска) Экспорт
	
	Если ЗначениеПоиска = 1 Тогда
		Результат = Перечисления.ШаблоныКодовМаркировкиСУЗ.Обувь;
	ИначеЕсли ЗначениеПоиска = 3 Тогда
		Результат =  Перечисления.ШаблоныКодовМаркировкиСУЗ.БлокТабачныхПачек;
	ИначеЕсли ЗначениеПоиска = 4 Тогда
		Результат =  Перечисления.ШаблоныКодовМаркировкиСУЗ.ТабачнаяПачка;
	
	ИначеЕсли ЗначениеПоиска = Перечисления.ШаблоныКодовМаркировкиСУЗ.Обувь Тогда
		Результат =  1;
	ИначеЕсли ЗначениеПоиска = Перечисления.ШаблоныКодовМаркировкиСУЗ.БлокТабачныхПачек Тогда
		Результат =  3;
	ИначеЕсли ЗначениеПоиска = Перечисления.ШаблоныКодовМаркировкиСУЗ.ТабачнаяПачка Тогда
		Результат =  4;
	Иначе
		ВызватьИсключение
			СтрШаблон(
				НСтр("ru = 'Неизвестный шаблон кода маркировки: %1'"),
				ЗначениеПоиска);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Перекодирует способ формирования серийного номера кода маркировки для обмена с СУЗ ИС МП.
//
// Параметры:
//  ЗначениеПоиска - Строка, ПеречислениеСсылка.СпособыФормированияСерийногоНомераСУЗ - значение для перекодировки.
// 
// Возвращаемое значение:
//  Строка, ПеречислениеСсылка.СпособыФормированияСерийногоНомераСУЗ - Результат перекодирования.
//
Функция СпособФормированияСерийногоНомера(Знач ЗначениеПоиска) Экспорт
	
	Если ЗначениеПоиска = "SELF_MADE" Тогда
		Результат = Перечисления.СпособыФормированияСерийногоНомераСУЗ.Самостоятельно;
	ИначеЕсли ЗначениеПоиска = "OPERATOR" Тогда
		Результат = Перечисления.СпособыФормированияСерийногоНомераСУЗ.Автоматически;
	
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыФормированияСерийногоНомераСУЗ.Самостоятельно Тогда
		Результат =  "SELF_MADE";
	ИначеЕсли ЗначениеПоиска = Перечисления.СпособыФормированияСерийногоНомераСУЗ.Автоматически Тогда
		Результат =  "OPERATOR";
	Иначе
		ВызватьИсключение
			СтрШаблон(
				НСтр("ru = 'Неизвестный способ формирования серийного номера: %1'"),
				ЗначениеПоиска);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Параметры для настройки обмена с СУЗ
//
// Возвращаемое значение:
// 	Структура - Параметры для настройки обмена с СУЗ:
// * Таймаут - Число - Таймаут
// * Порт - Число - Порт
// * Адрес - Строка - Адрес
// * Идентификатор - Строка - Адрес
// * Токен - Строка - Адрес
// * ФорматОбмена - ПеречислениеСсылка.ВерсииФорматаОбменаСУЗ - Формат обмена с СУЗ
Функция НоваяНастройкаОбменаСУЗ() Экспорт
	
	НастройкиОбмена = Новый Структура;
	НастройкиОбмена.Вставить("Сервер",                           "suz2.crpt.ru");
	НастройкиОбмена.Вставить("Порт",                             443);
	НастройкиОбмена.Вставить("Таймаут",                          60);
	НастройкиОбмена.Вставить("СтанцияУправленияЗаказами",        Справочники.СтанцииУправленияЗаказамиИСМП.ПустаяСсылка());
	НастройкиОбмена.Вставить("Идентификатор",                    "");
	НастройкиОбмена.Вставить("Токен",                            "");
	НастройкиОбмена.Вставить("ИмяПользователя",                  "");
	НастройкиОбмена.Вставить("ФорматОбмена",                     Неопределено);
	НастройкиОбмена.Вставить("ИспользоватьЗащищенноеСоединение", Ложь);
	НастройкиОбмена.Вставить("ПредставлениеСервиса",             НСтр("ru = 'СУЗ'"));
	
	Возврат НастройкиОбмена;
	
КонецФункции

// Перекодирует вид обуви при получении новых GTIN маркировки остатков для обмена с СУЗ ИС МП.
//
// Параметры:
//  ЗначениеПоиска - Строка, ПеречислениеСсылка.ВидыОбувиИСМП - значение для перекодировки.
// 
// Возвращаемое значение:
//  Строка, ПеречислениеСсылка.ВидыОбувиИСМП - Результат перекодирования.
//
Функция ВидОбуви(Знач ЗначениеПоиска) Экспорт
	
	Если ЗначениеПоиска = "MALE" Тогда
		Результат = Перечисления.ВидыОбувиИСМП.Мужская;
	ИначеЕсли ЗначениеПоиска = "FEMALE" Тогда
		Результат = Перечисления.ВидыОбувиИСМП.Женская;
	ИначеЕсли ЗначениеПоиска = "BABY" Тогда
		Результат = Перечисления.ВидыОбувиИСМП.Детская;
	ИначеЕсли ЗначениеПоиска = "UNISEX" Тогда
		Результат = Перечисления.ВидыОбувиИСМП.Унисекс;
		
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыОбувиИСМП.Унисекс Тогда
		Результат = "UNISEX";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыОбувиИСМП.Детская Тогда
		Результат = "BABY";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыОбувиИСМП.Женская Тогда
		Результат = "FEMALE";
	ИначеЕсли ЗначениеПоиска = Перечисления.ВидыОбувиИСМП.Мужская Тогда
		Результат = "MALE";
	Иначе
		ВызватьИсключение
			СтрШаблон(
				НСтр("ru = 'Неизвестный вид обуви: %1'"),
				ЗначениеПоиска);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


#КонецОбласти
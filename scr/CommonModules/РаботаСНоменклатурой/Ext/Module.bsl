#Область СлужебныйПрограммныйИнтерфейс

// Процедура обновляет содержание услуги в табличной части документа.
// Устанавливает содержание с учетом периодичности.
//
// Параметры:
//    ТабличнаяЧасть - Табличная часть - Табличная часть документа, например - Товары, Услуги или АгентскиеУслуги.
//                                       В таблице обязательно наличие колонок "Номенклатура" и "Содержание".
//    ТекущаяДата    - Дата - Текущая дата документа. Используется для формирования нового содержания услуг. 
//    ПредыдущаяДата - Дата - Предыдущая дата документа. Если дата заполнена,
//                            то будет выполнена проверка на изменение содержания.
//                            В случае, если содержание услуги изменено пользователем,
//                            то новое содержание не будет установлено.
//
Процедура ОбновитьСодержаниеУслуг(ТабличнаяЧасть, Знач ТекущаяДата, Знач ПредыдущаяДата = Неопределено) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПериодичностьУслуг") Тогда
		Возврат;
	КонецЕсли;
	
	// Получим реквизиты используемой номенклатуры в таблице.
	МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть.Выгрузить(), "Номенклатура", Истина);
	
	ОбщегоНазначенияБПКлиентСервер.УдалитьНеЗаполненныеЭлементыМассива(МассивНоменклатуры);
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
		МассивНоменклатуры,
		"Наименование, НаименованиеПолное, ПериодичностьУслуги, Услуга");
		
	Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		
		РеквизитыТекущейНоменклатуры = РеквизитыНоменклатуры[СтрокаТаблицы.Номенклатура];
		Если РеквизитыТекущейНоменклатуры = Неопределено
			ИЛИ НЕ РеквизитыТекущейНоменклатуры.Услуга
			ИЛИ НЕ ЗначениеЗаполнено(РеквизитыТекущейНоменклатуры.ПериодичностьУслуги) Тогда
			// Обрабатываем только услуги с установленной периодичностью.
			Продолжить;
		КонецЕсли;
		
		НаименованиеНоменклатуры = ?(ПустаяСтрока(РеквизитыТекущейНоменклатуры.НаименованиеПолное),
			РеквизитыТекущейНоменклатуры.Наименование,
			РеквизитыТекущейНоменклатуры.НаименованиеПолное);
		
		Если ЗначениеЗаполнено(ПредыдущаяДата) Тогда
			// Если есть предыдущая дата, 
			// то проверим изменялось ли содержание услуги пользователем.
			ПредыдущееСодержаниеУслуги = РаботаСНоменклатуройКлиентСервер.СодержаниеУслуги(
				НаименованиеНоменклатуры,
				РеквизитыТекущейНоменклатуры.ПериодичностьУслуги,
				ПредыдущаяДата);
			СодержаниеУслугиИзменено = (СтрокаТаблицы.Содержание <> ПредыдущееСодержаниеУслуги);
		Иначе
			СодержаниеУслугиИзменено = Ложь;
		КонецЕсли;
		
		Если СодержаниеУслугиИзменено Тогда
			Продолжить;
		КонецЕсли;
		
		// Установим новое содержание услуги.
		СтрокаТаблицы.Содержание = РаботаСНоменклатуройКлиентСервер.СодержаниеУслуги(
			НаименованиеНоменклатуры,
			РеквизитыТекущейНоменклатуры.ПериодичностьУслуги,
			ТекущаяДата);
	КонецЦикла;
	
КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-07-15 (#4214)
// Процедура обновляет признак прослеживаемости товара в табличной части документа.
//
// Параметры:
//    ТабличнаяЧасть - табличная часть документа.
//                     В таблице обязательно наличие колонок "Номенклатура" и "ПрослеживаемыйТовар".
//    ДатаДокумента  - дата - текущая дата документа.
//
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-22 (#4405)
//Процедура ОбновитьПризнакПрослеживаемости(ТабличнаяЧасть, ВестиУчетПрослеживаемыхТоваров) Экспорт
Процедура ОбновитьПризнакПрослеживаемости(ТабличнаяЧасть, ВестиУчетПрослеживаемыхТоваров, ОС = Ложь) Экспорт
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-22 (#4405)
	
	Если НЕ ВестиУчетПрослеживаемыхТоваров Тогда
		Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
			СтрокаТаблицы.ПрослеживаемыйТовар = Ложь;
		КонецЦикла;
	Иначе
		
		// Получим реквизиты используемой номенклатуры в таблице.
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-22 (#4405)
		//МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть.Выгрузить(), "Номенклатура", Истина);
		Если ОС Тогда 
			КолонкаНоменклатуры = "ОсновноеСредство";
		Иначе
			КолонкаНоменклатуры = "Номенклатура";
		КонецЕсли;
		МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть.Выгрузить(), КолонкаНоменклатуры, Истина);
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-22 (#4405)
		ОбщегоНазначенияБПКлиентСервер.УдалитьНеЗаполненныеЭлементыМассива(МассивНоменклатуры);
		
		РеквизитыНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
		МассивНоменклатуры,
		"ПрослеживаемыйТовар");
		
		ТаблицаТоваров = ТабличнаяЧасть.Выгрузить();
		ЕстьКолонкаЕстьВДокументеРеализации  = ТаблицаТоваров.Колонки.Найти("ЕстьВДокументеРеализации") <> Неопределено;
		ЕстьКолонкаЕстьВДокументеПоступления = ТаблицаТоваров.Колонки.Найти("ЕстьВДокументеПоступления") <> Неопределено;
		ЕстьКолонкаНомерГТД                  = ТаблицаТоваров.Колонки.Найти("НомерГТД") <> Неопределено;
		
		Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
			
			Если ЕстьКолонкаЕстьВДокументеРеализации
				И СтрокаТаблицы.ЕстьВДокументеРеализации
				ИЛИ ЕстьКолонкаЕстьВДокументеПоступления
				И СтрокаТаблицы.ЕстьВДокументеПоступления Тогда
				// Не обновляем признак прослеживаемости для строк исходного документа. 
				Продолжить;
			КонецЕсли;
			
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-22 (#4405)
			//РеквизитыТекущейНоменклатуры = РеквизитыНоменклатуры[СтрокаТаблицы.Номенклатура];
			РеквизитыТекущейНоменклатуры = РеквизитыНоменклатуры[СтрокаТаблицы[КолонкаНоменклатуры]];
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-22 (#4405)
			Если РеквизитыТекущейНоменклатуры <> Неопределено Тогда
				СтрокаТаблицы.ПрослеживаемыйТовар = РеквизитыТекущейНоменклатуры;
				Если СтрокаТаблицы.ПрослеживаемыйТовар И ЕстьКолонкаНомерГТД Тогда
					// Дополнительно очистим номер ГТД для прослеживаемого товара.
					СтрокаТаблицы.НомерГТД = Неопределено;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-07-15 (#4214) 
#КонецОбласти
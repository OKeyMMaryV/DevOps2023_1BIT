

///////////////////////////////////////////////////////////////////////////
//УСТАНОВКА ПОДМЕНЮ ВЫБОРА ВИДА ОПЕРАЦИИ ДЛЯ ДОКУМЕНТА "ФОРМА ВВОДА БЮДЖЕТА"

// бит_DKravchenko Процедура Заполняет список пунктов подменю выбора вида операции значениями переданной коллекции 
// объектов метаданных, соответствующей перечислению видов операций для данного документа.
// Всем кнопкам назначается одна команда.
// Обычно используется для заполнения пунктов подменю "ПодменюВидаОперации" командной панели
// формы документа значениями перечисления "Вид операции" для данного вида документа.
//
// Параметры:
//  УправляемаяФорма			  - УправляемаяФорма.
//  ГруппаФормыПодменю			  - ГруппаФормы - Подменю, которое надо заполнить.
//  ОбъектЗаполнения 			  - Коллекция для заполнения пунктов подменю. 
//  ОбъектОбработкиВыбораОперации - Действие, которое надо выполнить при выборе любого пункта подменю.
//  Исключения                    - Соответстие, ключ: имя подменю, 
//												 значение: массив исключений для данного пункта подменю.
//
Процедура УстановитьПодменюВыбораВидаОперацииФормаВводаБюджетаУправляемоеПриложение(УправляемаяФорма
	,ГруппаФормыПодменю
	,ОбъектЗаполнения
	,ОбъектОбработкиВыбораОперации
	,Исключения = Неопределено) Экспорт
	
	Если Не ТипЗнч(Исключения) = Тип("Структура") Тогда
		Исключения = Новый Структура;
	КонецЕсли;	
								
	ЗаполнитьПодменюВФормеВводаБюджетаУправляемоеПриложение(УправляемаяФорма
	,ГруппаФормыПодменю
	,ОбъектЗаполнения
	,ОбъектОбработкиВыбораОперации
	,Исключения); 	
	
КонецПроцедуры // УстановитьПодменюВыбораВидаОперацииЗаявкиУправляемоеПриложение()

// бит_DKravchenko Процедура заполняет подменю в выборе вида операции.
//
// Параметры:
//  УправляемаяФорма 	  		  - УправляемаяФорма.
//  ГруппаФормыПодменю	  		  - ГруппаФормы - Подменю, которое надо заполнить.
//  ИмяПодменю 			  		  – Строка
//  ПредставлениеПодменю  		  - Строка
//  СооответствиеКонтроль 		  - Соответствие
//  ОбъектЗаполнения	  		  - Коллекция для заполнения пунктов подменю.
//  ОбъектОбработкиВыбораОперации - Действие, которое надо выполнить при выборе любого пункта подменю.
//  Исключения			  		  - Соответстие, ключ: имя подменю, 
//										 		 значение: массив исключений для данного пункта подменю.
//
Процедура ЗаполнитьПодменюВФормеВводаБюджетаУправляемоеПриложение(УправляемаяФорма
	,ГруппаФормыПодменю
	,ОбъектЗаполнения
	,ОбъектОбработкиВыбораОперации
	,Исключения)
	
	МассивИсключений = Исключения["ВидыОперацийБК"];
	
	Если Не ТипЗнч(МассивИсключений) = Тип("Массив") Тогда
		МассивИсключений = Новый Массив;
	КонецЕсли;
	
	// Заполняем виды операций для группы подменю.
	Для каждого ЭлементЗаполнения Из ОбъектЗаполнения Цикл
		
		ИмяЗначенияПеречисления = ЭлементЗаполнения.Имя;
		ЗначениеПеречисления 	= Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета[ИмяЗначенияПеречисления];
		
		ИмяКнопки = ГруппаФормыПодменю.Имя + "_" + ИмяЗначенияПеречисления;
		
		Если МассивИсключений.Найти(ЗначениеПеречисления) = Неопределено Тогда
			
			ИмяКоманды = "Команда_" + ИмяКнопки;
			
			// Добавляем новую команду обработки выбора вида операции.
			КомандаУстановитьОперацию = УправляемаяФорма.Команды.Добавить(ИмяКоманды);
			КомандаУстановитьОперацию.Действие = ОбъектОбработкиВыбораОперации;
			
			КнопкаГруппыПодменю = УправляемаяФорма.Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), ГруппаФормыПодменю);
			КнопкаГруппыПодменю.Вид		   = ВидКнопкиФормы.КнопкаКоманднойПанели;
			КнопкаГруппыПодменю.ИмяКоманды = ИмяКоманды;
			КнопкаГруппыПодменю.Заголовок  = ЭлементЗаполнения.Синоним;
			
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПодменюВЗаявкеУправляемоеПриложение()

////////////////////////////////////////////
// ПОДПИСКИ НА СОБЫТИЯ

//сл. процедуры определяют событие документа РО и записывают в регистр событий
//ОКЕЙ Лобанов В.И. (СофтЛаб) Начало 2020-04-18 (#3532)
//Процедура бит_БК_РегистрацияСобытийОбъектаПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
//	//izhtc alena 31.07.2015 замена на типовое версионирование(
//	//Если Источник.ЭтоНовый() Тогда
//	//	Источник.ПараметрыЗаписи.СобытиеПередЗаписью = Перечисления.бит_БК_СобытияОбъекта.Создание;
//	//ИначеЕсли Источник.Модифицированность() Тогда
//	//	Источник.ПараметрыЗаписи.СобытиеПередЗаписью = Перечисления.бит_БК_СобытияОбъекта.Изменение;
//	//Иначе //запись не нового и не измененного не фиксируем
//	//	//Источник.ПараметрыЗаписи.СобытиеПередЗаписью = Неопределено;
//	//КонецЕсли;
//	//izhtc alena 31.07.2015  замена на типовое версионирование)
//КонецПроцедуры
//Процедура бит_БК_РегистрацияСобытийОбъектаПриЗаписиПриЗаписи(Источник, Отказ) Экспорт
//	//izhtc alena 31.07.2015 замена на типовое версионирование(
//	//СобытиеПередЗаписью = Источник.ПараметрыЗаписи.СобытиеПередЗаписью;
//	//Если Не СобытиеПередЗаписью = Перечисления.бит_БК_СобытияОбъекта.ПустаяСсылка() Тогда 
//	//	МенеджерЗаписи = РегистрыСведений.бит_БК_ИсторияСобытийОбъектов.СоздатьМенеджерЗаписи();
//	//	МенеджерЗаписи.Период = ТекущаяДата();
//	//	МенеджерЗаписи.Объект = Источник.Ссылка;
//	//	МенеджерЗаписи.Событие = СобытиеПередЗаписью;
//	//	//bit auavseenkov ++ Загрузка РО из Аксапты
//	//	Если СобытиеПередЗаписью = Перечисления.бит_БК_СобытияОбъекта.Создание и 
//	//		Источник.ДополнительныеСвойства.Свойство("бит_ЗагруженИзАксапты") Тогда 
//	//		МенеджерЗаписи.Пользователь = Справочники.Пользователи.ПустаяСсылка();
//	//	Иначе  
//	//	//--
//	//		МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
//	//	КонецЕсли;
//	//	МенеджерЗаписи.Записать();
//	//КонецЕсли;
//	//izhtc alena 31.07.2015 замена на типовое версионирование)
//КонецПроцедуры
//Процедура бит_БК_РегистрацияСобытийОбъектаОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
//	//izhtc alena 31.07.2015 замена на типовое версионирование(
//	//МенеджерЗаписи = РегистрыСведений.бит_БК_ИсторияСобытийОбъектов.СоздатьМенеджерЗаписи();
//	//МенеджерЗаписи.Период = ТекущаяДата();
//	//МенеджерЗаписи.Объект = Источник.Ссылка;
//	//МенеджерЗаписи.Событие = Перечисления.бит_БК_СобытияОбъекта.Проведение;
//	//МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
//	//МенеджерЗаписи.Записать();
//	//izhtc alena 31.07.2015 замена на типовое версионирование)
//КонецПроцедуры
//ОКЕЙ Лобанов В.И. (СофтЛаб) Конец 2020-04-18 (#3532)

//Установка префикса документа форма ввода
Процедура бит_БК_ПриУстановкеНомера_ФормаВводаПриУстановкеНовогоНомера(Источник, СтандартнаяОбработка, Префикс) Экспорт
	// + БИТ AMerkulov 2014-01-31 /  Установка номера
	
	СтандартнаяОбработка = Ложь;
	СтрокаНомераЛ = Прав(Год(Источник.Дата),2) + Формат(Месяц(Источник.Дата),"ЧЦ=2; ЧВН=");
	СтрокаНомераП = СтрЗаменить(Строка(Источник.бит_ПорядковыйНомерВМесяце), Символы.НПП, "");
	
	Пока СтрДлина(СтрокаНомераП) < 5 Цикл
		СтрокаНомераП = "0" + СтрокаНомераП;	
	КонецЦикла;
	
	Источник.Номер = СтрокаНомераЛ + СтрокаНомераП;
				  
		
	//Если Источник.бит_БК_WEBКлиент Тогда 
	//	Префикс = "W";
	//иначе
	//	Если Источник.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда
	//		Префикс = "И";
	//	ИначеЕсли Источник.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт Тогда		
	//		Префикс = "К";
	//	КонецЕсли;            
	//КонецЕсли;
	
	// - БИТ AMerkulov
КонецПроцедуры

//Определяет статус заявки "Закрыта" по остаткам и записывает изменившийся статус в регистры
Процедура бит_БК_ОпределениеСтатусаЗаявкиОбработкаПроведенияОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	//{ bit SVKushnirenko Bit 27.01.2017 #2657
	Возврат;
	//} bit SVKushnirenko Bit 27.01.2017 #2657
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.бит_ФормаВводаБюджета") И
		 НЕ Источник.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт Тогда
		 Возврат;
	КонецЕсли;		
	
	Если Источник.Метаданные().Реквизиты.Найти("РучнаяКорректировка") <> Неопределено И Источник.РучнаяКорректировка Тогда 
		Возврат;
	КонецЕсли;
	
	//получаем текущие движения документа
	ТаблицаДвижений = Источник.Движения.бит_КонтрольныеЗначенияБюджетов.мТаблицаДвижений;
	//+Сундукова 13.04.16
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
	//Если Типзнч(источник) = тип("ДокументОбъект.бит_ок_ОперацияАксапты") тогда
	Если Типзнч(источник) = тип("ДокументОбъект.бит_ок_ОперацияАксапты")
		ИЛИ Типзнч(источник) = тип("ДокументОбъект.бит_ок_ОперацияАксапты12") Тогда
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
		ТаблицаДвижений  =  Источник.Движения.бит_КонтрольныеЗначенияБюджетов.выгрузить();
	КонецЕсли;
	//-Сундукова 13.04.16	
	ТаблицаДвиженийКопия = ТаблицаДвижений.Скопировать(,"Аналитика_1, СуммаСценарийИсполнение, СуммаСценарийКонтроль");
	////////для РО заполняем Аналитику_1 из Шапки
	//////Если ТипЗнч(Источник) = Тип("ДокументОбъект.бит_БК_РазнесениеОборотов") Тогда
	//////	ТаблицаДвиженийКопия.ЗаполнитьЗначения(Источник.НомерЗаявки, "Аналитика_1");
	//////	ТаблицаДвиженийКопия.ЗаполнитьЗначения(0, "СуммаСценарийКонтроль");
	//////КонецЕсли;
    //для Контракта заполняем Аналитику_1 из Шапки
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.бит_ФормаВводаБюджета") Тогда
		ТаблицаДвиженийКопия.ЗаполнитьЗначения(Источник.бит_БК_НомерЗаявки, "Аналитика_1");
		ТаблицаДвиженийКопия.ЗаполнитьЗначения(0, "СуммаСценарийКонтроль");
	КонецЕсли;
	
	ТаблицаДвиженийКопия.Свернуть("Аналитика_1", "СуммаСценарийИсполнение,СуммаСценарийКонтроль");
		
	Для Каждого ТекСтрока Из ТаблицаДвиженийКопия Цикл
		//Определять остатки Заявки, имеет смысл для проведенной заявки
		
		//{ bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
		//=ИСХОДНЫЙ КОД
		//Если НЕ ТекСтрока.Аналитика_1.Проведен Тогда 
		//=ИСХОДНЫЙ КОД
		
		//+Сенин С.В. 10.11.16 №2657
		//Если НЕ ТекСтрока.Аналитика_1.Проведен Тогда 
		Если не ЗначениеЗаполнено(ТекСтрока.Аналитика_1) или НЕ ТекСтрока.Аналитика_1.Проведен Тогда 
		//-Сенин С.В. 10.11.16 №2657
		//} bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
		 
			Продолжить;
		КонецЕсли;
		
		//получим остаток без движений документа
		Остаток = ПолучитьОстатокПоДокументу(ТекСтрока.Аналитика_1);
		//учтем текущие движения документа
		Остаток = Остаток + ТекСтрока.СуммаСценарийКонтроль - ТекСтрока.СуммаСценарийИсполнение;
		
		// BIT AMerkulov 30062014 ++
		//УстановитьСтатусЗаявкиЗакрытаПоОстатку(Остаток, ТекСтрока.Аналитика_1); 
		УстановитьСтатусЗаявкиЗакрытаПоОстатку(Остаток, ТекСтрока.Аналитика_1, Источник); 
		// BIT AMerkulov 30062014 --		
	КонецЦикла;	
	
КонецПроцедуры

//bit_SVKushnirenko 26.01.2017 #2657
//Возвращает статутс найденый  в истории статусов
// Параметры:
//парСсылка - ссылка на объект, для которого требуется получение значения статуса
//парСтатусПоУмолчанию - статус по умолчанию, который будет возвращен, если в истории нет данных
//парИсключаемыйСтатус - статус (возможно массив статусов) который исключается как "текущий" при поиске значения
//Возврат
//Структура: 
//НайденоВИстории - (булево) Истина = значение данных найдено в истории, Ложь = знаение получено подстановкой (в истории данных не найдено)
//АктуальныйСтатус - значение найденного статуса в истории
//ПредыдущийСтатус - сопутствующее актуальному значение "предыдущего" статуса
//Пользователь - пользователь, который сопутствует найденному значению статуса
//ДатаИзмененияСтатуса - дата найденой установки статуса
Функция ПолучитьАктуальныйСтатус(парСсылка, парСтатусПоУмолчанию = Неопределено, парИсключаемыйСтатус = Неопределено) Экспорт

	пЗапрос = Новый Запрос;
	пЗапрос.Текст = 
	"ВЫБРАТЬ
	|	бит_ИсторияИзмененияСтатусовОбъектов.Статус КАК Статус,
	|	бит_ИсторияИзмененияСтатусовОбъектов.Пользователь КАК Пользователь,
	|	бит_ИсторияИзмененияСтатусовОбъектов.Период КАК ДатаИзмененияСтатуса
	|ПОМЕСТИТЬ ИСтатусовПолная
	|ИЗ
	|	РегистрСведений.бит_ИсторияИзмененияСтатусовОбъектов КАК бит_ИсторияИзмененияСтатусовОбъектов
	|ГДЕ
	|	бит_ИсторияИзмененияСтатусовОбъектов.Объект = &пзОбъект
	|	И бит_ИсторияИзмененияСтатусовОбъектов.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(&пзСтатусПоУмолчанию) = ТИП(Справочник.бит_СтатусыОбъектов)
	|				И &пзСтатусПоУмолчанию <> ЗНАЧЕНИЕ(Справочник.бит_СтатусыОбъектов.ПустаяСсылка)
	|			ТОГДА &пзСтатусПоУмолчанию
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.бит_СтатусыОбъектов.ПустаяСсылка)
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка),
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаИзмененияСтатуса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСтатусовПоИсключ.Статус КАК Статус,
	|	ИСтатусовПоИсключ.Пользователь КАК Пользователь,
	|	ИСтатусовПоИсключ.ДатаИзмененияСтатуса
	|ПОМЕСТИТЬ ИСтатусовПоИсключ
	|ИЗ
	|	ИСтатусовПолная КАК ИСтатусовПоИсключ
	|ГДЕ
	|	НЕ ИСтатусовПоИсключ.Статус В (&пзСтатусыИсключения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ИСтатусовПолная.ДатаИзмененияСтатуса) КАК ДатаИзмененияСтатуса,
	|	ИСтатусовПолная.Статус
	|ПОМЕСТИТЬ МаксДатаВсе
	|ИЗ
	|	ИСтатусовПолная КАК ИСтатусовПолная
	|
	|СГРУППИРОВАТЬ ПО
	|	ИСтатусовПолная.Статус
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаИзмененияСтатуса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ИСтатусовПоИсключ.ДатаИзмененияСтатуса) КАК ДатаИзмененияСтатуса
	|ПОМЕСТИТЬ итМаксДата
	|ИЗ
	|	ИСтатусовПоИсключ КАК ИСтатусовПоИсключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итМаксДата.ДатаИзмененияСтатуса,
	|	МАКСИМУМ(ИСтатусовПолная.ДатаИзмененияСтатуса) КАК ДатаИзмененияСтатуса_1
	|ПОМЕСТИТЬ итДоМаксДата
	|ИЗ
	|	итМаксДата КАК итМаксДата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИСтатусовПолная КАК ИСтатусовПолная
	|		ПО итМаксДата.ДатаИзмененияСтатуса > ИСтатусовПолная.ДатаИзмененияСтатуса
	|
	|СГРУППИРОВАТЬ ПО
	|	итМаксДата.ДатаИзмененияСтатуса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСтатусов.Статус,
	|	ИСтатусовПолная.Статус КАК СтатусПредыдущий,
	|	ИСтатусов.Пользователь,
	|	итДоМаксДата.ДатаИзмененияСтатуса
	|ИЗ
	|	итДоМаксДата КАК итДоМаксДата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИСтатусовПоИсключ КАК ИСтатусов
	|		ПО итДоМаксДата.ДатаИзмененияСтатуса = ИСтатусов.ДатаИзмененияСтатуса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИСтатусовПолная КАК ИСтатусовПолная
	|		ПО итДоМаксДата.ДатаИзмененияСтатуса_1 = ИСтатусовПолная.ДатаИзмененияСтатуса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИСтатусовПолная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИСтатусовПоИсключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МаксДатаВсе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ итМаксДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ итДоМаксДата";
				   
	
	пЗапрос.УстановитьПараметр("пзСтатусыИсключения",парИсключаемыйСтатус);
	пЗапрос.УстановитьПараметр("пзОбъект", парСсылка);
	пЗапрос.УстановитьПараметр("пзСтатусПоУмолчанию",парСтатусПоУмолчанию);

	пРезультат = пЗапрос.Выполнить();
	пВыборка = пРезультат.Выбрать();
	пРезСтруктура = Новый Структура("Статус, СтатусПредыдущий, Пользователь, ДатаИзмененияСтатуса");
	
	Если пВыборка.Следующий() Тогда //одно значение будет всегда!
		
		ЗаполнитьЗначенияСвойств(пРезСтруктура, пВыборка);
	КонецЕсли;
	
	Возврат пРезСтруктура;
КонецФункции // ПолучитьАктуальныйСтатус()

//bit_SVKushnirenko 27.01.2017 #2657
// Возвращает массив уникальных заявок, которые могли изменить статуса всвязи с движениями текущего документа
// Параметры:
//парСсылка - ссылка на документ, движения которого затрагивают КЗБ с Аналитика_1 (Заявки-ФВБ), которые могут изменить статус в результате изменения КЗБ
Функция ПолучитьМассивЗаявокКоторыеМогутИзменитьСтатусПриДвижениях(парСсылка) Экспорт

	пЗапрос = Новый Запрос;
	пЗапрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетов.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК бит_КонтрольныеЗначенияБюджетов
	|ГДЕ
	|	бит_КонтрольныеЗначенияБюджетов.Регистратор = &пзСсылка
	|	И бит_КонтрольныеЗначенияБюджетов.Сценарий.бит_БК_АвтоЗакрытиеСтатусаПриИсполнении
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Аналитика_1
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	ВТ.Аналитика_1 <> ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Аналитика_1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ";
	
	пЗапрос.УстановитьПараметр("пзСсылка", парСсылка);
		
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
	
	Если пТЗРез.Количество() = 0 Тогда 
		
		Возврат Новый Массив;
	Иначе
		
		Возврат пТЗРез.ВыгрузитьКолонку("Аналитика_1");
	КонецЕсли;
КонецФункции // ПолучитьМассивЗаявокКоторыеМогутИзменитьСтатусПриДвижениях()

//bit_SVKushnirenko 27.01.2017 #2657
// Возвращает текущее значение статуса ФВБ, с возвратом статуса "Черновик", если статусы пока пусты
// Параметры:
//парСсылка  - док.бит_ФормаВводаБюджета ссылка
Функция ПолучитьТекущийСтатусФВБ(парСсылка) Экспорт
	
	Возврат ПолучитьАктуальныйСтатус(парСсылка, Справочники.бит_СтатусыОбъектов.ФормаВвода_Черновик);
КонецФункции // ПолучитьТекущийСтатусФВБ()

//bit_SVKushnirenko 25.01.2017 #2657
//Выплняет безусловную установку статуса заявки
//Параметры:
//парЗаявка - ссылка на заявку (ФВБ), которую следует перевести в статус "Закрыта"
//парСтатусЗаявки - новый устанавливаемый статус
Функция УстановитьСтатусЗаявки(парЗаявка, парСтатусЗаявки) Экспорт
		
	пТекущийСтатусЗаявки = ПолучитьАктуальныйСтатус(парЗаявка, Справочники.бит_СтатусыОбъектов.ФормаВвода_Черновик);
	
	Если пТекущийСтатусЗаявки.Статус <> парСтатусЗаявки Тогда
		
		Возврат бит_Визирование.УстановитьСтатусОбъекта(парЗаявка
		,Перечисления.бит_ВидыСтатусовОбъектов.Статус
		,парСтатусЗаявки
		,пТекущийСтатусЗаявки.Статус
		,ПользователиКлиентСервер.ТекущийПользователь()
		,ТекущаяДата());
	Иначе
		
		Возврат Ложь;
	КонецЕсли;
КонецФункции //УстановитьСтатусЗаявки()
	
//bit_SVKushnirenko 25.01.2017 #2657
//Выплняет установку статуса предыдущего к исключаемому
//Параметры:
//парЗаявка - ссылка на заявку (ФВБ), которую следует перевести в статус "Закрыта"
//парИсключаемыйСтатус - ссылка на статус, который мы хотим исключить и установить предыдущий к такому статус (например статус ФВБ, который был до статуса "Закрыта")
//парТекущийСтатус - текущий статус, который займет место "предыдущего" в данных системы
Функция УстановитьБывшийСтатусЗаявкиДоИсключаемого(парЗаявка, парИсключаемыйСтатус, парТекущийСтатус) Экспорт
		
	пНайденныйСтатусЗаявки = ПолучитьАктуальныйСтатус(парЗаявка, Справочники.бит_СтатусыОбъектов.ФормаВвода_Черновик, парИсключаемыйСтатус);
	
	Возврат бит_Визирование.УстановитьСтатусОбъекта(парЗаявка
	,Перечисления.бит_ВидыСтатусовОбъектов.Статус
	,пНайденныйСтатусЗаявки.Статус
	,парТекущийСтатус
	,ПользователиКлиентСервер.ТекущийПользователь()
	,ТекущаяДата()); 				
КонецФункции //УстановитьБывшийСтатусЗаявкиДоИсключаемого()

//{bit_SVKushnirenko 07.02.2017 #2657
//Возвращает Истина, если ссылка на документ не ФВБ, Закрытие остатков, корректировка бюджетов, бюджетная операция
// Параметры:
//парТипДокументаИзмКЗБ - тип документа, для которого необходимо вычислить исключение
Функция ТипДокументаИные(парТипДокументаИзмКЗБ)

	Если парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_ЗакрытиеОстатков") или
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета") или
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_ФормаВводаБюджета") или
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БюджетнаяОперация")
		Тогда
		
		Возврат Ложь;
	Иначе
		
		Возврат Истина
	КонецЕсли;
КонецФункции // ТипДокументаИные()
//}bit_SVKushnirenko 07.02.2017 #2657

//{bit_SVKushnirenko 07.02.2017 #2657
//Возвращает вид операции ФВБ
// Параметры:
//парСсылка - ссылка на любой документ
Функция ВидОперацииФВБ(парСсылка)
	
	Если ТипЗнч(парСсылка) <>  Тип("ДокументСсылка.бит_ФормаВводаБюджета") Тогда
		
		Возврат Неопределено;
	Иначе
		
		Возврат парСсылка.ВидОперации;
	КонецЕсли;
КонецФункции // ВидОперацииФВБ()
//}bit_SVKushnirenko 07.02.2017 #2657

//{bit_SVKushnirenko 07.02.2017 #2657
//Выполняет проверку правил разрешения установки статуса "Закрыт(а)" для заявки, в зависимости от пареметров
// Параметры:
//парТипДокументаИзмКЗБ - тип документа, который вносит изменения в регистр КЗБ, изменяя баланс БК в пользу решения о закрытии 
//парВходящийСтатус - входящий статус заявки, для которой выполняется попытка установки статуса "Закрыт(а)"
//парСсылкаРегистратора - ссылка на документ-регистратор 
//парСсылкаЗаявки - ссылка на заявку, для которой проводится оценка остатков БК
Функция РазрешитьУстановкуСтатусаЗакрытПоМатрицеРазрешений(парТипДокументаИзмКЗБ, парВходящийСтатус, парСсылкаРегистратора, парСсылкаЗаявки)

	пВидОперацииФВБ = ВидОперацииФВБ(парСсылкаРегистратора);
	
	//Условие написано для удобства корректировки по матрице, не оптимально, но понятно для поддержки и отладки
	Если парВходящийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании и
		(
		//ОКЕЙ Данилова(СофтЛаб) Начало 2019-07-30(#3348)
		//парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_ЗакрытиеОстатков") или
		(парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_ЗакрытиеОстатков") 
		И Не ОК_ОбщегоНазначения.ЕстьДвиженияПоФВБПоИсполнениюПлана(парСсылкаЗаявки)
		)
		или	
		//ОКЕЙ Данилова(СофтЛаб) Конец 2019-07-30(#3348)
		
		//{ bit_SVKushnirenko 09.03.2017 #2795
		//ИсходныйКод{
		//парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета") или
		//(парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_ФормаВводаБюджета") и НЕ пВидОперацииФВБ = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт) 
		//}ИсходныйКод
		
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета") 
		//} bit_SVKushnirenko 09.03.2017 #2795
		)
		Тогда 
		Возврат Истина;
	ИначеЕсли парВходящийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована и
		(
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_ЗакрытиеОстатков") или
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета") или
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БюджетнаяОперация") или
		ТипДокументаИные(парТипДокументаИзмКЗБ) или
		(парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_ФормаВводаБюджета") и НЕ пВидОперацииФВБ = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт) или
		(парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_ФормаВводаБюджета") и пВидОперацииФВБ = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт и парСсылкаРегистратора <>  парСсылкаЗаявки) //Контракт в качестве документа исполнения
		)
		Тогда 
		
		Возврат Истина;
	ИначеЕсли парВходящийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании и
		(
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_ЗакрытиеОстатков") или
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета") или
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БюджетнаяОперация") или
		ТипДокументаИные(парТипДокументаИзмКЗБ) или
		(парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_ФормаВводаБюджета") и пВидОперацииФВБ = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт и парСсылкаРегистратора = парСсылкаЗаявки) //Контракт в качестве документа формирования бюджета
		)
		Тогда 
		
		Возврат Истина;
	ИначеЕсли парВходящийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Заключен и
		(
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_ЗакрытиеОстатков") или
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета") или
		парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_БюджетнаяОперация") или
		ТипДокументаИные(парТипДокументаИзмКЗБ) или
		(парТипДокументаИзмКЗБ = Тип("ДокументСсылка.бит_ФормаВводаБюджета") и пВидОперацииФВБ = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт и парСсылкаРегистратора = парСсылкаЗаявки)
		)
		Тогда 
		
		Возврат Истина;
	Иначе
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-26 (#ПроектИнтеграцияАксапта12)
		//Если парВходящийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании и парТипДокументаИзмКЗБ <>  Тип("ДокументСсылка.бит_ок_ОперацияАксапты") Тогда  
		Если парВходящийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании 
			И парТипДокументаИзмКЗБ <> Тип("ДокументСсылка.бит_ок_ОперацияАксапты")
			И парТипДокументаИзмКЗБ <> Тип("ДокументСсылка.бит_ок_ОперацияАксапты12") Тогда  
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-26 (#ПроектИнтеграцияАксапта12)
			
			Сообщить("Документ: " + парСсылкаРегистратора + " - не изменил статус заявки, поскольку она находится в статусе: " + парВходящийСтатус);
		КонецЕсли;

		Возврат Ложь;
	КонецЕсли;
КонецФункции // РазрешитьУстановкуСтатусаЗакрытПоМатрицеРазрешений()
//}bit_SVKushnirenko 07.02.2017 #2657

//bit_SVKushnirenko 25.01.2017 #2657
// Выполняет закрытие или откат к предыдущему "не закрытому" статусу, для документов ФВБ типа "Заявка" или "Контракт" при проведении влияющих документов
Функция ПопыткаЗакрытияИлиВозвратаСтатусаЗаявокПоДаннымБК(парТЧДвижений, парСсылка, парТекущийПроцесс = "ОтменаПроведения") Экспорт
	
	Если ТипЗнч(парТЧДвижений) <> Тип("ТаблицаЗначений") или парТЧДвижений.Количество() = 0 Тогда

		Возврат Ложь;
	КонецЕсли;

	//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-10-11 (#3098)
	Возврат ок_ОбновитьСтатусыЗаявок2018(парТЧДвижений, парСсылка, парТекущийПроцесс);
	//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-10-11 (#3098)
	
	пЗапрос = Новый Запрос;
	
	//Отбор строк-движений, требующих анализа: по сценариям установки статусов с фрмированием колонки "Сумма" на позицию бюджет/исполнение (для бюджета берется сумма контроля с "минусом", т.к она увеличивает бюджет
	пЗапрос.Текст =
	
	//{ bit_SVKushnirenko 03.04.2017 #2816
	//ИсходныйКод{
	//"ВЫБРАТЬ
	//|	ВЫРАЗИТЬ(тчзНаборЗаписей.Сценарий КАК Справочник.СценарииПланирования) КАК СценарийКонтроллирующий,
	//|	ВЫРАЗИТЬ(тчзНаборЗаписей.СценарийКонтролируемый КАК Справочник.СценарииПланирования) КАК СценарийКонтролируемый,
	//|	тчзНаборЗаписей.ЦФО,
	//|	тчзНаборЗаписей.СтатьяОборотов,
	//|	тчзНаборЗаписей.Проект,
	//|	ВЫРАЗИТЬ(тчзНаборЗаписей.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
	//|	ВЫРАЗИТЬ(тчзНаборЗаписей.Аналитика_2 КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2,
	//|	ВЫБОР
	//|		КОГДА &пзТипОперации = ""ОтменаПроведения""
	//|			ТОГДА 0
	//|		ИНАЧЕ тчзНаборЗаписей.СуммаСценарийИсполнение - тчзНаборЗаписей.СуммаСценарийКонтроль
	//|	КОНЕЦ КАК СуммаРегистратора,
	//|	тчзНаборЗаписей.Период
	//|ПОМЕСТИТЬ ВТ
	//|ИЗ
	//|	&пзНаборЗаписей КАК тчзНаборЗаписей
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ВТ.Аналитика_1,
	//|	ВТ.СценарийКонтроллирующий,
	//|	ВТ.СценарийКонтролируемый
	//|ПОМЕСТИТЬ втЗаявки
	//|ИЗ
	//|	ВТ КАК ВТ
	//|ГДЕ
	//|	(ВТ.СценарийКонтроллирующий.бит_БК_АвтоЗакрытиеСтатусаПриИсполнении
	//|			ИЛИ ВТ.СценарийКонтролируемый.бит_БК_АвтоЗакрытиеСтатусаПриИсполнении)
	//|	И ВТ.Аналитика_1 <> ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый КАК Сценарий,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий КАК СценарийКонтроллирующий,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Период КАК Период,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО КАК ЦФО,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Аналитика_1,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Аналитика_2,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект КАК Проект,
	//|	0 КАК Сумма
	//|ПОМЕСТИТЬ втПолная
	//|ИЗ
	//|	втЗаявки КАК втЗаявки
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(, , Месяц, ) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	//|		ПО (втЗаявки.Аналитика_1 = (ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета)))
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	ВТ.СценарийКонтролируемый,
	//|	ВТ.СценарийКонтроллирующий,
	//|	ВТ.Период,
	//|	ВТ.ЦФО,
	//|	ВТ.СтатьяОборотов,
	//|	ВТ.Аналитика_1,
	//|	ВТ.Аналитика_2,
	//|	ВТ.Проект,
	//|	ВТ.СуммаРегистратора
	//|ИЗ
	//|	ВТ КАК ВТ
	//|ГДЕ
	//|	(ВЫРАЗИТЬ(ВТ.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета)) <> ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	втПолная.Сценарий КАК Сценарий,
	//|	втПолная.СценарийКонтроллирующий,
	//|	втПолная.Период КАК Период,
	//|	втПолная.ЦФО КАК ЦФО,
	//|	втПолная.СтатьяОборотов КАК СтатьяОборотов,
	//|	втПолная.Проект КАК Проект,
	//|	втПолная.Аналитика_1 КАК Аналитика_1,
	//|	втПолная.Аналитика_2 КАК Аналитика_2,
	//|	СУММА(втПолная.Сумма) КАК Сумма
	//|ИЗ
	//|	втПолная КАК втПолная
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	втПолная.СтатьяОборотов,
	//|	втПолная.Период,
	//|	втПолная.ЦФО,
	//|	втПолная.Проект,
	//|	втПолная.Аналитика_2,
	//|	втПолная.Аналитика_1,
	//|	втПолная.СценарийКонтроллирующий,
	//|	втПолная.Сценарий
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Сценарий,
	//|	СтатьяОборотов,
	//|	ЦФО,
	//|	Аналитика_1,
	//|	Аналитика_2,
	//|	Проект,
	//|	Период
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ втЗаявки
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ втПолная";
	//}ИсходныйКод
	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК Сценарий,
	|	МАКСИМУМ(ВЫРАЗИТЬ(бит_СоответствияАналитик.ЛеваяАналитика_1 КАК Справочник.СценарииПланирования)) КАК СценарийКонтролирующий
	|ПОМЕСТИТЬ СценарииБКОК
	|ИЗ
	|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
	|		ПО ((ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)) = (ВЫРАЗИТЬ(бит_СоответствияАналитик.ПраваяАналитика_1 КАК Справочник.СценарииПланирования)))
	|ГДЕ
	|	бит_БК_НастройкиБК.Группа = ""Контроль бюджета""
	|	И бит_СоответствияАналитик.ВидСоответствия.Код = ""бит_БК_СценарийВСценарийКонтролируемый""
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(тчзНаборЗаписей.Сценарий КАК Справочник.СценарииПланирования) КАК СценарийКонтроллирующий,
	|	ВЫРАЗИТЬ(тчзНаборЗаписей.СценарийКонтролируемый КАК Справочник.СценарииПланирования) КАК СценарийКонтролируемый,
	|	тчзНаборЗаписей.ЦФО,
	|	тчзНаборЗаписей.СтатьяОборотов,
	|	тчзНаборЗаписей.Проект,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	тчзНаборЗаписей.Контрагент,
	|	тчзНаборЗаписей.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	ВЫРАЗИТЬ(тчзНаборЗаписей.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
	|	ВЫРАЗИТЬ(тчзНаборЗаписей.Аналитика_2 КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2,
	|	ВЫБОР
	|		КОГДА &пзТипОперации = ""ОтменаПроведения""
	|			ТОГДА 0
	|		ИНАЧЕ тчзНаборЗаписей.СуммаСценарийИсполнение - тчзНаборЗаписей.СуммаСценарийКонтроль
	|	КОНЕЦ КАК СуммаРегистратора,
	|	тчзНаборЗаписей.Период
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&пзНаборЗаписей КАК тчзНаборЗаписей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.СценарийКонтроллирующий,
	|	ВТ.СценарийКонтролируемый,
	|	ВТ.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	ВТ.Контрагент,
	|	ВТ.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	ВТ.СтатьяОборотов,
	|	ВТ.Проект,
	|	ВТ.Аналитика_1,
	|	ВТ.Аналитика_2,
	|	ВТ.СуммаРегистратора,
	|	ВТ.Период
	|ПОМЕСТИТЬ втИсхСоотвПарамСценариевБКОК
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СценарииБКОК КАК СценарииБКОК
	|		ПО ВТ.СценарийКонтроллирующий = СценарииБКОК.СценарийКонтролирующий
	|			И ВТ.СценарийКонтролируемый = СценарииБКОК.Сценарий
	|ГДЕ
	|	ВТ.Аналитика_1 <> ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	взЗаявкиВходныхДанных.Аналитика_1 КАК Аналитика_1,
	|	СценарииБКОК.СценарийКонтролирующий КАК СценарийКонтроллирующий,
	|	СценарииБКОК.Сценарий КАК СценарийКонтролируемый
	|ПОМЕСТИТЬ втЗаявки
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		втИсхСоотвПарамСценариевБКОК.Аналитика_1 КАК Аналитика_1
	|	ИЗ
	|		втИсхСоотвПарамСценариевБКОК КАК втИсхСоотвПарамСценариевБКОК) КАК взЗаявкиВходныхДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|			ЛЕВОЕ СОЕДИНЕНИЕ СценарииБКОК КАК СценарииБКОК
	|			ПО бит_ФормаВводаБюджетаБДДС.Сценарий = СценарииБКОК.СценарийКонтролирующий
	|		ПО взЗаявкиВходныхДанных.Аналитика_1 = бит_ФормаВводаБюджетаБДДС.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый КАК Сценарий,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий КАК СценарийКонтроллирующий,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Период КАК Период,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО КАК ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Контрагент КАК Контрагент,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Аналитика_1,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Аналитика_2,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект КАК Проект,
	|	0 КАК Сумма
	|ПОМЕСТИТЬ втПолная
	|ИЗ
	|	втЗаявки КАК втЗаявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Месяц,
	|				Аналитика_1 В
	|					(ВЫБРАТЬ
	|						втЗаявки.Аналитика_1
	|					ИЗ
	|						втЗаявки КАК втЗаявки)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО (втЗаявки.Аналитика_1 = (ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета)))
	|			И втЗаявки.СценарийКонтроллирующий = бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий
	|			И втЗаявки.СценарийКонтролируемый = бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ.СценарийКонтролируемый,
	|	ВТ.СценарийКонтроллирующий,
	|	ВТ.Период,
	|	ВТ.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	ВТ.Контрагент,
	|	ВТ.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	ВТ.СтатьяОборотов,
	|	ВТ.Аналитика_1,
	|	ВТ.Аналитика_2,
	|	ВТ.Проект,
	|	ВТ.СуммаРегистратора
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЗаявки КАК втЗаявки
	|		ПО ВТ.Аналитика_1 = втЗаявки.Аналитика_1
	|			И ВТ.СценарийКонтроллирующий = втЗаявки.СценарийКонтроллирующий
	|			И ВТ.СценарийКонтролируемый = втЗаявки.СценарийКонтролируемый
	|ГДЕ
	|	(ВЫРАЗИТЬ(ВТ.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета)) <> ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПолная.Сценарий КАК Сценарий,
	|	втПолная.СценарийКонтроллирующий,
	|	втПолная.Период КАК Период,
	|	втПолная.ЦФО КАК ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	втПолная.Контрагент,
	|	втПолная.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	втПолная.СтатьяОборотов КАК СтатьяОборотов,
	|	втПолная.Проект КАК Проект,
	|	втПолная.Аналитика_1 КАК Аналитика_1,
	|	втПолная.Аналитика_2 КАК Аналитика_2,
	|	СУММА(втПолная.Сумма) КАК Сумма
	|ИЗ
	|	втПолная КАК втПолная
	|
	|СГРУППИРОВАТЬ ПО
	|	втПолная.СтатьяОборотов,
	|	втПолная.Период,
	|	втПолная.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	втПолная.Контрагент,
	|	втПолная.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	втПолная.Проект,
	|	втПолная.Аналитика_2,
	|	втПолная.Аналитика_1,
	|	втПолная.СценарийКонтроллирующий,
	|	втПолная.Сценарий
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сценарий,
	|	СтатьяОборотов,
	|	ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	Контрагент,
	|	ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	Аналитика_1,
	|	Аналитика_2,
	|	Проект,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втЗаявки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПолная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СценарииБКОК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втИсхСоотвПарамСценариевБКОК";
	//} bit_SVKushnirenko 03.04.2017 #2816

	пЗапрос.УстановитьПараметр("пзНаборЗаписей", парТЧДвижений);
	пЗапрос.УстановитьПараметр("пзРегистраторСсылка", парСсылка);
	пЗапрос.УстановитьПараметр("пзТипОперации", парТекущийПроцесс);
		
	пТЗЗаписейКонтроля = пЗапрос.Выполнить().Выгрузить(); //получена ТЧ запроса к данным БК
	
	Если пТЗЗаписейКонтроля.Количество() = 0 Тогда  //нет данных для операции авто-установки статусов

		Возврат Ложь;
	КонецЕсли;
	
	пЗапрос.УстановитьПараметр("пзНаборЗаписей", ""); //очистка неактуального параметра (может содержать большое число строк повторно отсылаемых на сервер)
	пЗапрос.Текст = ТекстЗапросаКБ(); //новый запрос уже по БК
	
	пЗапрос.УстановитьПараметр("Ссылка", парСсылка); //всегда исключаем текущий документ из запроса баланса БК
	пЗапрос.УстановитьПараметр("СписокСтатей", пТЗЗаписейКонтроля.ВыгрузитьКолонку("СтатьяОборотов"));
	пЗапрос.УстановитьПараметр("ТабЧасть", пТЗЗаписейКонтроля);
	
	//Отборы и оптимизация{
	пЗапрос.УстановитьПараметр("СписокАналитика_2", пТЗЗаписейКонтроля.ВыгрузитьКолонку("Аналитика_2")); //Объект
	пЗапрос.УстановитьПараметр("СписокЦФО", пТЗЗаписейКонтроля.ВыгрузитьКолонку("ЦФО")); 
	пЗапрос.УстановитьПараметр("СписокПроект", пТЗЗаписейКонтроля.ВыгрузитьКолонку("Проект")); 
	
	пМассивЗаявок = пТЗЗаписейКонтроля.ВыгрузитьКолонку("Аналитика_1");
	
	пЗапрос.УстановитьПараметр("СписокАналитика_1", пМассивЗаявок); //№ заявки
	пЗапрос.УстановитьПараметр("ШапкаАналитика_1", Документы.бит_ФормаВводаБюджета.ПустаяСсылка());//формальный параметра в текущем контексте не имеет смысла и без ошибок обработается запросом
	//}Отборы и оптимизация{
	
	пЗапрос.УстановитьПараметр("Сценарий", пТЗЗаписейКонтроля.ВыгрузитьКолонку("СценарийКонтроллирующий"));
	
	пТЗРез = пЗапрос.Выполнить().Выгрузить(); //в запросе представлены все строки ТЧ с данными суммы БК и признаками превышения для искомых заявок
	
	Если пТЗРез.Количество() = 0 Тогда
		
		Возврат Ложь; //запрос БК не вернул данных, значит нет предмета для контироля
	КонецЕсли;
	
	пТЗРез.Свернуть("Аналитика_1", "ЕстьОстатокБюджетаПослеОперацииБольшеНуля");
	пСтатусЗакрыта = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта;
	пСтатусЧерновик = Справочники.бит_СтатусыОбъектов.ФормаВвода_Черновик;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-22 (#2986)
	пСтатусНаРассмотрении = ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаРассмотрении");
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	СтруктураРолей = ОпределитьРольПользователяБюджетногоКонтролера(ТекущийПользователь);	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-22 (#2986)
	
	Для каждого пТекущаяСтрока Из пТЗРез Цикл
		
		Если парСсылка = пТекущаяСтрока.Аналитика_1 и парТекущийПроцесс = "ОтменаПроведения" Тогда    			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-22 (#2986)
			//УстановитьСтатусЗаявки(пТекущаяСтрока.Аналитика_1, пСтатусЧерновик);//отмена проведения самой заявки = Черновик
			//Заменено на:
			Если (СтруктураРолей.Инвестиционный ИЛИ СтруктураРолей.Операционный) и РольДоступна("бит_БК_ГлавныйБК") 
				 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-05-24 (#3018)
				 И ВидОперацииФВБ(парСсылка) <> ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт")
				 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-05-24 (#3018)
			Тогда 
				УстановитьСтатусЗаявки(пТекущаяСтрока.Аналитика_1, пСтатусНаРассмотрении);//отмена проведения самой заявки = Черновик	
			Иначе 
				УстановитьСтатусЗаявки(пТекущаяСтрока.Аналитика_1, пСтатусЧерновик);//отмена проведения самой заявки = На рассмотрении, если ФК
			КонецЕсли;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-22 (#2986)
		Иначе
			
			пТекущийСтатусСтруктура = ПолучитьАктуальныйСтатус(пТекущаяСтрока.Аналитика_1, пСтатусЧерновик);
			Если пТекущаяСтрока.ЕстьОстатокБюджетаПослеОперацииБольшеНуля = 0 Тогда //все остатки закрыты или отрицательны

				Если РазрешитьУстановкуСтатусаЗакрытПоМатрицеРазрешений(ТипЗнч(парСсылка), пТекущийСтатусСтруктура.Статус, парСсылка, пТекущаяСтрока.Аналитика_1) Тогда
					
					УстановитьСтатусЗаявки(пТекущаяСтрока.Аналитика_1, пСтатусЗакрыта);
				КонецЕсли;
			ИначеЕсли пТекущийСтатусСтруктура.Статус = пСтатусЗакрыта Тогда //ищем предыдущий статус = не "Закрыт"
				
				пМассивИсключений = Новый Массив;
				пМассивИсключений.Добавить(пСтатусЗакрыта);
				пМассивИсключений.Добавить(пСтатусЧерновик);
				УстановитьБывшийСтатусЗаявкиДоИсключаемого(пТекущаяСтрока.Аналитика_1, пМассивИсключений, пСтатусЗакрыта);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	Возврат Истина; //считаем, что все прошло условно хорошо (если более одной заявки, то это значение формальне)
КонецФункции // ПопыткаЗакрытияИлиВозвратаСтатусаЗаявокПоДаннымБК()

//bit_SVKushnirenko 25.01.2017 #2657
// Выполняет изменение статуса для документов ФВБ типа "Заявка" или "Контракт" при ОТМЕНЕ проведения влияющих документов (в т.ч. самой заявки)
Функция ИзменениеСтатуса_ПриОтменеПроведения_для_Заявка_Контракт(парИсточник, парОтказ, парРежимПроведения) Экспорт
	//пНаборЗаписейКЗБ = парИсточник.Движения.бит_КонтрольныеЗначенияБюджетов;
	//пНаборЗаписейКЗБ.Прочитать();
	//пТЧДвижений = пНаборЗаписейКЗБ.Выгрузить();
	
КонецФункции // ИзменениеСтатуса_ПриОтменеПроведения_для_Заявка_Контракт()

Процедура бит_БК_ОпределениеСтатусаЗаявкиОбработкаУдаленияПроведенияОбработкаУдаленияПроведения(Источник, Отказ) Экспорт
	
	//{ bit SVKushnirenko Bit 27.01.2017 #2657
	Возврат;
	//} bit SVKushnirenko Bit 27.01.2017 #2657
	
	//БИТ НАГолубева 02.03.2016 ++
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.УдалитьИжтиси_бит_БК_РазнесениеОборотов") Тогда
		Возврат;
	КонецЕсли;
	//БИТ НАГолубева 02.03.2016 --
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.бит_БК_ЗакрытиеОстатков") Тогда
		ИмяТЧ = "ТабличнаяЧасть";
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.бит_ФормаВводаБюджета") Тогда
		Если НЕ Источник.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт Тогда
			Возврат;
		Иначе 
			ИмяТЧ = "БДДС";
		КонецЕсли;	
	//{ bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
	//=ИСХОДНЫЙ КОД
	//КонецЕсли;
	//=ИСХОДНЫЙ КОД
		                
	//+Сенин С.В. 08.11.16 №2657
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета") Тогда
		ИмяТЧ = "СуммыКорректировок";
	КонецЕсли;
	//-Сенин С.В. 08.11.16 №2657
	//} bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
	
	//Получаем таблицу заявок
	ТаблицаДвижений = Источник[ИмяТЧ];
	ТаблицаДвиженийКопия = ТаблицаДвижений.Выгрузить(,"Аналитика_1");
	ТаблицаДвиженийКопия.Свернуть("Аналитика_1");
	////////для РО и Контракта заполняем Аналитику_1 из Шапки
	//////Если ТипЗнч(Источник) = Тип("ДокументОбъект.бит_БК_РазнесениеОборотов") Тогда
	//////	ТаблицаДвиженийКопия.ЗаполнитьЗначения(Источник.НомерЗаявки, "Аналитика_1");
	//////Иначе
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.бит_ФормаВводаБюджета") Тогда 
		ТаблицаДвиженийКопия.ЗаполнитьЗначения(Источник.бит_БК_НомерЗаявки, "Аналитика_1");
	//{ bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
	//+Сенин С.В. 08.11.16 №2657
	ИначеЕсли ЗначениеЗаполнено(Источник.ДокументОснование) и ТипЗнч(Источник.ДокументОснование) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") Тогда
		ТаблицаДвиженийКопия.ЗаполнитьЗначения(Источник.ДокументОснование, "Аналитика_1");
	//-Сенин С.В. 08.11.16 №2657
	//} bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТаблицаДвиженийКопия Цикл
		//получим остаток без движений документа
		Остаток = ПолучитьОстатокПоДокументу(ТекСтрока.Аналитика_1);
		
		УстановитьСтатусЗаявкиЗакрытаПоОстатку(Остаток, ТекСтрока.Аналитика_1); 
	КонецЦикла;
	
КонецПроцедуры

//+Сундукова 13.04.16
Процедура бит_БК_ОпределениеСтатусаОтменаТрансляцииОперацияАксапты(Источник) Экспорт
	
	Запрос = новый запрос;
	Запрос.Текст =   "ВЫБРАТЬ
	|	бит_ДополнительныеДанныеПоОперациямАксапты.НомерЗаявки
	|ИЗ
	|	РегистрСведений.бит_ДополнительныеДанныеПоОперациямАксапты КАК бит_ДополнительныеДанныеПоОперациямАксапты
	|ГДЕ
	|	бит_ДополнительныеДанныеПоОперациямАксапты.Документ = &Документ"  ;
	запрос.УстановитьПараметр("Документ",источник.ссылка);
	выборка=  запрос.Выполнить().Выбрать();
	Если выборка.Следующий() тогда
		Аналитика_1   = выборка.НомерЗаявки;		
		Остаток = ПолучитьОстатокПоДокументу(Аналитика_1);		
		УстановитьСтатусЗаявкиЗакрытаПоОстатку(Остаток, Аналитика_1); 
	КонецЕсли;	
КонецПроцедуры
//-Сундукова 13.04.16

// BIT AMerkulov 30062014 ++
//Процедура УстановитьСтатусЗаявкиЗакрытаПоОстатку(Остаток, Заявка)
Процедура УстановитьСтатусЗаявкиЗакрытаПоОстатку(Остаток, Заявка, Источник = Неопределено) экспорт
// BIT AMerkulov 30062014 --
		
	// Получаем текущий статус 
	РезСтруктура = бит_Визирование.ПолучитьСтатусОбъекта(Заявка);
	Если Заявка.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт Тогда
		мТекущийСтатус 		  = ?(ЗначениеЗаполнено(РезСтруктура.Статус), РезСтруктура.Статус, Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании);
		мПредыдущийСтатус     = ?(ЗначениеЗаполнено(РезСтруктура.СтатусПредыдущий), РезСтруктура.СтатусПредыдущий, Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании);
	иначе
		мТекущийСтатус 		  = ?(ЗначениеЗаполнено(РезСтруктура.Статус), РезСтруктура.Статус, Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании);
		мПредыдущийСтатус     = ?(ЗначениеЗаполнено(РезСтруктура.СтатусПредыдущий), РезСтруктура.СтатусПредыдущий, Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании);
	КонецЕсли;
	//Устанавливаемый статус
	Если Заявка.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт Тогда
		РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании;
	иначе
		РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании;
	КонецЕсли;
	СтатусЗакрыта = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта;
	
	Если Остаток <= 0 Тогда	//записать значение статуса	СтатусЗакрыта		
		
		РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта;
		
	Иначе //возвращаемся к предыдущему статусу
		Если мТекущийСтатус = СтатусЗакрыта Тогда
			Если мПредыдущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании ИЛИ
				мПредыдущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована ИЛИ
				мПредыдущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании Тогда 
				РезСтатус = мПредыдущийСтатус;
			КонецЕсли;
		ИначеЕсли мТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании ИЛИ
			мТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована ИЛИ
			мПредыдущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании Тогда
			РезСтатус = мТекущийСтатус;
		КонецЕсли;
	КонецЕсли;
	
	//////// BIT AMerkulov 30062014 ++
	//////Если ТипЗнч(Источник) = Тип("ДокументОбъект.бит_БК_РазнесениеОборотов") Тогда
	//////	Если РезСтатус = СтатусЗакрыта И мТекущийСтатус <> Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована Тогда
	//////		Возврат;
	//////	КонецЕсли;
	//////КонецЕсли;
	//////// BIT AMerkulov 30062014 --
	
	// BIT AMerkulov 06112014 ++
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.бит_ФормаВводаБюджета") И Источник.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт Тогда
		Если РезСтатус = СтатусЗакрыта И мТекущийСтатус <> Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	// BIT AMerkulov 06112014 --

	Если мТекущийСтатус <> РезСтатус Тогда  	
		
		ДатаИзмененияСтатуса = ТекущаяДата();
		
		ДействиеВыполнено = бит_Визирование.УстановитьСтатусОбъекта(Заявка
		,Перечисления.бит_ВидыСтатусовОбъектов.Статус
		,РезСтатус
		,мТекущийСтатус
		,ПользователиКлиентСервер.ТекущийПользователь()
		,ДатаИзмененияСтатуса); 				
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА КОНТРОЛЯ ПО БЮДЖЕТУ

//Текст запроса для контроля  инвест заявки

// бит_MZyubin Функция формирует текст запроса извлечения данных из таблицы контроля. В режиме контроля по бюджету
//проверяется необходимость контроля по регистру сведений бит_НастройкиКонтроляПоСценариям
//
// Параметры:
//  ИзмеренияДоп - Структура
//  РежимКонтроля  – Строка - "Заявки","Бюджет"
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаТаблицаДляКонтроляИнвест(ИзмеренияДоп,РежимКонтроля, ВидОперации, Сценарий = Неопределено) 
	
	Если ВРег(РежимКонтроля) = ВРег("Заявки") Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ТаблицаДляКонтроля.Период,
		|	ТаблицаДляКонтроля.Сценарий,	
		|	ТаблицаДляКонтроля.СтатьяОборотов,
		|	%ИзмеренияДоп%
		|	ТаблицаДляКонтроля.Количество,		
		|	ТаблицаДляКонтроля.Сумма
		|ПОМЕСТИТЬ ТаблицаДляКонтроля
		|ИЗ
		|	&ТаблицаДляКонтроля КАК ТаблицаДляКонтроля
		|;
		| ";
		
	ИначеЕсли ВРег(РежимКонтроля) = ВРег("Бюджет")  Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ТаблицаДляКонтроля.Период,
		|	ТаблицаДляКонтроля.Сценарий,	
		|	%ИзмеренияДоп%
		|	ТаблицаДляКонтроля.Количество,		
		|	ТаблицаДляКонтроля.Сумма,
		//Начало_бит_БК_Магомедов_30.11.2011 
		|	ТаблицаДляКонтроля.СуммаБезНДС Как СуммаБезНДС,
		|	ТаблицаДляКонтроля.СуммаБезНДС + (ТаблицаДляКонтроля.СуммаБезНДС *&ЗначениеПревышения/100) КАК СуммаБезНДСсПревышением,
		//1c-izhtc spawn 26.08.15 (
		//|	ТаблицаДляКонтроля.бит_БК_СуммаВРамкахБюджетаБезНДС КАК СуммаВРамкахБюджетаБезНДС,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаВРамкахБюджетаБезНДС + (ТаблицаДляКонтроля.бит_БК_СуммаВРамкахБюджетаБезНДС *&ЗначениеПревышения/100) КАК СуммаВРамкахБюджетаБезНДСсПревышением,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаЗаРамкамиБюджетаБезНДС КАК СуммаЗаРамкамиБюджетаБезНДС,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаЗаРамкамиБюджетаБезНДС + (ТаблицаДляКонтроля.бит_БК_СуммаЗаРамкамиБюджетаБезНДС *&ЗначениеПревышения/100) КАК СуммаЗаРамкамиБюджетаБезНДСсПревышением,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаВРамкахБюджетаСНДС КАК СуммаВРамкахБюджетаСНДС,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаЗаРамкамиБюджетаСНДС КАК СуммаЗаРамкамиБюджетаСНДС
		|	ТаблицаДляКонтроля.бит_БК_СуммаБезНДС + (ТаблицаДляКонтроля.бит_БК_СуммаБезНДС *&ЗначениеПревышения/100) КАК бит_БК_СуммаБезНДСсПревышением,
		|	ТаблицаДляКонтроля.бит_БК_СуммаБезНДС КАК бит_БК_СуммаБезНДС,
		|	ТаблицаДляКонтроля.бит_БК_СуммаСНДС КАК бит_БК_СуммаСНДС
		//1c-izhtc spawn 26.08.15 )
		//Конец_бит_БК_Магомедов_30.11.2011 
		|ПОМЕСТИТЬ ТаблицаДляКонтроляНач
		|ИЗ                                             
		|	&ТаблицаДляКонтроля КАК ТаблицаДляКонтроля
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////	
		|ВЫБРАТЬ
		|	ТаблицаДляКонтроляНач.Период,
		|	%ИзмеренияДопНач%
		|	ТаблицаДляКонтроляНач.Количество,		
		|	ТаблицаДляКонтроляНач.Сумма,
		|	ТаблицаДляКонтроляНач.СуммаБезНДС,
		|	ТаблицаДляКонтроляНач.СуммаБезНДСсПревышением,
		//1c-izhtc spawn 26.08.15 (
		//|	ТаблицаДляКонтроляНач.СуммаВРамкахБюджетаБезНДС,
		//|	ТаблицаДляКонтроляНач.СуммаВРамкахБюджетаБезНДСсПревышением,
		//|	ТаблицаДляКонтроляНач.СуммаЗаРамкамиБюджетаБезНДС,
		//|	ТаблицаДляКонтроляНач.СуммаЗаРамкамиБюджетаБезНДСсПревышением,
		//|	ТаблицаДляКонтроляНач.СуммаВРамкахБюджетаСНДС,
		//|	ТаблицаДляКонтроляНач.СуммаЗаРамкамиБюджетаСНДС
		|	ТаблицаДляКонтроляНач.бит_БК_СуммаБезНДС,
		|	ТаблицаДляКонтроляНач.бит_БК_СуммаБезНДСсПревышением,
		|	ТаблицаДляКонтроляНач.бит_БК_СуммаСНДС
		//1c-izhtc spawn 26.08.15 )
		|ПОМЕСТИТЬ ТаблицаДляКонтроля
		|ИЗ
		|	ТаблицаДляКонтроляНач КАК ТаблицаДляКонтроляНач
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_НастройкаКонтроляПоСценариям КАК ВключениеКонтроля
		|		ПО ТаблицаДляКонтроляНач.Сценарий = ВключениеКонтроля.Сценарий	
		|		И ТаблицаДляКонтроляНач.Период >= ВключениеКонтроля.Период
		|			И (ТаблицаДляКонтроляНач.Период <= ВключениеКонтроля.ДатаОкончания
		|				ИЛИ ВключениеКонтроля.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		|ГДЕ
		|	(НЕ ВключениеКонтроля.Сценарий ЕСТЬ NULL )
		|;
		| ";
		
	КонецЕсли; 
	
	
	ТекстИзмерения    = "";	
	ТекстИзмеренияДоп = "";
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяИзмерения      = "ТаблицаДляКонтроля."+КлючИЗначение.Ключ;
		ИмяИзмеренияДоп   = "ТаблицаДляКонтроляНач."+КлючИЗначение.Ключ;
		ТекстИзмерения    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,ИмяИзмерения,","+Символы.ПС);
		ТекстИзмеренияДоп = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмеренияДоп,ИмяИзмеренияДоп,","+Символы.ПС);
		
	КонецЦикла; 
	
	ТекстИзмерения    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,",","");
	ТекстИзмеренияДоп = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмеренияДоп,",","");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДоп%"   ,ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДопНач%",ТекстИзмеренияДоп);
	
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПодготовитьТекстЗапросаТаблицаДляКонтроля()

// бит_MZyubin Функция формирует текст выборки контрольных значений из регистра бит_КонтрольныеЗначенияБюджетов
//
// Параметры:
//  ИзмеренияДоп  – Структура
//  Периодичность - ПеречислениеСсылка.бит_ПериодичностьПланирования
//  УсловиеНаСценарий  – Булево
//
// Возвращаемое значение:
// ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаОстаткиПоБюджетуИнвест(ИзмеренияДоп,Периодичность,УсловиеНаСценарий, ВидОперации, Сценарий = Неопределено) 
	
	ТекстЗапроса = "   ////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)) КАК СуммаСценарийИсполнение,
	
		// ОСТАТОК БЕЗ ПРЕВЫШЕНИЯ	
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0)) КАК СуммаСценарийКонтроль,
    // общий
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)) КАК Остаток,
	//1c-izhtc spawn 26.08.15 (
	//// в рамках бюджета 
	//|	СУММА(Выбор Когда КонтрольныеЗначения.Аналитика_3 = Значение(Перечисление.бит_БК_ВариантыБюджета.ВРамкахБюджета) тогда
	//|	ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)
	//|	Иначе 0
	//|	Конец) КАК ОстатокВРамкахБюджета,
	//// за рамками бюджета
	//|	СУММА(Выбор Когда КонтрольныеЗначения.Аналитика_3 = Значение(Перечисление.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета) тогда
	//|	ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0) 
	//|	Иначе 0
	//|	Конец) КАК ОстатокЗаРамкамиБюджета,
	//1c-izhtc spawn 26.08.15 )
	
		// ОСТАТОК С ПРЕВЫШЕНИЕМ
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2018-07-05 (#3042)	
	//|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольСПревышениемОборот, 0)) КАК СуммаСценарийКонтрольСПревышением,
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0)) КАК СуммаСценарийКонтрольСПревышением,
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2018-07-05 (#3042)	
	//общий
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2018-07-05 (#3042)	
	//|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольСПревышениемОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)) КАК ОстатокСПревышением,
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)) КАК ОстатокСПревышением,
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2018-07-05 (#3042)
	//1c-izhtc spawn 26.08.15 (
	////в рамках бюджета
	//|	СУММА(ВЫБОР
	//|		КОГДА КонтрольныеЗначения.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ВРамкахБюджета)
	//|			ТОГДА ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольСПревышениемОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ) КАК ОстатокВРамкахБюджетаСПревышением,
	////за рамками бюджета
	//|	СУММА(ВЫБОР
	//|		КОГДА КонтрольныеЗначения.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета)
	//|			ТОГДА ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольСПревышениемОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ) КАК ОстатокЗаРамкамиБюджетаСПревышением,
	//1c-izhtc spawn 26.08.15 )
		// КОЛИЧЕСТВО 
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.КоличествоСценарийКонтрольОборот, 0)) КАК КоличествоСценарийКонтроль,
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.КоличествоСценарийИсполнениеОборот, 0)) КАК КоличествоСценарийИсполнение,
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.КоличествоСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.КоличествоСценарийИсполнениеОборот, 0)) КАК КоличествоОстаток,
	//Начало_бит_БК_Магомедов_30.11.2011 
	|	%Период%	
	//Конец_бит_БК_Магомедов_30.11.2011 
	|	КонтрольныеЗначения.Сценарий КАК Сценарий,				   
	|	%ИзмеренияДоп%
	|ПОМЕСТИТЬ ТаблицаОстаток
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	//Начало_бит_БК_Магомедов_30.11.2011 
	|			%ДатаНачала%,
	|			%ДатаОкончания%,				  
	|			%Периодичность%,
	//Конец_бит_БК_Магомедов_30.11.2011 
	|            СценарийКонтролируемый = &СценарийКонтролируемый				   
	|			%УсловиеНаСценарий%
	|				%Отбор%
	|				) КАК КонтрольныеЗначения
	|
	|СГРУППИРОВАТЬ ПО
	//Начало_бит_БК_Магомедов_30.11.2011 
	|	%ГруппировкаПериод%	
	//Конец_бит_БК_Магомедов_30.11.2011 
	|	КонтрольныеЗначения.Сценарий,				   				   
	|	%ИзмеренияДоп%
	|;";
	
	ТекстИзмерения = "";		
	ТекстОтбор     = "";
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяПоля = "КонтрольныеЗначения."+КлючИЗначение.Ключ;
		СтрОтбор = КлючИЗначение.Ключ+" В (&Массив"+КлючИЗначение.Ключ+")";
		ТекстИзмерения = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,ИмяПоля,","+Символы.ПС);
		ТекстОтбор     = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстОтбор,СтрОтбор," И ");
		
	КонецЦикла; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДоп%",ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Отбор%"," И "+ТекстОтбор);
	
	Если УсловиеНаСценарий Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%УсловиеНаСценарий%"," И Сценарий = &Сценарий");
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%УсловиеНаСценарий%","");
		
	КонецЕсли; 
		
	//Начало_бит_БК_Магомедов_30.11.2011 
	//если инвестиционная заявка убираем Период
	Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ
		 ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Контракт_Инвест ИЛИ
		 Сценарий = Справочники.СценарииПланирования.Факт_Инвест	Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Период%","");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ДатаНачала%","");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ДатаОкончания%","");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Периодичность%","Период");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ГруппировкаПериод%","");
	Иначе 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Период%","НАЧАЛОПЕРИОДА(КонтрольныеЗначения.Период,"+Периодичность+") КАК Период,");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ДатаНачала%","&ДатаНачала");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ДатаОкончания%","&ДатаОкончания");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Периодичность%",""+Периодичность);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ГруппировкаПериод%","КонтрольныеЗначения.Период,");
	КонецЕсли;
	//Конец_бит_БК_Магомедов_30.11.2011 
	Возврат ТекстЗапроса;				   
	
КонецФункции // ПодготовитьТекстЗапросаОстаткиПоБюджету()

// бит_MZyubin Функция формирует фрагмент текста запроса, отвечающий за определение необходимости 
//контроля по аналитикам
//
// Параметры:
//  ИзмеренияДоп  – Структура
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаНаличиеАналитикИнвест(ИзмеренияДоп, ВидОперации, Сценарий = Неопределено) 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	//Начало_бит_БК_Магомедов_30.11.2011 
	|	%Период%
	//Конец_бит_БК_Магомедов_30.11.2011 
	|	ТаблицаОстаток.Сценарий,				   
	|    %НаличиеАналитик%
	|ПОМЕСТИТЬ НаличиеАналитик
	|ИЗ
	|	ТаблицаОстаток КАК ТаблицаОстаток
	|
	|СГРУППИРОВАТЬ ПО
	//Начало_бит_БК_Магомедов_30.11.2011 
	|	%ГруппировкаПериод%	
	//Конец_бит_БК_Магомедов_30.11.2011 
	|	ТаблицаОстаток.Сценарий
	|;";
	
	
	ТекстНаличиеАналитик = "";		
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяИзмерения = КлючИЗначение.Ключ;	
		//Начало_бит_БК_Магомедов_22.11.2011 
		Стр = "МАКСИМУМ(ВЫБОР
		|			КОГДА ТаблицаОстаток."+ИмяИзмерения+" = &Пусто"+ИмяИзмерения+"
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК "+ ИмяИзмерения;
		
		
		ТекстНаличиеАналитик = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстНаличиеАналитик,Стр,","+Символы.ПС);
		
	КонецЦикла; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%НаличиеАналитик%",ТекстНаличиеАналитик);
	//Начало_бит_БК_Магомедов_30.11.2011 
	Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ
		 ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Контракт_Инвест ИЛИ
		 Сценарий = Справочники.СценарииПланирования.Факт_Инвест	Тогда 
 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Период%","");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ГруппировкаПериод%","");
	иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Период%","ТаблицаОстаток.Период,");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ГруппировкаПериод%","ТаблицаОстаток.Период,");
	КонецЕсли;
	//Конец_бит_БК_Магомедов_30.11.2011 
	Возврат ТекстЗапроса;				   
	
КонецФункции // ПодготовитьТекстЗапросаНаличиеАналитик()

// бит_MZyubin Функция формирует фрагмент текста запроса выбирающий из таблицы контроля только те аналитики,
//по которым необходимо провести контроль
//
// Параметры:
//  ИзмеренияДоп  – Структура
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаКонтрольНаличиеАналитикИнвест(ИзмеренияДоп, ВидОперации, Сценарий = Неопределено) 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ТаблицаДляКонтроля.Период,
	|    НаличиеАналитик.Сценарий,				   
	|    %ИзмеренияДоп%
	|	СУММА(ТаблицаДляКонтроля.Количество) КАК Количество,				   
	|	СУММА(ТаблицаДляКонтроля.Сумма) КАК Сумма,
	|	СУММА(ТаблицаДляКонтроля.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДляКонтроля.СуммаБезНДСсПревышением) КАК СуммаБезНДСсПревышением,
	
	//1c-izhtc spawn 26.08.15 (
	//|	СУММА(ТаблицаДляКонтроля.СуммаВРамкахБюджетаБезНДС) КАК СуммаВРамкахБюджетаБезНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаВРамкахБюджетаБезНДСсПревышением) КАК СуммаВРамкахБюджетаБезНДСсПревышением,
	//|	СУММА(ТаблицаДляКонтроля.СуммаЗаРамкамиБюджетаБезНДС) КАК СуммаЗаРамкамиБюджетаБезНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаЗаРамкамиБюджетаБезНДСсПревышением) КАК СуммаЗаРамкамиБюджетаБезНДСсПревышением,
	//|	СУММА(ТаблицаДляКонтроля.СуммаВРамкахБюджетаСНДС) КАК СуммаВРамкахБюджетаСНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаЗаРамкамиБюджетаСНДС) КАК СуммаЗаРамкамиБюджетаСНДС 
	|	СУММА(ТаблицаДляКонтроля.бит_БК_СуммаБезНДС) КАК бит_БК_СуммаБезНДС,
	|	СУММА(ТаблицаДляКонтроля.бит_БК_СуммаБезНДСсПревышением) КАК бит_БК_СуммаБезНДСсПревышением,
	|	СУММА(ТаблицаДляКонтроля.бит_БК_СуммаСНДС) КАК бит_БК_СуммаСНДС 
	//1c-izhtc spawn 26.08.15 )
	
	|ПОМЕСТИТЬ ТаблицаДляКонтроляНаличиеАналитик
	|ИЗ
	|	ТаблицаДляКонтроля КАК ТаблицаДляКонтроля
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеАналитик КАК НаличиеАналитик
	//Начало_бит_БК_Магомедов_30.11.2011 
	|		ПО 	%СоединениеПериод%
	//Конец_бит_БК_Магомедов_30.11.2011 
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляКонтроля.Период,
	|	НаличиеАналитик.Сценарий,				   
	|	%СгруппироватьДоп%			   
	|;";
	
	
	ТекстИзмерения = "";
	ТекстСгруппировать = "";
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяИзмерения = КлючИЗначение.Ключ;	
		//Начало_бит_БК_Магомедов_22.11.2011
		//СтрИзмерение = "ВЫБОР КОГДА 
		//			   |       ЕСТЬNULL(НаличиеАналитик."+ИмяИзмерения+", 0) = 1 
		//			   |         ТОГДА ТаблицаДляКонтроля."+ИмяИзмерения+"
		//			   |       ИНАЧЕ NULL
		//			   |КОНЕЦ";
		//СтрИзмерение = "ВЫБОР КОГДА 
		//			   |       ЕСТЬNULL(НаличиеАналитик."+ИмяИзмерения+", 0) = 1 ИЛИ &ЭтоФинПлан
		//			   |         ТОГДА ТаблицаДляКонтроля."+ИмяИзмерения+"
		//			   |       ИНАЧЕ NULL
		//			   |КОНЕЦ";
		СтрИзмерение = "ТаблицаДляКонтроля."+ИмяИзмерения+"";
		//Конец_бит_БК_Магомедов_28.11.2011  
		Стр = СтрИзмерение+" КАК "+ИмяИзмерения+",
		|МАКСИМУМ(ЕСТЬNULL(НаличиеАналитик."+ИмяИзмерения+", 0)) КАК Есть"+ИмяИзмерения; 
		
		
		ТекстИзмерения     = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,Стр,","+Символы.ПС);
		ТекстСгруппировать = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстСгруппировать,СтрИзмерение,","+Символы.ПС);
		
	КонецЦикла; 
	
	ТекстИзмерения  = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,",","");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДоп%",ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СгруппироватьДоп%",ТекстСгруппировать);
	//Начало_бит_БК_Магомедов_30.11.2011 
	Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ
		 ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Контракт_Инвест ИЛИ
		 Сценарий = Справочники.СценарииПланирования.Факт_Инвест	Тогда 
 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединениеПериод%","Истина");
	иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединениеПериод%","ТаблицаДляКонтроля.Период = НаличиеАналитик.Период");
	КонецЕсли;
	//Конец_бит_БК_Магомедов_30.11.2011 
	
	Возврат ТекстЗапроса;				   
	
КонецФункции // ПодготовитьТекстЗапросаКонтрольНаличиеАналитик()

// бит_MZyubin Функция формирует фрагмент текста запроса, осуществляющего контроль
//
// Параметры:
//  ИзмеренияДоп  – Структура
//  КонтролироватьНеУстановленные  – Булево
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаКонтрольИнвест(ИзмеренияДоп,КонтролироватьНеУстановленные, ВидОперации, Сценарий = Неопределено) 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляКонтроляНаличиеАналитик.Период,
	|	ТаблицаОстаток.Сценарий,				   
	|    %ИзмеренияДоп%
		// КОЛИЧЕСТВО
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ТаблицаОстаток.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТаблицаОстаток.КоличествоОстаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Количество, 0)  КАК КоличествоРазность,
	|	ЕСТЬNULL(ТаблицаОстаток.СуммаСценарийКонтроль, 0) КАК СуммаКонтроль,
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2018-07-05 (#3042)	
	//|	ЕСТЬNULL(ТаблицаОстаток.СуммаСценарийКонтрольСПревышением, 0) КАК СуммаКонтрольСПревышением,
	|	ЕСТЬNULL(ТаблицаОстаток.СуммаСценарийКонтроль, 0) КАК СуммаКонтрольСПревышением,
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2018-07-05 (#3042)
		// ОСТАТОК БЕЗ ПРЕВЫШЕНИЯ
	//общий
	|	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) КАК Остаток,	
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаБезНДС, 0) КАК СуммаБезНДС,
	|	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаБезНДС, 0)  КАК РазностьБезНДС,
	//1c-izhtc spawn 26.08.15 (
	////в рамках бюджета 	
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокВРамкахБюджета, 0) КАК ОстатокВРамкахБюджета,
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаБезНДС, 0) КАК СуммаВРамкахБюджетаБезНДС,
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокВРамкахБюджета, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаБезНДС, 0) КАК РазностьВРамкахБюджетаБезНДС,
	////за рамками бюджета
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокЗаРамкамиБюджета, 0) КАК ОстатокЗаРамкамиБюджета,	
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаБезНДС, 0) КАК СуммаЗаРамкамиБюджетаБезНДС,
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокЗаРамкамиБюджета, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаБезНДС, 0) КАК РазностьЗаРамкамиБюджетаБезНДС,
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДС, 0) КАК бит_БК_СуммаБезНДС,
	|	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДС, 0) КАК бит_БК_РазностьБезНДС,
	//1c-izhtc spawn 26.08.15 )
	    // ОСТАТОК С ПРЕВЫШЕНИЕМ
	//общий
	|	ЕСТЬNULL(ТаблицаОстаток.ОстатокСПревышением, 0) КАК ОстатокСПревышением,
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаБезНДСсПревышением, 0) КАК СуммаБезНДСсПревышением,	               
	|	ЕСТЬNULL(ТаблицаОстаток.ОстатокСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаБезНДСсПревышением, 0)  КАК РазностьБезНДСсПревышением,
	//1c-izhtc spawn 26.08.15 (
	////в рамках
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокВРамкахБюджетаСПревышением, 0) КАК ОстатокВРамкахБюджетаСПревышением,
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаБезНДСсПревышением, 0) КАК СуммаВРамкахБюджетаБезНДСсПревышением,
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокВРамкахБюджетаСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаБезНДС, 0)  КАК РазностьВРамкахБюджетаБезНДСсПревышением,
	////за рамками
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокЗаРамкамиБюджетаСПревышением, 0) КАК ОстатокЗаРамкахБюджетаСПревышением,
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаБезНДСсПревышением, 0) КАК СуммаЗаРамкамиБюджетаБезНДСсПревышением,
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокЗаРамкамиБюджетаСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаБезНДСсПревышением, 0)  КАК РазностьЗаРамкамиБюджетаБезНДСсПревышением,	
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДСсПревышением, 0) КАК бит_БК_СуммаБезНДСсПревышением,
	//ижтиси, шадрин, 23.10.2015(
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДСсПревышением, 0)  КАК бит_БК_РазностьБезНДСсПревышением,	
	|	ЕСТЬNULL(ТаблицаОстаток.ОстатокСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДС, 0)  КАК бит_БК_РазностьБезНДСсПревышением,
	//ижтиси, шадрин, 23.10.2015)
	//1c-izhtc spawn 26.08.15 )
	// С НДС не участвуют в контроле
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Сумма, 0) КАК Сумма,
    |	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Сумма, 0)  КАК Разность,	
	//1c-izhtc spawn 26.08.15 (
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаСНДС, 0) КАК СуммаВРамкахБюджетаСНДС,
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаСНДС, 0) КАК СуммаЗаРамкамиБюджетаСНДС
    |	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаСНДС, 0) КАК бит_БК_СуммаСНДС
	//1c-izhtc spawn 26.08.15 )
	|ИЗ
	|	ТаблицаДляКонтроляНаличиеАналитик КАК ТаблицаДляКонтроляНаличиеАналитик
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстаток КАК ТаблицаОстаток
	//Начало_бит_БК_Магомедов_30.11.2011 
	|		ПО  %СоединениеПериод%
	//Конец_бит_БК_Магомедов_30.11.2011 
	|            %СоединенияДоп%";
	
	Если НЕ КонтролироватьНеУстановленные Тогда
		
		ТекстЗапроса = ТекстЗапроса+"ГДЕ 
		|   (НЕ ТаблицаОстаток.СтатьяОборотов ЕСТЬ NULL)";
		
	КонецЕсли; 			   
	
	ТекстЗапроса = ТекстЗапроса+"
	|;
	|";
	
	ТекстИзмерения = "";
	ТекстСоединение = "";
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяИзмерения = КлючИЗначение.Ключ;	
		Стр = "ТаблицаДляКонтроляНаличиеАналитик."+ИмяИзмерения+",
		|ТаблицаДляКонтроляНаличиеАналитик.Есть"+ИмяИзмерения;
		СтрСоединение = "(ВЫБОР
		|	КОГДА ТаблицаДляКонтроляНаличиеАналитик.Есть"+ИмяИзмерения+" = 1
		|		   ТОГДА ТаблицаДляКонтроляНаличиеАналитик."+ИмяИзмерения+" = ТаблицаОстаток."+ИмяИзмерения+"
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)";
		
		ТекстИзмерения  = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,Стр,","+Символы.ПС);
		ТекстСоединение = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстСоединение,СтрСоединение,Символы.ПС+" И ");
		
	КонецЦикла; 
	
	ТекстИзмерения  = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,",","");
	ТекстСоединения = бит_СтрокиКлиентСервер.ДополнитьСтроку(""," И ",ТекстСоединение);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДоп%",ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединенияДоп%",ТекстСоединения);
	
	//Начало_бит_БК_Магомедов_30.11.2011 
	Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ
		 ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Контракт_Инвест ИЛИ
		 Сценарий = Справочники.СценарииПланирования.Факт_Инвест	Тогда 
 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединениеПериод%","Истина");
	иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединениеПериод%","ТаблицаДляКонтроляНаличиеАналитик.Период = ТаблицаОстаток.Период");
	КонецЕсли;
	//Конец_бит_БК_Магомедов_30.11.2011 
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПодготовитьТекстЗапросаКонтроль()

// бит_MZyubin Функция формирует полный текст запроса для контроля по бюджету
//
// Параметры:
// СтруктураПараметров - Структура
//
// Возвращаемое значение:
//   ТекстЗапроса - Строка
//
Функция СформироватьТекстЗапросаДляКонтроляИнвест(СтруктураПараметров) Экспорт
	
	ИзмеренияКонтроля             = СтруктураПараметров.ИзмеренияКонтроля;
	КонтролироватьНеУстановленные = СтруктураПараметров.КонтролироватьНеУстановленные;
	Сценарий                      = СтруктураПараметров.Сценарий;
	РежимКонтроля                 = СтруктураПараметров.РежимКонтроля;
	//Начало_бит_БК_Магомедов_30.11.2011 
	ВидОперации					  = СтруктураПараметров.ВидОперации;
	//Конец_бит_БК_Магомедов_30.11.2011 
	Если ВРег(РежимКонтроля) = ВРег("Заявки") Тогда
		
		УсловиеНаСценарий = Истина;
		
	Иначе
		
		УсловиеНаСценарий = Ложь;
		
	КонецЕсли; 
	
	Периодичность = ПолучитьПериодичностьКонтроляСценария(Сценарий);
	
	СтрПериодичность = бит_ОбщегоНазначения.ПолучитьИмяЗначенияПеречисления(Перечисления.бит_ПериодичностьПланирования,Периодичность);
	
	
	ТекстЗапроса = "";
	ТекстТаблицаДляКонтроля      = ПодготовитьТекстЗапросаТаблицаДляКонтроляИнвест(ИзмеренияКонтроля,РежимКонтроля, ВидОперации, Сценарий);
	ТекстОстатки                 = ПодготовитьТекстЗапросаОстаткиПоБюджетуИнвест(ИзмеренияКонтроля,СтрПериодичность,УсловиеНаСценарий, ВидОперации, Сценарий);
	ТекстНаличиеАналитик         = ПодготовитьТекстЗапросаНаличиеАналитикИнвест(ИзмеренияКонтроля, ВидОперации, Сценарий);
	ТекстКонтрольНаличиеАналитик = ПодготовитьТекстЗапросаКонтрольНаличиеАналитикИнвест(ИзмеренияКонтроля, ВидОперации, Сценарий);
	ТекстКонтроль                = ПодготовитьТекстЗапросаКонтрольИнвест(ИзмеренияКонтроля,КонтролироватьНеУстановленные, ВидОперации, Сценарий);
	
	ТекстУдалить = "
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДляКонтроля
	|;				   
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаличиеАналитик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДляКонтроляНаличиеАналитик";
	
	Если ВРег(РежимКонтроля) = ВРег("Бюджет") Тогда
		
		ТекстУдалить = ТекстУдалить+"
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаДляКонтроляНач
		|;
		|";
		
	КонецЕсли; 			   
	
	
	ТекстЗапроса = ТекстЗапроса+ТекстТаблицаДляКонтроля;
	ТекстЗапроса = ТекстЗапроса+Символы.ПС+ТекстОстатки;
	ТекстЗапроса = ТекстЗапроса+ТекстНаличиеАналитик;
	ТекстЗапроса = ТекстЗапроса+ТекстКонтрольНаличиеАналитик;
	ТекстЗапроса = ТекстЗапроса+ТекстКонтроль;
	ТекстЗапроса = ТекстЗапроса+Символы.ПС+ТекстУдалить;
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаКонтрольныеЗначения()

//Конец Текст запроса для контроля  инвест заявки


// бит_MZyubin Функция формирует текст запроса извлечения данных из таблицы контроля. В режиме контроля по бюджету
//проверяется необходимость контроля по регистру сведений бит_НастройкиКонтроляПоСценариям
//
// Параметры:
//  ИзмеренияДоп - Структура
//  РежимКонтроля  – Строка - "Заявки","Бюджет"
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаТаблицаДляКонтроля(ИзмеренияДоп,РежимКонтроля, ВидОперации, Сценарий = Неопределено) 
	
	Если ВРег(РежимКонтроля) = ВРег("Заявки") Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ТаблицаДляКонтроля.Период,
		|	ТаблицаДляКонтроля.Сценарий,	
		|	ТаблицаДляКонтроля.СтатьяОборотов,
		|	%ИзмеренияДоп%
		|	ТаблицаДляКонтроля.Количество,		
		|	ТаблицаДляКонтроля.Сумма
		|ПОМЕСТИТЬ ТаблицаДляКонтроля
		|ИЗ
		|	&ТаблицаДляКонтроля КАК ТаблицаДляКонтроля
		|;
		| ";
		
	ИначеЕсли ВРег(РежимКонтроля) = ВРег("Бюджет")  Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ТаблицаДляКонтроля.Период,
		|	ТаблицаДляКонтроля.Сценарий,	
		|	ТаблицаДляКонтроля.СтатьяОборотов,
		|	%ИзмеренияДоп%
		|	ТаблицаДляКонтроля.Количество,		
		|	ТаблицаДляКонтроля.Сумма,
		//Начало_бит_БК_Магомедов_30.11.2011 
		|	ТаблицаДляКонтроля.СуммаБезНДС Как СуммаБезНДС,
		|	ТаблицаДляКонтроля.СуммаБезНДС + (ТаблицаДляКонтроля.СуммаБезНДС *&ЗначениеПревышения/100) КАК СуммаБезНДСсПревышением,
		//1c-izhtc spawn 26.08.15 (
		//|	ТаблицаДляКонтроля.бит_БК_СуммаВРамкахБюджетаБезНДС КАК СуммаВРамкахБюджетаБезНДС,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаВРамкахБюджетаБезНДС + (ТаблицаДляКонтроля.бит_БК_СуммаВРамкахБюджетаБезНДС *&ЗначениеПревышения/100) КАК СуммаВРамкахБюджетаБезНДСсПревышением,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаЗаРамкамиБюджетаБезНДС КАК СуммаЗаРамкамиБюджетаБезНДС,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаЗаРамкамиБюджетаБезНДС + (ТаблицаДляКонтроля.бит_БК_СуммаЗаРамкамиБюджетаБезНДС *&ЗначениеПревышения/100) КАК СуммаЗаРамкамиБюджетаБезНДСсПревышением,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаВРамкахБюджетаСНДС КАК СуммаВРамкахБюджетаСНДС,
		//|	ТаблицаДляКонтроля.бит_БК_СуммаЗаРамкамиБюджетаСНДС КАК СуммаЗаРамкамиБюджетаСНДС
		|	ТаблицаДляКонтроля.бит_БК_СуммаБезНДС КАК бит_БК_СуммаБезНДС,
		|	ТаблицаДляКонтроля.бит_БК_СуммаБезНДС + (ТаблицаДляКонтроля.бит_БК_СуммаБезНДС *&ЗначениеПревышения/100) КАК бит_БК_СуммаБезНДСсПревышением,
		|	ТаблицаДляКонтроля.бит_БК_СуммаСНДС КАК бит_БК_СуммаСНДС
		//1c-izhtc spawn 26.08.15 )
		//Конец_бит_БК_Магомедов_30.11.2011 
		|ПОМЕСТИТЬ ТаблицаДляКонтроляНач
		|ИЗ                                             
		|	&ТаблицаДляКонтроля КАК ТаблицаДляКонтроля
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////	
		
		//rarus +
		//|ВЫБРАТЬ
		//|	ТаблицаДляКонтроляНач.Период,
		//|	ТаблицаДляКонтроляНач.СтатьяОборотов,
		//|	%ИзмеренияДопНач%
		//|	ТаблицаДляКонтроляНач.Количество,		
		//|	ТаблицаДляКонтроляНач.Сумма,
		//|	ТаблицаДляКонтроляНач.СуммаБезНДС,
		//|	ТаблицаДляКонтроляНач.СуммаБезНДСсПревышением,
		//|	ТаблицаДляКонтроляНач.СуммаВРамкахБюджетаБезНДС,
		//|	ТаблицаДляКонтроляНач.СуммаВРамкахБюджетаБезНДСсПревышением,
		//|	ТаблицаДляКонтроляНач.СуммаЗаРамкамиБюджетаБезНДС,
		//|	ТаблицаДляКонтроляНач.СуммаЗаРамкамиБюджетаБезНДСсПревышением,
		//|	ТаблицаДляКонтроляНач.СуммаВРамкахБюджетаСНДС,
		//|	ТаблицаДляКонтроляНач.СуммаЗаРамкамиБюджетаСНДС
		//|ПОМЕСТИТЬ ТаблицаДляКонтроля
		//|ИЗ
		//|	ТаблицаДляКонтроляНач КАК ТаблицаДляКонтроляНач
		//|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_НастройкаКонтроляПоСценариям КАК ВключениеКонтроля
		//|		ПО ТаблицаДляКонтроляНач.Сценарий = ВключениеКонтроля.Сценарий	
		//|		И ТаблицаДляКонтроляНач.Период >= ВключениеКонтроля.Период
		//|			И (ТаблицаДляКонтроляНач.Период <= ВключениеКонтроля.ДатаОкончания
		//|				ИЛИ ВключениеКонтроля.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		//|ГДЕ
		//|	(НЕ ВключениеКонтроля.Сценарий ЕСТЬ NULL )
		//|;
	//rarus -	
		| ";
		
	КонецЕсли; 
	
	
	ТекстИзмерения    = "";	
	ТекстИзмеренияДоп = "";
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяИзмерения      = "ТаблицаДляКонтроля."+КлючИЗначение.Ключ;
		ИмяИзмеренияДоп   = "ТаблицаДляКонтроляНач."+КлючИЗначение.Ключ;
		ТекстИзмерения    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,ИмяИзмерения,","+Символы.ПС);
		ТекстИзмеренияДоп = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмеренияДоп,ИмяИзмеренияДоп,","+Символы.ПС);
		
	КонецЦикла; 
	
	ТекстИзмерения    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,",","");
	ТекстИзмеренияДоп = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмеренияДоп,",","");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДоп%"   ,ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДопНач%",ТекстИзмеренияДоп);
	
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПодготовитьТекстЗапросаТаблицаДляКонтроля()

// бит_MZyubin Функция формирует текст выборки контрольных значений из регистра бит_КонтрольныеЗначенияБюджетов
//
// Параметры:
//  ИзмеренияДоп  – Структура
//  Периодичность - ПеречислениеСсылка.бит_ПериодичностьПланирования
//  УсловиеНаСценарий  – Булево
//
// Возвращаемое значение:
// ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаОстаткиПоБюджету(ИзмеренияДоп,Периодичность,УсловиеНаСценарий, ВидОперации, Сценарий = Неопределено) 
	
	ТекстЗапроса = "   ////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)) КАК СуммаСценарийИсполнение,
	
		// ОСТАТОК БЕЗ ПРЕВЫШЕНИЯ	
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0)) КАК СуммаСценарийКонтроль,
    // общий
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)) КАК Остаток,
	//1c-izhtc spawn 26.08.15 (
	//// в рамках бюджета 
	//|	СУММА(Выбор Когда КонтрольныеЗначения.Аналитика_3 = Значение(Перечисление.бит_БК_ВариантыБюджета.ВРамкахБюджета) тогда
	//|	ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)
	//|	Иначе 0
	//|	Конец) КАК ОстатокВРамкахБюджета,
	//// за рамками бюджета
	//|	СУММА(Выбор Когда КонтрольныеЗначения.Аналитика_3 = Значение(Перечисление.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета) тогда
	//|	ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0) 
	//|	Иначе 0
	//|	Конец) КАК ОстатокЗаРамкамиБюджета,
	//1c-izhtc spawn 26.08.15 )
	
		// ОСТАТОК С ПРЕВЫШЕНИЕМ
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2018-07-05 (#3042)	
	//|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольСПревышениемОборот, 0)) КАК СуммаСценарийКонтрольСПревышением,
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0)) КАК СуммаСценарийКонтрольСПревышением,
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2018-07-05 (#3042)
	//общий
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2018-07-05 (#3042)	
	//|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольСПревышениемОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)) КАК ОстатокСПревышением,
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)) КАК ОстатокСПревышением,
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2018-07-05 (#3042)
	//1c-izhtc spawn 26.08.15 (
	////в рамках бюджета
	//|	СУММА(ВЫБОР
	//|		КОГДА КонтрольныеЗначения.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ВРамкахБюджета)
	//|			ТОГДА ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольСПревышениемОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ) КАК ОстатокВРамкахБюджетаСПревышением,
	////за рамками бюджета
	//|	СУММА(ВЫБОР
	//|		КОГДА КонтрольныеЗначения.Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета)
	//|			ТОГДА ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольСПревышениемОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ) КАК ОстатокЗаРамкамиБюджетаСПревышением,
	//1c-izhtc spawn 26.08.15 )
	
		// КОЛИЧЕСТВО 
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.КоличествоСценарийКонтрольОборот, 0)) КАК КоличествоСценарийКонтроль,
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.КоличествоСценарийИсполнениеОборот, 0)) КАК КоличествоСценарийИсполнение,
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.КоличествоСценарийКонтрольОборот, 0) - ЕСТЬNULL(КонтрольныеЗначения.КоличествоСценарийИсполнениеОборот, 0)) КАК КоличествоОстаток,
	//Начало_бит_БК_Магомедов_30.11.2011 
	|	%Период%	
	//Конец_бит_БК_Магомедов_30.11.2011 
	|	КонтрольныеЗначения.Сценарий КАК Сценарий,				   
	|	КонтрольныеЗначения.СтатьяОборотов КАК СтатьяОборотов,
	|	%ИзмеренияДоп%
	|ПОМЕСТИТЬ ТаблицаОстаток
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	//Начало_бит_БК_Магомедов_30.11.2011 
	|			%ДатаНачала%,
	|			%ДатаОкончания%,				  
	|			%Периодичность%,
	//Конец_бит_БК_Магомедов_30.11.2011 
	|            СценарийКонтролируемый = &СценарийКонтролируемый				   
	|			%УсловиеНаСценарий%
	|			И СтатьяОборотов В ИЕРАРХИИ (&МассивСтатьяОборотов)
	|				%Отбор%
	|				) КАК КонтрольныеЗначения
	|
	|СГРУППИРОВАТЬ ПО
	//Начало_бит_БК_Магомедов_30.11.2011 
	|	%ГруппировкаПериод%	
	//Конец_бит_БК_Магомедов_30.11.2011 
	|	КонтрольныеЗначения.Сценарий,				   				   
	|	КонтрольныеЗначения.СтатьяОборотов,
	|	%ИзмеренияДоп%
	|;";
	
	ТекстИзмерения = "";		
	ТекстОтбор     = "";
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяПоля = "КонтрольныеЗначения."+КлючИЗначение.Ключ;
		СтрОтбор = КлючИЗначение.Ключ+" В (&Массив"+КлючИЗначение.Ключ+")";
		ТекстИзмерения = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,ИмяПоля,","+Символы.ПС);
		ТекстОтбор     = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстОтбор,СтрОтбор," И ");
		
	КонецЦикла; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДоп%",ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Отбор%"," И "+ТекстОтбор);
	
	Если УсловиеНаСценарий Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%УсловиеНаСценарий%"," И Сценарий = &Сценарий");
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%УсловиеНаСценарий%","");
		
	КонецЕсли; 
		
	//Начало_бит_БК_Магомедов_30.11.2011 
	//если инвестиционная заявка убираем Период
	Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ
		 ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Контракт_Инвест ИЛИ
		 Сценарий = Справочники.СценарииПланирования.Факт_Инвест	Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Период%","");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ДатаНачала%","");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ДатаОкончания%","");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Периодичность%","Период");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ГруппировкаПериод%","");
	Иначе 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Период%","НАЧАЛОПЕРИОДА(КонтрольныеЗначения.Период,"+Периодичность+") КАК Период,");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ДатаНачала%","&ДатаНачала");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ДатаОкончания%","&ДатаОкончания");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Периодичность%",""+Периодичность);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ГруппировкаПериод%","КонтрольныеЗначения.Период,");
	КонецЕсли;
	//Конец_бит_БК_Магомедов_30.11.2011 
	Возврат ТекстЗапроса;				   
	
КонецФункции // ПодготовитьТекстЗапросаОстаткиПоБюджету()

// бит_MZyubin Функция формирует фрагмент текста запроса, отвечающий за определение необходимости 
//контроля по аналитикам
//
// Параметры:
//  ИзмеренияДоп  – Структура
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаНаличиеАналитик(ИзмеренияДоп, ВидОперации, Сценарий = Неопределено) 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	//Начало_бит_БК_Магомедов_30.11.2011 
	|	%Период%
	//Конец_бит_БК_Магомедов_30.11.2011 
	|	ТаблицаОстаток.Сценарий,				   
	|	ТаблицаОстаток.СтатьяОборотов,
	|    %НаличиеАналитик%
	|ПОМЕСТИТЬ НаличиеАналитик
	|ИЗ
	|	ТаблицаОстаток КАК ТаблицаОстаток
	|
	|СГРУППИРОВАТЬ ПО
	//Начало_бит_БК_Магомедов_30.11.2011 
	|	%ГруппировкаПериод%	
	//Конец_бит_БК_Магомедов_30.11.2011 
	|	ТаблицаОстаток.Сценарий,				   
	|	ТаблицаОстаток.СтатьяОборотов
	|;";
	
	
	ТекстНаличиеАналитик = "";		
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяИзмерения = КлючИЗначение.Ключ;	
		//Начало_бит_БК_Магомедов_22.11.2011 
		Стр = "МАКСИМУМ(ВЫБОР
		|			КОГДА ТаблицаОстаток."+ИмяИзмерения+" = &Пусто"+ИмяИзмерения+"
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК "+ ИмяИзмерения;
		
		
		ТекстНаличиеАналитик = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстНаличиеАналитик,Стр,","+Символы.ПС);
		
	КонецЦикла; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%НаличиеАналитик%",ТекстНаличиеАналитик);
	//Начало_бит_БК_Магомедов_30.11.2011 
	Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ
		 ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Контракт_Инвест ИЛИ
		 Сценарий = Справочники.СценарииПланирования.Факт_Инвест	Тогда 
 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Период%","");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ГруппировкаПериод%","");
	иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Период%","ТаблицаОстаток.Период,");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ГруппировкаПериод%","ТаблицаОстаток.Период,");
	КонецЕсли;
	//Конец_бит_БК_Магомедов_30.11.2011 
	Возврат ТекстЗапроса;				   
	
КонецФункции // ПодготовитьТекстЗапросаНаличиеАналитик()

// бит_MZyubin Функция формирует фрагмент текста запроса выбирающий из таблицы контроля только те аналитики,
//по которым необходимо провести контроль
//
// Параметры:
//  ИзмеренияДоп  – Структура
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаКонтрольНаличиеАналитик(ИзмеренияДоп, ВидОперации, Сценарий = Неопределено) 
	
	//rarus +
	
	//ТекстЗапроса = "
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|    ТаблицаДляКонтроля.Период,
	//|    НаличиеАналитик.Сценарий,				   
	//|	ТаблицаДляКонтроля.СтатьяОборотов КАК СтатьяОборотов,
	//|    %ИзмеренияДоп%
	//|	СУММА(ТаблицаДляКонтроля.Количество) КАК Количество,				   
	//|	СУММА(ТаблицаДляКонтроля.Сумма) КАК Сумма,
	//|	СУММА(ТаблицаДляКонтроля.СуммаБезНДС) КАК СуммаБезНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаБезНДСсПревышением) КАК СуммаБезНДСсПревышением,
	//
	//|	СУММА(ТаблицаДляКонтроля.СуммаВРамкахБюджетаБезНДС) КАК СуммаВРамкахБюджетаБезНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаВРамкахБюджетаБезНДСсПревышением) КАК СуммаВРамкахБюджетаБезНДСсПревышением,
	//|	СУММА(ТаблицаДляКонтроля.СуммаЗаРамкамиБюджетаБезНДС) КАК СуммаЗаРамкамиБюджетаБезНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаЗаРамкамиБюджетаБезНДСсПревышением) КАК СуммаЗаРамкамиБюджетаБезНДСсПревышением,
	//|	СУММА(ТаблицаДляКонтроля.СуммаВРамкахБюджетаСНДС) КАК СуммаВРамкахБюджетаСНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаЗаРамкамиБюджетаСНДС) КАК СуммаЗаРамкамиБюджетаСНДС 
	//
	//|ПОМЕСТИТЬ ТаблицаДляКонтроляНаличиеАналитик
	//|ИЗ
	//|	ТаблицаДляКонтроля КАК ТаблицаДляКонтроля
	//|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеАналитик КАК НаличиеАналитик
	////Начало_бит_БК_Магомедов_30.11.2011 
	//|		ПО 	%СоединениеПериод%
	////Конец_бит_БК_Магомедов_30.11.2011 
	//|			И ТаблицаДляКонтроля.СтатьяОборотов = НаличиеАналитик.СтатьяОборотов
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ТаблицаДляКонтроля.Период,
	//|	НаличиеАналитик.Сценарий,				   
	//|	ТаблицаДляКонтроля.СтатьяОборотов,
	//|	%СгруппироватьДоп%			   
	//|;";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДляКонтроля.Период,
	|	НаличиеАналитик.Сценарий,
	|	ТаблицаДляКонтроля.СтатьяОборотов КАК СтатьяОборотов,
	|    %ИзмеренияДоп%
	|	СУММА(ТаблицаДляКонтроля.Количество) КАК Количество,
	|	СУММА(ТаблицаДляКонтроля.Сумма) КАК Сумма,
	|	СУММА(ТаблицаДляКонтроля.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДляКонтроля.СуммаБезНДСсПревышением) КАК СуммаБезНДСсПревышением,
	//1c-izhtc spawn 26.08.15 (
	//|	СУММА(ТаблицаДляКонтроля.СуммаВРамкахБюджетаБезНДС) КАК СуммаВРамкахБюджетаБезНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаВРамкахБюджетаБезНДСсПревышением) КАК СуммаВРамкахБюджетаБезНДСсПревышением,
	//|	СУММА(ТаблицаДляКонтроля.СуммаЗаРамкамиБюджетаБезНДС) КАК СуммаЗаРамкамиБюджетаБезНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаЗаРамкамиБюджетаБезНДСсПревышением) КАК СуммаЗаРамкамиБюджетаБезНДСсПревышением,
	//|	СУММА(ТаблицаДляКонтроля.СуммаВРамкахБюджетаСНДС) КАК СуммаВРамкахБюджетаСНДС,
	//|	СУММА(ТаблицаДляКонтроля.СуммаЗаРамкамиБюджетаСНДС) КАК СуммаЗаРамкамиБюджетаСНДС
	|	СУММА(ТаблицаДляКонтроля.бит_БК_СуммаБезНДСсПревышением) КАК бит_БК_СуммаБезНДСсПревышением,
	|	СУММА(ТаблицаДляКонтроля.бит_БК_СуммаБезНДС) КАК бит_БК_СуммаБезНДС,
	|	СУММА(ТаблицаДляКонтроля.бит_БК_СуммаСНДС) КАК бит_БК_СуммаСНДС
	//1c-izhtc spawn 26.08.15 )
	|	ПОМЕСТИТЬ ТаблицаДляКонтроляНаличиеАналитик
	|ИЗ
	|	ТаблицаДляКонтроляНач КАК ТаблицаДляКонтроля
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_НастройкаКонтроляПоСценариям КАК ВключениеКонтроля
	|		ПО ТаблицаДляКонтроля.Сценарий = ВключениеКонтроля.Сценарий
	|			И ТаблицаДляКонтроля.Период >= ВключениеКонтроля.Период
	|			И (ВЫБОР
	|				КОГДА ВключениеКонтроля.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаДляКонтроля.Период <= ВключениеКонтроля.ДатаОкончания
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеАналитик КАК НаличиеАналитик
	//Начало_бит_БК_Магомедов_30.11.2011 
	|		ПО 	%СоединениеПериод%
	//Конец_бит_БК_Магомедов_30.11.2011 
	|			И ТаблицаДляКонтроля.СтатьяОборотов = НаличиеАналитик.СтатьяОборотов
	|ГДЕ
	|	НЕ ВключениеКонтроля.Сценарий ЕСТЬ NULL 
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляКонтроля.Период,
	|	НаличиеАналитик.Сценарий,
	|	ТаблицаДляКонтроля.СтатьяОборотов,
	|	%СгруппироватьДоп%			   
	|;";
	
	//rarus -
	
	ТекстИзмерения = "";
	ТекстСгруппировать = "";
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяИзмерения = КлючИЗначение.Ключ;	
		//Начало_бит_БК_Магомедов_22.11.2011
		//СтрИзмерение = "ВЫБОР КОГДА 
		//			   |       ЕСТЬNULL(НаличиеАналитик."+ИмяИзмерения+", 0) = 1 
		//			   |         ТОГДА ТаблицаДляКонтроля."+ИмяИзмерения+"
		//			   |       ИНАЧЕ NULL
		//			   |КОНЕЦ";
		//СтрИзмерение = "ВЫБОР КОГДА 
		//			   |       ЕСТЬNULL(НаличиеАналитик."+ИмяИзмерения+", 0) = 1 ИЛИ &ЭтоФинПлан
		//			   |         ТОГДА ТаблицаДляКонтроля."+ИмяИзмерения+"
		//			   |       ИНАЧЕ NULL
		//			   |КОНЕЦ";
		СтрИзмерение = "ТаблицаДляКонтроля."+ИмяИзмерения+"";
		//Конец_бит_БК_Магомедов_28.11.2011  
		Стр = СтрИзмерение+" КАК "+ИмяИзмерения+",
		|МАКСИМУМ(ЕСТЬNULL(НаличиеАналитик."+ИмяИзмерения+", 0)) КАК Есть"+ИмяИзмерения; 
		
		
		ТекстИзмерения     = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,Стр,","+Символы.ПС);
		ТекстСгруппировать = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстСгруппировать,СтрИзмерение,","+Символы.ПС);
		
	КонецЦикла; 
	
	ТекстИзмерения  = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,",","");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДоп%",ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СгруппироватьДоп%",ТекстСгруппировать);
	//Начало_бит_БК_Магомедов_30.11.2011 
	Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ
		 ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Контракт_Инвест ИЛИ
		 Сценарий = Справочники.СценарииПланирования.Факт_Инвест	Тогда 
 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединениеПериод%","Истина");
	иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединениеПериод%","ТаблицаДляКонтроля.Период = НаличиеАналитик.Период");
	КонецЕсли;
	//Конец_бит_БК_Магомедов_30.11.2011 
	
	Возврат ТекстЗапроса;				   
	
КонецФункции // ПодготовитьТекстЗапросаКонтрольНаличиеАналитик()

// бит_MZyubin Функция формирует фрагмент текста запроса, осуществляющего контроль
//
// Параметры:
//  ИзмеренияДоп  – Структура
//  КонтролироватьНеУстановленные  – Булево
//
// Возвращаемое значение:
//   ТекстЗапроса   – Строка
//
Функция ПодготовитьТекстЗапросаКонтроль(ИзмеренияДоп,КонтролироватьНеУстановленные, ВидОперации, Сценарий = Неопределено) 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляКонтроляНаличиеАналитик.Период,
	|	ТаблицаОстаток.Сценарий,				   
	|	ТаблицаДляКонтроляНаличиеАналитик.СтатьяОборотов,
	|    %ИзмеренияДоп%
		// КОЛИЧЕСТВО
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ТаблицаОстаток.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТаблицаОстаток.КоличествоОстаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Количество, 0)  КАК КоличествоРазность,
	|	ЕСТЬNULL(ТаблицаОстаток.СуммаСценарийКонтроль, 0) КАК СуммаКонтроль,
	//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2018-07-05 (#3042)
	//|	ЕСТЬNULL(ТаблицаОстаток.СуммаСценарийКонтрольСПревышением, 0) КАК СуммаКонтрольСПревышением,
	|	ЕСТЬNULL(ТаблицаОстаток.СуммаСценарийКонтроль, 0) КАК СуммаКонтрольСПревышением,
	//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2018-07-05 (#3042)
		// ОСТАТОК БЕЗ ПРЕВЫШЕНИЯ
	//общий
	|	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) КАК Остаток,	
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаБезНДС, 0) КАК СуммаБезНДС,
	|	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаБезНДС, 0)  КАК РазностьБезНДС,
	//1c-izhtc spawn 26.08.15 (
	////в рамках бюджета 	
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокВРамкахБюджета, 0) КАК ОстатокВРамкахБюджета,
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаБезНДС, 0) КАК СуммаВРамкахБюджетаБезНДС,
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокВРамкахБюджета, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаБезНДС, 0) КАК РазностьВРамкахБюджетаБезНДС,
	////за рамками бюджета
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокЗаРамкамиБюджета, 0) КАК ОстатокЗаРамкамиБюджета,	
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаБезНДС, 0) КАК СуммаЗаРамкамиБюджетаБезНДС,
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокЗаРамкамиБюджета, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаБезНДС, 0) КАК РазностьЗаРамкамиБюджетаБезНДС,
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДС, 0) КАК бит_БК_СуммаБезНДС,
	|	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДС, 0) КАК бит_БК_РазностьБезНДС,
	//1c-izhtc spawn 26.08.15 )
	    // ОСТАТОК С ПРЕВЫШЕНИЕМ
	//общий
	|	ЕСТЬNULL(ТаблицаОстаток.ОстатокСПревышением, 0) КАК ОстатокСПревышением,
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаБезНДСсПревышением, 0) КАК СуммаБезНДСсПревышением,	               
	|	ЕСТЬNULL(ТаблицаОстаток.ОстатокСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаБезНДСсПревышением, 0)  КАК РазностьБезНДСсПревышением,
	//1c-izhtc spawn 26.08.15 (
	////в рамках
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокВРамкахБюджетаСПревышением, 0) КАК ОстатокВРамкахБюджетаСПревышением,
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаБезНДСсПревышением, 0) КАК СуммаВРамкахБюджетаБезНДСсПревышением,
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокВРамкахБюджетаСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаБезНДС, 0)  КАК РазностьВРамкахБюджетаБезНДСсПревышением,
	////за рамками
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокЗаРамкамиБюджетаСПревышением, 0) КАК ОстатокЗаРамкамиБюджетаСПревышением,
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаБезНДСсПревышением, 0) КАК СуммаЗаРамкамиБюджетаБезНДСсПревышением,
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокЗаРамкамиБюджетаСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаБезНДСсПревышением, 0)  КАК РазностьЗаРамкамиБюджетаБезНДСсПревышением,	
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДСсПревышением, 0) КАК бит_БК_СуммаБезНДСсПревышением,
	//ижтиси, шадрин, 23.10.2015(
	//|	ЕСТЬNULL(ТаблицаОстаток.ОстатокСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДСсПревышением, 0)  КАК бит_БК_РазностьБезНДСсПревышением,
	|	ЕСТЬNULL(ТаблицаОстаток.ОстатокСПревышением, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаБезНДС, 0)  КАК бит_БК_РазностьБезНДСсПревышением,
	//ижтиси, шадрин, 23.10.2015)
	//1c-izhtc spawn 26.08.15 )
	// С НДС не участвуют в контроле
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Сумма, 0) КАК Сумма,
    |	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Сумма, 0)  КАК Разность,	
	//1c-izhtc spawn 26.08.15 (
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаВРамкахБюджетаСНДС, 0) КАК СуммаВРамкахБюджетаСНДС,
	//|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.СуммаЗаРамкамиБюджетаСНДС, 0) КАК СуммаЗаРамкамиБюджетаСНДС
    |	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.бит_БК_СуммаСНДС, 0) КАК бит_БК_СуммаСНДС
	//1c-izhtc spawn 26.08.15 )
	|ИЗ
	|	ТаблицаДляКонтроляНаличиеАналитик КАК ТаблицаДляКонтроляНаличиеАналитик
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстаток КАК ТаблицаОстаток
	//Начало_бит_БК_Магомедов_30.11.2011 
	|		ПО  %СоединениеПериод%
	//Конец_бит_БК_Магомедов_30.11.2011 
	|			И ТаблицаДляКонтроляНаличиеАналитик.СтатьяОборотов = ТаблицаОстаток.СтатьяОборотов
	|            %СоединенияДоп%";
	
	Если НЕ КонтролироватьНеУстановленные Тогда
		
		ТекстЗапроса = ТекстЗапроса+"ГДЕ 
		|   (НЕ ТаблицаОстаток.СтатьяОборотов ЕСТЬ NULL)";
		
	КонецЕсли; 			   
	
	ТекстЗапроса = ТекстЗапроса+"
	|;
	|";
	
	ТекстИзмерения = "";
	ТекстСоединение = "";
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		
		ИмяИзмерения = КлючИЗначение.Ключ;	
		//Начало_бит_БК_Магомедов_28.11.2011 
		//Стр = "ТаблицаОстаток."+ИмяИзмерения+",
		//	  |ТаблицаДляКонтроляНаличиеАналитик.Есть"+ИмяИзмерения;
		//Стр = "Выбор Когда &ЭтоФинПлан тогда 
		//	  |ТаблицаДляКонтроляНаличиеАналитик."+ИмяИзмерения+"		    
		//  	  |иначе
		//	  |ТаблицаОстаток."+ИмяИзмерения+" 
		//	  |Конец КАК "+ИмяИзмерения+",
		//  	  |ТаблицаДляКонтроляНаличиеАналитик.Есть"+ИмяИзмерения+"
		//	  |";
		Стр = "ТаблицаДляКонтроляНаличиеАналитик."+ИмяИзмерения+",
		|ТаблицаДляКонтроляНаличиеАналитик.Есть"+ИмяИзмерения;
		СтрСоединение = "(ВЫБОР
		|	КОГДА ТаблицаДляКонтроляНаличиеАналитик.Есть"+ИмяИзмерения+" = 1
		|		   ТОГДА ТаблицаДляКонтроляНаличиеАналитик."+ИмяИзмерения+" = ТаблицаОстаток."+ИмяИзмерения+"
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)";
		
		ТекстИзмерения  = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,Стр,","+Символы.ПС);
		ТекстСоединение = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстСоединение,СтрСоединение,Символы.ПС+" И ");
		
	КонецЦикла; 
	
	ТекстИзмерения  = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстИзмерения,",","");
	ТекстСоединения = бит_СтрокиКлиентСервер.ДополнитьСтроку(""," И ",ТекстСоединение);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИзмеренияДоп%",ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединенияДоп%",ТекстСоединения);
	
	//Начало_бит_БК_Магомедов_30.11.2011 
	Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Заявка_Инвест ИЛИ
		 ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт ИЛИ
		 Сценарий    = Справочники.СценарииПланирования.Контракт_Инвест ИЛИ
		 Сценарий = Справочники.СценарииПланирования.Факт_Инвест	Тогда 
 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединениеПериод%","Истина");
	иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединениеПериод%","ТаблицаДляКонтроляНаличиеАналитик.Период = ТаблицаОстаток.Период");
	КонецЕсли;
	//Конец_бит_БК_Магомедов_30.11.2011 
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПодготовитьТекстЗапросаКонтроль()

// бит_MZyubin Функция формирует полный текст запроса для контроля по бюджету
//
// Параметры:
// СтруктураПараметров - Структура
//
// Возвращаемое значение:
//   ТекстЗапроса - Строка
//
Функция СформироватьТекстЗапросаДляКонтроля(СтруктураПараметров) Экспорт
	
	ИзмеренияКонтроля             = СтруктураПараметров.ИзмеренияКонтроля;
	КонтролироватьНеУстановленные = СтруктураПараметров.КонтролироватьНеУстановленные;
	Сценарий                      = СтруктураПараметров.Сценарий;
	РежимКонтроля                 = СтруктураПараметров.РежимКонтроля;
	//Начало_бит_БК_Магомедов_30.11.2011 
	ВидОперации					  = СтруктураПараметров.ВидОперации;
	//Конец_бит_БК_Магомедов_30.11.2011 
	Если ВРег(РежимКонтроля) = ВРег("Заявки") Тогда
		
		УсловиеНаСценарий = Истина;
		
	Иначе
		
		УсловиеНаСценарий = Ложь;
		
	КонецЕсли; 
	
	Периодичность = ПолучитьПериодичностьКонтроляСценария(Сценарий);
	
	СтрПериодичность = бит_ОбщегоНазначения.ПолучитьИмяЗначенияПеречисления(Перечисления.бит_ПериодичностьПланирования,Периодичность);
	
	
	ТекстЗапроса = "";
	ТекстТаблицаДляКонтроля      = ПодготовитьТекстЗапросаТаблицаДляКонтроля(ИзмеренияКонтроля,РежимКонтроля, ВидОперации, Сценарий);
	ТекстОстатки                 = ПодготовитьТекстЗапросаОстаткиПоБюджету(ИзмеренияКонтроля,СтрПериодичность,УсловиеНаСценарий, ВидОперации, Сценарий);
	ТекстНаличиеАналитик         = ПодготовитьТекстЗапросаНаличиеАналитик(ИзмеренияКонтроля, ВидОперации, Сценарий);
	ТекстКонтрольНаличиеАналитик = ПодготовитьТекстЗапросаКонтрольНаличиеАналитик(ИзмеренияКонтроля, ВидОперации, Сценарий);
	ТекстКонтроль                = ПодготовитьТекстЗапросаКонтроль(ИзмеренияКонтроля,КонтролироватьНеУстановленные, ВидОперации, Сценарий);
	
	ТекстУдалить = "
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстаток
	|;
	|
	//rarus +
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ТаблицаДляКонтроля
	//|;				   
	//|
	//rarus -
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаличиеАналитик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДляКонтроляНаличиеАналитик";
	
	Если ВРег(РежимКонтроля) = ВРег("Бюджет") Тогда
		
		ТекстУдалить = ТекстУдалить+"
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаДляКонтроляНач
		|;
		|";
		
	КонецЕсли; 			   
	
	
	ТекстЗапроса = ТекстЗапроса+ТекстТаблицаДляКонтроля;
	ТекстЗапроса = ТекстЗапроса+Символы.ПС+ТекстОстатки;
	ТекстЗапроса = ТекстЗапроса+ТекстНаличиеАналитик;
	ТекстЗапроса = ТекстЗапроса+ТекстКонтрольНаличиеАналитик;
	ТекстЗапроса = ТекстЗапроса+ТекстКонтроль;
	ТекстЗапроса = ТекстЗапроса+Символы.ПС+ТекстУдалить;
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаКонтрольныеЗначения()

//бит_MZyubin Процедура обрабатывает результат выполнения запроса для контроля по бюджету. Заполняется таблица
// движений регистра бит_КонтрольныеЗначенияБюджетов
//
// Параметры:
//  Результат           – РезультатЗапроса
//  ТаблицаДвижений     - ТаблицаЗначений - Таблица движений регистра бит_КонтрольныеЗначенияБюджетов
//  СтруктураПараметров - Структура
//  Отказ               - Булево
//  Заголовок           - Строка
//
// BIT AMerkulov ++
Процедура ОбработатьРезультатКонтроля(Результат,ТаблицаДвижений = Неопределено,СтруктураПараметров,Отказ,Заголовок, РезультатДляКонтроляИнвест = Неопределено, ЭтоЗакрытие = Ложь, СсылкаНаДокумент = Неопределено) Экспорт
// BIT AMerkulov --
	ИзмеренияКонтроля    = СтруктураПараметров.ИзмеренияКонтроля;	
	Сценарий             = СтруктураПараметров.Сценарий;
	КонтролироватьБюджет = СтруктураПараметров.КонтролироватьБюджет;
	СверхБюджета         = СтруктураПараметров.СверхБюджета;
	
	ВалютаСценария       = Сценарий.Валюта;
	
	//Начало_бит_БК_Магомедов_18.11.2011 
	СценарийКонтролируемый = СтруктураПараметров.СценарийКонтролируемый;
	СценарийКонтролирующий = СтруктураПараметров.СценарийКонтролирующий;
	ВидОперации = СтруктураПараметров.ВидОперации;
	ДокументСсылка = СтруктураПараметров.ДокументСсылка;
	
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	флЕстьПревышение = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ТаблицаДвижений = Неопределено Тогда //Движения
			
			//Начало_бит_БК_Магомедов_18.11.2011
			Если НЕ ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ФинансовыйПлан Тогда
				//1c-izhtc spawn 26.08.15 (
				//Если Выборка.СуммаВРамкахБюджетаБезНДС > 0 Тогда 
				// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-17 (#4226)
				//Если Выборка.бит_БК_СуммаБезНДС > 0 Тогда 
				// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-17 (#4226)
				//1c-izhtc spawn 26.08.15 )
					СтрокаДвижение = ТаблицаДвижений.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижение,Выборка);
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-02 (#3045)
					Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт Тогда 
						СтрокаДвижение.Контрагент		  = Неопределено;
						СтрокаДвижение.ДоговорКонтрагента = Неопределено;
					КонецЕсли;
					//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-02 (#3045)
					// СтрокаДвижение.СуммаСценарийИсполнение = Выборка.Сумма;
					//Начало_бит_БК_Магомедов_15.11.2011         
					//СтрокаДвижение.СуммаСценарийКонтроль = Выборка.СуммаВРамкахБюджетаБезНДС;
					//СтрокаДвижение.СуммаСценарийКонтрольСПревышением = Выборка.СуммаВРамкахБюджетаБезНДС;
					//1c-izhtc spawn 26.08.15 (
					//СтрокаДвижение.СуммаСценарийИсполнение = Выборка.СуммаВРамкахБюджетаБезНДС;
					//СтрокаДвижение.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ВРамкахБюджета;
					СтрокаДвижение.СуммаСценарийИсполнение = Выборка.бит_БК_СуммаБезНДС;
					//1c-izhtc spawn 26.08.15 )
					//СтрокаДвижение.КоличествоСценарийИсполнение = Выборка.Количество;
					//  Если НЕ ЗначениеЗаполнено(СтрокаДвижение.Сценарий) Тогда
					
					СтрокаДвижение.Сценарий = СценарийКонтролирующий;
					СтрокаДвижение.СценарийКонтролируемый = Сценарий;
					//КонецЕсли; 
				// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-17 (#4226)
				//КонецЕсли;
				// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-17 (#4226)
				
				//1c-izhtc spawn 26.08.15 (
				//// По превышению бюджета добавим строку в таблицу движений по регистру контролируемых значений
				////Если Выборка.СуммаЗаРамкамиБюджетаБезНДС > 0 Тогда 
				//Если Выборка.СуммаЗаРамкамиБюджетаБезНДС > 0 Тогда 
				//	СтрокаДвижение = ТаблицаДвижений.Добавить();
				//	ЗаполнитьЗначенияСвойств(СтрокаДвижение,Выборка);
				//	// СтрокаДвижение.СуммаСценарийИсполнение = Выборка.Сумма;
				//	//Начало_бит_БК_Магомедов_15.11.2011         
				//	//СтрокаДвижение.СуммаСценарийКонтроль = Выборка.СуммаЗаРамкамиБюджетаБезНДС;
				//	//СтрокаДвижение.СуммаСценарийКонтрольСПревышением = Выборка.СуммаЗаРамкамиБюджетаБезНДС;
				//	СтрокаДвижение.СуммаСценарийИсполнение = Выборка.СуммаЗаРамкамиБюджетаБезНДС;
				//	СтрокаДвижение.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета;
				//	//СтрокаДвижение.КоличествоСценарийИсполнение = Выборка.Количество;
				//	//  Если НЕ ЗначениеЗаполнено(СтрокаДвижение.Сценарий) Тогда
				//	
				//	СтрокаДвижение.Сценарий = СценарийКонтролирующий;
				//	СтрокаДвижение.СценарийКонтролируемый = Сценарий;
				//	//КонецЕсли; 
				//КонецЕсли;
				//1c-izhtc spawn 26.08.15 )
				
			КонецЕсли;
			//движения для ФАКТА //для разнесения не нужно
			//Если Не ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.бит_БК_РазнесениеОборотов") Тогда //1c-izhtc spawn 26.08.15
			// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-17 (#4226)
			//Если Выборка.СуммаБезНДС > 0 ИЛИ ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ФинансовыйПлан Тогда 
			// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-17 (#4226)
					СтрокаДвижение = ТаблицаДвижений.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижение,Выборка);
					// СтрокаДвижение.СуммаСценарийИсполнение = Выборка.Сумма;
					//Начало_бит_БК_Магомедов_15.11.2011         
					СтрокаДвижение.СуммаСценарийКонтроль = Выборка.СуммаБезНДС;
					
					//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2018-07-05 (#3042)
					//СтрокаДвижение.СуммаСценарийКонтрольСПревышением = Выборка.СуммаБезНДСсПревышением;
					//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2018-07-05 (#3042)
					
					//////СтрокаДвижение.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ВРамкахБюджета;
					//ставим ссылку на документ в аналитику только для ФАКТА.
                    // BIT AMerkulov ++
					//Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный ИЛИ
					//	ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
					//	ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт	Тогда  
					//	СтрокаДвижение.Аналитика_1 = ДокументСсылка;
					//КонецЕсли; 
					Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный 
						ИЛИ	ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный
						ИЛИ
						//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-02 (#3045)
						//ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
						//ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт	Тогда  
						//Заменено на:
						ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный 
					Тогда 
						//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-02 (#3045)
						СтрокаДвижение.Аналитика_1 = ДокументСсылка;
					КонецЕсли; 		
                    // BIT AMerkulov --
					СтрокаДвижение.Сценарий = Сценарий;
					СтрокаДвижение.СценарийКонтролируемый = СценарийКонтролируемый;
					
				// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-17 (#4226)
				//КонецЕсли;
				// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-17 (#4226)
			//КонецЕсли; //1c-izhtc spawn 26.08.15
		КонецЕсли; //Движения конец
		
		// обработаем ситуацию превышения бюджета
		//Если КонтролироватьБюджет И (Выборка.Разность<0 ИЛИ Выборка.КоличествоРазность<0) Тогда
		
	//ОК Калинин М. 150812 берем как раньше было
		//Если НЕ ЭтоЗакрытие И КонтролироватьБюджет И (Выборка.РазностьВРамкахБюджетаБезНДС<0)
		//1c-izhtc spawn 26.08.15 (
		//Если НЕ ЭтоЗакрытие И КонтролироватьБюджет И (Выборка.РазностьВРамкахБюджетаБезНДСсПревышением<0)
		Если НЕ ЭтоЗакрытие И КонтролироватьБюджет И (Выборка.бит_БК_РазностьБезНДСсПревышением<0)
		//1c-izhtc spawn 26.08.15 )
	//ОК Калинин М. 150812 
	
			//заявка инвест контролируется без учета статей
			//{ bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
			//=ИСХОДНЫЙ КОД
			////	И НЕ ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный 
			//=ИСХОДНЫЙ КОД
			
			//+Сенин С.В. 25.10.16 №2669
			//заявка инвест контролируется без учета статей
			И НЕ ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный 
			//-Сенин С.В. 25.10.16 №2669
			//} bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
			Тогда
			
		// + БИТ AMerkulov 2013-12-10 /  Универсальная заявка
		Если  СсылкаНаДокумент <> Неопределено И СсылкаНаДокумент.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный Тогда
				
				СтруктураОтбора = Новый Структура;
				СтруктураОтбора.Вставить("Аналитика_2", Выборка.Аналитика_2);
				СтруктураОтбора.Вставить("ЦФО", Выборка.ЦФО);
				СтруктураОтбора.Вставить("СтатьяОборотов",Выборка.СтатьяОборотов);
				
				НайденныеСтроки = СсылкаНаДокумент.БДДС.НайтиСтроки(СтруктураОтбора);
				
				Если НайденныеСтроки.Количество() Тогда
					
					Если НайденныеСтроки[0].Сценарий = Справочники.СценарииПланирования.Заявка_У Тогда
						Сценарий = Справочники.СценарииПланирования.Заявка_У;
						СценарийКонтролируемый = Справочники.СценарииПланирования.Факт_У;
						СценарийКонтролирующий = Справочники.СценарииПланирования.Бюджет_У;
					КонецЕсли;
					
					Если НайденныеСтроки[0].Сценарий = Справочники.СценарииПланирования.Заявка_Инвест Тогда
						Сценарий = Справочники.СценарииПланирования.Заявка_Инвест;
						СценарийКонтролируемый = Справочники.СценарииПланирования.Факт_Инвест;
						СценарийКонтролирующий = Справочники.СценарииПланирования.Бюджет_Инвест;
					КонецЕсли;
					
					
					
				КонецЕсли;
				
				
				
			КонецЕсли;
		// - БИТ AMerkulov 2013-12-10 
			
			флЕстьПревышение = Истина;
			
			Периодичность = ПолучитьПериодичностьКонтроляСценария(Сценарий);
			
			ПредставлениеПериода = бит_Бюджетирование.СформироватьПредставлениеПериода(Выборка.Период,Периодичность);   
			
			// соберем информацию о заполнении доп. аналитик
			ТекстАналитика = "";
			Для каждого КлючИЗначение Из ИзмеренияКонтроля Цикл
				
				ИмяИзмерения = КлючИЗначение.Ключ;
				Синоним = КлючИЗначение.Значение.Синоним;
				//нач
				//Если Выборка["Есть"+ИмяИзмерения] = 1 Тогда
				Попытка 
					ЗначениеИзмерения = Выборка[ИмяИзмерения];
					Если ЗначениеЗаполнено(ЗначениеИзмерения) Тогда	
						//ЗначениеИзмерения = Выборка[ИмяИзмерения];				   
						ТекстАналитика = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстАналитика,"- "+Синоним+" """+ЗначениеИзмерения+"""",Символы.ПС);
						
					КонецЕсли; 
				Исключение
				КонецПопытки;
			КонецЦикла; 
			
			// сформируем текст сообщения
			ТекстСообщения =  "По сценарию """
			+Сценарий
			+""","
			+Символы.ПС
			+"по аналитике: "+Символы.ПС
			+"- Статья оборотов """
			+Выборка.СтатьяОборотов
			+"""";
			
			Если НЕ ПустаяСтрока(ТекстАналитика) Тогда
				
				ТекстСообщения = ТекстСообщения+Символы.ПС+ТекстАналитика;
				
			КонецЕсли; 
			
			//{ bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
			//=ИСХОДНЫЙ КОД
			//ТекстСообщения = ТекстСообщения
			//+" превышен бюджет периода """
			//+ПредставлениеПериода
			//+""".";
			//=ИСХОДНЫЙ КОД
			
			//+Сенин С.В. 16.11.16 №2669
			//Проверка только по аналитикам: Объект + Проект + Функция + Статья оборотов + № заявки
			Если Не ( СтруктураПараметров.Свойство("ДокументСсылка") 
				И ЗначениеЗаполнено(СтруктураПараметров.ДокументСсылка) 
				И СтруктураПараметров.ДокументСсылка.Сценарий=Справочники.СценарииПланирования.Контракт_Инвест
				) Тогда	
				
				ТекстСообщения = ТекстСообщения
				+" превышен бюджет периода """
				+ПредставлениеПериода
				+""".";
			КонецЕсли; 
			//-Сенин С.В. 25.10.16 №2669
			//} bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
			
			//1c-izhtc spawn 26.08.15 (
			//Если Выборка.РазностьВРамкахБюджетаБезНДС <0 Тогда
			Если Выборка.бит_БК_РазностьБезНДС <0 Тогда
			//1c-izhtc spawn 26.08.15 )
			
				ТекстСообщения = ТекстСообщения
				+Символы.ПС
				//Начало_бит_БК_Магомедов_12.01.2012 
				//+"Остаток бюджета: "
				//+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.Остаток,ВалютаСценария,"0.00")
				+"Остаток в рамках бюджета: "
				//1c-izhtc spawn 26.08.15 (
				//+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.ОстатокВРамкахБюджета,ВалютаСценария,"0.00")
				//+"("+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.ОстатокВРамкахБюджетаСПревышением,ВалютаСценария,"0.00")+" с превышением)"
				////Конец_бит_БК_Магомедов_12.01.2012 
				//+", сумма в документе: "
				//+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.СуммаВРамкахБюджетаБезНДС,ВалютаСценария,"0.00")
				//+", не достаточно: "
				//+ОбщегоНазначенияБПВызовСервера.ФорматСумм(-Выборка.РазностьВРамкахБюджетаБезНДС,ВалютаСценария,"0.00")
				+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.Остаток,ВалютаСценария,"0.00")
				
				//{ bit_SVKushnirenko 14.12.2016 #2669.4
				//ИсходныйКод{
				//+"("+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.ОстатокСПревышением,ВалютаСценария,"0.00")+" с превышением)"
				//}ИсходныйКод
				//} bit_SVKushnirenko 14.12.2016 #2669.4
				
				+", сумма в документе: "
				+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.бит_БК_СуммаБезНДС,ВалютаСценария,"0.00")
				+", не достаточно: "
				+ОбщегоНазначенияБПВызовСервера.ФорматСумм(-Выборка.бит_БК_РазностьБезНДС,ВалютаСценария,"0.00")
				
				//{ bit_SVKushnirenko 14.12.2016 #2669.4
				+ " (превыш. " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(?(Выборка.СуммаКонтроль=0,100,(-Выборка.РазностьБезНДС)*100/Выборка.СуммаКонтроль) ,,"0.00")+"%)"
				//} bit_SVKushnirenko 14.12.2016 #2669.4
				
				//1c-izhtc spawn 26.08.15 )
				+".";
				
			КонецЕсли; 
			
			//Если Выборка.КоличествоРазность <0 Тогда
			//
			//	
			//		ТекстСообщения = ТекстСообщения
			// 					 +Символы.ПС
			// 					 +"Количество бюджета: "
			// 					 +ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.КоличествоОстаток,,"0.000")
			// 					 +", количество в документе: "
			// 					 +ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.Количество,,"0.000")
			// 					 +", не достаточно: "
			// 					 +ОбщегоНазначенияБПВызовСервера.ФорматСумм(-Выборка.КоличествоРазность,,"0.000")
			// 					 +".";
			//
			//КонецЕсли; 
			
			//{ bit_SVKushnirenko 25.12.2016 #2669.1
			//ИсходныйКод{
			//бит_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок,СтатусСообщения.Важное);
			//}ИсходныйКод
			
			бит_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок,СтатусСообщения.Важное,, 1024); // т.к. иначе сообщения обрезаются типовой процедурой, а в данном контексте, сообщение уже "разрезано" переводами строк и возникают ошибочные "разрезания"
			//} bit_SVKushnirenko 25.12.2016 #2669.1

			//Если Сверхбюджета Тогда
				
				Отказ = Ложь;
				
			//КонецЕсли; 
		КонецЕсли; // превышен бюджет
		
		//Если это закрытие заявки контролируем также сумму сверх бюджета
		Если ЭтоЗакрытие И КонтролироватьБюджет И (Выборка.РазностьБезНДС < 0) Тогда
						
			флЕстьПревышение = Истина;
			
			Периодичность = ПолучитьПериодичностьКонтроляСценария(Сценарий);
			
			ПредставлениеПериода = бит_Бюджетирование.СформироватьПредставлениеПериода(Выборка.Период,Периодичность);   
			
			// соберем информацию о заполнении доп. аналитик
			ТекстАналитика = "";
			Для каждого КлючИЗначение Из ИзмеренияКонтроля Цикл
				
				ИмяИзмерения = КлючИЗначение.Ключ;
				Синоним = КлючИЗначение.Значение.Синоним;
				//нач
				//Если Выборка["Есть"+ИмяИзмерения] = 1 Тогда
				Попытка 
					ЗначениеИзмерения = Выборка[ИмяИзмерения];
					Если ЗначениеЗаполнено(ЗначениеИзмерения) Тогда	
						//ЗначениеИзмерения = Выборка[ИмяИзмерения];				   
						ТекстАналитика = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстАналитика,"- "+Синоним+" """+ЗначениеИзмерения+"""",Символы.ПС);
						
					КонецЕсли; 
				Исключение
				КонецПопытки;
			КонецЦикла; 
			
			// сформируем текст сообщения
			ТекстСообщения =  "По сценарию """
			+Сценарий
			+""","
			+Символы.ПС
			+"по аналитике: "+Символы.ПС
			+"- Статья оборотов """
			+Выборка.СтатьяОборотов
			+"""";
			
			Если НЕ ПустаяСтрока(ТекстАналитика) Тогда
				
				ТекстСообщения = ТекстСообщения+Символы.ПС+ТекстАналитика;
				
			КонецЕсли; 
			
			ТекстСообщения = ТекстСообщения
			+" превышен бюджет периода """
			+ПредставлениеПериода
			+""".";
			
			Если Выборка.РазностьБезНДС <0 Тогда
				
				ТекстСообщения = ТекстСообщения
				+Символы.ПС
				//Начало_бит_БК_Магомедов_12.01.2012 
				+"Остаток бюджета: "
				+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.Остаток,ВалютаСценария,"0.00")
				//+"Остаток сверх бюджета: "
				//+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.ОстатокЗаРамкамиБюджета,ВалютаСценария,"0.00")
				//+"("+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.ОстатокЗаРамкамиБюджетаСПревышением,ВалютаСценария,"0.00")+" с превышением)"
				//Конец_бит_БК_Магомедов_12.01.2012 
				+", сумма в документе: "
				+ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.СуммаБезНДС,ВалютаСценария,"0.00")
				+", не достаточно: "
				+ОбщегоНазначенияБПВызовСервера.ФорматСумм(-Выборка.РазностьБезНДС,ВалютаСценария,"0.00")
				+".";
				
			КонецЕсли;	
			
			
			бит_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Отказ,Заголовок,СтатусСообщения.Важное);
			
			
			//Если Сверхбюджета Тогда
				
				Отказ = Ложь;
				
			//КонецЕсли; 
			
		КонецЕсли; // превышен бюджет
		
		
	КонецЦикла;  // по выборке
	
	//Начало_бит_БК_Магомедов_01.04.2012 
	//Сообщение о превышении в % абс. для инвест заявки без учета статьи
	Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда
		//{ bit_SVKushnirenko 14.12.2016 #2669.4
		//ИсходныйКод{
		//Выборка = РезультатДляКонтроляИнвест.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//}ИсходныйКод
		Выборка.Сбросить();
		//} bit_SVKushnirenko 14.12.2016 #2669.4

		Пока Выборка.Следующий() Цикл		
			Если КонтролироватьБюджет И (Выборка.РазностьБезНДС<0) Тогда 
				//флЕстьПревышение = Истина;
				
				//{ bit_SVKushnirenko 13.12.2016 #2669.4
				//ИсходныйКод{
				//Периодичность = ПолучитьПериодичностьКонтроляСценария(Сценарий);
				//ПредставлениеПериода = бит_Бюджетирование.СформироватьПредставлениеПериода(Выборка.Период,Периодичность);   
				//}ИсходныйКод
				
				ПредставлениеПериода = Формат(Выборка.Период, "ДФ=yyyy");
				//} bit_SVKushnirenko 13.12.2016 #2669.4
				
				
				// соберем информацию о заполнении доп. аналитик
				ТекстАналитика = "";
				Для каждого КлючИЗначение Из ИзмеренияКонтроля Цикл
					
					ИмяИзмерения = КлючИЗначение.Ключ;
					Синоним = КлючИЗначение.Значение.Синоним;
					
					//{ bit_SVKushnirenko 14.12.2016 #2669.4
					//ИсходныйКод{
					//Если Выборка["Есть"+ИмяИзмерения] = 1 Тогда
					//	
					//	ЗначениеИзмерения = Выборка[ИмяИзмерения];				   
					//	ТекстАналитика = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстАналитика,"- "+Синоним+" """+ЗначениеИзмерения+"""",Символы.ПС);
					//КонецЕсли; 
					//}ИсходныйКод
					
					Попытка //на переделывание входного запроса ресурсов нет, поэтому без изысков

						ЗначениеИзмерения = Выборка[ИмяИзмерения];				   
						Если ЗначениеЗаполнено(ЗначениеИзмерения)  Тогда
							
							ТекстАналитика = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстАналитика,"- "+Синоним+" """+ЗначениеИзмерения+"""",Символы.ПС);
						КонецЕсли; 
					Исключение
					КонецПопытки; 
					//} bit_SVKushnirenko 14.12.2016 #2669.4
				КонецЦикла; 
				 
				// сформируем текст сообщения
				ТекстСообщения =  "По сценарию """ + Сценарий + ""","  + Символы.ПС
				+"по аналитике: " + Символы.ПС;
				
				Если НЕ ПустаяСтрока(ТекстАналитика) Тогда
					
					ТекстСообщения = ТекстСообщения+ТекстАналитика + Символы.ПС;
				КонецЕсли; 
				
				//{ bit_SVKushnirenko 13.12.2016 #2669.4
				ТекстСообщения =  ТекстСообщения + "по статье:  """ + Выборка.СтатьяОборотов + """";
				//} bit_SVKushnirenko 13.12.2016 #2669.4
				
				//{ bit_SVKushnirenko 13.12.2016 #2669.4
				//ИсходныйКод{
				//ТекстСообщения = ТекстСообщения
				//+" - превышен бюджет периода """
				//+ПредставлениеПериода
				//+"""";
				//
				//Если Выборка.РазностьБезНДС <0 Тогда
				//	
				//	ТекстСообщения = ТекстСообщения
				//	+Символы.ПС
				//	+"Превышение бюджета на "
				//	+ОбщегоНазначенияБПВызовСервера.ФорматСумм(?(Выборка.СуммаКонтроль=0,100,(-Выборка.РазностьБезНДС)*100/Выборка.СуммаКонтроль) ,,"0.00")+" %"
				//	+".";
				//КонецЕсли;		
				//
				//бит_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Ложь,Заголовок,СтатусСообщения.Важное);
				//}ИсходныйКод
				
				ТекстСообщения = ТекстСообщения +
				" - за период """ + ПредставлениеПериода + """"+ Символы.ПС + 
				"остаток в рамках бюджета: " +  ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.Остаток,, "0.00") + ", " +
				"сумма в документе: " +  ОбщегоНазначенияБПВызовСервера.ФорматСумм(Выборка.СуммаБезНДС,, "0.00") + ", " +  
				"недостаточно: " +  ОбщегоНазначенияБПВызовСервера.ФорматСумм(-Выборка.РазностьБезНДС,, "0.00") + ", " +  
				" (превыш. " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(?(Выборка.СуммаКонтроль=0, 100, -100 * Выборка.РазностьБезНДС / Выборка.СуммаКонтроль) ,,"0.00")+"%)";

				бит_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,Ложь,Заголовок,СтатусСообщения.Важное,, 800);
				//} bit_SVKushnirenko 13.12.2016 #2669.4
			КонецЕсли; // превышен бюджет инвест
		КонецЦикла;	
	КонецЕсли;

	Если флЕстьПревышение  
		И СверхБюджета Тогда
		//Начало_бит_БК_Магомедов_26.12.2011 
		//бит_ОбщегоНазначения.бит_Сообщить("Документ будет проведен сверх бюджета.",СтатусСообщения.Информация);
		бит_ОбщегоНазначения.бит_Сообщить("По данным параметрам запланировано недостаточно средств!",СтатусСообщения.Информация); 
		//Конец_бит_БК_Магомедов_26.12.2011 
		
	КонецЕсли; 
	
	
КонецПроцедуры //ОбработатьРезультатКонтроля()

//Заполняется таблица движений регистра бит_КонтрольныеЗначенияБюджетов
//
// Параметры:
//  Результат           – РезультатЗапроса
//  ТаблицаДвижений     - ТаблицаЗначений - Таблица движений регистра бит_КонтрольныеЗначенияБюджетов
//  СтруктураПараметров - Структура
//  Отказ               - Булево
//  Заголовок           - Строка
//
// BIT AMerkulov ++
Процедура ВыполнитьДвиженияРезультатКонтроля(Результат,ТаблицаДвижений = Неопределено,СтруктураПараметров,Отказ,Заголовок, РезультатДляКонтроляИнвест = Неопределено, ЭтоЗакрытие = Ложь, СсылкаНаДокумент = Неопределено) Экспорт
// BIT AMerkulov --

	ИзмеренияКонтроля    = СтруктураПараметров.ИзмеренияКонтроля;	
	Сценарий             = СтруктураПараметров.Сценарий;
	КонтролироватьБюджет = СтруктураПараметров.КонтролироватьБюджет;
	СверхБюджета         = СтруктураПараметров.СверхБюджета;
	
	ВалютаСценария       = Сценарий.Валюта;
	
	//Начало_бит_БК_Магомедов_18.11.2011 
	СценарийКонтролируемый = СтруктураПараметров.СценарийКонтролируемый;
	СценарийКонтролирующий = СтруктураПараметров.СценарийКонтролирующий;
	ВидОперации = СтруктураПараметров.ВидОперации;
	ДокументСсылка = СтруктураПараметров.ДокументСсылка;
	//Начало_бит_Магомедов_15.01.2013
	//Если задано соответствие статей, используем их для движений по факту для сценария
	СоответствиеСтатей = Неопределено;
	ЗаданоСоответствиеСтатей = СтруктураПараметров.Свойство("СоответствиеСтатей",СоответствиеСтатей);
	//Конец_бит_Магомедов_15.01.2013 
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	флЕстьПревышение = Ложь;
	
	Пока Выборка.Следующий() Цикл
		//Начало_бит_Магомедов_16.01.2013 
		//ищем контролирующую статью
		КонтролирующаяСтатья = Выборка.СтатьяОборотов;
		Если ЗаданоСоответствиеСтатей Тогда 
			Отбор = Новый Структура("Период, СтатьяОборотов", Выборка.Период, Выборка.СтатьяОборотов);
			МассивСтрок = СоответствиеСтатей.НайтиСтроки(Отбор);
			Если Не МассивСтрок.Количество() = 0 И МассивСтрок[0].КонтрольПоСтатье = Истина Тогда
				КонтролирующаяСтатья = МассивСтрок[0].КонтролирующаяСтатья;
			КонецЕсли;
		КонецЕсли;
		//Конец_бит_Магомедов_16.01.2013  
		
		// + БИТ AMerkulov 2015-01-20 /  Универсальная заявка
		Если  СсылкаНаДокумент <> Неопределено И СсылкаНаДокумент.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный Тогда
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Аналитика_2", Выборка.Аналитика_2);
			СтруктураОтбора.Вставить("ЦФО", Выборка.ЦФО);
			СтруктураОтбора.Вставить("СтатьяОборотов",Выборка.СтатьяОборотов);
			
			НайденныеСтроки = СсылкаНаДокумент.БДДС.НайтиСтроки(СтруктураОтбора);
			
			Если НайденныеСтроки.Количество() Тогда
				
				//Если НайденныеСтроки[0].Сценарий = Справочники.СценарииПланирования.Заявка_У Тогда
				//	Сценарий = Справочники.СценарииПланирования.Заявка_У;
				//	СценарийКонтролируемый = Справочники.СценарииПланирования.Факт_У;
				//СценарийКонтролирующий = Справочники.СценарииПланирования.Бюджет_У;
				//КонецЕсли;
				//
				//Если НайденныеСтроки[0].Сценарий = Справочники.СценарииПланирования.Заявка_Инвест Тогда
				//	Сценарий = Справочники.СценарииПланирования.Заявка_Инвест;
				//	СценарийКонтролируемый = Справочники.СценарииПланирования.Факт_Инвест;
				//СценарийКонтролирующий = Справочники.СценарииПланирования.Бюджет_Инвест;
				//КонецЕсли;
				
 				Сценарий = НайденныеСтроки[0].Сценарий;
				СценарийКонтролируемый = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", Сценарий);				
				СценарийКонтролирующий = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контролирующий сценарий", Сценарий);				
				
			КонецЕсли;
			
		КонецЕсли;
		// - БИТ AMerkulov 2015-01-20 
		
		Если НЕ ТаблицаДвижений = Неопределено Тогда //Движения
			
			//Начало_бит_БК_Магомедов_18.11.2011
			Если НЕ ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ФинансовыйПлан Тогда
				//Начало_бит_Магомедов_16.01.2013 
				//Если ЗаданоСоответствиеСтатей И СтруктураКонтроляПоСтатье.КонтрольПоСтатье Тогда 
					//Конец_бит_Магомедов_16.01.2013 
					//1c-izhtc spawn 26.08.15 (
					//Если Выборка.СуммаВРамкахБюджетаБезНДС > 0 Тогда 
					// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-17 (#4226)
					//Если Выборка.бит_БК_СуммаБезНДС > 0 Тогда
					// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-17 (#4226)
					//1c-izhtc spawn 26.08.15 )
						СтрокаДвижение = ТаблицаДвижений.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДвижение,Выборка);
						// СтрокаДвижение.СуммаСценарийИсполнение = Выборка.Сумма;
						//Начало_бит_БК_Магомедов_15.11.2011         
						//СтрокаДвижение.СуммаСценарийКонтроль = Выборка.СуммаВРамкахБюджетаБезНДС;
						//СтрокаДвижение.СуммаСценарийКонтрольСПревышением = Выборка.СуммаВРамкахБюджетаБезНДС;
						//1c-izhtc spawn 26.08.15 (
						//СтрокаДвижение.СуммаСценарийИсполнение = Выборка.СуммаВРамкахБюджетаБезНДС;
						//СтрокаДвижение.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ВРамкахБюджета;
						СтрокаДвижение.СуммаСценарийИсполнение = Выборка.бит_БК_СуммаБезНДС;
						//1c-izhtc spawn 26.08.15 )
						//СтрокаДвижение.КоличествоСценарийИсполнение = Выборка.Количество;
						//  Если НЕ ЗначениеЗаполнено(СтрокаДвижение.Сценарий) Тогда
						
						СтрокаДвижение.Сценарий = СценарийКонтролирующий;
						СтрокаДвижение.СценарийКонтролируемый = Сценарий;
						//Начало_бит_Магомедов_15.01.2013 
						Если ЗаданоСоответствиеСтатей Тогда 
							СтрокаДвижение.СтатьяОборотов = КонтролирующаяСтатья;
						КонецЕсли;
						//Конец_бит_Магомедов_15.01.2013 

						//КонецЕсли; 
					// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-17 (#4226)
					//КонецЕсли;
					// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-17 (#4226)
					
					//1c-izhtc spawn 26.08.15 (
					//// По превышению бюджета добавим строку в таблицу движений по регистру контролируемых значений
					//Если Выборка.СуммаЗаРамкамиБюджетаБезНДС > 0 Тогда 
					//	СтрокаДвижение = ТаблицаДвижений.Добавить();
					//	ЗаполнитьЗначенияСвойств(СтрокаДвижение,Выборка);
					//	// СтрокаДвижение.СуммаСценарийИсполнение = Выборка.Сумма;
					//	//Начало_бит_БК_Магомедов_15.11.2011         
					//	//СтрокаДвижение.СуммаСценарийКонтроль = Выборка.СуммаЗаРамкамиБюджетаБезНДС;
					//	//СтрокаДвижение.СуммаСценарийКонтрольСПревышением = Выборка.СуммаЗаРамкамиБюджетаБезНДС;
					//	СтрокаДвижение.СуммаСценарийИсполнение = Выборка.СуммаЗаРамкамиБюджетаБезНДС;
					//	СтрокаДвижение.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета;
					//	//СтрокаДвижение.КоличествоСценарийИсполнение = Выборка.Количество;
					//	//  Если НЕ ЗначениеЗаполнено(СтрокаДвижение.Сценарий) Тогда
					//	
					//	СтрокаДвижение.Сценарий = СценарийКонтролирующий;
					//	СтрокаДвижение.СценарийКонтролируемый = Сценарий;
					//	//Начало_бит_Магомедов_15.01.2013 
					//	Если ЗаданоСоответствиеСтатей Тогда 
					//		СтрокаДвижение.СтатьяОборотов = КонтролирующаяСтатья;
					//	КонецЕсли;
					//	//Конец_бит_Магомедов_15.01.2013 
					//	
					//	//КонецЕсли; 
					//КонецЕсли;
					//1c-izhtc spawn 26.08.15 )
					//Начало_бит_Магомедов_16.01.2013 
				//КонецЕсли;
				//Конец_бит_Магомедов_16.01.2013 
			КонецЕсли;
			//движения для ФАКТА 
			//Если Не ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.бит_БК_РазнесениеОборотов") Тогда //1c-izhtc spawn 26.08.15
			// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-17 (#4226)
			//Если Выборка.СуммаБезНДС > 0 ИЛИ ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ФинансовыйПлан Тогда 
			// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-17 (#4226)	
					СтрокаДвижение = ТаблицаДвижений.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДвижение,Выборка);
					// СтрокаДвижение.СуммаСценарийИсполнение = Выборка.Сумма;
					//Начало_бит_БК_Магомедов_15.11.2011         
					СтрокаДвижение.СуммаСценарийКонтроль = Выборка.СуммаБезНДС;
					
					//ОКЕЙ Землянников К.А.(СофтЛаб) Начало 2018-07-05 (#3042)
					//СтрокаДвижение.СуммаСценарийКонтрольСПревышением = Выборка.СуммаБезНДСсПревышением;
					//ОКЕЙ Землянников К.А.(СофтЛаб) Конец 2018-07-05 (#3042)
					
					//СтрокаДвижение.Аналитика_3 = Перечисления.бит_БК_ВариантыБюджета.ВРамкахБюджета; //1c-izhtc spawn 26.08.15
					//ставим ссылку на документ в аналитику только для ФАКТА.
                    // BIT AMerkulov ++
					//Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный ИЛИ
					//	ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
					//	ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт	Тогда  
					//	СтрокаДвижение.Аналитика_1 = ДокументСсылка;
					//КонецЕсли; 
					Если ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный 
						ИЛИ	ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный
						ИЛИ
						ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный ИЛИ
						ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт	Тогда  
						СтрокаДвижение.Аналитика_1 = ДокументСсылка;
					КонецЕсли; 
                    // BIT AMerkulov --
					СтрокаДвижение.Сценарий = Сценарий;
					СтрокаДвижение.СценарийКонтролируемый = СценарийКонтролируемый;
				// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-17 (#4226)
				//КонецЕсли;
				// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-17 (#4226)
			//КонецЕсли; //1c-izhtc spawn 26.08.15
		КонецЕсли; //Движения конец
	КонецЦикла;
КонецПроцедуры

//бит_MZyubin Процедура сворачивает таблицу для контроля по измерениям для контроля
//
// Параметры:
//  ТаблицаДляКонтроля  – ТаблицаЗначений
//  ИзмеренияКонтроля   - Структура
//  Периодичность       - ПеречислениеСсылка.бит_ПериодичностьПланирования
//
Процедура СвернутьТаблицуКонтроля(ТаблицаДляКонтроля,ИзмеренияКонтроля,Периодичность) Экспорт
	
	ИзмеренияДляСвертки = "Период,Сценарий,СтатьяОборотов";
	
	Для каждого СтрокаТаблицы Из ТаблицаДляКонтроля Цикл
		
		СтрокаТаблицы.Период = бит_Бюджетирование.ПолучитьНачалоПериода(СтрокаТаблицы.Период,Периодичность);
		
	КонецЦикла; 
	
	Для каждого КлючИЗначение Из ИзмеренияКонтроля Цикл
		
		ИзмеренияДляСвертки = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ИзмеренияДляСвертки,КлючИЗначение.Ключ,",");
		
	КонецЦикла; 
	
	ТаблицаДляКонтроля.Свернуть(ИзмеренияДляСвертки,"
	|Сумма,
	|Количество,
	|СуммаБезНДС,
	//1c-izhtc spawn 26.08.15 (
	//|бит_БК_СуммаВРамкахБюджетаБезНДС,
	//|бит_БК_СуммаЗаРамкамиБюджетаБезНДС,
	//|бит_БК_СуммаВРамкахБюджетаСНДС,
	//|бит_БК_СуммаЗаРамкамиБюджетаСНДС");
	|бит_БК_СуммаБезНДС,
	|бит_БК_СуммаСНДС");
	//1c-izhtc spawn 26.08.15 )
	
КонецПроцедуры //СвернутьТаблицуКонтроля()

// бит_MZyubin Функция получает периодичность с которой контролируется сценарий сценария. 
//Если значение периодичности не удалось 
//определить возвращается периодичность МЕСЯЦ.
//
// Параметры:
//  Сценарий  – СправочникСсылка.СценарииПланирования
//
// Возвращаемое значение:
//   Периодичность   – СправочникСсылка.бит_ПериодичностьПланирования
//
Функция ПолучитьПериодичностьКонтроляСценария(Сценарий) Экспорт
	
	Периодичность = Сценарий.ПериодичностьКонтроля;
	Если НЕ ЗначениеЗаполнено(Периодичность) Тогда
		Периодичность = Перечисления.бит_ПериодичностьПланирования.Месяц;
	КонецЕсли; 
	
	Возврат Периодичность;
	
КонецФункции // ПолучитьПериодичностьКонтроляСценария()

/////////////////////////////////////////////////////////
//	ПОЛУЧЕНИЕ ЗНАЧЕНИЯ НАСТРОЙКИ ИЗ РЕГИСТРА НАСТРОЙКИ_БК

//Возвращает значение по группе и имени настройки
//ТипВозвращаемогоЗначения = СписокЗначений, Массив или Значение,т.е возврат, как есть
//Группа, ИмяНастройки - Измерения регистра, Строка
// ЗначениеПоУмолчанию - Возвращается если не нашли значения в регистре
Функция ПолучитьЗначениеНастройкиБК(Группа,ИмяНастройки, ЗначениеПоУмолчанию = Неопределено, ТипВозвращаемогоЗначения = "Значение") Экспорт
	ВозвращаемоеЗначение = РегистрыСведений.бит_БК_НастройкиБК.Получить(Новый Структура("Группа,ИмяНастройки",Группа,ИмяНастройки)).Значение.Получить();
	Если ВозвращаемоеЗначение = Неопределено Тогда 
		Значение = ЗначениеПоУмолчанию;
	иначе
		Значение = ВозвращаемоеЗначение;
	КонецЕсли;
	
	Если ТипВозвращаемогоЗначения = "Значение" Тогда
		Возврат Значение;
	ИначеЕсли ТипВозвращаемогоЗначения = "СписокЗначений" Тогда 
		Если НЕ ТипЗнч(Значение) = Тип("СписокЗначений") Тогда 
			Список = Новый СписокЗначений;
			Список.Добавить(Значение);
			Возврат Список;
		Иначе 
			Возврат Значение;
		КонецЕсли;
	ИначеЕсли ТипВозвращаемогоЗначения = "Массив" Тогда 
		Если НЕ ТипЗнч(Значение) = Тип("Массив") Тогда 
			Массив = Новый Массив;
			Массив.Добавить(Значение);
			Возврат Массив;
		Иначе 
			Возврат Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции
Функция ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных(Группа,ИмяНастройки, ЗначениеПоУмолчанию = Неопределено, ТипВозвращаемогоЗначения = "Значение") Экспорт
	ВозвращаемоеЗначение = РегистрыСведений.бит_ок_НастройкиМеханизмаИмпортаДанных.Получить(Новый Структура("Группа,ИмяНастройки",Группа,ИмяНастройки)).Значение;
	Если ВозвращаемоеЗначение = Неопределено Тогда 
		Значение = ЗначениеПоУмолчанию;
	иначе
		Значение = ВозвращаемоеЗначение;
	КонецЕсли;
	
	Если ТипВозвращаемогоЗначения = "Значение" Тогда
		Возврат Значение;
	ИначеЕсли ТипВозвращаемогоЗначения = "СписокЗначений" Тогда 
		Если НЕ ТипЗнч(Значение) = Тип("СписокЗначений") Тогда 
			Список = Новый СписокЗначений;
			Список.Добавить(Значение);
			Возврат Список;
		Иначе 
			Возврат Значение;
		КонецЕсли;
	ИначеЕсли ТипВозвращаемогоЗначения = "Массив" Тогда 
		Если НЕ ТипЗнч(Значение) = Тип("Массив") Тогда 
			Массив = Новый Массив;
			Массив.Добавить(Значение);
			Возврат Список;
		Иначе 
			Возврат Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

//возвращает найденные измерения ИмяНастройки по значению и группе
Функция ПолучитьИмяНастройкиБК(Группа, Значение) Экспорт 
	Выборка = РегистрыСведений.бит_БК_НастройкиБК.Выбрать(Новый Структура("Группа",Группа));
	ВозвращаемоеЗначение = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		НайденноеЗначение = Выборка.Значение.Получить();
		Если ТипЗнч(НайденноеЗначение) = ТипЗнч(Значение) тогда
			Если Значение = НайденноеЗначение Тогда
				ВозвращаемоеЗначение.Добавить(Выборка.ИмяНастройки);
			КонецЕсли;
		ИначеЕсли ТипЗнч(НайденноеЗначение) = Тип("СписокЗначений") Тогда 
			Если НЕ НайденноеЗначение.НайтиПоЗначению(Значение) = Неопределено Тогда 
				ВозвращаемоеЗначение.Добавить(Выборка.ИмяНастройки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Возврат ВозвращаемоеЗначение;	
КонецФункции

//возвращает структуру ролей пользователя БК
//состав структуры - "Инвестиционный, Операционный", Значения - Истина, Ложь
Функция ОпределитьРольПользователяБюджетногоКонтролера(ТекущийПользователь) Экспорт
	
	Структура = Новый Структура("Инвестиционный, Операционный");
	ТекщийИнициаторПользователя = Справочники.бит_БК_Инициаторы.НайтиПоРеквизиту("Пользователь", ТекущийПользователь);
	
	СписокИнвестКонтроллеров = ПолучитьЗначениеНастройкиБК("Бюджетные контролеры","Инвестиционный бюджетный контролер", Новый СписокЗначений, "СписокЗначений");
	СписокОперКонтроллеров = ПолучитьЗначениеНастройкиБК("Бюджетные контролеры","Операционный бюджетный контролер", Новый СписокЗначений, "СписокЗначений");
	
	Если НЕ СписокИнвестКонтроллеров.НайтиПоЗначению(ТекущийПользователь) = Неопределено ИЛИ 
		 НЕ СписокИнвестКонтроллеров.НайтиПоЗначению(ТекщийИнициаторПользователя) = Неопределено Тогда 
		Структура.Инвестиционный = Истина;
	Иначе
		Структура.Инвестиционный = Ложь;
	КонецЕсли;
	Если НЕ СписокОперКонтроллеров.НайтиПоЗначению(ТекущийПользователь) = Неопределено ИЛИ
		 НЕ СписокОперКонтроллеров.НайтиПоЗначению(ТекщийИнициаторПользователя) = Неопределено Тогда 
		Структура.Операционный = Истина;
	Иначе 
		Структура.Операционный = Ложь;
	КонецЕсли;	
	Возврат Структура;
КонецФункции


Функция ПолучитьСпискиБюджетныхКонтролеров() Экспорт
	//BIT AMerkulov 01-07-2015 ++
	Структура = Новый Структура("Инвестиционный, Операционный, Универсальный");
	СписокОперационный = Новый СписокЗначений;
	СписокИнвестиционный = Новый СписокЗначений;
	СписокУниверсальный = Новый СписокЗначений;	
	//BIT AMerkulov 01-07-2015 --
	
	предСписокИнвестКонтролеров = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Бюджетные контролеры","Инвестиционный бюджетный контролер",Новый СписокЗначений,"СписокЗначений");
	предСписокОперКонтролеров = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Бюджетные контролеры","Операционный бюджетный контролер",Новый СписокЗначений,"СписокЗначений");
	
	Текст ="ВЫБРАТЬ
	|	бит_БК_Инициаторы.Ссылка,
	|	""Инвестиционный"" КАК Наименование
	|ИЗ
	|	Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
	|ГДЕ
	|	(бит_БК_Инициаторы.Пользователь В (&СписокИнвестиционный)
	|			ИЛИ бит_БК_Инициаторы.Ссылка В (&СписокИнвестиционный))
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_БК_Инициаторы.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бит_БК_Инициаторы.Ссылка,
	|	""Операционный""
	|ИЗ
	|	Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
	|ГДЕ
	|	(бит_БК_Инициаторы.Пользователь В (&СписокОперационный)
	|			ИЛИ бит_БК_Инициаторы.Ссылка В (&СписокОперационный))
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_БК_Инициаторы.Ссылка";
	Запрос = Новый Запрос;
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("СписокИнвестиционный",предСписокИнвестКонтролеров);
	Запрос.УстановитьПараметр("СписокОперационный",предСписокОперКонтролеров);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Наименование = "Инвестиционный" Тогда 
			СписокИнвестиционный.Добавить(Выборка.Ссылка);
		ИначеЕсли Выборка.Наименование = "Операционный" Тогда 
			СписокОперационный.Добавить(Выборка.Ссылка);
		КонецЕсли;	
		//BIT AMerkulov 01-07-2015 ++
		СписокУниверсальный.Добавить(Выборка.Ссылка);	
		//BIT AMerkulov 01-07-2015 --
		
	КонецЦикла;
	
	Структура.Инвестиционный = СписокИнвестиционный;
	Структура.Операционный = СписокОперационный;
	//BIT AMerkulov 01-07-2015 ++
	Структура.Универсальный = СписокУниверсальный;	
	//BIT AMerkulov 01-07-2015 --
		
	Возврат Структура;	
КонецФункции
//	ОПРЕДЕЛЕНИЕ СТАТУСА ОБЪЕКТА ФОРМА ВВОДА БЮДЖЕТА
Функция ОпределитьСтатус(мТекущийСтатус,ВсеВизыПолучены,РежимЗаписи, Объект, мСтатусУстановленныйВручную, СтатусВручную) Экспорт
	
	//	Объект = Документы.бит_ФормаВводаБюджета.СоздатьДокумент();
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	СтруктураРолей = ОпределитьРольПользователяБюджетногоКонтролера(ТекущийПользователь);
	
	РезСтатус = Справочники.бит_СтатусыОбъектов.СтатусНеопределен;
	
	//Для Фин. плана
	Если Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ФинансовыйПлан Тогда
		Если (РежимЗаписи = РежимЗаписиДокумента.Запись И НЕ Объект.Проведен) ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Черновик;
		иначе //Если проведен
			РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Рабочая;
		КонецЕсли;
		
		//Для заявок Опер и Инвест
    // BIT AMerkulov ++
	//ИначеЕсли  Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный ИЛИ
	//	Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный	Тогда  
	ИначеЕсли  Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный 
		ИЛИ	Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный
		ИЛИ
		Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный	Тогда  
    // BIT AMerkulov --
	//+Сундукова 23.03.16
	Попытка
		БюджетМеньшеНуля= Объект.БДДС.итог("БИТ_СуммаСверхБюджета")>0;//БИТ АКриштопов ++ 2240 26052016
	исключение
		БюджетМеньшеНуля = Ложь;
	КонецПопытки;
	//-Сундукова 23.03.16
	
		Если (РежимЗаписи = РежимЗаписиДокумента.Запись И НЕ Объект.Проведен) ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			//минимальный статус для непроведенного
			РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Черновик;
			//Если документ записывается бюджетным контролером
			//БИТ АКриштопов 04042016 Добавление проверки на роль пользователя. Изменения РезСтатуса доступно только фин.контроллеру.
			Если (СтруктураРолей.Инвестиционный ИЛИ СтруктураРолей.Операционный) и РольДоступна("бит_БК_ГлавныйБК") Тогда 
				РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаРассмотрении;
			КонецЕсли;
			
		иначе //Если проведен
			//минимальный статус при проведении
			РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-06 (#2986)
			//Если остаток <=0 тогда Закрыта
			//ОстатокПоЗаявке = ПолучитьОстатокПоДокументу(Объект.Ссылка);
			//Если ОстатокПоЗаявке <= 0 Тогда 
			//	
			//	// BIT AMerkulov 2014-09-23 ++
			//	
			//	Если мТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта Тогда
			//		Возврат Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта;
			//	КонецЕсли;
			//	
			//	
			//	Если  мТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована 
			//		ИЛИ (СтатусВручную И мСтатусУстановленныйВручную = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована) Тогда 
			//		РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта;
			//		
			//		// Фиксация "промежуточного" статуса согласовано, который сразу меняется при нулевом остатке на закрыто
			//		Если  СтатусВручную И мСтатусУстановленныйВручную = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована  Тогда
			//			
			//			МенеджерЗаписи = РегистрыСведений.бит_ИсторияИзмененияСтатусовОбъектов.СоздатьМенеджерЗаписи();
			//			МенеджерЗаписи.Период	            = ТекущаяДата()-1;
			//			МенеджерЗаписи.Объект		        = Объект.Ссылка;
			//			МенеджерЗаписи.Статус               = мСтатусУстановленныйВручную;
			//			МенеджерЗаписи.Пользователь         = ТекущийПользователь;
			//			МенеджерЗаписи.ВидСтатуса			= Перечисления.бит_ВидыСтатусовОбъектов.Статус;
			//			
			//			Попытка
			//				МенеджерЗаписи.Записать();
			//			Исключение
			//				ТекстСообщения = "Не удалось записать историю изменения статуса  для объекта """+Объект.Ссылка+""" "+ОписаниеОшибки();
			//				бит_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения,,,СтатусСообщения.Важное);
			//			КонецПопытки;
			//			
			//		КонецЕсли;
			//		
			//		
			//	ИначеЕсли СтатусВручную И
			//		(мСтатусУстановленныйВручную = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании ИЛИ
			//		мСтатусУстановленныйВручную = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована) Тогда 
			//		РезСтатус = мСтатусУстановленныйВручную;					
			//	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-13 (#2873)
			//	//Для нового алгоритма ориентируемся только на установленные визы
			//	ИначеЕсли  Объект.СБ_ПроцессЗапущен И
			//		бит_БК_Общий.РеквизитыДляМуршрутовВидимы(Объект.Ссылка) И
			//		ВсеВизыПолучены
			//	Тогда
			//		РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована;
			//	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-13 (#2873)

			//	КонецЕсли;
			//	// BIT AMerkulov 2014-09-23 --
			//	
			//	//Получаем статус из документа если он установлен вручную
			//иначеесли СтатусВручную И
			//Заменено на:
			если СтатусВручную И	
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-06 (#2986)
				      (мСтатусУстановленныйВручную = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании ИЛИ
					  мСтатусУстановленныйВручную = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована) Тогда 
				РезСтатус = мСтатусУстановленныйВручную;
				
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-13 (#2873)
			//Для нового алгоритма ориентируемся только на установленные визы
			ИначеЕсли  Объект.СБ_ПроцессЗапущен И		 			  
					   ВсеВизыПолучены
			Тогда
	             РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-13 (#2873)
				
			иначе	// Получаем предыдущий статус 				
				
				РезСтруктура = бит_Визирование.ПолучитьСтатусОбъекта(Объект.Ссылка);			
				ПредыдущийСтатус     = РезСтруктура.СтатусПредыдущий;
				ТекущийСтатус 		  = РезСтруктура.Статус;
				Если ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта Тогда
					Если ПредыдущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании ИЛИ
						ПредыдущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована Тогда 
						РезСтатус = ПредыдущийСтатус;
					КонецЕсли;
					//+Сундукова 23.03.16
				ИначеЕсли НЕ ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована и 
					//+Сундукова 20.04.2016
				//	БюджетМеньшеНуля и не ВсеВизыПолучены тогда
					БюджетМеньшеНуля и не РежимЗаписи = РежимЗаписиДокумента.Проведение тогда //БИТ АКриштопов 27042016 Не требуется проверка на установку виз.
					//Статус "согласовано" может быть установлен в "толстом клиенте" только в ручную
				//-Сундукова 20.04.2016
					РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании;
					//-Сундукова 23.03.16
				ИначеЕсли ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаСогласовании ИЛИ
					ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Согласована Тогда
					РезСтатус = ТекущийСтатус;
				КонецЕсли;
			КонецЕсли;			
			//	//Определяем наличие аккруала
		КонецЕсли;
		
		//Для Контракта
	ИначеЕсли Объект.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт Тогда 
		Если (РежимЗаписи = РежимЗаписиДокумента.Запись И НЕ Объект.Проведен) ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			//минимальный статус для непроведенного
			РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Черновик;
			
		иначе //Если проведен
			//минимальный статус при проведении
			РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании;
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-01 (#2986)
			////Если остаток <=0 тогда Закрыта
			//ОстатокПоЗаявке = ПолучитьОстатокПоДокументу(Объект.Ссылка);
			//		
			//Если ОстатокПоЗаявке <= 0 Тогда 
			//	РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта;
			//	
			////Получаем статус из документа если он установлен вручную
			//иначеесли СтатусВручную И
			//Заменено на:
			Если СтатусВручную И
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-01 (#2986)
				      мСтатусУстановленныйВручную = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании ИЛИ
					  мСтатусУстановленныйВручную = Справочники.бит_СтатусыОбъектов.ФормаВвода_Заключен Тогда 
				РезСтатус = мСтатусУстановленныйВручную;
				
			иначе	// Получаем предыдущий статус
				РезСтруктура = бит_Визирование.ПолучитьСтатусОбъекта(Объект.Ссылка);			
				ПредыдущийСтатус     = РезСтруктура.СтатусПредыдущий;
				ТекущийСтатус 		  = РезСтруктура.Статус;
				Если ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Закрыта Тогда
					Если ПредыдущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании ИЛИ
						ПредыдущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Заключен Тогда 
						РезСтатус = ПредыдущийСтатус;
					КонецЕсли;
				ИначеЕсли ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НаВизировании ИЛИ
					ТекущийСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_Заключен Тогда
					РезСтатус = ТекущийСтатус;
				КонецЕсли;
			КонецЕсли;
			
			////Определяем наличие аккруала
			//НачисленАккруал = ПолучитьНаличиеАккруала(Объект.Ссылка);
			//Если НачисленАккруал Тогда 
			//	РезСтатус = Справочники.бит_СтатусыОбъектов.ФормаВвода_НачисленАккруал;
			//КонецЕсли;
		КонецЕсли;		
	КонецЕсли;	
	
	Возврат РезСтатус;
КонецФункции
Функция ПолучитьОстатокПоДокументу(ДокументСсылка) экспорт
	Запрос= Новый Запрос;
	Текст = "ВЫБРАТЬ
	|	бит_ФормаВводаБюджетаБДДС.Аналитика_1,
	//|	СУММА(бит_ФормаВводаБюджетаБДДС.бит_БК_СуммаБезНДС + бит_ФормаВводаБюджетаБДДС.бит_БК_СуммаБезНДС * &ЗначениеПревышения / 100) КАК СуммаБезНДССПревышением
	|	СУММА(бит_ФормаВводаБюджетаБДДС.бит_БК_СуммаБезНДС) КАК СуммаБезНДССПревышением
	|ПОМЕСТИТЬ ТаблицаДляКонтроляНач
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ФормаВводаБюджетаБДДС.Аналитика_1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийКонтрольОборот, 0)) КАК СуммаКонтроль,
	|	СУММА(ЕСТЬNULL(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот, 0)) КАК СуммаИсполнение,
	|	КонтрольныеЗначения.Аналитика_1
	|ПОМЕСТИТЬ Остаток
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			СценарийКонтролируемый = &СценарийКонтролируемый
	|				И Сценарий = &Сценарий
	|				И Аналитика_1 = &Ссылка) КАК КонтрольныеЗначения
	|ГДЕ
	|	КонтрольныеЗначения.Регистратор <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтрольныеЗначения.Аналитика_1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаДляКонтроляНач.СуммаБезНДССПревышением, 0) КАК СуммаДокумента,
	|	ЕСТЬNULL(Остаток.СуммаКонтроль, 0) КАК СуммаКонтроль,
	|	ЕСТЬNULL(Остаток.СуммаИсполнение, 0) КАК СуммаИсполнение
	|ИЗ
	|	ТаблицаДляКонтроляНач КАК ТаблицаДляКонтроляНач
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остаток КАК Остаток
	|		ПО ТаблицаДляКонтроляНач.Аналитика_1 = Остаток.Аналитика_1";
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("ДатаНачала",ДокументСсылка.бит_БК_ПериодНачало);
	Запрос.УстановитьПараметр("ДатаОкончания",ДокументСсылка.бит_БК_ПериодКонец);
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.УстановитьПараметр("Сценарий",ДокументСсылка.Сценарий);
	СценарийКонтролируемый = ПолучитьЗначениеНастройкиБК("Контролируемый сценарий", ДокументСсылка.Сценарий);
	Запрос.УстановитьПараметр("СценарийКонтролируемый",СценарийКонтролируемый);
	ЗначениеПревышения = ПолучитьЗначениеНастройкиБК("Допустимый % превышения", ДокументСсылка.Сценарий, 0);
	Запрос.УстановитьПараметр("ЗначениеПревышения",ЗначениеПревышения);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Окр(Выборка.СуммаДокумента,2) + Выборка.СуммаКонтроль - Выборка.СуммаИсполнение;
	Иначе 
		Возврат 0;
	КонецЕсли;
КонецФункции
Функция ПолучитьНаличиеАккруала(Объект)
	Запрос = Новый Запрос;
	Текст = "ВЫБРАТЬ
	|	бит_БК_Аккруал.Ссылка
	|ИЗ
	|	Документ.бит_БК_Аккруал КАК бит_БК_Аккруал
	|ГДЕ
	|	бит_БК_Аккруал.ДокументОснование = &ДокументОснование";
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("ДокументОснование",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Истина;
	иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

/////////////////////////////////////////////////////
// ОБРАБОТЧИКИ МЕНЮ ИНТЕРФЕЙСА БК

//бит_БК_Михайлова_Начало_24.11.11 - открываем форму ввода с видом операции "Финансовый план"
Процедура ОткрытьФинПлан() Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////НовыйДокумент = Документы.бит_ФормаВводаБюджета.СоздатьДокумент();
	//////НовыйДокумент.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ФинансовыйПлан;	
	//////Форма = НовыйДокумент.ПолучитьФорму("ФормаДокумента");
	//////Форма.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_24.11.11 - открываем список документов форма ввода с фильтром по виду операции "Финансовый план"
Процедура ОткрытьСписокФинПланов() Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////НовыйСписок = Документы.бит_ФормаВводаБюджета.ПолучитьФормуСписка();
	//////НовыйСписок.Отбор.ВидОперации.Значение = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ФинансовыйПлан;
	//////НовыйСписок.Отбор.ВидОперации.Использование = Истина;
	//////НовыйСписок.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_30.11.11 - открываем форму ввода с видом операции "Заявка (операционный)"
Процедура ОткрытьЗаявкаОпер() Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////НовыйДокумент = Документы.бит_ФормаВводаБюджета.СоздатьДокумент();
	//////НовыйДокумент.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный;	
	//////Форма = НовыйДокумент.ПолучитьФорму("ФормаДокумента");
	//////Форма.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_30.11.11 - открываем список документов форма ввода с фильтром по виду операции "Заявка (операционный)"
Процедура ОткрытьСписокЗаявокОпер() Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////НовыйСписок = Документы.бит_ФормаВводаБюджета.ПолучитьФормуСписка();
	//////НовыйСписок.Отбор.ВидОперации.Значение = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный;
	//////НовыйСписок.Отбор.ВидОперации.Использование = Истина;
	//////НовыйСписок.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_02.12.11 - открываем список документов форма ввода с фильтром по виду операции "Заявка (инвестиционный)"
Процедура ОткрытьСписокЗаявокИнвест() Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
    // BIT AMerkulov ++
	//НовыйСписок = Документы.бит_ФормаВводаБюджета.ПолучитьФормуСписка();
	//НовыйСписок.Отбор.ВидОперации.Значение = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный;
	//НовыйСписок.Отбор.ВидОперации.Использование = Истина;
	//НовыйСписок.Открыть();
	
	НовыйСписок = Документы.бит_ФормаВводаБюджета.ПолучитьФормуСписка();
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный);
	СписокЗначений.Добавить(Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный);
	
	НовыйСписок.Отбор.ВидОперации.ВидСравнения = ВидСравнения.ВСписке;
	НовыйСписок.Отбор.ВидОперации.Значение = СписокЗначений;
	НовыйСписок.Отбор.ВидОперации.Использование = Истина;
	НовыйСписок.Открыть(); 
    // BIT AMerkulov --
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_02.12.11 - открываем форму ввода с видом операции "Заявка (инвестиционный)"
Процедура ОткрытьЗаявкаИнвест() Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////НовыйДокумент = Документы.бит_ФормаВводаБюджета.СоздатьДокумент();
	//////НовыйДокумент.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный;	
	//////Форма = НовыйДокумент.ПолучитьФорму("ФормаДокумента");
	//////Форма.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_02.12.11 - открываем список документов форма ввода с фильтром по виду операции "Контракт"
Процедура ОткрытьСписокКонтрактов() Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////НовыйСписок = Документы.бит_ФормаВводаБюджета.ПолучитьФормуСписка();
	//////НовыйСписок.Отбор.ВидОперации.Значение = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт;
	//////НовыйСписок.Отбор.ВидОперации.Использование = Истина;
	//////НовыйСписок.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_02.12.11 - открываем форму ввода с видом операции "Контракт"
Процедура ОткрытьКонтракт() Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////НовыйДокумент = Документы.бит_ФормаВводаБюджета.СоздатьДокумент();
	//////НовыйДокумент.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт;	
	//////Форма = НовыйДокумент.ПолучитьФорму("ФормаДокумента");
	//////Форма.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_19.12.11 - открываем отчет "Выполнение плана"
Процедура ОткрытьОтчетВыполнениеПлана() Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////НовыйОтчет = Отчеты.бит_БК_ВыполнениеПлана.ПолучитьФорму();
	//////НовыйОтчет.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_27.12.11 - открываем Разнесение оборотов с видом операции "Операционный"
Процедура ОткрытьРазнесениеОпер() Экспорт
	
	//////НовыйДокумент = Документы.бит_БК_РазнесениеОборотов.СоздатьДокумент();
	//////НовыйДокумент.ВидОперации = Перечисления.бит_БК_ВидыОперацийРазнесениеОборотов.Операционный;	
	//////Форма = НовыйДокумент.ПолучитьФорму("ФормаДокумента");
	//////Форма.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_27.12.11 - открываем Разнесение оборотов с видом операции "Инвестиционный"
Процедура ОткрытьРазнесениеИнвест() Экспорт
	
	//////НовыйДокумент = Документы.бит_БК_РазнесениеОборотов.СоздатьДокумент();
	//////НовыйДокумент.ВидОперации = Перечисления.бит_БК_ВидыОперацийРазнесениеОборотов.Инвестиционный;	
	//////Форма = НовыйДокумент.ПолучитьФорму("ФормаДокумента");
	//////Форма.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_27.12.11 - открываем список документов Разнесение оборотов с фильтром по виду операции "Операционный"
Процедура ОткрытьСписокРазнесенийОпер() Экспорт
	
	//////НовыйСписок = Документы.бит_БК_РазнесениеОборотов.ПолучитьФормуСписка();
	//////НовыйСписок.Отбор.ВидОперации.Значение = Перечисления.бит_БК_ВидыОперацийРазнесениеОборотов.Операционный;
	//////НовыйСписок.Отбор.ВидОперации.Использование = Истина;
	//////НовыйСписок.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Начало_27.12.11 - открываем список документов Разнесение оборотов с фильтром по виду операции "Инвестиционный"
Процедура ОткрытьСписокРазнесенийИнвест() Экспорт
	
	//////НовыйСписок = Документы.бит_БК_РазнесениеОборотов.ПолучитьФормуСписка();
	//////НовыйСписок.Отбор.ВидОперации.Значение = Перечисления.бит_БК_ВидыОперацийРазнесениеОборотов.Инвестиционный;
	//////НовыйСписок.Отбор.ВидОперации.Использование = Истина;
	//////НовыйСписок.Открыть();
	
КонецПроцедуры
//бит_БК_Михайлова_Конец_27.12.11

/////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПО УПРАВЛЕНИЮ ПРИЛОЖЕНИЕМ EXCEL

// бит_DKravchenko Функция создает COMОбъект - "Excel.Application".
//
// Параметры:
//  Отказ 		- Булево, по умолчанию Ложь.
//  ЭтоЗагрузка - Булево, признак инициализации Excel для чтения, по умолчанию Ложь.
//
// Возвращаемое значение:
//   Excel - ComObject("Excel.Application"), в случае неудачи Неопределено.
//
Функция СоздатьПриложениеExcel(Отказ = Ложь, ЭтоЗагрузка = Ложь) Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////Попытка
	//////	
	//////	// Загрузка Microsoft Excel.
	//////	бит_ОбменДанными_Excel.ВывестиСостояниеПользователю("Загрузка Microsoft Excel...");
	//////	Excel = Новый COMОбъект("Excel.Application");
	//////	
	//////	Если ЭтоЗагрузка Тогда
	//////		Excel.DisplayAlerts = False;
	//////		Excel.AutomationSecurity = 3;
	//////	КонецЕсли;
	//////	
	//////Исключение
	//////	Отказ = Истина;
	//////	бит_ОбменДанными_Excel.СообщитьПользователю("Ошибка загрузки Microsoft Excel." + Символы.ПС + ОписаниеОшибки(), 
	//////	СтатусСообщения.Важное);
	//////	Возврат Неопределено;
	//////КонецПопытки;
	//////
	//////Возврат Excel;
	
КонецФункции // СоздатьПриложениеExcel()

// бит_DKravchenko Функция открывает Excel файл.
//
// Параметры:
//  Excel	   - ComObject("Excel.Application").
//  ПутьКФайлу - Строка, полный путь где лежит файл.
//  Отказ 	   - Булево, по умолчанию Ложь.
//
// Возвращаемое значение:
//   ExcelФайл - ComObject, в случае неудачи Неопределено.
//
Функция ОткрытьExcelФайл(Excel, ПутьКФайлу, Отказ = Ложь, бит_БК_ОбновлятьСсылки = 0 ) Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////Попытка
	//////	// Открытие файла Microsoft Excel
	//////	бит_ОбменДанными_Excel.ВывестиСостояниеПользователю("Открытие файла Microsoft Excel...");
	//////	ExcelФайл = Excel.WorkBooks.Open(ПутьКФайлу,бит_БК_ОбновлятьСсылки);
	//////Исключение
	//////	Отказ = Истина;
	//////	бит_ОбменДанными_Excel.СообщитьПользователю("Ошибка при открытии файла: " + ПутьКФайлу + "." + Символы.ПС + ОписаниеОшибки(), 
	//////	СтатусСообщения.Важное);
	//////	Возврат Неопределено;
	//////КонецПопытки;
	//////
	//////
	//////Excel.DisplayAlerts = False;
	//////Excel.AutomationSecurity = 3;
	//////
	//////Возврат ExcelФайл;
	
КонецФункции // ОткрытьExcelФайл()

// бит_DKravchenko Функция открывает Excel лист.
//
// Параметры:
//  ExcelФайл - ComObject.
//  ИмяЛиста  - Строка, имя листа для открытия.
//  Отказ 	  - Булево, по умолчанию Ложь.
//
//  СообщатьОбОшибке - Булево, по умолчанию Истина.
//  ДопСообщение     - Строка, текст дополнительного сообщения для вывода в случае неудачи,
//					   по умолчанию "".
//
// Возвращаемое значение:
//   ExcelЛист - ComObject, в случае неудачи Неопределено.
//
Функция ОткрытьExcelЛист(ExcelФайл, ИмяЛиста, Отказ = Ложь, 
	СообщатьОбОшибке = Истина, ДопСообщение = "") Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////// Указываем лист в книге для получения данных.
	//////Попытка
	//////	// Открытие листа файла Microsoft Excel.
	//////	бит_ОбменДанными_Excel.ВывестиСостояниеПользователю("Открытие листа файла Microsoft Excel...");
	//////	ExcelЛист = ExcelФайл.Sheets(ИмяЛиста);
	//////Исключение
	//////	
	//////	Отказ = Истина;
	//////	
	//////	Если СообщатьОбОшибке Тогда
	//////		
	//////		бит_ОбменДанными_Excel.СообщитьПользователю("Лист с именем """ + ИмяЛиста + """ в файле не найден!", СтатусСообщения.Важное);	
	//////		Если ПустаяСтрока(ДопСообщение) Тогда
	//////			Сообщить("	" + ДопСообщение, СтатусСообщения.Важное);	
	//////		КонецЕсли;
	//////		
	//////	КонецЕсли;
	//////	
	//////	Возврат Неопределено;
	//////КонецПопытки;
	//////
	//////Возврат ExcelЛист;
	
КонецФункции // ОткрытьExcelЛист()

// бит_DKravchenko Функция закрывает открытый файл Excel.
//
// Параметры:
//  ExcelФайл - ComObject.
//
// Возвращаемое значение:
//  ФайлЗакрыт - Булево.
//
Функция ЗакрытьExcelФайл(ExcelФайл) Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////ФайлЗакрыт = Истина;
	//////
	//////Попытка 
	//////	ExcelФайл.Close();
	//////Исключение                 
	//////	ФайлЗакрыт = Ложь;
	//////	бит_ОбменДанными_Excel.СообщитьПользователю("Не удалось закрыть файл источник!" + ОписаниеОшибки(), СтатусСообщения.Важное);
	//////КонецПопытки;
	//////
	//////Возврат ФайлЗакрыт;
	
КонецФункции // ЗакрытьExcelФайл()

// бит_DKravchenko Функция закрывает приложение Excel.
//
// Параметры:
//  Excel 		- ComObject("Excel.Application").
//  ЭтоЗагрузка - Булево, признат что Excel был открыт для чтения, по умолчанию Ложь.
//
// Возвращаемое значение:
//  ExcelЗакрыт - Булево.
//
Функция ЗакрытьПриложениеExcel(Excel, ЭтоЗагрузка = Ложь) Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn 20.08.15
	
	//////ExcelЗакрыт = Истина;
	//////
	//////Попытка 
	//////	
	//////	Если ЭтоЗагрузка Тогда
	//////		Excel.DisplayAlerts = False;		
	//////	КонецЕсли;
	//////	
	//////	Excel.Quit();
	//////	
	//////Исключение                 
	//////	ExcelЗакрыт = Ложь;
	//////	бит_ОбменДанными_Excel.СообщитьПользователю("Не удалось закрыть приложение Excel!" + ОписаниеОшибки(), СтатусСообщения.Важное);
	//////КонецПопытки;
	//////
	//////Возврат ExcelЗакрыт;
	
КонецФункции // ЗакрытьПриложениеExcel()

//////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ ВЫБОРА ОБЪЕКТА СТРОИТЕЛЬСТВА В ФОРМАХ

//Начало_бит_БК_Магомедов_23.01.2012 
//обработка выбора только элементов верхнего уровня из формы выбора ОбъектыСтроительства 
Процедура ОбъектАвтоПодборТекста(Текст, ТекстАвтоПодбора) Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ОбъектыСтроительства.Наименование,
	|	ОбъектыСтроительства.Код,
	|	ОбъектыСтроительства.Ссылка
	|ИЗ
	|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства1
	|		ПО ОбъектыСтроительства.Ссылка = ОбъектыСтроительства1.Родитель
	|ГДЕ
	|	(ПОДСТРОКА(ОбъектыСтроительства.Наименование, 1, &Длина) ПОДОБНО &ТекстВвода
	|			ИЛИ ПОДСТРОКА(ОбъектыСтроительства.Код, 1, &Длина) ПОДОБНО &ТекстВвода)
	|	И ОбъектыСтроительства.Родитель = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъектыСтроительства.Наименование,
	|	ОбъектыСтроительства.Код,
	|	ОбъектыСтроительства.Ссылка";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Параметры.Вставить("Длина", СтрДлина(Текст));
	Запрос.Параметры.Вставить("ТекстВвода", Текст+"%");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ТекстАвтоПодбора = Выборка.Наименование;
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбъектОкончаниеВводаТекста( Текст, Значение) Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ОбъектыСтроительства.Наименование,
	|	ОбъектыСтроительства.Код,
	|	ОбъектыСтроительства.Ссылка
	|ИЗ
	|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|ГДЕ
	|	(ПОДСТРОКА(ОбъектыСтроительства.Наименование, 1, &Длина) ПОДОБНО &ТекстВвода
	|			ИЛИ ПОДСТРОКА(ОбъектыСтроительства.Код, 1, &Длина) ПОДОБНО &ТекстВвода)
	|	И ОбъектыСтроительства.Родитель = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъектыСтроительства.Наименование,
	|	ОбъектыСтроительства.Код,
	|	ОбъектыСтроительства.Ссылка";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Параметры.Вставить("Длина", СтрДлина(Текст));
	Запрос.Параметры.Вставить("ТекстВвода", Текст+"%");
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Количество() = 1 Тогда 
		Выборка.Следующий();
		Значение = Выборка.Ссылка;
	ИначеЕсли Выборка.Количество() > 1 Тогда 
		Значение = Новый СписокЗначений;
		Пока Выборка.Следующий() Цикл
			Значение.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры
Процедура ОбъектНачалоВыбора(ЭлементВладелец) Экспорт
	
	Форма = Справочники.ОбъектыСтроительства.ПолучитьФормуВыбора(,ЭлементВладелец);
	Форма.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Ложь;
	ТекстЗапроса = "ВЫБРАТЬ
	|	ОбъектыСтроительства.Наименование,
	|	ОбъектыСтроительства.Код,
	|	ОбъектыСтроительства.Ссылка
	|ИЗ
	|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|ГДЕ
	|	ОбъектыСтроительства.Родитель = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъектыСтроительства.Ссылка,
	|	ОбъектыСтроительства.Наименование,
	|	ОбъектыСтроительства.Код";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	Массив = ТЗ.ВыгрузитьКолонку("Ссылка");
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.ЗагрузитьЗначения(Массив);
	Форма.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
	Форма.Отбор.Ссылка.Значение = СписокЗначений;
	Форма.Отбор.Ссылка.Использование = Истина;
	Форма.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Ссылка.Доступность = Ложь;
	
	Форма.ОткрытьМодально();
КонецПроцедуры
//Конец_бит_БК_Магомедов_23.01.2012 

//Начало_бит_БК_Магомедов_21.02.2012
//возвращает список заявок по текущему статусу
//Статус - список статусов
Функция ПолучитьСписокЗаявокПоСтаусу(Статус) Экспорт
	СписокЗаявок = Новый СписокЗначений;
	Текст = "ВЫБРАТЬ
	|	бит_СтатусыОбъектов.Объект
	|ИЗ
	|	РегистрСведений.бит_СтатусыОбъектов КАК бит_СтатусыОбъектов
	|ГДЕ
	|	бит_СтатусыОбъектов.ВидСтатуса = &ВидСтатуса
	|	И бит_СтатусыОбъектов.Статус В(&Статус)";
	Запрос = Новый Запрос;
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("ВидСтатуса",Перечисления.бит_ВидыСтатусовОбъектов.Статус);
	Запрос.УстановитьПараметр("Статус", Статус);
	МассивЗаявок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Объект");
	СписокЗаявок.ЗагрузитьЗначения(МассивЗаявок);		
	
	Возврат СписокЗаявок;
КонецФункции


	/////////////////////////////////////////////////////////////////////
	/////РАБОТА С КНОПКАМИ КОМАНДНОЙ ПАНЕЛИ
#Если ТолстыйКлиентОбычноеПриложение Тогда	
Функция ДобавитьКнопкуВКоллекцию(Имя, Текст = "", Действие = Неопределено, ТипКнопки = неопределено, Коллекция, ДопПараметры = Неопределено) Экспорт
	
	Кнопка = Коллекция.Найти(Имя);
	
	Если Кнопка = Неопределено Тогда
		Разделитель = Коллекция.Добавить("Разделитель_"+Имя, ТипКнопкиКоманднойПанели.Разделитель);
		
		Кнопка = Коллекция.Добавить();
		
		Кнопка.Имя         = Имя;
		Если ТипКнопки = Неопределено Тогда 
			Кнопка.ТипКнопки   = ТипКнопкиКоманднойПанели.Действие;
		иначе
			Кнопка.ТипКнопки = ТипКнопки;
		КонецЕсли;
		Кнопка.Текст       = Текст;
		Кнопка.Действие    = Действие;
		
		Если НЕ ДопПараметры = Неопределено Тогда
			ДопПараметры.Свойство("Картинка",Кнопка.Картинка);
			ДопПараметры.Свойство("Отображение",Кнопка.Отображение);
			//Кнопка.Картинка    = Картинка;
			//Кнопка.Подсказка   = Подсказка;
			//Кнопка.Пометка     = Пометка;	
			//Кнопка.ИзменяетДанные   = ИзменяетДанные;	
			//Кнопка.Расшифровка = Расшифровка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Кнопка;
КонецФункции
Процедура УдалитьКнопкуИзКоллекции(Имя,Коллекция) Экспорт
	Разделитель = Коллекция.Найти("Разделитель_"+Имя);
	Если НЕ Разделитель = Неопределено Тогда 
		Коллекция.Удалить(Разделитель);
	КонецЕсли;
	
	Кнопка = Коллекция.Найти(Имя);
	Если  НЕ Кнопка = Неопределено Тогда 
		Коллекция.Удалить(Кнопка);
	КонецЕсли;
КонецПроцедуры
#КонецЕсли

///////////////////////////////////////////////////////////
//РАБОТА С ПОЧТОЙ, АУТЛУК

//создать новое сообщение из 1С в MS Outlook
Процедура СоздатьНовоеСообщениеАУТЛУК(СписокВложений, Параметры) Экспорт
	
	ВызватьИсключение "Функция должна вызываться из бит_БК_ОбщийКлиент!"; //1c-izhtc spawn
	
	////приложение
	//Попытка		
	//	OutlookApp = Новый COMОбъект("Outlook.Application");		
	//Исключение
	//	Предупреждение("Не удалось создать приложение Outlook.Application !"); 		
	//	Возврат;		
	//КонецПопытки;
	//
	//message = OutlookApp.CreateItem(0);
	//
	//message.Subject = Параметры.Заголовок;
	//
	//message.Body = Параметры.Текст;
	////               Подпись
	//message.To = Параметры.Адрес;
	//
	//Для каждого Файл Из СписокВложений Цикл
	//	
	//	message.Attachments.Add(Файл.Значение,1,1,Файл.Представление );
	//	
	//КонецЦикла; 		
	//
	//ПоказатьПередОтправкой = Истина;
	//Если ПоказатьПередОтправкой тогда
	//	Попытка
	//		message.Display(-1);
	//	исключение
	//	КонецПопытки;
	//иначе
	//	message.Send();
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПоместитьТабличныеДокументыВоВременноеХранилище(СписокФайлов, ИменаТабДокументов,ОбъектыПечати)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДатаПредставление = Формат(ТекущаяДата(), "ДФ='yyyyMMdd HH:mm'");
	
	Для Каждого ТабДокумент Из ИменаТабДокументов Цикл
		//ТабДок = ЭтаФорма["Таб" + ТабДокумент.Значение];
		ТабДок = ТабДокумент.Значение;
		ТабДок.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.MXL);
		Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
		Путь = ПоместитьВоВременноеХранилище(Данные, "");
		
		Если ОбъектыПечати.Количество() > 1 Тогда
			ИмяФайла = "[ИмяМакета] ([ДатаПредставление]).mxl";
		Иначе
			ИмяФайла = "[Документ] ([ИмяМакета] [ДатаПредставление]).mxl";
		КонецЕсли;
		
		ИмяФайла = СтрЗаменить(ИмяФайла, "[Документ]",			Строка(ОбъектыПечати[0].Значение));
		ИмяФайла = СтрЗаменить(ИмяФайла, "[ИмяМакета]",			ТабДокумент.Представление);
		ИмяФайла = СтрЗаменить(ИмяФайла, "[ДатаПредставление]",	ДатаПредставление);
		
		СписокФайлов.Добавить(Путь, ИмяФайла);
	КонецЦикла;
	
	УдалитьФайлы(ИмяВременногоФайла);
	
КонецПроцедуры

//Формирует структуру с параметрами сообщения по эл. почте для инициатора по ссылке документа
Функция ПолучитьПараметрыОтправкиСообщения(Ссылка) Экспорт
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	Если НЕ Метаданные.Документы.Содержит(Ссылка.Метаданные()) Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	Если Ссылка.Метаданные().Реквизиты.Найти("бит_БК_Инициатор") = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Инициатор = Ссылка.бит_БК_Инициатор;
	Если НЕ ЗначениеЗаполнено(Инициатор) Тогда
			#Если Клиент Тогда
			Предупреждение("Не указан инициатор в документе"+Ссылка, 5); 		
		#КонецЕсли
		Возврат Неопределено;
	КонецЕсли;
	
	Email = Инициатор.Email;
	Если НЕ ЗначениеЗаполнено(Email) Тогда 
		#Если Клиент Тогда
			Предупреждение("Не указан Email для инициатора "+Инициатор, 5); 		
		#КонецЕсли
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Заголовок", "Печатная форма документа "+Ссылка);
	ПараметрыСообщения.Вставить("Текст", "");
	ПараметрыСообщения.Вставить("Адрес",Email);
    Возврат ПараметрыСообщения;
КонецФункции

////////////////////////////////////////////////////////////
//РАБОТА С ПОЧТОЙ,SMTP

// бит_MZyubin Процедура выполняет отправку сообщений;
//
// Параметры:
//  СообщениеСтруктура  - Структура
//  НастройкиДоставки   - Структура
//  СтруктураПараметров - Структура
//  ПротоколОтправки    - Строка
//
Функция ОтправитьСообщение(СообщениеСтруктура, НастройкиДоставки, СтруктураПараметров,ПротоколОтправки="") Экспорт
	
	флДействиеВыполнено = Ложь;			
	Отказ = Ложь;
	
		
	Если НЕ Отказ Тогда
		
		// сформируем почтовый профиль
		ИПП 					= Новый ИнтернетПочтовыйПрофиль;
		ИПП.АдресСервераSMTP 	= НастройкиДоставки.АдресSMTP;   
		ИПП.ПортSMTP 			= НастройкиДоставки.ПортSMTP;
		Если НЕ ПустаяСтрока(СокрЛП(НастройкиДоставки.SMTPАутентификация)) Тогда
			
			ИПП.АутентификацияSMTP 	= СпособSMTPАутентификации[СокрЛП(НастройкиДоставки.SMTPАутентификация)];
			
		КонецЕсли; 
		ИПП.ПользовательSMTP 	= НастройкиДоставки.ПользовательSMTP;
		ИПП.ПарольSMTP 			= НастройкиДоставки.ПарольSMTP;
		
		//ИПП.АдресСервераPOP3    = НастройкиДоставки.АдресPOP3;
		//ИПП.ПортPOP3            = НастройкиДоставки.ПортPOP3;
		//Если НЕ ПустаяСтрока(СокрЛП(НастройкиДоставки.POPАутентификация)) Тогда
		//	
		//	ИПП.АутентификацияPOP3  = СпособPOP3Аутентификации[СокрЛП(НастройкиДоставки.POPАутентификация)];
		//	
		//КонецЕсли; 
		//ИПП.Пользователь        = НастройкиДоставки.ПользовательPOP3;
		//ИПП.Пароль              = НастройкиДоставки.ПарольPOP3;
		                         
		
		// Создадим сообщение 
		Сообщение = Новый ИнтернетПочтовоеСообщение; 
		Сообщение.Отправитель.Адрес = НастройкиДоставки.EMailАдресОтправителя;
		Сообщение.ОбратныйАдрес.Добавить(НастройкиДоставки.EMailАдресОтправителя);
		Сообщение.Получатели.Добавить(СтруктураПараметров.АдресПолучателя);
		Если СтруктураПараметров.Свойство("АдресПолучателяКопии") Тогда 
			Сообщение.Копии.Добавить(СтруктураПараметров.АдресПолучателяКопии);
		КонецЕсли;
		Сообщение.Тема = СообщениеСтруктура.Заголовок; 
		Сообщение.Тексты.Добавить(СообщениеСтруктура.Текст + Символы.ПС + СообщениеСтруктура.Подпись); 
		
		// Подключимся и отправим сформированное сообщение
		Попытка
			
			Почта = Новый ИнтернетПочта; 
			Почта.Подключиться(ИПП); 
			Почта.Послать(Сообщение); 
			флДействиеВыполнено = Истина;
			ПротоколОтправки    = "Сообщение отправлено по адресу "
			                       +СтруктураПараметров.АдресПолучателя
								   +"  "
								   +ТекущаяДата()
								   +".";
			
		Исключение
			
			флДействиеВыполнено = Ложь;
			ПротоколОтправки    = "Сообщение  не удалось отправить по адресу "
			                       +СтруктураПараметров.АдресПолучателя
								   +"  "
								   +ТекущаяДата()
								   +" по причине "
								   +ОписаниеОшибки()
								   +".";
			
			
		КонецПопытки;
		
		Почта.Отключиться(); 
		
	КонецЕсли; 
	
	Возврат флДействиеВыполнено;
	
КонецФункции

Функция ПодключениеКСерверуSMTP(НастройкиДоставки) Экспорт
	 флДействиеВыполнено = Ложь;
	 
	// сформируем почтовый профиль
	ИПП 					= Новый ИнтернетПочтовыйПрофиль;
	ИПП.АдресСервераSMTP 	= НастройкиДоставки.АдресSMTP;   
	ИПП.ПортSMTP 			= НастройкиДоставки.ПортSMTP;
	Если НЕ ПустаяСтрока(СокрЛП(НастройкиДоставки.SMTPАутентификация)) Тогда
		
		ИПП.АутентификацияSMTP 	= СпособSMTPАутентификации[СокрЛП(НастройкиДоставки.SMTPАутентификация)];
		
	КонецЕсли; 
	ИПП.ПользовательSMTP 	= НастройкиДоставки.ПользовательSMTP;
	ИПП.ПарольSMTP 			= НастройкиДоставки.ПарольSMTP;
	
	// Подключимся
	Попытка
		
		Почта = Новый ИнтернетПочта; 
		Почта.Подключиться(ИПП); 
		
		флДействиеВыполнено = Истина;
		
	Исключение
		
		флДействиеВыполнено = Ложь;
		
	КонецПопытки;
	
	Почта.Отключиться(); 

	Возврат флДействиеВыполнено;
КонецФункции // ПодключениеКСерверуSMTP()

Процедура ЗаполнитьНастройкиДоставки(НастройкиДоставки) Экспорт
	
	НастройкиДоставки.Вставить("АдресSMTP", бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("ПараметрыСервераSMTP","АдресСервераSMTP",""));
	НастройкиДоставки.Вставить("ПортSMTP", бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("ПараметрыСервераSMTP","ПортSMTP",""));
	НастройкиДоставки.Вставить("SMTPАутентификация", бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("ПараметрыСервераSMTP","АутентификацияSMTP",""));
	
	// + БИТ Amerkulov	03022014 / Возможность указания параметров аутентификации
	//НастройкиДоставки.Вставить("ПользовательSMTP","");
	//НастройкиДоставки.Вставить("ПарольSMTP","");
	НастройкиДоставки.Вставить("ПользовательSMTP", бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("ПараметрыСервераSMTP","ПользовательSMTP",""));
	НастройкиДоставки.Вставить("ПарольSMTP", бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("ПараметрыСервераSMTP","ПарольSMTP",""));
	// - БИТ Amerkulov
КонецПроцедуры

///////////////////////////////////////////////////////
//////// ПЕЧАТЬ

// Функция формирования печатной формы по внешнему источнику.
// ИсточникДанных - СправочникСсылка.ДополнительныеОтчетыИОбработки - ссылка на внешнюю обработку
// ПараметрыИсточника - Структура с ключами:
//		БезопасныйРежим - булево - используется ли безопасный режим
//		ИдентификаторКоманды - строка- список макетов, перечисленных через запятую
//		ОбъектыНазначения - массив - массив ссылок на объекты назначения
//
// параметры, заполняемые в функции (описание см. в модуле УправлениеПечатьюПереопределяемый)
// КоллекцияПечатныхФорм
// ОбъектыПечати
// ПараметрыВывода
//
Функция ПечатьПоВнешнемуИсточнику(ИсточникДанных,
								ПараметрыИсточника,
								КоллекцияПечатныхФорм,
								ОбъектыПечати,
								ПараметрыВывода,
								ПараметрКоманды) Экспорт
	Если НЕ ТипЗнч(ИсточникДанных) = Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки") Тогда
		Возврат Ложь;
	КонецЕсли;
	//Начало_бит_БК_Магомедов_07.03.2012 
	Если НЕ ЗначениеЗаполнено(ПараметрКоманды) Тогда 
		Возврат Ложь;
	КонецЕсли;
	//Конец_бит_БК_Магомедов_07.03.2012 
	КоллекцияПечатныхФорм = ПодготовитьКоллекциюПечатныхФорм(ПараметрыИсточника.ИдентификаторКоманды);
	
	ПараметрыВывода = ПодготовитьСтруктуруПараметровВывода();
	
	//ОбъектыПечати = Новый СписокЗначений;
	
	ВнешняяОбработкаОбъект = ПолучитьОбъектВнешнейОбработки(ИсточникДанных, ПараметрыИсточника.БезопасныйРежим);
	ВнешняяОбработкаОбъект.СсылкаНаОбъект = ПараметрКоманды;
	табДок = ВнешняяОбработкаОбъект.Печать();
					//ПараметрыИсточника.ОбъектыНазначения,
					//КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	//Начало_бит_БК_Магомедов_07.03.2012 
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = табДок;
	ОбъектыПечати.Добавить(ПараметрКоманды);
	//Конец_бит_БК_Магомедов_07.03.2012 
	// Проверим, все ли макеты были сформированы
	Для Каждого Стр Из КоллекцияПечатныхФорм Цикл
		Если Стр.ТабличныйДокумент = Неопределено Тогда
			ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'В обработчике печати не был сформирован табличный документ для: %1'"),
										Стр.ИмяМакета);
			ВызватьИсключение(ТекстСообщенияОбОшибке);
		КонецЕсли;
		
		Стр.ТабличныйДокумент.КоличествоЭкземпляров = Стр.Экземпляров;
	КонецЦикла;
	
    Возврат Истина;
КонецФункции

// Подготовить структуру параметров вывода для менеджера объекта формирующего печатные формы
//
Функция ПодготовитьСтруктуруПараметровВывода() Экспорт
	
	ПараметрыВывода = Новый Структура;
	ПараметрыВывода.Вставить("ДоступнаПечатьПоКомплектно",		Ложь);
	ПараметрыВывода.Вставить("ПолучательЭлектронногоПисьма",	Неопределено);
	ПараметрыВывода.Вставить("ОтправительЭлектронногоПисьма",	Неопределено);
	
	Возврат ПараметрыВывода;
	
КонецФункции

// Подготовить коллекцию печатных форм - таблицу значений используемые при формировании печатных форм
Функция ПодготовитьКоллекциюПечатныхФорм(ИменаМакетов) Экспорт
	
	Макеты = Новый ТаблицаЗначений;
	Макеты.Колонки.Добавить("ИмяМакета");
	Макеты.Колонки.Добавить("ИмяВРЕГ");
	Макеты.Колонки.Добавить("СинонимМакета");
	Макеты.Колонки.Добавить("ТабличныйДокумент");
	Макеты.Колонки.Добавить("Экземпляров");
	Макеты.Колонки.Добавить("Картинка");
	Макеты.Колонки.Добавить("ПолныйПутьКМакету");
	
	СтрИмен = СтрЗаменить(ИменаМакетов, ",", Символы.ПС);
	Для Сч = 1 По СтрЧислоСтрок(СтрИмен) Цикл
		Имя = СтрПолучитьСтроку(СтрИмен, Сч);
		Стр = Макеты.Найти(Имя, "ИмяМакета");
		Если Стр = Неопределено Тогда
			Стр = Макеты.Добавить();
			Стр.ИмяМакета = Имя;
			Стр.ИмяВРЕГ   = ВРег(Имя);
			Стр.Экземпляров = 1;
		Иначе
			Стр.Экземпляров = Стр.Экземпляров + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Макеты;
	
КонецФункции

// Выполняет создание экземпляра внешней обработки (отчета)
// Параметры
//  ВнешняяОбработкаСсылка - СправочникСсылка.ДополнительныеОтчетыИОбработки
//  БезопасныйРежим - Булево - требуется ли запускать обработку в безопасном режиме
// Возвращаемое значение
//  строка - имя обработки известное системе
//
Функция ПолучитьОбъектВнешнейОбработки(ВнешняяОбработкаСсылка, БезопасныйРежим) Экспорт
	
	//ВнешняяОбработкаОбъект = ВнешняяОбработкаСсылка.ПолучитьОбъект();
	//
	//ДвоичныеДанныеОбработки = ВнешняяОбработкаОбъект.ХранилищеВнешнейОбработки.Получить();
	//
	//ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	//
	//ДвоичныеДанныеОбработки.Записать(ИмяВременногоФайла);
	//
	//Если ВнешняяОбработкаОбъект.Вид = Перечисления.ВидыДополнительныхОтчетовИОбработок.Отчет
	//	ИЛИ ВнешняяОбработкаОбъект.Вид = Перечисления.ВидыДополнительныхОтчетовИОбработок.ДополнительныйОтчет Тогда
	//	Возврат ВнешниеОтчеты.Создать(ИмяВременногоФайла, БезопасныйРежим);
	//Иначе
	//	Возврат ВнешниеОбработки.Создать(ИмяВременногоФайла, БезопасныйРежим);
	//КонецЕсли;
	
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление (
	//Возврат ДополнительныеОтчетыИОбработки.ПолучитьОбъектВнешнейОбработки(ВнешняяОбработкаСсылка);
	Возврат ДополнительныеОтчетыИОбработки.ОбъектВнешнейОбработки(ВнешняяОбработкаСсылка);
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление )
	                                                 
КонецФункции

Функция ПолучитьВнешнийИсточникПоНаименованию(Ссылка, НаименованиеИсточника = "") Экспорт
	
	Если НаименованиеИсточника = "" Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию(НаименованиеИсточника);
		
КонецФункции

Процедура бит_БК_УстановленныеВизыПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	//Очистим согласования если не заполнено ФизЛицо-инициатор
	Если ТипЗнч(Источник.Отбор.Объект.Значение) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") И Не Источник.Количество() = 0 Тогда 
		Для Каждого ТекЗапись Из Источник Цикл
			Если НЕ ЗначениеЗаполнено(ТекЗапись.ФизическоеЛицо) Тогда 
				ТекЗапись.Решение = Справочники.бит_ВидыРешенийСогласования.ПустаяСсылка();
				ТекЗапись.ДатаУстановки = Дата(0001,01,01);
				ТекЗапись.Пользователь = Справочники.Пользователи.ПустаяСсылка();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли; 	
	
КонецПроцедуры


// для каждой статьи оборотов ищет Контролирующую на период и заполняет соответствие статей:Период, Контролируемая, КонтролирующаяСтатья и признак Контроль.
//Если нет контролирующей статьи, формирует сообщение пользователю
Процедура УстановитьСооветствиеСтатейОборотов(Таблица, Отказ, ТекстСообщения = "") Экспорт
	
		Для Каждого ТекСтрока Из Таблица Цикл
		Период = ТекСтрока.Период;
		КонтролируемаяСтатья = ТекСтрока.СтатьяОборотов;
		Отбор =  Новый Структура("КонтролируемаяСтатья",КонтролируемаяСтатья);
		СтруктураЗначений = РегистрыСведений.бит_БК_КонтролирующиеСтатьиОборотов.ПолучитьПоследнее(Период,Отбор);
		//нашли контролирующую статью,  ставим контроль по ней
		Если Не СтруктураЗначений.КонтролирующаяСтатья.Пустая() И СтруктураЗначений.АктивностьСтроки = Истина Тогда
			
			КонтролирующаяСтатья = СтруктураЗначений.КонтролирующаяСтатья; 
			КонтрольПоСтатье = Истина;
			//Не  нашли контролирующую статью, контроль по контролируемой статье снимаем
		иначе
			ТекстСообщения = ТекстСообщения + Символы.ПС + 
			"Статья <"+КонтролируемаяСтатья+"> не является контролируемой. Контроль по этой статье не производится, данные в регистр «Контрольные значения бюджетов» не записаны.";
			КонтролирующаяСтатья = КонтролируемаяСтатья;
			КонтрольПоСтатье = Ложь;
			Отказ = Истина;
		КонецЕсли;
		
		ТекСтрока.КонтролирующаяСтатья = КонтролирующаяСтатья;
		ТекСтрока.КонтрольПоСтатье = КонтрольПоСтатье;
		
	КонецЦикла;	
	
КонецПроцедуры

Функция ПолучитьТаблицуСоответствиеСтатей(Таблица) Экспорт
	
	ТЗСоответствиеСтатей = Таблица.Скопировать(,"Период, СтатьяОборотов");
	ТЗСоответствиеСтатей.Свернуть("Период, СтатьяОборотов");
	ТЗСоответствиеСтатей.Колонки.Добавить("КонтролирующаяСтатья", Новый ОписаниеТипов("СправочникСсылка.бит_СтатьиОборотов"));
	ТЗСоответствиеСтатей.Колонки.Добавить("КонтрольПоСтатье", Новый ОписаниеТипов("Булево"));
	
	Возврат ТЗСоответствиеСтатей;
	
КонецФункции


// + БИТ AMerkulov 2015-02-17 
Функция ОбщаяСуммаСверхбюджетаЗаПериод(Дата) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(ЕСТЬNULL(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот, 0)) КАК Сумма
	                      |ИЗ
						  //1c-izhtc spawn 26.08.15 (
						  //|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(&ДатаНач, &ДатаКон, , Аналитика_3 = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВариантыБюджета.ЗаРамкамиБюджета)) КАК бит_КонтрольныеЗначенияБюджетовОбороты");
						  |	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(&ДатаНач, &ДатаКон) КАК бит_КонтрольныеЗначенияБюджетовОбороты");
						  //1c-izhtc spawn 26.08.15 )
	Запрос.УстановитьПараметр("ДатаНач",НачалоКвартала(Дата));
	Запрос.УстановитьПараметр("ДатаКон",КонецКвартала(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.Сумма) Тогда
		Возврат Выборка.Сумма;
	Иначе
		Возврат 0;             
	КонецЕсли;
	
КонецФункции
// - БИТ AMerkulov 2015-02-17 

// + БИТ AMerkulov 2015-03-01
Функция бит_ПолучитьЗначениеРеквизитаОбъекта(ТекущийОбъект,ИмяРеквизита) Экспорт
	
	ЗначениеРеквизита = Неопределено;
	
	
	МетаданныеОбъекта = ТекущийОбъект.Метаданные();
	Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента(ИмяРеквизита,МетаданныеОбъекта) ИЛИ ИмяРеквизита = "Номер" Тогда
		
		ЗначениеРеквизита = ТекущийОбъект[ИмяРеквизита];
		
	КонецЕсли; 
	
	
	Возврат ЗначениеРеквизита;

КонецФункции // ПолучитьЗначениеРеквизитаОбъекта()

Функция ПолучитьДатыОплаты(Заявка) Экспорт
	
		Строка = "";
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	бит_ПлатежнаяПозиция.Ссылка
	                      |ИЗ
	                      |	Документ.бит_ПлатежнаяПозиция КАК бит_ПлатежнаяПозиция
	                      |ГДЕ
	                      |	бит_ПлатежнаяПозиция.ДокументОснование.Аналитика_1 = &Заявка");
						  
	Запрос.УстановитьПараметр("Заявка", Заявка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекПлатежныйДокумент = бит_Казначейство.НайтиПлатежныйДокументПоПлатежнойПозиции(Выборка.Ссылка);
		Если ЗначениеЗаполнено(ТекПлатежныйДокумент) И ТекПлатежныйДокумент.Проведен Тогда
			Строка = Строка + Формат(ТекПлатежныйДокумент.Дата,"ДФ=dd.MM.yyyy")  + ", ";	
		КонецЕсли;
		
		
	КонецЦикла;
	
	Строка = Лев(Строка, СтрДлина(Строка)-2);
	
	Возврат Строка;
	

	
КонецФункции

Функция ПолучитьДатыОплатыПоРО(Заявка,РО) Экспорт
	
	
	Строка = "";
	
	Если НЕ ЗначениеЗаполнено(РО) Тогда
		Возврат Строка;	
	КонецЕсли;
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	бит_ПлатежнаяПозиция.Ссылка
	                      |ИЗ
	                      |	Документ.бит_ПлатежнаяПозиция КАК бит_ПлатежнаяПозиция
	                      |ГДЕ
	                      |	бит_ПлатежнаяПозиция.ДокументОснование.Аналитика_1 = &Заявка
	                      |	И ВЫРАЗИТЬ(бит_ПлатежнаяПозиция.ДокументОснование.ДокументОснование КАК Документ.УдалитьИжтиси_бит_БК_РазнесениеОборотов) = &РО");
						  
	Запрос.УстановитьПараметр("Заявка", Заявка);
	Запрос.УстановитьПараметр("РО", РО);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекПлатежныйДокумент = бит_Казначейство.НайтиПлатежныйДокументПоПлатежнойПозиции(Выборка.Ссылка);
		Если ЗначениеЗаполнено(ТекПлатежныйДокумент) И ТекПлатежныйДокумент.Проведен Тогда
			Строка = Строка + Формат(ТекПлатежныйДокумент.Дата,"ДФ=dd.MM.yyyy")  + ", ";	
		КонецЕсли;
		
		
	КонецЦикла;
	
	Строка = Лев(Строка, СтрДлина(Строка)-2);
	
	Возврат Строка;
	

	
КонецФункции

// - БИТ AMerkulov 2015-03-01


//{ bit_SVKushnirenko 21.02.2017 #2657
//ИсходныйКод{
//// + БИТ AMerkulov 2015-12-28
//Функция ПолучитьОстатокБюджетаПоАналитикам(СписокОбъектов, СписокЦФО, СписокСтатей, Ссылка, МинПериод,Сценарий,СценарийКонтролируемый,ТабЧасть) Экспорт
//	
//	// БИТ_YK_н 01/16
//	// Добавлен учет контролирующих статей. 
//	Запрос = Новый Запрос("ВЫБРАТЬ
//	                      |	ТабЧасть.СтатьяОборотов КАК СтатьяОборотов,
//	                      |	ВЫБОР
//	                      |		КОГДА ТабЧасть.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)
//	                      |				ИЛИ ТабЧасть.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест)
//	                      |				ИЛИ ТабЧасть.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
//	                      |			ТОГДА НАЧАЛОПЕРИОДА(ТабЧасть.Период, ГОД)
//	                      |		ИНАЧЕ НАЧАЛОПЕРИОДА(ТабЧасть.Период, МЕСЯЦ)
//	                      |	КОНЕЦ КАК Период,
//	                      |	ТабЧасть.ЦФО,
//	                      |	ТабЧасть.Аналитика_2,
//	                      |	ТабЧасть.Сценарий,
//	                      |	ВЫБОР
//	                      |		КОГДА ТабЧасть.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)
//	                      |				ИЛИ ТабЧасть.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест)
//	                      |				ИЛИ ТабЧасть.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
//	                      |			ТОГДА ТабЧасть.Проект
//	                      |		ИНАЧЕ ""Пустой""
//	                      |	КОНЕЦ КАК Проект
//	                      |ПОМЕСТИТЬ СтатьиОборотов
//	                      |ИЗ
//	                      |	&ТабЧасть КАК ТабЧасть
//	                      |;
//	                      |
//	                      |////////////////////////////////////////////////////////////////////////////////
//	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
//	                      |	ЕСТЬNULL(бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних.КонтролирующаяСтатья, СтатьиОборотов.СтатьяОборотов) КАК Контролирующая,
//	                      |	СтатьиОборотов.СтатьяОборотов,
//	                      |	СтатьиОборотов.Период,
//	                      |	СтатьиОборотов.ЦФО,
//	                      |	СтатьиОборотов.Аналитика_2,
//	                      |	СтатьиОборотов.Сценарий,
//	                      |	СтатьиОборотов.Проект
//	                      |ПОМЕСТИТЬ Контролирующие
//	                      |ИЗ
//	                      |	СтатьиОборотов КАК СтатьиОборотов
//	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов.СрезПоследних(&Дата, АктивностьСтроки) КАК бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних
//	                      |		ПО СтатьиОборотов.СтатьяОборотов = бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних.КонтролируемаяСтатья
//	                      |;
//	                      |
//	                      |////////////////////////////////////////////////////////////////////////////////
//	                      |ВЫБРАТЬ
//	                      |	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот,
//	                      |	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот,
//	                      |	ВЫБОР
//	                      |		КОГДА бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)
//	                      |				ИЛИ бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест)
//	                      |				ИЛИ бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
//	                      |			ТОГДА НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, ГОД)
//	                      |		ИНАЧЕ НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ)
//	                      |	КОНЕЦ КАК Период,
//	                      |	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО,
//	                      |	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
//	                      |	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Объект,
//	                      |	ВЫБОР
//	                      |		КОГДА бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)
//	                      |				ИЛИ бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест)
//	                      |				ИЛИ бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
//	                      |			ТОГДА бит_КонтрольныеЗначенияБюджетовОбороты.Проект
//	                      |		ИНАЧЕ ""Пустой""
//	                      |	КОНЕЦ КАК проект
//	                      |ПОМЕСТИТЬ ВТ_Регистр
//	                      |ИЗ
//	                      |	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
//	                      |			&МинПериод,
//	                      |			,
//	                      |			Запись,
//	                      |			ЦФО В (&СписокЦФО)
//	                      |				И Аналитика_2 В (&СписокОбъектов)
//	                      |				И Сценарий В (&Сценарий)
//	                      |				И СценарийКонтролируемый В (&СценарийКонтролируемый)
//	                      |				И СтатьяОборотов В
//	                      |					(ВЫБРАТЬ
//	                      |						Контролирующие.Контролирующая
//	                      |					ИЗ
//	                      |						Контролирующие)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
//	                      |ГДЕ
//	                      |	бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор <> &Ссылка
//	                      |;
//	                      |
//	                      |////////////////////////////////////////////////////////////////////////////////
//	                      |ВЫБРАТЬ
//	                      |	ВТ_Итоговая.Период,
//	                      |	ВТ_Итоговая.ЦФО,
//	                      |	ВТ_Итоговая.СтатьяОборотов,
//	                      |	ВТ_Итоговая.Объект,
//	                      |	СУММА(ВТ_Итоговая.СуммаСценарийКонтрольОборот - ВТ_Итоговая.СуммаСценарийИсполнениеОборот) КАК Остаток,
//	                      |	ВТ_Итоговая.проект
//	                      |ПОМЕСТИТЬ ВТ_Итоговая
//	                      |ИЗ
//	                      |	ВТ_Регистр КАК ВТ_Итоговая
//	                      |
//	                      |СГРУППИРОВАТЬ ПО
//	                      |	ВТ_Итоговая.Период,
//	                      |	ВТ_Итоговая.ЦФО,
//	                      |	ВТ_Итоговая.СтатьяОборотов,
//	                      |	ВТ_Итоговая.Объект,
//	                      |	ВТ_Итоговая.проект
//	                      |;
//	                      |
//	                      |////////////////////////////////////////////////////////////////////////////////
//	                      |ВЫБРАТЬ
//	                      |	ЕСТЬNULL(ВТ_Итоговая.Период, Контролирующие.Период) КАК период,
//	                      |	СУММА(ЕСТЬNULL(ВТ_Итоговая.Остаток, 0)) КАК Остаток,
//	                      |	ЕСТЬNULL(ВТ_Итоговая.ЦФО, Контролирующие.ЦФО) КАК ЦФО,
//	                      |	Контролирующие.СтатьяОборотов,
//	                      |	Контролирующие.Контролирующая,
//	                      |	ЕСТЬNULL(ВТ_Итоговая.Объект, Контролирующие.Аналитика_2) КАК объект,
//	                      |	Контролирующие.Сценарий,
//	                      |	ЕСТЬNULL(ВТ_Итоговая.проект, Контролирующие.Проект) КАК Проект
//	                      |ИЗ
//	                      |	Контролирующие КАК Контролирующие
//	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
//	                      |		ПО Контролирующие.Контролирующая = ВТ_Итоговая.СтатьяОборотов
//	                      |			И Контролирующие.ЦФО = ВТ_Итоговая.ЦФО
//	                      |			И Контролирующие.Период = ВТ_Итоговая.Период
//	                      |			И Контролирующие.Аналитика_2 = ВТ_Итоговая.Объект
//	                      |			И Контролирующие.Проект = ВТ_Итоговая.проект
//	                      |
//	                      |СГРУППИРОВАТЬ ПО
//	                      |	Контролирующие.СтатьяОборотов,
//	                      |	Контролирующие.Контролирующая,
//	                      |	ЕСТЬNULL(ВТ_Итоговая.ЦФО, Контролирующие.ЦФО),
//	                      |	ЕСТЬNULL(ВТ_Итоговая.Период, Контролирующие.Период),
//	                      |	ЕСТЬNULL(ВТ_Итоговая.Объект, Контролирующие.Аналитика_2),
//	                      |	Контролирующие.Сценарий,
//	                      |	ЕСТЬNULL(ВТ_Итоговая.проект, Контролирующие.Проект)");
//						  
//						           	
//	Запрос.УстановитьПараметр("ТабЧасть", ТабЧасть);
//	Запрос.УстановитьПараметр("СписокОбъектов",СписокОбъектов);
//	Запрос.УстановитьПараметр("СписокЦФО",СписокЦФО);
//	Запрос.УстановитьПараметр("СписокСтатей",СписокСтатей);
//	Запрос.УстановитьПараметр("Сценарий",Сценарий);
//	Запрос.УстановитьПараметр("СценарийКонтролируемый",СценарийКонтролируемый);
//	Запрос.УстановитьПараметр("МинПериод",МинПериод);
//	//Запрос.УстановитьПараметр("Дата",Ссылка.Дата);
//	//+Сенин С.В. 06.10.16 №2680
//	//Запрос.УстановитьПараметр("Дата",ТекущаяДатаСеанса());//БИТ АКриштопов №2483
//	Запрос.УстановитьПараметр("Дата",МинПериод);
//	//-Сенин С.В. 06.10.16 №2680
//	
//	//{ bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
//	//+Сенин С.В. 06.10.16 №2657,2669
//	//Объект + Проект + Функция/ЦФО + Статья оборотов + № заявки
//	Если 	ТипЗнч(ссылка) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") 
//		и (ссылка.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт")) 
//		Тогда
//		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Аналитика_2 В (&СписокОбъектов)","И Аналитика_1 = &Аналитика_1 И Аналитика_2 В (&СписокОбъектов)");
//		
//		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Контролирующие.Период = ВТ_Итоговая.Период","");
//		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ВТ_Итоговая.Период","ДатаВремя(1,1,1,0,0,0)");
//		Запрос.Текст = СтрЗаменить(Запрос.Текст,"НАЧАЛОПЕРИОДА(ТабЧасть.Период, ГОД)","ДатаВремя(1,1,1,0,0,0)");
//		
//		Запрос.УстановитьПараметр("Аналитика_1", ссылка.бит_БК_НомерЗаявки);
//	ИначеЕсли ТипЗнч(ссылка.ссылка) = Тип("ДокументСсылка.бит_БюджетнаяОперация") 
//		и ТипЗнч(ссылка.НомерЗаявки) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") 
//		и Ссылка.НомерЗаявки.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт")
//		Тогда
//		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Аналитика_2 В (&СписокОбъектов)","И Аналитика_1 = &Аналитика_1 И Аналитика_2 В (&СписокОбъектов)");
//		Запрос.УстановитьПараметр("Аналитика_1", Ссылка.НомерЗаявки.бит_БК_НомерЗаявки);
//	КонецЕсли; 
//	//-Сенин С.В. 06.10.16 №2657,2669
//	//} bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
//	Запрос.УстановитьПараметр("Ссылка",Ссылка);

//	// БИТ_YK_к
//	
//	//{ bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
//	//Код является изменением, но не помечен Сениным (судя по коду - необходим)
//	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
//	//} bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
//	 
//	Возврат Запрос.Выполнить().Выгрузить();
//		
//КонецФункции
//}ИсходныйКод
//Не актуальный код после запуска нового движка
//} bit_SVKushnirenko 21.02.2017 #2657
// - БИТ AMerkulov 2015-12-28

#Область ДинамическоеОпределениеАналитикКонтроля

//bit_SVKushnirenko 16.12.2016 #2657
//Возвращает из регистра "Настройки БК (БИТ)" установки использования аналитик бюджетного контроля для универсального алгоритма построения запроса
//парВсеПериодыМесяц - указывает на то, что все настройки периода, будут сброшены в значение "месяц"
//Возврат:
//Структура: (ключ = идентификатор имени сценария), где каждому сценарию, соответствует список значений с измерениями бюджетного контроля
Функция СценариПланированияНастройкиВыбораСумм(парВсеПериодыМесяц = Ложь) Экспорт
	
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВложенныйЗапрос.Сценарий,
	                |	ВложенныйЗапрос.Сценарий.ИмяПредопределенныхДанных как ИмяМетаданных
	                |ИЗ
	                |	(ВЫБРАТЬ
	                |		ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК Сценарий
	                |	ИЗ
	                |		РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	                |	ГДЕ
	                |		бит_БК_НастройкиБК.Группа = ""Контроль бюджета"") КАК ВложенныйЗапрос";
	
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
	
	пРезультат = Новый Структура();
	
	Для каждого пСтрокаРез Из пТЗРез Цикл
		
		пРезультат.Вставить(пСтрокаРез.ИмяМетаданных, бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контроль бюджета", пСтрокаРез.Сценарий, Новый СписокЗначений()));
	КонецЦикла;
	
	Если парВсеПериодыМесяц Тогда
		
		Для каждого пСтрокаНастройки Из пРезультат Цикл //выбираем все сценарии
			
			Для каждого пЭлементЗначения Из пСтрокаНастройки.Значение Цикл //по строкам настройки ключевых аналитик
			
				Если пЭлементЗначения.Значение = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодГод  или
					пЭлементЗначения.Значение =  Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодВсе
					Тогда
					
					пЭлементЗначения.Значение  = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодМесяц;
				КонецЕсли;
			КонецЦикла; //по строке настройки ключевых аналитик сценария
		КонецЦикла; //по сценариям
	КонецЕсли; //Все периоды = месяц

	Возврат пРезультат;
КонецФункции // СценариПланированияНастройкиВыбораСумм()

//bit_SVKushnirenko 11.01.2017 #2669
//Возвращает из регистра "Настройки БК (БИТ)" установки использования аналитик бюджетного контроля для универсального алгоритма построения запроса
//Возврат:
//Соответствие: (ключ = сценарий), где каждому сценарию, соответствует список значений с измерениями бюджетного контроля
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-06 (#3046)
//Функция СоответствиеНастройкиКлючевыхАналитикСценарию()
//Заменено на:
Функция СоответствиеНастройкиКлючевыхАналитикСценарию() Экспорт 
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-06 (#3046)
	
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВложенныйЗапрос.Сценарий
	                |ИЗ
	                |	(ВЫБРАТЬ
	                |		ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК Сценарий
	                |	ИЗ
	                |		РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	                |	ГДЕ
	                |		бит_БК_НастройкиБК.Группа = ""Контроль бюджета"") КАК ВложенныйЗапрос";
	
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
	
	пРезультат = Новый Соответствие();
	
	Для каждого пСтрокаРез Из пТЗРез Цикл
		
		пРезультат.Вставить(пСтрокаРез.Сценарий, бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Контроль бюджета", пСтрокаРез.Сценарий, Новый СписокЗначений()));
	КонецЦикла;
	 
	Возврат пРезультат;
КонецФункции // СоответствиеНастройкиКлючевыхАналитикСценарию()

//bit_SVKushnirenko 16.12.2016 #2657
//Выбирает настройку периода в данных динамической настройки
// Параметры:
//парДанныеНастройки - список значений с данными всех настроек отборов из данных настройки в регистре "Настройки БК (БИТ)"
//Возврат:
//Значение настройки типа Перечисления.бит_БК_ДопИзмеренияКонтроля. Пустых значений и неопределено не содержит (всегда значащее).
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-15 (#3232)
//Функция ПолучитьНастройкуПериода(парДанныеНастройки)
//Заменено на:
Функция ПолучитьНастройкуПериода(парДанныеНастройки) Экспорт
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-15 (#3232)


		пТипПериода = Неопределено;
		Для каждого пВидОтбораНастройки Из парДанныеНастройки Цикл
		
			пЗначениеСписка = пВидОтбораНастройки.Значение;
			Если пЗначениеСписка = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодВсе ИЛИ
				пЗначениеСписка = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодГод ИЛИ
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-24 (#3393)
				пЗначениеСписка = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодПолугодие ИЛИ
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-24 (#3393)
				пЗначениеСписка = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодМесяц Тогда
				
				пТипПериода = пЗначениеСписка;
			КонецЕсли;
		КонецЦикла; 
		
		Возврат ?(пТипПериода = Неопределено, Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодВсе, пТипПериода); //по умолчанию - все периоды, если не указано иное
КонецФункции // ПолучитьНастройкуПериода()

//bit_SVKushnirenko 16.12.2016 #2657
//Возвращает значение, которое становится выражением для замещения текста запроса
// Параметры:
//парНайстрокиОтбораДляСценариев - структура, где ключ = идентификатору предопределенного сценария, значение = список значений,
//в котором перечислены установленные в настройках измерения контроля
//парПараметрСценарийТаблица - строка с выражением для значения сценария в таблице запроса
//парПараметрПериодТаблица - строка с выражением значения периода в таблице запроса
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-18 (#2867)
//Функция ПолучитьВыражениеДляПериодов(парНайстрокиОтбораДляСценариев, парПараметрСценарийТаблица = "ТабЧасть.Сценарий", парПараметрПериодТаблица = "ТабЧасть.Период")
//Заменено на: добавил возможность вызова извне
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-15 (#3232)
//Функция ПолучитьВыражениеДляПериодов(парНайстрокиОтбораДляСценариев, парПараметрСценарийТаблица = "ТабЧасть.Сценарий", парПараметрПериодТаблица = "ТабЧасть.Период") Экспорт
//Заменено на:
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
//Функция ПолучитьВыражениеДляПериодов(парНайстрокиОтбораДляСценариев, парПараметрСценарийТаблица = "ТабЧасть.Сценарий", парПараметрПериодТаблица = "ТабЧасть.Период", парТекстУсловийГод = "") Экспорт
//Заменено на:
Функция ПолучитьВыражениеДляПериодов(парНайстрокиОтбораДляСценариев, парПараметрСценарийТаблица = "ТабЧасть.Сценарий", парПараметрПериодТаблица = "ТабЧасть.Период", парТекстУсловийГод = "", парТекстНарастающегоИтога = "") Экспорт
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-15 (#3232)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-18 (#2867)

	//пРезультат = "";
	//Для каждого пНастройка Из парНайстрокиОтбораДляСценариев Цикл
	//	
	//	пРезультат = пРезультат + ?(пРезультат = "",  "ВЫБОР КОГДА ", "КОГДА ") + парПараметрСценарийТаблица + " = " + 
	//	"Значение(Справочник.СценарииПланирования." + пНастройка.Ключ + ") ТОГДА " + Символы.ПС;
	//	
	//	пТипНастройкиПериода = ПолучитьНастройкуПериода(пНастройка.Значение);
	//	
	//	Если пТипНастройкиПериода = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодВсе Тогда
	//		
	//		пРезультат = пРезультат +  "ДАТАВРЕМЯ(0001,01,01,0,0,0)" + Символы.ПС;
	//	ИначеЕсли пТипНастройкиПериода = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодГод Тогда
	//		
	//		пРезультат = пРезультат +  "НАЧАЛОПЕРИОДА(" + парПараметрПериодТаблица + ", ГОД)" + Символы.ПС;
	//	ИначеЕсли пТипНастройкиПериода = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодМесяц Тогда
	//		
	//		пРезультат = пРезультат +  "НАЧАЛОПЕРИОДА(" + парПараметрПериодТаблица + ", МЕСЯЦ)" + Символы.ПС;
	//	КонецЕсли;
	//КонецЦикла;
	//
	//пРезультат = пРезультат +  "ИНАЧЕ"+ Символы.ПС + "		ДАТАВРЕМЯ(0001,01,01,0,0,0)" + Символы.ПС; //если период не указан = любой период = "Период(любой)"
	
	//Альтернативное построение условия (компактный SQL-код)
	пРезультат = "";
	пМассивПериодГод = Новый Массив();
	пМассивПериодМесяц = Новый Массив();
	пМассивПериодВсе = Новый Массив();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-18 (#3393)
	пМассивПериодПолугодие = Новый Массив;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-18 (#3393)
	
	//Набираем статистику: каким сценариям, какой период относится
	Для каждого пНастройка Из парНайстрокиОтбораДляСценариев Цикл
		
		пТипНастройкиПериода = ПолучитьНастройкуПериода(пНастройка.Значение);
		
		Если пТипНастройкиПериода = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодВсе Тогда
			
			пМассивПериодВсе.Добавить(пНастройка.Ключ);
		ИначеЕсли пТипНастройкиПериода = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодГод Тогда
			
			пМассивПериодГод.Добавить(пНастройка.Ключ);
		ИначеЕсли пТипНастройкиПериода = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодМесяц Тогда
			
			пМассивПериодМесяц.Добавить(пНастройка.Ключ);
			
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-18 (#3393)
		ИначеЕсли пТипНастройкиПериода = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодПолугодие Тогда
			
			пМассивПериодПолугодие.Добавить(пНастройка.Ключ);

		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-18 (#3393)	
		
		КонецЕсли;
	КонецЦикла;
	
	//Формируем текст запроса по группе значений и одному виду результата
	Если пМассивПериодГод.Количество() <>  0 Тогда  
		
		пЛокальнаяСтрокаУсловия = "";
		Для каждого пВидСценария Из пМассивПериодГод Цикл
			
			пЛокальнаяСтрокаУсловия = пЛокальнаяСтрокаУсловия + ?(пЛокальнаяСтрокаУсловия = "",  "", " ИЛИ " + Символы.ПС) + парПараметрСценарийТаблица + " = " + 
			"Значение(Справочник.СценарииПланирования." + пВидСценария + ")";
		КонецЦикла; 
		
		пРезультат = пРезультат + ?(пРезультат = "",  "ВЫБОР КОГДА ", "КОГДА ") + пЛокальнаяСтрокаУсловия + " ТОГДА " + Символы.ПС;
		пРезультат = пРезультат +  "		НАЧАЛОПЕРИОДА(" + парПараметрПериодТаблица + ", ГОД)" + Символы.ПС;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-15 (#3232)
	    парТекстУсловийГод =  "ВЫБОР КОГДА " + пЛокальнаяСтрокаУсловия + " ТОГДА 
							  |		ИСТИНА
							  |ИНАЧЕ
							  |		ЛОЖЬ
							  |КОНЕЦ";
	ИНАЧЕ
		парТекстУсловийГод = "ЛОЖЬ";
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-15 (#3232)
	КонецЕсли;
	 
	Если пМассивПериодМесяц.Количество() <>  0 Тогда  
		
		пЛокальнаяСтрокаУсловия = "";
		Для каждого пВидСценария Из пМассивПериодМесяц Цикл
			
			пЛокальнаяСтрокаУсловия = пЛокальнаяСтрокаУсловия + ?(пЛокальнаяСтрокаУсловия = "",  "", " ИЛИ " + Символы.ПС) + парПараметрСценарийТаблица + " = " + 
			"Значение(Справочник.СценарииПланирования." + пВидСценария + ")";
		КонецЦикла; 
		
		пРезультат = пРезультат + ?(пРезультат = "",  "ВЫБОР КОГДА ", "КОГДА ") + пЛокальнаяСтрокаУсловия + " ТОГДА " + Символы.ПС;
		пРезультат = пРезультат +  "		НАЧАЛОПЕРИОДА(" + парПараметрПериодТаблица + ", МЕСЯЦ)" + Символы.ПС;
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-18 (#3393)
	Если пМассивПериодПолугодие.Количество() <>  0 Тогда  
		
		пЛокальнаяСтрокаУсловия = "";
		Для каждого пВидСценария Из пМассивПериодПолугодие Цикл
			
			пЛокальнаяСтрокаУсловия = пЛокальнаяСтрокаУсловия + ?(пЛокальнаяСтрокаУсловия = "",  "", " ИЛИ " + Символы.ПС) + парПараметрСценарийТаблица + " = " + 
			"Значение(Справочник.СценарииПланирования." + пВидСценария + ")";
		КонецЦикла; 
		
		пРезультат = пРезультат + ?(пРезультат = "",  "ВЫБОР КОГДА ", "КОГДА ") + пЛокальнаяСтрокаУсловия + " ТОГДА " + Символы.ПС;
		пРезультат = пРезультат +  "		НАЧАЛОПЕРИОДА(" + парПараметрПериодТаблица + ", ПОЛУГОДИЕ)" + Символы.ПС;
		
		парТекстНарастающегоИтога = парТекстНарастающегоИтога + ?(ПустаяСтрока(парТекстНарастающегоИтога), "ВЫБОР КОГДА ", "КОГДА ") + пЛокальнаяСтрокаУсловия + " ТОГДА " + Символы.ПС;
		парТекстНарастающегоИтога = парТекстНарастающегоИтога +  "		Истина" + Символы.ПС;
		
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-18 (#3393)	
	 
	Если пМассивПериодВсе.Количество() <>  0 Тогда  
		
		пЛокальнаяСтрокаУсловия = "";
		Для каждого пВидСценария Из пМассивПериодВсе Цикл
			
			пЛокальнаяСтрокаУсловия = пЛокальнаяСтрокаУсловия + ?(пЛокальнаяСтрокаУсловия = "",  "", " ИЛИ " + Символы.ПС) + парПараметрСценарийТаблица + " = " + 
			"Значение(Справочник.СценарииПланирования." + пВидСценария + ")";
		КонецЦикла; 
		
		пРезультат = пРезультат + ?(пРезультат = "",  "ВЫБОР КОГДА ", "КОГДА ") + пЛокальнаяСтрокаУсловия + " ТОГДА " + Символы.ПС;
		пРезультат = пРезультат +  "		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)" + Символы.ПС;
	КонецЕсли;
	
	пРезультат = пРезультат +  "ИНАЧЕ"+ Символы.ПС + "		ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)" + Символы.ПС; //если период не указан = любой период = "Период(любой)"
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	Если Не ПустаяСтрока(парТекстНарастающегоИтога) Тогда 
		парТекстНарастающегоИтога = парТекстНарастающегоИтога + "ИНАЧЕ
									|	ЛОЖЬ
									|КОНЕЦ"
	Иначе
		парТекстНарастающегоИтога = "ЛОЖЬ";									
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	
	Возврат пРезультат + "КОНЕЦ";
КонецФункции // ПолучитьВыражениеДляПериодов()

//bit_SVKushnirenko 16.12.2016 #2657
//Выявляет наличие значения настройки по значению
// Параметры:
//парДанныеНастройки - список значений с данными всех настроек для сценария из данных настройки в регистре "Настройки БК (БИТ)"
//Возврат:
//ИСТИНА - если настройка включена в состав данных настройки по сценарию
//ЛОЖЬ - если настройка НЕ включена в состав данных настройки по сценарию
Функция ЕстьНастройкаПоЗначению(парДанныеНастройки, парИскомоеЗначение)

	Если парДанныеНастройки.НайтиПоЗначению(парИскомоеЗначение) = Неопределено  Тогда
		
		Возврат Ложь;
	Иначе
		
		Возврат Истина;
	КонецЕсли;
КонецФункции // ЕстьНастройкаПоЗначению()

//bit_SVKushnirenko 16.12.2016 #2657
//Возвращает значение, которое становится выражением для замещения текста запроса
// Параметры:
//парНайстрокиОтбораДляСценариев - структура, где ключ = идентификатору предопределенного сценария, значение = список значений,
//в котором перечислены установленные в настройках измерения контроля
//парПараметрСценарийТаблица - строка с выражением для значения сценария в таблице запроса
//парПараметрСтатьяТаблица - строка с выражением для значения колонки данных  в таблице запроса
//парЗначениеПоУмолчаниюВыражение - строка выражения для получения значения по умолчанию в выражении запроса ЗНАЧЕНИЕ(ххх)
//парПеречислениеКонтроля - значение перечисления видов контроля, которое которое включается в список настройки включения этого показателя в выборку, например: Перечисления.бит_БК_ДопИзмеренияКонтроля.СтатьяОборотов
//парВариантКлючаДляБудущихИзменений - значение ключа, для которого в выражение будет вставлен шаблон "%ВАРИАНТ", необходим для оформления вариации текста запроса поАналитика_1 (№ заявки) в данных табличной части
Функция ПолучитьВыражениеДляКолонкиЗапроса(парНайстрокиОтбораДляСценариев, 
	парПараметрСценарийТаблица = "ТабЧасть.Сценарий", 
	парПараметрСтатьяТаблица = "ТабЧасть.СтатьяОборотов", 
	парЗначениеПоУмолчаниюВыражение = "ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)",
	парПеречислениеКонтроля,
	парВариантКлючаДляБудущихИзменений = "")
	
	//пРезультат = "";
	//Для каждого пНастройка Из парНайстрокиОтбораДляСценариев Цикл
	//	
	//	пРезультат = пРезультат + ?(пРезультат = "",  "ВЫБОР КОГДА ", "КОГДА ") + парПараметрСценарийТаблица + " = " + 
	//	"Значение(Справочник.СценарииПланирования." + пНастройка.Ключ + ") ТОГДА " + Символы.ПС;
	//	
	//	Если Врег(пНастройка.Ключ) = Врег(парВариантКлючаДляБудущихИзменений) Тогда
	//		
	//		пРезультат = пРезультат +  "%ВАРИАНТ" + Символы.ПС;
	//	Иначе	
	//		Если ЕстьНастройкаПоЗначению(пНастройка.Значение, парПеречислениеКонтроля)  Тогда
	//			
	//			пРезультат = пРезультат +  парПараметрСтатьяТаблица + Символы.ПС;
	//		Иначе
	//			
	//			пРезультат = пРезультат +  парЗначениеПоУмолчаниюВыражение + Символы.ПС;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;
	// пРезультат = пРезультат + "ИНАЧЕ" + Символы.ПС + парЗначениеПоУмолчаниюВыражение + Символы.ПС;
	 
	 //Оптимизированное построение кода SQL
	пРезультат = "";
	пМассивЕсть = Новый Массив();
	пМассивВариант = Новый Массив();
	
	Для каждого пНастройка Из парНайстрокиОтбораДляСценариев Цикл
		
		Если Врег(пНастройка.Ключ) = Врег(парВариантКлючаДляБудущихИзменений) Тогда
			
			пМассивВариант.Добавить(пНастройка.Ключ);
		ИначеЕсли ЕстьНастройкаПоЗначению(пНастройка.Значение, парПеречислениеКонтроля)  Тогда
				
			пМассивЕсть.Добавить(пНастройка.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	//Формируем текст запроса по группе значений и одному виду результата
	Если пМассивЕсть.Количество() <>  0 Тогда  
		
		пЛокальнаяСтрокаУсловия = "";
		Для каждого пВидСценария Из пМассивЕсть Цикл
			
			пЛокальнаяСтрокаУсловия = пЛокальнаяСтрокаУсловия + ?(пЛокальнаяСтрокаУсловия = "",  "", " ИЛИ " + Символы.ПС) + парПараметрСценарийТаблица + " = " + 
			"Значение(Справочник.СценарииПланирования." + пВидСценария + ")";
		КонецЦикла; 

		пРезультат = пРезультат + ?(пРезультат = "",  "ВЫБОР КОГДА ", "КОГДА ") + пЛокальнаяСтрокаУсловия + " ТОГДА " + Символы.ПС;
		пРезультат = пРезультат +  "		" + парПараметрСтатьяТаблица + Символы.ПС;
	КонецЕсли;
	
	Если пМассивВариант.Количество() <>  0 Тогда  
		
		пЛокальнаяСтрокаУсловия = "";
		Для каждого пВидСценария Из пМассивВариант Цикл
			
			пЛокальнаяСтрокаУсловия = пЛокальнаяСтрокаУсловия + ?(пЛокальнаяСтрокаУсловия = "",  "", " ИЛИ " + Символы.ПС) + парПараметрСценарийТаблица + " = " + 
			"Значение(Справочник.СценарииПланирования." + пВидСценария + ")";
		КонецЦикла; 

		пРезультат = пРезультат + ?(пРезультат = "",  "ВЫБОР КОГДА ", "КОГДА ") + пЛокальнаяСтрокаУсловия + " ТОГДА " + Символы.ПС;
		пРезультат = пРезультат +  "		%ВАРИАНТ" + Символы.ПС;
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-05 (#3045)
	Если ПустаяСтрока(пРезультат) Тогда 
		Возврат парЗначениеПоУмолчаниюВыражение;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-05 (#3045)
	
	пРезультат = пРезультат + "ИНАЧЕ" + Символы.ПС + парЗначениеПоУмолчаниюВыражение + Символы.ПС;

	Возврат пРезультат + "КОНЕЦ";
	
КонецФункции // ПолучитьВыражениеДляКолонкиЗапроса()
 
//bit_SVKushnirenko 22.12.2016 #2669
// Возвращает прототип запроса для выполнения бюджетного контроля при проведении документов
Функция ТекстЗапросаБюджетногоКонтроля()
	
	Возврат
	
	//{ bit_SVKushnirenko 03.04.2017 #2816
	//ИсходныйКод{
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК Сценарий
	//|ПОМЕСТИТЬ СценарииБКОК
	//|ИЗ
	//|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	//|ГДЕ
	//|	бит_БК_НастройкиБК.Группа = ""Контроль бюджета""
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	""ТЧ_СтатьяОборотов"" КАК СтатьяОборотов,
	//|	""ТЧ_Период"" КАК Период,
	//|	""ТЧ_ЦФО"" КАК ЦФО,
	//|	""ТЧ_Объект"" КАК Аналитика_2,
	//|	ВЫРАЗИТЬ(ТабЧасть.Сценарий КАК Справочник.СценарииПланирования) КАК Сценарий,
	//|	""ТЧ_Проект"" КАК Проект,
	//|	""ТЧ_Аналитика_1"" КАК Аналитика_1,
	//|	ТабЧасть.Период КАК ИсхПериод,
	//|	ТабЧасть.Сумма КАК СуммаТЧ,
	//|	ТабЧасть.Аналитика_1 КАК ИсхАналитика_1,
	//|	ТабЧасть.Аналитика_2 КАК ИсхАналитика_2,
	//|	ТабЧасть.ЦФО КАК ИсхЦФО,
	//|	ТабЧасть.Проект КАК ИсхПроект
	//|ПОМЕСТИТЬ ТабЧасть
	//|ИЗ
	//|	&ТабЧасть КАК ТабЧасть
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ТабЧасть.СтатьяОборотов,
	//|	МАКСИМУМ(бит_БК_КонтролирующиеСтатьиОборотов.Период) КАК ПериодКС,
	//|	ТабЧасть.ИсхПериод
	//|ПОМЕСТИТЬ Тч_Контр_Периоды
	//|ИЗ
	//|	ТабЧасть КАК ТабЧасть
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов КАК бит_БК_КонтролирующиеСтатьиОборотов
	//|		ПО ТабЧасть.СтатьяОборотов = бит_БК_КонтролирующиеСтатьиОборотов.КонтролируемаяСтатья
	//|			И ТабЧасть.ИсхПериод >= бит_БК_КонтролирующиеСтатьиОборотов.Период
	//|ГДЕ
	//|	бит_БК_КонтролирующиеСтатьиОборотов.АктивностьСтроки
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ТабЧасть.СтатьяОборотов,
	//|	ТабЧасть.ИсхПериод
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	Тч_Контр_Периоды.СтатьяОборотов,
	//|	бит_БК_КонтролирующиеСтатьиОборотов.КонтролирующаяСтатья,
	//|	Тч_Контр_Периоды.ИсхПериод
	//|ПОМЕСТИТЬ Тч_Контр_КС
	//|ИЗ
	//|	Тч_Контр_Периоды КАК Тч_Контр_Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов КАК бит_БК_КонтролирующиеСтатьиОборотов
	//|		ПО Тч_Контр_Периоды.СтатьяОборотов = бит_БК_КонтролирующиеСтатьиОборотов.КонтролируемаяСтатья
	//|			И Тч_Контр_Периоды.ПериодКС = бит_БК_КонтролирующиеСтатьиОборотов.Период
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВЫБОР
	//|		КОГДА ТабличнаяЧасть.Сценарий.бит_БК_ИспользоватьКонтроллирующиеСтатьи
	//|			ТОГДА ЕСТЬNULL(Тч_Контр_КС.КонтролирующаяСтатья, ТабличнаяЧасть.СтатьяОборотов)
	//|		ИНАЧЕ ТабличнаяЧасть.СтатьяОборотов
	//|	КОНЕЦ КАК СтатьяОборотов,
	//|	ТабличнаяЧасть.Период,
	//|	ТабличнаяЧасть.ЦФО,
	//|	ТабличнаяЧасть.Аналитика_2,
	//|	ТабличнаяЧасть.Сценарий,
	//|	ТабличнаяЧасть.Проект,
	//|	ТабличнаяЧасть.Аналитика_1,
	//|	ТабличнаяЧасть.ИсхПериод,
	//|	ТабличнаяЧасть.СуммаТЧ,
	//|	ТабличнаяЧасть.ИсхАналитика_1,
	//|	ТабличнаяЧасть.ИсхАналитика_2,
	//|	ТабличнаяЧасть.ИсхЦФО,
	//|	ТабличнаяЧасть.ИсхПроект,
	//|	ТабличнаяЧасть.СтатьяОборотов КАК ИсхСтатьяОборотов
	//|ПОМЕСТИТЬ ТабличнаяЧасть
	//|ИЗ
	//|	ТабЧасть КАК ТабличнаяЧасть
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Тч_Контр_КС КАК Тч_Контр_КС
	//|		ПО ТабличнаяЧасть.СтатьяОборотов = Тч_Контр_КС.СтатьяОборотов
	//|			И ТабличнаяЧасть.ИсхПериод = Тч_Контр_КС.ИсхПериод
	//|ГДЕ
	//|	ТабличнаяЧасть.Сценарий В
	//|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|				СценарииБКОК.Сценарий
	//|			ИЗ
	//|				СценарииБКОК)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	СуммыПоКлАналит.СтатьяОборотов,
	//|	СуммыПоКлАналит.Период,
	//|	СуммыПоКлАналит.Сценарий,
	//|	СуммыПоКлАналит.Проект,
	//|	СуммыПоКлАналит.Аналитика_2,
	//|	СуммыПоКлАналит.ЦФО,
	//|	СуммыПоКлАналит.Аналитика_1,
	//|	СуммыПоКлАналит.СуммаТЧ
	//|ПОМЕСТИТЬ Контролирующие
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		ТабличнаяЧасть.СтатьяОборотов КАК СтатьяОборотов,
	//|		ТабличнаяЧасть.Период КАК Период,
	//|		ТабличнаяЧасть.ЦФО КАК ЦФО,
	//|		ТабличнаяЧасть.Аналитика_2 КАК Аналитика_2,
	//|		ТабличнаяЧасть.Сценарий КАК Сценарий,
	//|		ТабличнаяЧасть.Проект КАК Проект,
	//|		ТабличнаяЧасть.Аналитика_1 КАК Аналитика_1,
	//|		СУММА(ТабличнаяЧасть.СуммаТЧ) КАК СуммаТЧ
	//|	ИЗ
	//|		ТабличнаяЧасть КАК ТабличнаяЧасть
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		ТабличнаяЧасть.Период,
	//|		ТабличнаяЧасть.ЦФО,
	//|		ТабличнаяЧасть.Аналитика_2,
	//|		ТабличнаяЧасть.Сценарий,
	//|		ТабличнаяЧасть.Проект,
	//|		ТабличнаяЧасть.Аналитика_1,
	//|		ТабличнаяЧасть.СтатьяОборотов) КАК СуммыПоКлАналит
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот,
	//|	ВЫРАЗИТЬ(&прзРГ_Период КАК ДАТА) КАК Период,
	//|	ВЫРАЗИТЬ(&прзРГ_ЦФО КАК Справочник.Подразделения) КАК ЦФО,
	//|	ВЫРАЗИТЬ(&прзРГ_СтатьяОборотов КАК Справочник.бит_СтатьиОборотов) КАК СтатьяОборотов,
	//|	ВЫРАЗИТЬ(&прзРГ_Объект КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2,
	//|	ВЫРАЗИТЬ(&прзРГ_Проект КАК Справочник.Проекты) КАК Проект,
	//|	ВЫРАЗИТЬ(&прзРГ_Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый КАК СценарийКонтролируемый,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий КАК СценарийКонтроллирующий,
	//|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ) КАК ПериодПлан
	//|ПОМЕСТИТЬ ВТ_Регистр
	//|ИЗ
	//|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	//|			,
	//|			,
	//|			Месяц,
	//|			Сценарий В (&Сценарий)
	//|				И СценарийКонтролируемый В
	//|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|						Контролирующие.Сценарий
	//|					ИЗ
	//|						Контролирующие)
	//|				И СтатьяОборотов В
	//|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|						Контролирующие.СтатьяОборотов
	//|					ИЗ
	//|						Контролирующие)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	-бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот,
	//|	-бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот,
	//|	ВЫРАЗИТЬ(&прзРГ_Период КАК ДАТА),
	//|	ВЫРАЗИТЬ(&прзРГ_ЦФО КАК Справочник.Подразделения),
	//|	ВЫРАЗИТЬ(&прзРГ_СтатьяОборотов КАК Справочник.бит_СтатьиОборотов),
	//|	ВЫРАЗИТЬ(&прзРГ_Объект КАК Справочник.ОбъектыСтроительства),
	//|	ВЫРАЗИТЬ(&прзРГ_Проект КАК Справочник.Проекты),
	//|	ВЫРАЗИТЬ(&прзРГ_Аналитика_1 КАК Документ.бит_ФормаВводаБюджета),
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий,
	//|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ)
	//|ИЗ
	//|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(, , Регистратор, ) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	//|ГДЕ
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор = &Ссылка
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	ПериодПлан,
	//|	Аналитика_1,
	//|	Аналитика_2,
	//|	СтатьяОборотов,
	//|	Период,
	//|	ЦФО,
	//|	Проект,
	//|	СценарийКонтролируемый,
	//|	СценарийКонтроллирующий
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_Итоговая.Период КАК Период,
	//|	ВТ_Итоговая.Аналитика_2 КАК Аналитика_2,
	//|	СУММА(ВТ_Итоговая.СуммаСценарийКонтрольОборот - ВТ_Итоговая.СуммаСценарийИсполнениеОборот) КАК Остаток,
	//|	ВТ_Итоговая.Проект КАК Проект,
	//|	ВТ_Итоговая.ЦФО КАК ЦФО,
	//|	ВТ_Итоговая.СтатьяОборотов КАК СтатьяОборотов,
	//|	ВТ_Итоговая.Аналитика_1 КАК Аналитика_1,
	//|	СУММА(ВТ_Итоговая.СуммаСценарийКонтрольОборот) КАК СуммаКонтроль,
	//|	ВТ_Итоговая.СценарийКонтролируемый,
	//|	ВТ_Итоговая.СценарийКонтроллирующий
	//|ПОМЕСТИТЬ ВТ_Итоговая
	//|ИЗ
	//|	ВТ_Регистр КАК ВТ_Итоговая
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_Итоговая.Период,
	//|	ВТ_Итоговая.Аналитика_2,
	//|	ВТ_Итоговая.Проект,
	//|	ВТ_Итоговая.ЦФО,
	//|	ВТ_Итоговая.СтатьяОборотов,
	//|	ВТ_Итоговая.Аналитика_1,
	//|	ВТ_Итоговая.СценарийКонтролируемый,
	//|	ВТ_Итоговая.СценарийКонтроллирующий
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	СтатьяОборотов,
	//|	Аналитика_1,
	//|	Проект,
	//|	Аналитика_2,
	//|	ЦФО,
	//|	Период
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Контролирующие.Период КАК Период,
	//|	ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) КАК Остаток,
	//|	Контролирующие.СтатьяОборотов,
	//|	Контролирующие.Сценарий,
	//|	Контролирующие.Проект КАК Проект,
	//|	Контролирующие.ЦФО КАК ЦФО,
	//|	Контролирующие.Аналитика_2 КАК Аналитика_2,
	//|	Контролирующие.Аналитика_1,
	//|	Контролирующие.СуммаТЧ КАК СуммаОперации,
	//|	ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ КАК СуммаПослеОперации,
	//|	ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) КАК СуммаДоОперации,
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ < 0
	//|			ТОГДА 1
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СверхБюджета,
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ < 0
	//|			ТОГДА -(ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК ИтогоСверхБюджетаПоКлАналитикам,
	//|	ЕСТЬNULL(ВТ_Итоговая.СуммаКонтроль, 0) КАК СуммаКонтроль,
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ > 0
	//|			ТОГДА 1
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК ЕстьОстатокБюджетаПослеОперацииБольшеНуля,
	//|	ВТ_Итоговая.СценарийКонтроллирующий
	//|ПОМЕСТИТЬ ОстаткиБКБезТЧ
	//|ИЗ
	//|	Контролирующие КАК Контролирующие
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
	//|		ПО Контролирующие.Период = ВТ_Итоговая.Период
	//|			И Контролирующие.Проект = ВТ_Итоговая.Проект
	//|			И Контролирующие.ЦФО = ВТ_Итоговая.ЦФО
	//|			И Контролирующие.СтатьяОборотов = ВТ_Итоговая.СтатьяОборотов
	//|			И Контролирующие.Аналитика_2 = ВТ_Итоговая.Аналитика_2
	//|			И Контролирующие.Аналитика_1 = ВТ_Итоговая.Аналитика_1
	//|			И Контролирующие.Сценарий = ВТ_Итоговая.СценарийКонтролируемый
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ТабличнаяЧасть.СтатьяОборотов,
	//|	ТабличнаяЧасть.Период,
	//|	ТабличнаяЧасть.ЦФО,
	//|	ТабличнаяЧасть.Аналитика_2,
	//|	ТабличнаяЧасть.Сценарий,
	//|	ТабличнаяЧасть.Проект,
	//|	ТабличнаяЧасть.Аналитика_1,
	//|	ТабличнаяЧасть.ИсхПериод,
	//|	ТабличнаяЧасть.ИсхАналитика_1,
	//|	ТабличнаяЧасть.ИсхАналитика_2,
	//|	ТабличнаяЧасть.ИсхЦФО,
	//|	ТабличнаяЧасть.ИсхПроект,
	//|	ТабличнаяЧасть.ИсхСтатьяОборотов
	//|ПОМЕСТИТЬ СвязКлАналитТЧ
	//|ИЗ
	//|	ТабличнаяЧасть КАК ТабличнаяЧасть
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	СвязКлАналитТЧ.Сценарий,
	//|	СвязКлАналитТЧ.Период,
	//|	СвязКлАналитТЧ.СтатьяОборотов КАК СтатьяОборотов,
	//|	СвязКлАналитТЧ.ЦФО,
	//|	СвязКлАналитТЧ.Проект,
	//|	СвязКлАналитТЧ.Аналитика_1,
	//|	СвязКлАналитТЧ.Аналитика_2,
	//|	СвязКлАналитТЧ.ИсхПериод,
	//|	СвязКлАналитТЧ.ИсхСтатьяОборотов,
	//|	СвязКлАналитТЧ.ИсхЦФО,
	//|	СвязКлАналитТЧ.ИсхПроект,
	//|	СвязКлАналитТЧ.ИсхАналитика_1,
	//|	СвязКлАналитТЧ.ИсхАналитика_2,
	//|	ОстаткиБКБезТЧ.СценарийКонтроллирующий,
	//|	ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаОперации, 0) КАК СуммаОперации,
	//|	ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаДоОперации, 0) КАК ОстатокДоОперации,
	//|	ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаПослеОперации, 0) КАК ОстатокПослеОперации,
	//|	ЕСТЬNULL(ОстаткиБКБезТЧ.СверхБюджета, 0) КАК СверхБюджетаПризнак,
	//|	ЕСТЬNULL(ОстаткиБКБезТЧ.ИтогоСверхБюджетаПоКлАналитикам, 0) КАК СверхБюджетаПоКлючевым,
	//|	ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаКонтроль, 0) КАК СуммаКонтроль,
	//|	взВсегоВсерхБюджетаПоКлАнлт.ПолнаяСуммаСверхБюджетаПоВсемСтрокам КАК ПолнаяСуммаСверхБюджетаПоВсемСтрокам,
	//|	взВсегоВсерхБюджетаПоКлАнлт.ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам КАК ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам,
	//|	ЕСТЬNULL(ОстаткиБКБезТЧ.ЕстьОстатокБюджетаПослеОперацииБольшеНуля, 0) КАК ЕстьОстатокБюджетаПослеОперацииБольшеНуля
	//|ИЗ
	//|	СвязКлАналитТЧ КАК СвязКлАналитТЧ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиБКБезТЧ КАК ОстаткиБКБезТЧ
	//|		ПО СвязКлАналитТЧ.СтатьяОборотов = ОстаткиБКБезТЧ.СтатьяОборотов
	//|			И СвязКлАналитТЧ.Период = ОстаткиБКБезТЧ.Период
	//|			И СвязКлАналитТЧ.ЦФО = ОстаткиБКБезТЧ.ЦФО
	//|			И СвязКлАналитТЧ.Аналитика_2 = ОстаткиБКБезТЧ.Аналитика_2
	//|			И СвязКлАналитТЧ.Сценарий = ОстаткиБКБезТЧ.Сценарий
	//|			И СвязКлАналитТЧ.Проект = ОстаткиБКБезТЧ.Проект
	//|			И СвязКлАналитТЧ.Аналитика_1 = ОстаткиБКБезТЧ.Аналитика_1,
	//|	(ВЫБРАТЬ
	//|		СУММА(ОстаткиБКБезТЧ.ИтогоСверхБюджетаПоКлАналитикам) КАК ПолнаяСуммаСверхБюджетаПоВсемСтрокам,
	//|		СУММА(ОстаткиБКБезТЧ.СуммаПослеОперации) КАК ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам
	//|	ИЗ
	//|		ОстаткиБКБезТЧ КАК ОстаткиБКБезТЧ) КАК взВсегоВсерхБюджетаПоКлАнлт
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ СценарииБКОК
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ТабЧасть
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Тч_Контр_Периоды
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Тч_Контр_КС
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ТабличнаяЧасть
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Контролирующие
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТ_Регистр
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТ_Итоговая
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ОстаткиБКБезТЧ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ СвязКлАналитТЧ";
	
	//выполнены привязки к "соответствия аналитик"
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-11-19 (#3393)	
	//"ВЫБРАТЬ
	//|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК Сценарий,
	//|	МАКСИМУМ(ВЫРАЗИТЬ(бит_СоответствияАналитик.ЛеваяАналитика_1 КАК Справочник.СценарииПланирования)) КАК СценарийКонтролирующий
	//|ПОМЕСТИТЬ СценарииБКОК
	//|ИЗ
	//|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
	//|		ПО ((ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)) = (ВЫРАЗИТЬ(бит_СоответствияАналитик.ПраваяАналитика_1 КАК Справочник.СценарииПланирования)))
	//|ГДЕ
	//|	бит_БК_НастройкиБК.Группа = ""Контроль бюджета""
	//|	И бит_СоответствияАналитик.ВидСоответствия.Код = ""бит_БК_СценарийВСценарийКонтролируемый""
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)
	//|;
	//|
	//Заменено на:
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(КонтрольБюджета_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК Сценарий,
	|	МАКСИМУМ(ВЫРАЗИТЬ(КонтролирующийСценарий_НастройкиБК.ЗначениеСсылка КАК Справочник.СценарииПланирования)) КАК СценарийКонтролирующий
	|ПОМЕСТИТЬ СценарииБКОК
	|ИЗ
	|	РегистрСведений.бит_БК_НастройкиБК КАК КонтрольБюджета_НастройкиБК
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_НастройкиБК КАК КонтролирующийСценарий_НастройкиБК
	|		ПО ((ВЫРАЗИТЬ(КонтрольБюджета_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)) = (ВЫРАЗИТЬ(КонтролирующийСценарий_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)))
	|ГДЕ
	|	КонтрольБюджета_НастройкиБК.Группа = ""Контроль бюджета""
	|	И КонтролирующийСценарий_НастройкиБК.Группа = ""Контролирующий сценарий""
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(КонтрольБюджета_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сценарий,
	|	СценарийКонтролирующий
	|;
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-11-19 (#3393)
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ТЧ_СтатьяОборотов"" КАК СтатьяОборотов,
	|	""ТЧ_Период"" КАК Период,
	|	""ТЧ_ЦФО"" КАК ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	""ТЧ_Контрагент"" КАК Контрагент,
	|	""ТЧ_ДоговорКонтрагента"" КАК ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	""ТЧ_Объект"" КАК Аналитика_2,
	|	ВЫРАЗИТЬ(ТабЧасть.Сценарий КАК Справочник.СценарииПланирования) КАК Сценарий,
	|	""ТЧ_Проект"" КАК Проект,
	|	""ТЧ_Аналитика_1"" КАК Аналитика_1,
	|	ТабЧасть.Период КАК ИсхПериод,
	|	ТабЧасть.Сумма КАК СуммаТЧ,
	|	ТабЧасть.Аналитика_1 КАК ИсхАналитика_1,
	|	ТабЧасть.Аналитика_2 КАК ИсхАналитика_2,
	|	ТабЧасть.ЦФО КАК ИсхЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	|	""ТЧ_РассчитыватьНарастающимИтогом"" КАК  РассчитыватьНарастающимИтогом,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	|	ТабЧасть.Проект КАК ИсхПроект
	|ПОМЕСТИТЬ ТабЧасть
	|ИЗ
	|	&ТабЧасть КАК ТабЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабЧасть.СтатьяОборотов,
	|	МАКСИМУМ(бит_БК_КонтролирующиеСтатьиОборотов.Период) КАК ПериодКС,
	|	ТабЧасть.ИсхПериод
	|ПОМЕСТИТЬ Тч_Контр_Периоды
	|ИЗ
	|	ТабЧасть КАК ТабЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов КАК бит_БК_КонтролирующиеСтатьиОборотов
	|		ПО ТабЧасть.СтатьяОборотов = бит_БК_КонтролирующиеСтатьиОборотов.КонтролируемаяСтатья
	|			И ТабЧасть.ИсхПериод >= бит_БК_КонтролирующиеСтатьиОборотов.Период
	|ГДЕ
	|	бит_БК_КонтролирующиеСтатьиОборотов.АктивностьСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабЧасть.СтатьяОборотов,
	|	ТабЧасть.ИсхПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Тч_Контр_Периоды.СтатьяОборотов,
	|	бит_БК_КонтролирующиеСтатьиОборотов.КонтролирующаяСтатья,
	|	Тч_Контр_Периоды.ИсхПериод
	|ПОМЕСТИТЬ Тч_Контр_КС
	|ИЗ
	|	Тч_Контр_Периоды КАК Тч_Контр_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов КАК бит_БК_КонтролирующиеСтатьиОборотов
	|		ПО Тч_Контр_Периоды.СтатьяОборотов = бит_БК_КонтролирующиеСтатьиОборотов.КонтролируемаяСтатья
	|			И Тч_Контр_Периоды.ПериодКС = бит_БК_КонтролирующиеСтатьиОборотов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Сценарий.бит_БК_ИспользоватьКонтроллирующиеСтатьи
	|			ТОГДА ЕСТЬNULL(Тч_Контр_КС.КонтролирующаяСтатья, ТабличнаяЧасть.СтатьяОборотов)
	|		ИНАЧЕ ТабличнаяЧасть.СтатьяОборотов
	|	КОНЕЦ КАК СтатьяОборотов,
	|	ТабличнаяЧасть.Период,
	|	ТабличнаяЧасть.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	ТабличнаяЧасть.Контрагент,
	|	ТабличнаяЧасть.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	ТабличнаяЧасть.Аналитика_2,
	|	ТабличнаяЧасть.Сценарий,
	|	ТабличнаяЧасть.Проект,
	|	ТабличнаяЧасть.Аналитика_1,
	|	ТабличнаяЧасть.ИсхПериод,
	|	ТабличнаяЧасть.СуммаТЧ,
	|	ТабличнаяЧасть.ИсхАналитика_1,
	|	ТабличнаяЧасть.ИсхАналитика_2,
	|	ТабличнаяЧасть.ИсхЦФО,
	|	ТабличнаяЧасть.ИсхПроект,
	|	ТабличнаяЧасть.СтатьяОборотов КАК ИсхСтатьяОборотов,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	|	ТабличнаяЧасть.РассчитыватьНарастающимИтогом КАК РассчитыватьНарастающимИтогом,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	|	СценарииБКОК.СценарийКонтролирующий
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	ТабЧасть КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Тч_Контр_КС КАК Тч_Контр_КС
	|		ПО ТабличнаяЧасть.СтатьяОборотов = Тч_Контр_КС.СтатьяОборотов
	|			И ТабличнаяЧасть.ИсхПериод = Тч_Контр_КС.ИсхПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ СценарииБКОК КАК СценарииБКОК
	|		ПО ТабличнаяЧасть.Сценарий = СценарииБКОК.Сценарий
	|ГДЕ
	|	ТабличнаяЧасть.Сценарий В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				СценарииБКОК.Сценарий
	|			ИЗ
	|				СценарииБКОК)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СуммыПоКлАналит.СтатьяОборотов,
	|	СуммыПоКлАналит.Период,
	|	СуммыПоКлАналит.Сценарий КАК Сценарий,
	|	СуммыПоКлАналит.Проект,
	|	СуммыПоКлАналит.Аналитика_2,
	|	СуммыПоКлАналит.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	СуммыПоКлАналит.Контрагент,
	|	СуммыПоКлАналит.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	СуммыПоКлАналит.Аналитика_1,
	|	СуммыПоКлАналит.СуммаТЧ,
	|	СуммыПоКлАналит.СценарийКонтролирующий КАК СценарийКонтролирующий
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	|	,СуммыПоКлАналит.РассчитыватьНарастающимИтогом КАК РассчитыватьНарастающимИтогом
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	|ПОМЕСТИТЬ Контролирующие
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.СтатьяОборотов КАК СтатьяОборотов,
	|		ТабличнаяЧасть.Период КАК Период,
	|		ТабличнаяЧасть.ЦФО КАК ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|		ТабличнаяЧасть.Контрагент КАК Контрагент,
	|		ТабличнаяЧасть.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|		ТабличнаяЧасть.Аналитика_2 КАК Аналитика_2,
	|		ТабличнаяЧасть.Сценарий КАК Сценарий,
	|		ТабличнаяЧасть.Проект КАК Проект,
	|		ТабличнаяЧасть.Аналитика_1 КАК Аналитика_1,
	|		СУММА(ТабличнаяЧасть.СуммаТЧ) КАК СуммаТЧ,
	|		ТабличнаяЧасть.СценарийКонтролирующий КАК СценарийКонтролирующий
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	|		,ТабличнаяЧасть.РассчитыватьНарастающимИтогом КАК РассчитыватьНарастающимИтогом
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	|	ИЗ
	|		ТабличнаяЧасть КАК ТабличнаяЧасть
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабличнаяЧасть.Период,
	|		ТабличнаяЧасть.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|		ТабличнаяЧасть.Контрагент,
	|		ТабличнаяЧасть.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|		ТабличнаяЧасть.Аналитика_2,
	|		ТабличнаяЧасть.Сценарий,
	|		ТабличнаяЧасть.Проект,
	|		ТабличнаяЧасть.Аналитика_1,
	|		ТабличнаяЧасть.СтатьяОборотов,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	|		ТабличнаяЧасть.РассчитыватьНарастающимИтогом,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	|		ТабличнаяЧасть.СценарийКонтролирующий) КАК СуммыПоКлАналит
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сценарий,
	|	СценарийКонтролирующий
	|;
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-21 (#2936)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-25 (#2921)
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТабЧасть.СтатьяОборотов) КАК КоличествоСтатейОборотов
	//|ПОМЕСТИТЬ АналитикаПоСтатьямОборотов
	//|ИЗ
	//|	ТабЧасть КАК ТабЧасть
	//|ГДЕ
	//|	ТабЧасть.СтатьяОборотов <> ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)	
	//|;
	//|
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-25 (#2921)
	//Заменено на:
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабЧасть.СтатьяОборотов КАК СтатьяОборотов
	|ПОМЕСТИТЬ АналитикаПоСтатьямОборотов
	|ИЗ
	|	ТабЧасть КАК ТабЧасть
	|ГДЕ
	|	ТабЧасть.СтатьяОборотов <> ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабЧасть.СтатьяОборотов
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТабЧасть.СтатьяОборотов) > 0 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_СтатьиОборотов.Ссылка КАК СтатьяОборотов
	|ПОМЕСТИТЬ ВТ_СтатьиДляОтбора
	|ИЗ
	|	Справочник.бит_СтатьиОборотов КАК бит_СтатьиОборотов
	|ГДЕ
	|	НЕ 1 В
	|			(ВЫБРАТЬ
	|				1 КАК ЕстьСтатьи
	|			ИЗ
	|				АналитикаПоСтатьямОборотов КАК АналитикаПоСтатьямОборотов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Контролирующие.СтатьяОборотов
	|ИЗ
	|	Контролирующие КАК Контролирующие
	|ГДЕ
	|	1 В
	|			(ВЫБРАТЬ
	|				1 КАК ЕстьСтатьи
	|			ИЗ
	|				АналитикаПоСтатьямОборотов КАК АналитикаПоСтатьямОборотов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Контролирующие.СтатьяОборотов 
	|;
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-21 (#2936)
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот,
	|	ВЫРАЗИТЬ(&прзРГ_Период КАК ДАТА) КАК Период,
	|	ВЫРАЗИТЬ(&прзРГ_ЦФО КАК Справочник.Подразделения) КАК ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	ВЫРАЗИТЬ(&прзРГ_Контрагент КАК Справочник.Контрагенты) КАК Контрагент,
	|	ВЫРАЗИТЬ(&прзРГ_ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов) КАК ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	ВЫРАЗИТЬ(&прзРГ_СтатьяОборотов КАК Справочник.бит_СтатьиОборотов) КАК СтатьяОборотов,
	|	ВЫРАЗИТЬ(&прзРГ_Объект КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2,
	|	ВЫРАЗИТЬ(&прзРГ_Проект КАК Справочник.Проекты) КАК Проект,
	|	ВЫРАЗИТЬ(&прзРГ_Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий КАК СценарийКонтроллирующий,
	|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ) КАК ПериодПлан
	|ПОМЕСТИТЬ ВТ_Регистр
	|ИЗ
	|	СценарииБКОК КАК СценарииБКОК
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Месяц,
	|				(Сценарий, СценарийКонтролируемый) В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Контролирующие.СценарийКонтролирующий,
	|							Контролирующие.Сценарий
	|						ИЗ
	|							Контролирующие)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-21 (#2936)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-25 (#2921)
	////|					И СтатьяОборотов В
	////|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	////|							Контролирующие.СтатьяОборотов
	////|						ИЗ
	////|							Контролирующие)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	////Заменено на:
	//|					И ВЫБОР КОГДА 
	//|							ИСТИНА В
	//|									(ВЫБРАТЬ ПЕРВЫЕ 1
	//|										ВЫБОР
	//|											КОГДА АналитикаПоСтатьямОборотов.КоличествоСтатейОборотов > 0
	//|													ТОГДА ИСТИНА
	//|											ИНАЧЕ ЛОЖЬ
	//|										КОНЕЦ КАК ИспользуетсяАналитикаПоСтатьямОборотов
	//|									ИЗ
	//|											АналитикаПоСтатьямОборотов КАК АналитикаПоСтатьямОборотов)
	//|					  ТОГДА
	//|						СтатьяОборотов В
	//|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|								Контролирующие.СтатьяОборотов
	//|							 ИЗ
	//|								Контролирующие)
	//|					  ИНАЧЕ ИСТИНА
	//|					  КОНЕЦ) КАК бит_КонтрольныеЗначенияБюджетовОбороты	
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-25 (#2921)	
	//Заменено на:
	|						И СтатьяОборотов В
	|							(ВЫБРАТЬ
	|								ВТ_СтатьиДляОтбора.СтатьяОборотов
	|							 ИЗ
	|								ВТ_СтатьиДляОтбора)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-21 (#2936)
	|		ПО СценарииБКОК.Сценарий = бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый
	|			И СценарииБКОК.СценарийКонтролирующий = бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	-бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот,
	|	-бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот,
	|	ВЫРАЗИТЬ(&прзРГ_Период КАК ДАТА),
	|	ВЫРАЗИТЬ(&прзРГ_ЦФО КАК Справочник.Подразделения),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	ВЫРАЗИТЬ(&прзРГ_Контрагент КАК Справочник.Контрагенты),
	|	ВЫРАЗИТЬ(&прзРГ_ДоговорКонтрагента КАК Справочник.ДоговорыКонтрагентов),
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	ВЫРАЗИТЬ(&прзРГ_СтатьяОборотов КАК Справочник.бит_СтатьиОборотов),
	|	ВЫРАЗИТЬ(&прзРГ_Объект КАК Справочник.ОбъектыСтроительства),
	|	ВЫРАЗИТЬ(&прзРГ_Проект КАК Справочник.Проекты),
	|	ВЫРАЗИТЬ(&прзРГ_Аналитика_1 КАК Документ.бит_ФормаВводаБюджета),
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий,
	|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ)
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(, , Регистратор, ) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|ГДЕ
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодПлан,
	|	Аналитика_1,
	|	Аналитика_2,
	|	СтатьяОборотов,
	|	Период,
	|	ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	Контрагент,
	|	ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	Проект,
	|	СценарийКонтролируемый,
	|	СценарийКонтроллирующий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Итоговая.Период КАК Период,
	|	ВТ_Итоговая.Аналитика_2 КАК Аналитика_2,
	|	СУММА(ВТ_Итоговая.СуммаСценарийКонтрольОборот - ВТ_Итоговая.СуммаСценарийИсполнениеОборот) КАК Остаток,
	|	ВТ_Итоговая.Проект КАК Проект,
	|	ВТ_Итоговая.ЦФО КАК ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	ВТ_Итоговая.Контрагент КАК Контрагент,
	|	ВТ_Итоговая.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	ВТ_Итоговая.СтатьяОборотов КАК СтатьяОборотов,
	|	ВТ_Итоговая.Аналитика_1 КАК Аналитика_1,
	|	СУММА(ВТ_Итоговая.СуммаСценарийКонтрольОборот) КАК СуммаКонтроль,
	|	ВТ_Итоговая.СценарийКонтролируемый,
	|	ВТ_Итоговая.СценарийКонтроллирующий
	|ПОМЕСТИТЬ ВТ_Итоговая
	|ИЗ
	|	ВТ_Регистр КАК ВТ_Итоговая
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Итоговая.Период,
	|	ВТ_Итоговая.Аналитика_2,
	|	ВТ_Итоговая.Проект,
	|	ВТ_Итоговая.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	ВТ_Итоговая.Контрагент,
	|	ВТ_Итоговая.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	ВТ_Итоговая.СтатьяОборотов,
	|	ВТ_Итоговая.Аналитика_1,
	|	ВТ_Итоговая.СценарийКонтролируемый,
	|	ВТ_Итоговая.СценарийКонтроллирующий
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяОборотов,
	|	Аналитика_1,
	|	Проект,
	|	Аналитика_2,
	|	ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	Контрагент,
	|	ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контролирующие.Период КАК Период,
	|	ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) КАК Остаток,
	|	Контролирующие.СтатьяОборотов,
	|	Контролирующие.Сценарий,
	|	Контролирующие.Проект КАК Проект,
	|	Контролирующие.ЦФО КАК ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	Контролирующие.Контрагент КАК Контрагент,
	|	Контролирующие.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	Контролирующие.Аналитика_2 КАК Аналитика_2,
	|	Контролирующие.Аналитика_1,
	|	Контролирующие.СуммаТЧ КАК СуммаОперации,
	|	ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ КАК СуммаПослеОперации,
	|	ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) КАК СуммаДоОперации,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ < 0
	//|			ТОГДА 1
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СверхБюджета,
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ < 0
	//|			ТОГДА -(ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК ИтогоСверхБюджетаПоКлАналитикам,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	|	ЕСТЬNULL(ВТ_Итоговая.СуммаКонтроль, 0) КАК СуммаКонтроль,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(ВТ_Итоговая.Остаток, 0) - Контролирующие.СуммаТЧ > 0
	//|			ТОГДА 1
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК ЕстьОстатокБюджетаПослеОперацииБольшеНуля,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-11-15 (#3393)
	//|	ВТ_Итоговая.СценарийКонтроллирующий
	//Заменено на:
	|	Контролирующие.СценарийКонтролирующий КАК СценарийКонтроллирующий
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-11-15 (#3393)	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2020-06-22 (#3789)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)	
	//|ПОМЕСТИТЬ ОстаткиБКБезТЧ_СНарастающимИтогом
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)	
	//Заменено на:
	|ПОМЕСТИТЬ ВТ_ОстаткиПоПериодамТЧ	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2020-06-22 (#3789)
	|ИЗ
	|	Контролирующие КАК Контролирующие
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
	|		ПО Контролирующие.Период = ВТ_Итоговая.Период
	|			И Контролирующие.Проект = ВТ_Итоговая.Проект
	|			И Контролирующие.ЦФО = ВТ_Итоговая.ЦФО
	|			И Контролирующие.СтатьяОборотов = ВТ_Итоговая.СтатьяОборотов
	|			И Контролирующие.Аналитика_2 = ВТ_Итоговая.Аналитика_2
	|			И Контролирующие.Аналитика_1 = ВТ_Итоговая.Аналитика_1
	|			И Контролирующие.Сценарий = ВТ_Итоговая.СценарийКонтролируемый
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|			И Контролирующие.Контрагент = ВТ_Итоговая.Контрагент
	|			И Контролирующие.ДоговорКонтрагента = ВТ_Итоговая.ДоговорКонтрагента	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2020-06-22 (#3789)
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	////Часть для нарастающего итога - пока жестко по году
	//|	ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|	ВЫБРАТЬ
	//|		Контролирующие.Период,
	//|		ВТ_Итоговая.Остаток,
	//|		Контролирующие.СтатьяОборотов,
	//|		Контролирующие.Сценарий,
	//|		Контролирующие.Проект,
	//|		Контролирующие.ЦФО,
	//|		Контролирующие.Контрагент,
	//|		Контролирующие.ДоговорКонтрагента,
	//|		Контролирующие.Аналитика_2,
	//|		Контролирующие.Аналитика_1,
	//|		Контролирующие.СуммаТЧ,
	//|		ВТ_Итоговая.Остаток - Контролирующие.СуммаТЧ,
	//|		ВТ_Итоговая.Остаток,
	//|		ВТ_Итоговая.СуммаКонтроль,
	//|		ВТ_Итоговая.СценарийКонтроллирующий	
	//|	ИЗ
	//|		Контролирующие КАК Контролирующие
	//|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
	//|			ПО (НАЧАЛОПЕРИОДА(Контролирующие.Период, ГОД) = ВТ_Итоговая.Период)
	//|				И (Контролирующие.Период <> НАЧАЛОПЕРИОДА(Контролирующие.Период, ГОД))
	//|				И Контролирующие.Проект = ВТ_Итоговая.Проект
	//|				И Контролирующие.ЦФО = ВТ_Итоговая.ЦФО
	//|				И Контролирующие.СтатьяОборотов = ВТ_Итоговая.СтатьяОборотов
	//|				И Контролирующие.Аналитика_2 = ВТ_Итоговая.Аналитика_2
	//|				И Контролирующие.Аналитика_1 = ВТ_Итоговая.Аналитика_1
	//|				И Контролирующие.Сценарий = ВТ_Итоговая.СценарийКонтролируемый
	//|				И Контролирующие.Контрагент = ВТ_Итоговая.Контрагент
	//|				И Контролирующие.ДоговорКонтрагента = ВТ_Итоговая.ДоговорКонтрагента
	//|				И Контролирующие.РассчитыватьНарастающимИтогом	
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Период КАК Период,
	//|	СУММА(ОстаткиБКБезТЧ_СНарастающимИтогом.Остаток) КАК Остаток,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.СтатьяОборотов КАК СтатьяОборотов,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Сценарий КАК Сценарий,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Проект КАК Проект,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.ЦФО КАК ЦФО,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Контрагент КАК Контрагент,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Аналитика_2 КАК Аналитика_2,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Аналитика_1 КАК Аналитика_1,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.СуммаОперации КАК СуммаОперации,
	//|	СУММА(ОстаткиБКБезТЧ_СНарастающимИтогом.СуммаПослеОперации) КАК СуммаПослеОперации,
	//|	СУММА(ОстаткиБКБезТЧ_СНарастающимИтогом.СуммаДоОперации) КАК СуммаДоОперации,
	//|	СУММА(ОстаткиБКБезТЧ_СНарастающимИтогом.СуммаКонтроль) КАК СуммаКонтроль,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.СценарийКонтроллирующий КАК СценарийКонтроллирующий
	//|ПОМЕСТИТЬ ОстаткиБКБезТЧ_Сгруппированная
	//|ИЗ
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом КАК ОстаткиБКБезТЧ_СНарастающимИтогом
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Период,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.СтатьяОборотов,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Сценарий,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Проект,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.ЦФО,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Контрагент,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.ДоговорКонтрагента,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Аналитика_2,
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.Аналитика_1,	
	//|	ОстаткиБКБезТЧ_СНарастающимИтогом.СценарийКонтроллирующий
	//|  
	//|;
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ОстаткиБКБезТЧ_Сгруппированная.Период КАК Период,
	//|	ОстаткиБКБезТЧ_Сгруппированная.Остаток КАК Остаток,
	//|	ОстаткиБКБезТЧ_Сгруппированная.СтатьяОборотов КАК СтатьяОборотов,
	//|	ОстаткиБКБезТЧ_Сгруппированная.Сценарий КАК Сценарий,
	//|	ОстаткиБКБезТЧ_Сгруппированная.Проект КАК Проект,
	//|	ОстаткиБКБезТЧ_Сгруппированная.ЦФО КАК ЦФО,
	//|	ОстаткиБКБезТЧ_Сгруппированная.Контрагент КАК Контрагент,
	//|	ОстаткиБКБезТЧ_Сгруппированная.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//|	ОстаткиБКБезТЧ_Сгруппированная.Аналитика_2 КАК Аналитика_2,
	//|	ОстаткиБКБезТЧ_Сгруппированная.Аналитика_1 КАК Аналитика_1,
	//|	ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации КАК СуммаОперации,
	//|	ОстаткиБКБезТЧ_Сгруппированная.СуммаПослеОперации КАК СуммаПослеОперации,
	//|	ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации КАК СуммаДоОперации,
	//|	ВЫБОР
	//|		КОГДА ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации < 0
	//|			ТОГДА 1
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СверхБюджета,
	//|	ВЫБОР
	//|		КОГДА ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации < 0
	//|			ТОГДА -(ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации)
	//|		КОГДА ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации < 0
	//|			ТОГДА -(ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК ИтогоСверхБюджетаПоКлАналитикам,
	//|	ОстаткиБКБезТЧ_Сгруппированная.СуммаКонтроль КАК СуммаКонтроль,
	//|	ВЫБОР
	//|		КОГДА ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации > 0
	//|			ТОГДА 1
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК ЕстьОстатокБюджетаПослеОперацииБольшеНуля,
	//|	ОстаткиБКБезТЧ_Сгруппированная.СценарийКонтроллирующий КАК СценарийКонтроллирующий
	//|ПОМЕСТИТЬ ОстаткиБКБезТЧ
	//|ИЗ
	//|	ОстаткиБКБезТЧ_Сгруппированная КАК ОстаткиБКБезТЧ_Сгруппированная
	//|
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	//Заменено на:
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контролирующие.Период КАК Период,
	|	СУММА(0) КАК Остаток,
	|	Контролирующие.СтатьяОборотов КАК СтатьяОборотов,
	|	Контролирующие.Сценарий КАК Сценарий,
	|	Контролирующие.Проект КАК Проект,
	|	Контролирующие.ЦФО КАК ЦФО,
	|	Контролирующие.Контрагент КАК Контрагент,
	|	Контролирующие.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Контролирующие.Аналитика_2 КАК Аналитика_2,
	|	Контролирующие.Аналитика_1 КАК Аналитика_1,
	|	СУММА(0) КАК СуммаОперации,
	|	СУММА(0) КАК СуммаПослеОперации,
	|	СУММА(ЕСТЬNULL(ВТ_Итоговая.Остаток, 0)) КАК СуммаДоОперации,
	|	СУММА(ЕСТЬNULL(ВТ_Итоговая.СуммаКонтроль, 0)) КАК СуммаКонтроль,
	|	Контролирующие.СценарийКонтролирующий КАК СценарийКонтроллирующий,
	|	ВТ_Итоговая.Период КАК ИсхПериод
	|ПОМЕСТИТЬ ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом
	|ИЗ
	|	Контролирующие КАК Контролирующие
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
	|		ПО (НАЧАЛОПЕРИОДА(Контролирующие.Период, ГОД) = ВТ_Итоговая.Период)
	|			И (Контролирующие.Период <> НАЧАЛОПЕРИОДА(Контролирующие.Период, ГОД))
	|			И Контролирующие.Проект = ВТ_Итоговая.Проект
	|			И Контролирующие.ЦФО = ВТ_Итоговая.ЦФО
	|			И Контролирующие.СтатьяОборотов = ВТ_Итоговая.СтатьяОборотов
	|			И Контролирующие.Аналитика_2 = ВТ_Итоговая.Аналитика_2
	|			И Контролирующие.Аналитика_1 = ВТ_Итоговая.Аналитика_1
	|			И Контролирующие.Сценарий = ВТ_Итоговая.СценарийКонтролируемый
	|			И Контролирующие.Контрагент = ВТ_Итоговая.Контрагент
	|			И Контролирующие.ДоговорКонтрагента = ВТ_Итоговая.ДоговорКонтрагента
	|			И (Контролирующие.РассчитыватьНарастающимИтогом)
	|ГДЕ
	|	Контролирующие.Период <> НАЧАЛОПЕРИОДА(Контролирующие.Период, ГОД)
	|	И Контролирующие.РассчитыватьНарастающимИтогом
	|
	|СГРУППИРОВАТЬ ПО
	|	Контролирующие.Период,
	|	Контролирующие.ЦФО,
	|	Контролирующие.Сценарий,
	|	Контролирующие.СтатьяОборотов,
	|	Контролирующие.Проект,
	|	Контролирующие.Контрагент,
	|	Контролирующие.ДоговорКонтрагента,
	|	Контролирующие.Аналитика_2,
	|	Контролирующие.Аналитика_1,
	|	Контролирующие.СценарийКонтролирующий,
	|	ВТ_Итоговая.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контролирующие.Период КАК Период,
	|	СУММА(0) КАК Остаток,
	|	Контролирующие.СтатьяОборотов КАК СтатьяОборотов,
	|	Контролирующие.Сценарий КАК Сценарий,
	|	Контролирующие.Проект КАК Проект,
	|	Контролирующие.ЦФО КАК ЦФО,
	|	Контролирующие.Контрагент КАК Контрагент,
	|	Контролирующие.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Контролирующие.Аналитика_2 КАК Аналитика_2,
	|	Контролирующие.Аналитика_1 КАК Аналитика_1,
	|	СУММА(ЕСТЬNULL(Контролирующие_ПервоеПолугодие.СуммаТЧ, 0)) КАК СуммаОперации,
	|	СУММА(0) КАК СуммаПослеОперации,
	|	СУММА(0) КАК СуммаДоОперации,
	|	СУММА(0) КАК СуммаКонтроль,
	|	Контролирующие.СценарийКонтролирующий КАК СценарийКонтроллирующий
	|ПОМЕСТИТЬ ВТ_ДанныеПервогоПолугодия
	|ИЗ
	|	Контролирующие КАК Контролирующие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Контролирующие КАК Контролирующие_ПервоеПолугодие
	|		ПО Контролирующие.СтатьяОборотов = Контролирующие_ПервоеПолугодие.СтатьяОборотов
	|			И Контролирующие.Сценарий = Контролирующие_ПервоеПолугодие.Сценарий
	|			И Контролирующие.Проект = Контролирующие_ПервоеПолугодие.Проект
	|			И Контролирующие.Аналитика_2 = Контролирующие_ПервоеПолугодие.Аналитика_2
	|			И Контролирующие.ЦФО = Контролирующие_ПервоеПолугодие.ЦФО
	|			И Контролирующие.Контрагент = Контролирующие_ПервоеПолугодие.Контрагент
	|			И Контролирующие.ДоговорКонтрагента = Контролирующие_ПервоеПолугодие.ДоговорКонтрагента
	|			И Контролирующие.Аналитика_1 = Контролирующие_ПервоеПолугодие.Аналитика_1
	|			И (НАЧАЛОПЕРИОДА(Контролирующие.Период, ГОД) = Контролирующие_ПервоеПолугодие.Период)
	|			И (Контролирующие.Период <> НАЧАЛОПЕРИОДА(Контролирующие.Период, ГОД))
	|ГДЕ
	|	Контролирующие.Период <> НАЧАЛОПЕРИОДА(Контролирующие.Период, ГОД)
	|	И Контролирующие.РассчитыватьНарастающимИтогом
	|
	|СГРУППИРОВАТЬ ПО
	|	Контролирующие.ЦФО,
	|	Контролирующие.Сценарий,
	|	Контролирующие.СтатьяОборотов,
	|	Контролирующие.Проект,
	|	Контролирующие.Контрагент,
	|	Контролирующие.ДоговорКонтрагента,
	|	Контролирующие.Аналитика_2,
	|	Контролирующие.Аналитика_1,
	|	Контролирующие.СценарийКонтролирующий,
	|	Контролирующие.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиПоПериодамТЧ.Период КАК Период,
	|	ВТ_ОстаткиПоПериодамТЧ.СтатьяОборотов КАК СтатьяОборотов,
	|	ВТ_ОстаткиПоПериодамТЧ.Сценарий КАК Сценарий,
	|	ВТ_ОстаткиПоПериодамТЧ.Проект КАК Проект,
	|	ВТ_ОстаткиПоПериодамТЧ.ЦФО КАК ЦФО,
	|	ВТ_ОстаткиПоПериодамТЧ.Контрагент КАК Контрагент,
	|	ВТ_ОстаткиПоПериодамТЧ.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ОстаткиПоПериодамТЧ.Аналитика_2 КАК Аналитика_2,
	|	ВТ_ОстаткиПоПериодамТЧ.Аналитика_1 КАК Аналитика_1,
	|	ВТ_ОстаткиПоПериодамТЧ.СуммаОперации КАК СуммаОперации,
	|	ВТ_ОстаткиПоПериодамТЧ.СуммаДоОперации КАК СуммаДоОперации
	|ПОМЕСТИТЬ ВТ_ДляРасчетаИтоговНесгруппированная
	|ИЗ
	|	ВТ_ОстаткиПоПериодамТЧ КАК ВТ_ОстаткиПоПериодамТЧ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Период,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СтатьяОборотов,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Сценарий,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Проект,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.ЦФО,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Контрагент,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.ДоговорКонтрагента,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Аналитика_2,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Аналитика_1,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СуммаОперации,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СуммаДоОперации
	|ИЗ
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом КАК ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиПоПериодамТЧ КАК ВТ_ОстаткиПоПериодамТЧ
	|		ПО ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.ИсхПериод = ВТ_ОстаткиПоПериодамТЧ.Период
	|			И ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СтатьяОборотов = ВТ_ОстаткиПоПериодамТЧ.СтатьяОборотов
	|			И ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Сценарий = ВТ_ОстаткиПоПериодамТЧ.Сценарий
	|			И ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Проект = ВТ_ОстаткиПоПериодамТЧ.Проект
	|			И ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.ЦФО = ВТ_ОстаткиПоПериодамТЧ.ЦФО
	|			И ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Контрагент = ВТ_ОстаткиПоПериодамТЧ.Контрагент
	|			И ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.ДоговорКонтрагента = ВТ_ОстаткиПоПериодамТЧ.ДоговорКонтрагента
	|			И ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Аналитика_2 = ВТ_ОстаткиПоПериодамТЧ.Аналитика_2
	|			И ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Аналитика_1 = ВТ_ОстаткиПоПериодамТЧ.Аналитика_1
	|			И ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СценарийКонтроллирующий = ВТ_ОстаткиПоПериодамТЧ.СценарийКонтроллирующий
	|ГДЕ
	|	ВТ_ОстаткиПоПериодамТЧ.Период ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Период КАК Период,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.СтатьяОборотов КАК СтатьяОборотов,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Сценарий КАК Сценарий,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Проект КАК Проект,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.ЦФО КАК ЦФО,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Контрагент КАК Контрагент,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Аналитика_2 КАК Аналитика_2,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Аналитика_1 КАК Аналитика_1,
	|	СУММА(ВТ_ДляРасчетаИтоговНесгруппированная.СуммаОперации) КАК СуммаОперации,
	|	СУММА(ВТ_ДляРасчетаИтоговНесгруппированная.СуммаДоОперации) КАК СуммаДоОперации,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.СуммаДоОперации - ВТ_ДляРасчетаИтоговНесгруппированная.СуммаОперации КАК Остаток
	|ПОМЕСТИТЬ ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам
	|ИЗ
	|	ВТ_ДляРасчетаИтоговНесгруппированная КАК ВТ_ДляРасчетаИтоговНесгруппированная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Аналитика_2,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.ДоговорКонтрагента,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Проект,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Аналитика_1,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Контрагент,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Период,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.СтатьяОборотов,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.Сценарий,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.ЦФО,
	|	ВТ_ДляРасчетаИтоговНесгруппированная.СуммаДоОперации - ВТ_ДляРасчетаИтоговНесгруппированная.СуммаОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Остаток) КАК ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.СтатьяОборотов КАК СтатьяОборотов,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Сценарий КАК Сценарий,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Проект КАК Проект,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.ЦФО КАК ЦФО,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Контрагент КАК Контрагент,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Аналитика_2 КАК Аналитика_2,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Аналитика_1 КАК Аналитика_1,
	|	НАЧАЛОПЕРИОДА(ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Период, ГОД) КАК Период
	|ПОМЕСТИТЬ ВТ_СгруппированнаяДляИтога
	|ИЗ
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам КАК ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Сценарий,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.ДоговорКонтрагента,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Проект,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Контрагент,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.СтатьяОборотов,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.ЦФО,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Аналитика_2,
	|	ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Аналитика_1,
	|	НАЧАЛОПЕРИОДА(ВТ_ДляРасчетаИтоговСгруппированнаяПоАналитикам.Период, ГОД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиПоПериодамТЧ.Период КАК Период,
	|	ВТ_ОстаткиПоПериодамТЧ.Остаток КАК Остаток,
	|	ВТ_ОстаткиПоПериодамТЧ.СтатьяОборотов КАК СтатьяОборотов,
	|	ВТ_ОстаткиПоПериодамТЧ.Сценарий КАК Сценарий,
	|	ВТ_ОстаткиПоПериодамТЧ.Проект КАК Проект,
	|	ВТ_ОстаткиПоПериодамТЧ.ЦФО КАК ЦФО,
	|	ВТ_ОстаткиПоПериодамТЧ.Контрагент КАК Контрагент,
	|	ВТ_ОстаткиПоПериодамТЧ.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ОстаткиПоПериодамТЧ.Аналитика_2 КАК Аналитика_2,
	|	ВТ_ОстаткиПоПериодамТЧ.Аналитика_1 КАК Аналитика_1,
	|	ВТ_ОстаткиПоПериодамТЧ.СуммаОперации КАК СуммаОперации,
	|	ВТ_ОстаткиПоПериодамТЧ.СуммаПослеОперации КАК СуммаПослеОперации,
	|	ВТ_ОстаткиПоПериодамТЧ.СуммаДоОперации КАК СуммаДоОперации,
	|	ВТ_ОстаткиПоПериодамТЧ.СуммаКонтроль КАК СуммаКонтроль,
	|	ВТ_ОстаткиПоПериодамТЧ.СценарийКонтроллирующий КАК СценарийКонтроллирующий
	|ПОМЕСТИТЬ ОстаткиБКБезТЧ_СНарастающимИтогом
	|ИЗ
	|	ВТ_ОстаткиПоПериодамТЧ КАК ВТ_ОстаткиПоПериодамТЧ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Период,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Остаток,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СтатьяОборотов,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Сценарий,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Проект,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.ЦФО,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Контрагент,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.ДоговорКонтрагента,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Аналитика_2,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.Аналитика_1,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СуммаОперации,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СуммаПослеОперации,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СуммаДоОперации,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СуммаКонтроль,
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом.СценарийКонтроллирующий
	|ИЗ
	|	ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом КАК ВТ_ОстаткиПервогоПолугодия_НарастающимИтогом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ДанныеПервогоПолугодия.Период,
	|	ВТ_ДанныеПервогоПолугодия.Остаток,
	|	ВТ_ДанныеПервогоПолугодия.СтатьяОборотов,
	|	ВТ_ДанныеПервогоПолугодия.Сценарий,
	|	ВТ_ДанныеПервогоПолугодия.Проект,
	|	ВТ_ДанныеПервогоПолугодия.ЦФО,
	|	ВТ_ДанныеПервогоПолугодия.Контрагент,
	|	ВТ_ДанныеПервогоПолугодия.ДоговорКонтрагента,
	|	ВТ_ДанныеПервогоПолугодия.Аналитика_2,
	|	ВТ_ДанныеПервогоПолугодия.Аналитика_1,
	|	ВТ_ДанныеПервогоПолугодия.СуммаОперации,
	|	ВТ_ДанныеПервогоПолугодия.СуммаПослеОперации,
	|	ВТ_ДанныеПервогоПолугодия.СуммаДоОперации,
	|	ВТ_ДанныеПервогоПолугодия.СуммаКонтроль,
	|	ВТ_ДанныеПервогоПолугодия.СценарийКонтроллирующий
	|ИЗ
	|	ВТ_ДанныеПервогоПолугодия КАК ВТ_ДанныеПервогоПолугодия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Период КАК Период,
	|	СУММА(ОстаткиБКБезТЧ_СНарастающимИтогом.Остаток) КАК Остаток,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.СтатьяОборотов КАК СтатьяОборотов,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Сценарий КАК Сценарий,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Проект КАК Проект,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.ЦФО КАК ЦФО,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Контрагент КАК Контрагент,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Аналитика_2 КАК Аналитика_2,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Аналитика_1 КАК Аналитика_1,
	|	СУММА(ОстаткиБКБезТЧ_СНарастающимИтогом.СуммаОперации) КАК СуммаОперации,
	|	СУММА(ОстаткиБКБезТЧ_СНарастающимИтогом.СуммаПослеОперации) КАК СуммаПослеОперации,
	|	СУММА(ОстаткиБКБезТЧ_СНарастающимИтогом.СуммаДоОперации) КАК СуммаДоОперации,
	|	СУММА(ОстаткиБКБезТЧ_СНарастающимИтогом.СуммаКонтроль) КАК СуммаКонтроль,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.СценарийКонтроллирующий КАК СценарийКонтроллирующий
	|ПОМЕСТИТЬ ОстаткиБКБезТЧ_Сгруппированная
	|ИЗ
	|	ОстаткиБКБезТЧ_СНарастающимИтогом КАК ОстаткиБКБезТЧ_СНарастающимИтогом
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Период,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.СтатьяОборотов,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Сценарий,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Проект,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.ЦФО,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Контрагент,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.ДоговорКонтрагента,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Аналитика_2,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.Аналитика_1,
	|	ОстаткиБКБезТЧ_СНарастающимИтогом.СценарийКонтроллирующий
	|;
	|
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиБКБезТЧ_Сгруппированная.Период КАК Период,
	|	ОстаткиБКБезТЧ_Сгруппированная.Остаток КАК Остаток,
	|	ОстаткиБКБезТЧ_Сгруппированная.СтатьяОборотов КАК СтатьяОборотов,
	|	ОстаткиБКБезТЧ_Сгруппированная.Сценарий КАК Сценарий,
	|	ОстаткиБКБезТЧ_Сгруппированная.Проект КАК Проект,
	|	ОстаткиБКБезТЧ_Сгруппированная.ЦФО КАК ЦФО,
	|	ОстаткиБКБезТЧ_Сгруппированная.Контрагент КАК Контрагент,
	|	ОстаткиБКБезТЧ_Сгруппированная.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ОстаткиБКБезТЧ_Сгруппированная.Аналитика_2 КАК Аналитика_2,
	|	ОстаткиБКБезТЧ_Сгруппированная.Аналитика_1 КАК Аналитика_1,
	|	ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации КАК СуммаОперации,
	|	ОстаткиБКБезТЧ_Сгруппированная.СуммаПослеОперации КАК СуммаПослеОперации,
	|	ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации КАК СуммаДоОперации,
	|	ВЫБОР
	|		КОГДА ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации < 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СверхБюджета,
	|	ВЫБОР
	|		КОГДА ОстаткиБКБезТЧ_Сгруппированная.СуммаПослеОперации < 0
	|			ТОГДА -ОстаткиБКБезТЧ_Сгруппированная.СуммаПослеОперации
	|		КОГДА ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации < 0
	|			ТОГДА -(ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИтогоСверхБюджетаПоКлАналитикам,
	|	ОстаткиБКБезТЧ_Сгруппированная.СуммаКонтроль КАК СуммаКонтроль,
	|	ВЫБОР
	|		КОГДА ОстаткиБКБезТЧ_Сгруппированная.СуммаДоОперации - ОстаткиБКБезТЧ_Сгруппированная.СуммаОперации > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЕстьОстатокБюджетаПослеОперацииБольшеНуля,
	|	ОстаткиБКБезТЧ_Сгруппированная.СценарийКонтроллирующий КАК СценарийКонтроллирующий
	|ПОМЕСТИТЬ ОстаткиБКБезТЧ
	|ИЗ
	|	ОстаткиБКБезТЧ_Сгруппированная КАК ОстаткиБКБезТЧ_Сгруппированная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТ_СгруппированнаяДляИтога.ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам) КАК ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_СгруппированнаяДляИтога.ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам < 0
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2020-08-03 (#3828)
	//|				ТОГДА ВТ_СгруппированнаяДляИтога.ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам
	//Заменено на:
	|				ТОГДА -ВТ_СгруппированнаяДляИтога.ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2020-08-03 (#3828)	
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПолнаяСуммаСверхБюджетаПоВсемСтрокам
	|ПОМЕСТИТЬ ВТ_ИтоговыеСуммыПоВсемСтрокам
	|ИЗ
	|	ВТ_СгруппированнаяДляИтога КАК ВТ_СгруппированнаяДляИтога
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2020-06-22 (#3789)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.СтатьяОборотов,
	|	ТабличнаяЧасть.Период,
	|	ТабличнаяЧасть.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	ТабличнаяЧасть.Контрагент,
	|	ТабличнаяЧасть.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	ТабличнаяЧасть.Аналитика_2,
	|	ТабличнаяЧасть.Сценарий,
	|	ТабличнаяЧасть.Проект,
	|	ТабличнаяЧасть.Аналитика_1,
	|	ТабличнаяЧасть.ИсхПериод,
	|	ТабличнаяЧасть.ИсхАналитика_1,
	|	ТабличнаяЧасть.ИсхАналитика_2,
	|	ТабличнаяЧасть.ИсхЦФО,
	|	ТабличнаяЧасть.ИсхПроект,
	|	ТабличнаяЧасть.ИсхСтатьяОборотов
	|ПОМЕСТИТЬ СвязКлАналитТЧ
	|ИЗ
	|	ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвязКлАналитТЧ.Сценарий,
	|	СвязКлАналитТЧ.Период,
	|	СвязКлАналитТЧ.СтатьяОборотов КАК СтатьяОборотов,
	|	СвязКлАналитТЧ.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|	СвязКлАналитТЧ.Контрагент,
	|	СвязКлАналитТЧ.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|	СвязКлАналитТЧ.Проект,
	|	СвязКлАналитТЧ.Аналитика_1,
	|	СвязКлАналитТЧ.Аналитика_2,
	|	СвязКлАналитТЧ.ИсхПериод,
	|	СвязКлАналитТЧ.ИсхСтатьяОборотов,
	|	СвязКлАналитТЧ.ИсхЦФО,
	|	СвязКлАналитТЧ.ИсхПроект,
	|	СвязКлАналитТЧ.ИсхАналитика_1,
	|	СвязКлАналитТЧ.ИсхАналитика_2,
	|	ОстаткиБКБезТЧ.СценарийКонтроллирующий,
	|	ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаОперации, 0) КАК СуммаОперации,
	|	ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаДоОперации, 0) КАК ОстатокДоОперации,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-23 (#3393)
	//|	ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаПослеОперации, 0) КАК ОстатокПослеОперации,
	//Заменено на:
	|	ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаДоОперации, 0) - ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаОперации, 0) КАК ОстатокПослеОперации,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-23 (#3393)                                      	
	|	ЕСТЬNULL(ОстаткиБКБезТЧ.СверхБюджета, 0) КАК СверхБюджетаПризнак,
	|	ЕСТЬNULL(ОстаткиБКБезТЧ.ИтогоСверхБюджетаПоКлАналитикам, 0) КАК СверхБюджетаПоКлючевым,
	|	ЕСТЬNULL(ОстаткиБКБезТЧ.СуммаКонтроль, 0) КАК СуммаКонтроль,
	|	взВсегоВсерхБюджетаПоКлАнлт.ПолнаяСуммаСверхБюджетаПоВсемСтрокам КАК ПолнаяСуммаСверхБюджетаПоВсемСтрокам,
	|	взВсегоВсерхБюджетаПоКлАнлт.ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам КАК ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам,
	|	ЕСТЬNULL(ОстаткиБКБезТЧ.ЕстьОстатокБюджетаПослеОперацииБольшеНуля, 0) КАК ЕстьОстатокБюджетаПослеОперацииБольшеНуля
	|ИЗ
	|	СвязКлАналитТЧ КАК СвязКлАналитТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиБКБезТЧ КАК ОстаткиБКБезТЧ
	|		ПО СвязКлАналитТЧ.СтатьяОборотов = ОстаткиБКБезТЧ.СтатьяОборотов
	|			И СвязКлАналитТЧ.Период = ОстаткиБКБезТЧ.Период
	|			И СвязКлАналитТЧ.ЦФО = ОстаткиБКБезТЧ.ЦФО
	|			И СвязКлАналитТЧ.Аналитика_2 = ОстаткиБКБезТЧ.Аналитика_2
	|			И СвязКлАналитТЧ.Сценарий = ОстаткиБКБезТЧ.Сценарий
	|			И СвязКлАналитТЧ.Проект = ОстаткиБКБезТЧ.Проект
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	|			И СвязКлАналитТЧ.Контрагент = ОстаткиБКБезТЧ.Контрагент
	|			И СвязКлАналитТЧ.ДоговорКонтрагента = ОстаткиБКБезТЧ.ДоговорКонтрагента
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	|			И СвязКлАналитТЧ.Аналитика_1 = ОстаткиБКБезТЧ.Аналитика_1,
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2020-06-22 (#3789)
	//|	(ВЫБРАТЬ
	//|		СУММА(ОстаткиБКБезТЧ.ИтогоСверхБюджетаПоКлАналитикам) КАК ПолнаяСуммаСверхБюджетаПоВсемСтрокам,
	//|		СУММА(ОстаткиБКБезТЧ.СуммаПослеОперации) КАК ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам
	//|	ИЗ
	//|		ОстаткиБКБезТЧ КАК ОстаткиБКБезТЧ) КАК взВсегоВсерхБюджетаПоКлАнлт
	//Заменено на:
	|		ВТ_ИтоговыеСуммыПоВсемСтрокам КАК взВсегоВсерхБюджетаПоКлАнлт
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2020-06-22 (#3789)	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СценарииБКОК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Тч_Контр_Периоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Тч_Контр_КС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабличнаяЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Контролирующие
	|;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-25 (#2921)
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АналитикаПоСтатьямОборотов
	|;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-25 (#2921)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-21 (#2936)
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СтатьиДляОтбора
	|;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-21 (#2936)
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Регистр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Итоговая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиБКБезТЧ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СвязКлАналитТЧ";
	//} bit_SVKushnirenko 03.04.2017 #2816
КонецФункции // ТекстЗапросаБюджетногоКонтроля()

//bit_SVKushnirenko 16.12.2016 #2657
//Формирование текста запроса для выбора контрольных значений бюджета по данным динамической настройки отборов
//характер изменений в тексте прототипа таких запросов идентичен, поэтому для соблюдения единообразия этот вызов централизован
//Параметры:
//парВсеПериодыМесяц - специальный параметр, который для всех без исключения сценариев, применит период выборки "месяц"
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-20 (#2921)
//Функция ТекстЗапросаКБ(парВсеПериодыМесяц = Ложь) Экспорт
//Заменено на:
Функция ТекстЗапросаКБ(парВсеПериодыМесяц = Ложь, пНастройкиВыбораКЗБПоСценариям = Неопределено) Экспорт 
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-20 (#2921)
	
	пТекстЗапроса = ТекстЗапросаБюджетногоКонтроля();
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-20 (#2921)
	//пНастройкиВыбораКЗБПоСценариям = СценариПланированияНастройкиВыбораСумм(парВсеПериодыМесяц);
	//Заменено на:
	Если пНастройкиВыбораКЗБПоСценариям = Неопределено Тогда 
		пНастройкиВыбораКЗБПоСценариям = СценариПланированияНастройкиВыбораСумм(парВсеПериодыМесяц);
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-20 (#2921)
			
	//Определение настроек выборки по ключевым аналитикам
	//ПЕРИОД.ТЧ
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	пВыражениеНакопительныйИтогПоПолугодиям = "";
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	пВыражение = ПолучитьВыражениеДляПериодов(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-01 (#3393)
	//"ТабЧасть.Период");
	//Заменено на:
	"ТабЧасть.Период"
	,,пВыражениеНакопительныйИтогПоПолугодиям);
	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_РассчитыватьНарастающимИтогом""", пВыражениеНакопительныйИтогПоПолугодиям);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-01 (#3393)
	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Период""", пВыражение);
	//ПЕРИОД.РГ
	пВыражение = ПолучитьВыражениеДляПериодов(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.Период");
	//пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """РГ_Период""", пВыражение);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&прзРГ_Период", пВыражение);
	
	//СТАТЬИОБОРОТОВ.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.СтатьяОборотов", 
	"ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.СтатьяОборотов);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_СтатьяОборотов""", пВыражение);
	//СТАТЬИОБОРОТОВ.РГ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов", 
	"ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.СтатьяОборотов);
	//пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """РГ_СтатьяОборотов""", пВыражение);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&прзРГ_СтатьяОборотов", пВыражение);

	//ПРОЕКТ.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.Проект", 
	"ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Проект);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Проект""", пВыражение);
	//ПРОЕКТ.РГ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.Проект", 
	"ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Проект);
	//пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """РГ_Проект""", пВыражение);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&прзРГ_Проект", пВыражение);
	
	//ОБЪЕКТ.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям,
	"ТабЧасть.Сценарий", 
	"ТабЧасть.Аналитика_2", 
	"ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Аналитика_2);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Объект""", пВыражение);
	//ОБЪЕКТ.РГ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2", 
	"ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Аналитика_2);
	//пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """РГ_Объект""", пВыражение);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&прзРГ_Объект", пВыражение);
	
	//АНАЛИТИКА_1.ТЧ (Номер заявки)
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.Аналитика_1", 
	"ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Аналитика_1, "Контракт_Инвест");
	
	//пВыражение = СтрЗаменить(пВыражение, "%ВАРИАНТ", "&ШапкаАналитика_1"); //для "Контракт_инвест" подставляем не аналитику_1 в ТЧ, а аналитику "шапки", что бы корректно связать с данными КЗБ
	пВыражение = СтрЗаменить(пВыражение, "%ВАРИАНТ", "Выбор когда &ШапкаАналитика_1 = ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка) Тогда ТабЧасть.Аналитика_1 Иначе  &ШапкаАналитика_1 Конец "); //для "Контракт_инвест" подставляем не аналитику_1 в ТЧ, а аналитику "шапки", что бы корректно связать с данными КЗБ
	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Аналитика_1""", пВыражение);
	
	
	//АНАЛИТИКА_1.РГ (Номер заявки)
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1", 
	"ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Аналитика_1);
	//пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """РГ_Аналитика_1""", пВыражение);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&прзРГ_Аналитика_1", пВыражение);
	
	//ЦФО.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.ЦФО", 
	"ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.ЦФО);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_ЦФО""", пВыражение);
	//ЦФО.РГ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО", 
	"ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.ЦФО);
	//пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """РГ_ЦФО""", пВыражение);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&прзРГ_ЦФО", пВыражение);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)
	
	//КОНТРАГЕНТ.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.Контрагент", 
	"ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Контрагент);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Контрагент""", пВыражение);
	//КОНТРАГЕНТ.РГ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.Контрагент", 
	"ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Контрагент);	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&прзРГ_Контрагент", пВыражение);
	
	//ДОГОВОРКОНТРАГЕНТА.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.ДоговорКонтрагента", 
	"ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.ДоговорКонтрагента);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_ДоговорКонтрагента""", пВыражение);
	//ДОГОВОРКОНТРАГЕНТА.РГ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.ДоговорКонтрагента", 
	"ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.ДоговорКонтрагента);	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&прзРГ_ДоговорКонтрагента", пВыражение);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	
	//Оптимизация и отборы - на сработал этот выбор, т.к. часть данных в запрос перестала попадать
	//пВыражениеОптимизации = ПолучитьВыражениеДляОтборов(пНастройкиВыбораКЗБПоСценариям);
	//Если пВыражениеОптимизации = "" Тогда
	//	
	//	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """РГ_Отбор"" = ""РГ_Отбор""", "Истина");	
	//Иначе
	//	
	//	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """РГ_Отбор"" = ""РГ_Отбор""", пВыражениеОптимизации);	
	//КонецЕсли;
	 
	Возврат пТекстЗапроса;
КонецФункции // ТекстЗапросаКБ()

//bit_SVKushnirenko 19.01.2017 #2657
//Выполняет настройку запроса выбора сумм по данным КЗБ в зависимости от настроек БК в системе
//Параметры:
//парТекстЗапроса - текст исходного запроса (прототипа для выбора по всем ключевым аналитикам без исключения)
//парВсеПериодыМесяц - включает безусловную группировку данных по месяцам, вне зависимости от настроек БК (необходимо для построения остатков по периодам планирования)
Функция КорректировкаТекстаЗапросаЗакрытия(парТекстЗапроса, парВсеПериодыМесяц = Ложь) Экспорт
	
	пТекстЗапроса = парТекстЗапроса;
	//Определение настроек выборки по ключевым аналитикам
	пНастройкиВыбораКЗБПоСценариям = СценариПланированияНастройкиВыбораСумм(парВсеПериодыМесяц);
	
	//ПЕРИОД
	пВыражение = ПолучитьВыражениеДляПериодов(пНастройкиВыбораКЗБПоСценариям, "бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", "бит_КонтрольныеЗначенияБюджетовОбороты.Период");
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ)", пВыражение); //встречается в запросе ОДИН раз, поэтому допустимо в данном случае
	
	//СТАТЬИОБОРОТОВ.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов", 
	"ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.СтатьяОборотов);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов", пВыражение);

	//ЦФО
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО", 
	"ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.ЦФО);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО", пВыражение);
	
	//ПРОЕКТ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.Проект", 
	"ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Проект);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "бит_КонтрольныеЗначенияБюджетовОбороты.Проект", пВыражение);
	
	//Аналитика_2 (Объект)
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2", 
	"ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Аналитика_2);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2", пВыражение);
	
	//АНАЛИТИКА_1 (Номер заявки)
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1", 
	"ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Аналитика_1);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1", пВыражение);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-06 (#3046)
	//КОНТРАГЕНТ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.Контрагент", 
	"ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Контрагент);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "бит_КонтрольныеЗначенияБюджетовОбороты.Контрагент", пВыражение);
	
	//ДОГОВОРКОНТРАГЕНТА
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый", 
	"бит_КонтрольныеЗначенияБюджетовОбороты.ДоговорКонтрагента", 
	"ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.ДоговорКонтрагента);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "бит_КонтрольныеЗначенияБюджетовОбороты.ДоговорКонтрагента", пВыражение);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-06 (#3046)
	
	//ПравилоДопусловия &пзДопусловиеГодВсеПериоды
	//пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	//"Подготовка.Сценарий", 
	//"ИСТИНА", 
	//"		ВЫБОР
	//|		КОГДА &НеВыводитьКопейки
	//|			ТОГДА Подготовка.Разница > 0.01
	//|		ИНАЧЕ Подготовка.Разница > 0
	//|	КОНЕЦ",
	//Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодВсе);
	//пТекстЗапроса = СтрЗаменить(пТекстЗапроса, "&НеВыводитьКопейки", пВыражение); //встречается в запросе ОДИН раз, поэтому допустимо в данном случае
	
	Возврат пТекстЗапроса;
КонецФункции // КорректировкаТекстаЗапросаЗакрытия()

//bit_SVKushnirenko 19.12.2016 #2657
//Возвращает значения ключевых аналитик по правилу построения ключевых аналитик в настройках БК из данных табличной части документа бюджетирования
Функция ТекстЗапросаЗначенийКлючевыхАналитикТЧ()

	пТекстЗапроса = 
	"ВЫБРАТЬ
	|	""ТЧ_СтатьяОборотов"" КАК СтатьяОборотов,
	|	""ТЧ_Период"" КАК Период,
	|	""ТЧ_ЦФО"" КАК ЦФО,
	|	""ТЧ_Объект"" КАК Аналитика_2,
	|	ВЫРАЗИТЬ(ТабЧасть.Сценарий КАК Справочник.СценарииПланирования) КАК Сценарий,
	|	""ТЧ_Проект"" КАК Проект,
	|	ТабЧасть.СуммаОперации,
	|	ТабЧасть.СтатьяОборотов КАК ИсхСтатьяОборотов,
	|	ТабЧасть.Период КАК ИсхПериод,
	|	ТабЧасть.ЦФО КАК ИсхЦФО,
	|	ТабЧасть.Аналитика_2 КАК ИсхАналитика_2,
	|	ТабЧасть.Проект КАК ИсхПроект,
	|	ТабЧасть.Аналитика_1 КАК ИсхАналитика_1,
	|	""ТЧ_Аналитика_1"" КАК Аналитика_1,
	|	ТабЧасть.СуммаОперации КАК СуммаОперации1,
	|	ТабЧасть.СуммаЛимита,
	|	ТабЧасть.СуммаПревышения,
	|	ТабЧасть.ЕстьПревышениеБюджета
	|ПОМЕСТИТЬ ТЧДокумента
	|ИЗ
	|	&ТабЧасть КАК ТабЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабЧасть.СтатьяОборотов,
	|	МАКСИМУМ(бит_БК_КонтролирующиеСтатьиОборотов.Период) КАК ПериодКС,
	|	ТабЧасть.ИсхПериод
	|ПОМЕСТИТЬ Тч_Контр_Периоды
	|ИЗ
	|	ТЧДокумента КАК ТабЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов КАК бит_БК_КонтролирующиеСтатьиОборотов
	|		ПО ТабЧасть.СтатьяОборотов = бит_БК_КонтролирующиеСтатьиОборотов.КонтролируемаяСтатья
	|			И ТабЧасть.ИсхПериод >= бит_БК_КонтролирующиеСтатьиОборотов.Период
	|ГДЕ
	|	бит_БК_КонтролирующиеСтатьиОборотов.АктивностьСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабЧасть.СтатьяОборотов,
	|	ТабЧасть.ИсхПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Тч_Контр_Периоды.СтатьяОборотов,
	|	бит_БК_КонтролирующиеСтатьиОборотов.КонтролирующаяСтатья,
	|	Тч_Контр_Периоды.ИсхПериод
	|ПОМЕСТИТЬ Тч_Контр_КС
	|ИЗ
	|	Тч_Контр_Периоды КАК Тч_Контр_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов КАК бит_БК_КонтролирующиеСтатьиОборотов
	|		ПО Тч_Контр_Периоды.СтатьяОборотов = бит_БК_КонтролирующиеСтатьиОборотов.КонтролируемаяСтатья
	|			И Тч_Контр_Периоды.ПериодКС = бит_БК_КонтролирующиеСтатьиОборотов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТЧДокумента.Сценарий.бит_БК_ИспользоватьКонтроллирующиеСтатьи
	|			ТОГДА ЕСТЬNULL(Тч_Контр_КС.КонтролирующаяСтатья, ТЧДокумента.СтатьяОборотов)
	|		ИНАЧЕ ТЧДокумента.СтатьяОборотов
	|	КОНЕЦ КАК СтатьяОборотов,
	|	ТЧДокумента.Период,
	|	ТЧДокумента.ЦФО,
	|	ТЧДокумента.Аналитика_2,
	|	ТЧДокумента.Сценарий,
	|	ТЧДокумента.Проект,
	|	ТЧДокумента.Аналитика_1,
	|	СУММА(ТЧДокумента.СуммаОперации) КАК СуммаОперации,
	|	МАКСИМУМ(ТЧДокумента.СуммаЛимита) КАК СуммаЛимита,
	|	МАКСИМУМ(ТЧДокумента.СуммаПревышения) КАК СуммаПревышения
	|ИЗ
	|	ТЧДокумента КАК ТЧДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Тч_Контр_КС КАК Тч_Контр_КС
	|		ПО ТЧДокумента.СтатьяОборотов = Тч_Контр_КС.СтатьяОборотов
	|			И ТЧДокумента.ИсхПериод = Тч_Контр_КС.ИсхПериод
	|ГДЕ
	|	ТЧДокумента.ЕстьПревышениеБюджета
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЧДокумента.Аналитика_1,
	|	ТЧДокумента.Проект,
	|	ТЧДокумента.Период,
	|	ТЧДокумента.Сценарий,
	|	ТЧДокумента.Аналитика_2,
	|	ТЧДокумента.ЦФО,
	|	ВЫБОР
	|		КОГДА ТЧДокумента.Сценарий.бит_БК_ИспользоватьКонтроллирующиеСтатьи
	|			ТОГДА ЕСТЬNULL(Тч_Контр_КС.КонтролирующаяСтатья, ТЧДокумента.СтатьяОборотов)
	|		ИНАЧЕ ТЧДокумента.СтатьяОборотов
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТЧДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Тч_Контр_Периоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Тч_Контр_КС";	
	//Определение настроек выборки по ключевым аналитикам
	пНастройкиВыбораКЗБПоСценариям = СценариПланированияНастройкиВыбораСумм();
	
	//ПЕРИОД.ТЧ
	пВыражение = ПолучитьВыражениеДляПериодов(пНастройкиВыбораКЗБПоСценариям, "ТабЧасть.Сценарий", "ТабЧасть.Период");
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Период""", пВыражение);
	
	//СТАТЬИОБОРОТОВ.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.СтатьяОборотов", 
	"ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.СтатьяОборотов);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_СтатьяОборотов""", пВыражение);

	//ПРОЕКТ.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.Проект", 
	"ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Проект);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Проект""", пВыражение);
	
	//ОБЪЕКТ.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.Аналитика_2", 
	"ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Аналитика_2);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Объект""", пВыражение);
	
	//АНАЛИТИКА_1.ТЧ (Номер заявки)
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.Аналитика_1", 
	"ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.Аналитика_1, "Контракт_Инвест");
	
	пВыражение = СтрЗаменить(пВыражение, "%ВАРИАНТ", "&ШапкаАналитика_1"); //для "Контракт_инвест" подставляем не аналитику_1 в ТЧ, а аналитику "шапки", что бы корректно связать с данными КЗБ
	
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_Аналитика_1""", пВыражение);
	
	//ЦФО.ТЧ
	пВыражение = ПолучитьВыражениеДляКолонкиЗапроса(пНастройкиВыбораКЗБПоСценариям, 
	"ТабЧасть.Сценарий", 
	"ТабЧасть.ЦФО", 
	"ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)",
	Перечисления.бит_БК_ДопИзмеренияКонтроля.ЦФО);
	пТекстЗапроса = СтрЗаменить(пТекстЗапроса, """ТЧ_ЦФО""", пВыражение);
	
	Возврат пТекстЗапроса;
КонецФункции // ТекстЗапросаЗначенийКлючевыхАналитикТЧ()

//bit_SVKushnirenko 19.12.2016 #2657
//Процедура взамен бит_ФормаВводаБюджетаВызовСервера.ПолучитьСоответствиеСценариев() за авторством Сундуковой
//Позволяет обработать массив сценариев в параметре, без необходимости передавать всю табличную часть документа
//Параметры:
//парСценарииКонтроллируемые - массив сценариев (возможно дублилующиеся в массиве)
Функция ПолучитьКонтроллирующиеСценарии(парСценарииКонтроллируемые)
	
	пМассивКонтроллирующихСценариев = новый Массив;

	пЗапрос = Новый Запрос;
	пЗапрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК ИмяНастройки,
	|	бит_БК_НастройкиБК.Значение
	|ИЗ
	|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	|ГДЕ
	|	бит_БК_НастройкиБК.Группа = ""Контролирующий сценарий""
	|	И бит_БК_НастройкиБК.ИмяНастройки В(&пзКонтроллируемыеСценарии)";
	
	пЗапрос.УстановитьПараметр("пзКонтроллируемыеСценарии", парСценарииКонтроллируемые);
	
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
	Если пТЗРез.Количество() > 0 Тогда
		
		Для каждого пРезультат Из пТЗРез Цикл
			
			пЗначение = пРезультат.Значение.Получить();
			Если ТипЗнч(пЗначение) = Тип("СправочникСсылка.СценарииПланирования")  Тогда
				
				пМассивКонтроллирующихСценариев.Добавить(пЗначение);
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
	Возврат пМассивКонтроллирующихСценариев;
КонецФункции // ПолучитьКонтроллирующиеСценарии()

//bit_SVKushnirenko 18.01.2017 #2657
// Возвращает соответствие зависимых сценариев для ключей из управляющих
// Параметры:
//парСценарииКонтроллирующие - массив контроллирующих сценариев
Функция ПолучитьСоответствиеКонтроллируемыхСценариев(парСценарииКонтроллирующие) Экспорт
	
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК КонтроллирующийСценарий,
	|	бит_БК_НастройкиБК.Значение
	|ИЗ
	|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	|ГДЕ
	|	бит_БК_НастройкиБК.Группа = ""Контролируемый сценарий""
	|	И бит_БК_НастройкиБК.ИмяНастройки В(&пзКонтроллирующиеСтатьи)";
	
	пЗапрос.УстановитьПараметр("пзКонтроллирующиеСтатьи", парСценарииКонтроллирующие);
	
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
	Если пТЗРез.Количество() > 0 Тогда
		
		пТЗРез.Колонки.Добавить("КонтроллируемыйСценарий");
		
		Для каждого пРезультат Из пТЗРез Цикл
			
			пЗначение = пРезультат.Значение.Получить();
			Если ТипЗнч(пЗначение) = Тип("СправочникСсылка.СценарииПланирования")  Тогда
				
				пРезультат.КонтроллируемыйСценарий = пЗначение;
			КонецЕсли;
		КонецЦикла; 
		
		пТЗРез.Свернуть("КонтроллирующийСценарий, КонтроллируемыйСценарий");
		
		пРезультат =Новый Соответствие();
		Для каждого пСтрока Из пТЗРез Цикл
		
			пРезультат.Вставить(пСтрока.КонтроллирующийСценарий, пСтрока.КонтроллируемыйСценарий);
		КонецЦикла;
		
		Возврат пРезультат;
	Иначе

		Возврат Неопределено;
	КонецЕсли;
КонецФункции // ПолучитьСоответствиеКонтроллируемыхСценариев()

//bit_SVKushnirenko 13.12.2016 #2669
//Заполняет сведения о состоянии остатков по бюджету в табличной части данных по бюджету ФВБ (БДДС) и глобальных переменных состояния бюджетного контроля ФВБ
// Параметры:
//парОбъект - объект в котором проводится заполнение (ФВБ)
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-18 (#3393)
//Процедура ЗаполнитьОстаткиБюджетаИПризнакиБюджетногоКонтроля(парОбъект) Экспорт
//Заменено на:
Процедура ЗаполнитьОстаткиБюджетаИПризнакиБюджетногоКонтроля(парОбъект, ПроверятьОстаткиПроведенного = Ложь) Экспорт
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-18 (#3393)


	//ЛТ2669 п.3.2.6 - не выполняем расчет остатков для проведенных документов
	Если парОбъект.Проведен 
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-18 (#3393)
		 И НЕ ПроверятьОстаткиПроведенного
		 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-18 (#3393)
	Тогда 
		
		Возврат;
	КонецЕсли;
	 
	//Инициализация глобальных значений расчета
	парОбъект.СверхБюджета = ложь;
	//По сведениям из комментария "Сундукова от 31.03.16": добавили два реквизита:
	//бит_СуммаПревышающаяБюджет - нужен для отправки писем (там только сумма меньше нуля)
	//бит_ИтогСуммаПоБюджету - нужен для подсчета итога по колонкам
	парОбъект.бит_СуммаПревышающаяБюджет = 0;
	парОбъект.бит_ИтогСуммаПоБюджету = 0;
	
	//Для заполнения в теле процедуры
	пТчБДДСДокумента = парОбъект.БДДС;
	пТЧДокумента = пТчБДДСДокумента.Выгрузить().Скопировать();
	
	//Для формирования данных БК
	пТЧДляЗапросаБК = пТЧДокумента.Скопировать();
	пКолонки = пТЧДляЗапросаБК.Колонки;
	пКолонки.Сумма.Имя = "бкСуммаСНДС";
	пКолонки.бит_БК_СуммаБезНДС.Имя = "Сумма";
	
	пПериодВыборки = парОбъект.Дата;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-12-05 (#3567)
	Если бит_ФормаВводаБюджетаВызовСервера.ОпределитьПризнакПерезаполненияОстатков(парОбъект.Ссылка) Тогда 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-12-05 (#3567)
	
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-18 (#3393)
		//Изменяем период по операционным
		пНастройкиВыбораКЗБПоСценариям = СценариПланированияНастройкиВыбораСумм();
		СписокАналитик_ЗУ = Неопределено;
		пНастройкиВыбораКЗБПоСценариям.Свойство(ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_У").ИмяПредопределенныхДанных,СписокАналитик_ЗУ);
		Если СписокАналитик_ЗУ <> Неопределено Тогда 
			Для Каждого ЭлСписка Из СписокАналитик_ЗУ Цикл 
				Если ЭлСписка.Значение = ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодВсе")
				 ИЛИ ЭлСписка.Значение = ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодГод")
				 ИЛИ ЭлСписка.Значение = ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодМесяц")
				Тогда
				   ЭлСписка.Значение = ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодПолугодие");
				   Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ЭлСписка.Значение <> ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодПолугодие") Тогда 
				СписокАналитик_ЗУ.Добавить(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодПолугодие"));
			КонецЕсли;
				
		КонецЕсли;	
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-18 (#3393)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-12-05 (#3567)
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-12-05 (#3567)
	
	пЗапрос = Новый Запрос;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-18 (#3393)
	//пЗапрос.Текст = ТекстЗапросаКБ();
	//Заменено на:
	пЗапрос.Текст = ТекстЗапросаКБ(,пНастройкиВыбораКЗБПоСценариям);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-18 (#3393)	
	
	пЗапрос.УстановитьПараметр("Ссылка", парОбъект.Ссылка);
	пЗапрос.УстановитьПараметр("СписокСтатей", пТЧДокумента.ВыгрузитьКолонку("СтатьяОборотов"));
	пЗапрос.УстановитьПараметр("ТабЧасть", пТЧДляЗапросаБК);
	
	//Отборы и оптимизация{
	пЗапрос.УстановитьПараметр("СписокАналитика_2", пТЧДокумента.ВыгрузитьКолонку("Аналитика_2")); //Объект
	пЗапрос.УстановитьПараметр("СписокЦФО", пТЧДокумента.ВыгрузитьКолонку("ЦФО")); 
	пЗапрос.УстановитьПараметр("СписокПроект", пТЧДокумента.ВыгрузитьКолонку("Проект")); 
	
	пМассивЗаявок = пТЧДокумента.ВыгрузитьКолонку("Аналитика_1");
	пМассивЗаявок.Добавить(парОбъект.бит_БК_НомерЗаявки); //если заявка-контракт то в оптимизацию должен попасть и он (хотя есть сомнение: возможно в универсальной заявке он вообще здесь должен быть один)
	
	пЗапрос.УстановитьПараметр("СписокАналитика_1", пМассивЗаявок); //№ заявки
	пЗапрос.УстановитьПараметр("ШапкаАналитика_1", парОбъект.бит_БК_НомерЗаявки); //в отборы включается значение из шапки, если это контракт
	//}Отборы и оптимизация{
	
	пСценарииКонтроллируемые = пТЧДокумента.ВыгрузитьКолонку("Сценарий");
	пЗапрос.УстановитьПараметр("Сценарий", ПолучитьКонтроллирующиеСценарии(пСценарииКонтроллируемые));
	пЗапрос.УстановитьПараметр("Дата", пПериодВыборки); 
		
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
	
	//очистка данных БК в ТЧ перед началом заполнения данными из запроса
	Для каждого пСтрокаТчБДДС Из пТчБДДСДокумента Цикл
		
		пСтрокаТчБДДС.ОстатокПоБюджету = 0;
		пСтрокаТчБДДС.БИТ_СуммаСверхБюджета = 0;
		пСтрокаТчБДДС.бит_БК_ПолнаяСуммаЛимита = 0;
		пСтрокаТчБДДС.бит_БК_ПревышениеБюджета = Ложь;
	КонецЦикла; 
		
	Если пТЗРез.Количество() > 0 Тогда //БК что-то вернул и это следует интерпретировать
		
		парОбъект.СверхБюджета = ?(пТЗРез.Итог("СверхБюджетаПризнак") > 0, Истина, Ложь);
		парОбъект.бит_СуммаПревышающаяБюджет = пТЗРез[0].ПолнаяСуммаСверхБюджетаПоВсемСтрокам; //одинаковое значение для всех строк универсального БК
		парОбъект.бит_ИтогСуммаПоБюджету = пТЗРез[0].ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам; //одинаковое значение для всех строк универсального БК
		
		пОтборСтрокЗаполнения = Новый Структура("Сценарий, СтатьяОборотов, Период, ЦФО, Проект, Аналитика_1, Аналитика_2"); 
		Для каждого пСтрокаБК Из пТЗРез Цикл //Заполняем ключевые данные ТЧ документа
			
			//Сопоставление таблицы документа, данным БК (они свернуты по комбинации колонок отбора)
			пОтборСтрокЗаполнения.Сценарий = пСтрокаБК.Сценарий;
			пОтборСтрокЗаполнения.СтатьяОборотов = пСтрокаБК.ИсхСтатьяОборотов;
			пОтборСтрокЗаполнения.Период = пСтрокаБК.ИсхПериод;
			пОтборСтрокЗаполнения.ЦФО = пСтрокаБК.ИсхЦФО;
			пОтборСтрокЗаполнения.Проект = пСтрокаБК.ИсхПроект;
			пОтборСтрокЗаполнения.Аналитика_1 = пСтрокаБК.ИсхАналитика_1;
			пОтборСтрокЗаполнения.Аналитика_2 = пСтрокаБК.ИсхАналитика_2;
			
			пМассивНайденых = пТчБДДСДокумента.НайтиСтроки(пОтборСтрокЗаполнения);
			Для каждого пСтрокаЗаполнения Из пМассивНайденых Цикл
			
				пСтрокаЗаполнения.ОстатокПоБюджету = пСтрокаБК.ОстатокПослеОперации;
				пСтрокаЗаполнения.БИТ_СуммаСверхБюджета = -1*пСтрокаБК.ОстатокПослеОперации;
				пСтрокаЗаполнения.бит_БК_ПревышениеБюджета = ?(пСтрокаБК.СверхБюджетаПризнак = 0, Ложь, Истина);;
				пСтрокаЗаполнения.бит_БК_ПолнаяСуммаЛимита = пСтрокаБК.СуммаКонтроль;
			КонецЦикла; 
		КонецЦикла; 	
	КонецЕсли;
КонецПроцедуры // ЗаполнитьОстаткиБюджетаИПризнакиБюджетногоКонтроля()

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-18 (#3393)
Функция ЕстьОперационныеСтатьи(МассивСтатейОборотов)
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_СтатьиОборотов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.бит_СтатьиОборотов КАК бит_СтатьиОборотов
	|ГДЕ
	|	бит_СтатьиОборотов.ВидСтатьи = ЗНАЧЕНИЕ(Справочник.бит_ВидыСтатейОборотов.Выручка)
	|	И бит_СтатьиОборотов.Ссылка = &мСтатейОборотов");
	Запрос.УстановитьПараметр("мСтатейОборотов", МассивСтатейОборотов);
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-18 (#3393)

//{bit_SVKushnirenko 10.03.2017 #2596
//Выполняет типовой запрос к данным БК на основе сведений в табличной части "БДДС" ФВБ (вызывается в разных контекстах единообразно).
// Параметры:
//парТчБДДСДокумента - таблица значений БДДС ФВБ, где колонки:
//  Сумма = числовое значение сущности "Сумма без НДС";
//  Сценарий, Период, ЦФО, Проект, Аналитика_1, Аналитика_2 - типовые колонки аналитик тч БДДС
//  ОстатокПоБюджету = ОстатокПослеОперации (явное значение остатка вне зависимости от знака остатка);
//  БИТ_СуммаСверхБюджета = модуль ОстатокПослеОперации, если он <0;
//  бит_БК_ПревышениеБюджета = СверхБюджетаПризнак (булево, где Истина = есть превышение бюджета);
//  бит_БК_ПолнаяСуммаЛимита = СуммаКонтроль (полная сумма лимита БК до операций исчерпания по операциям планирования);
//
//парНомерЗаявкиШапка - ссылка на "№ заявки" для движений по сценарию "контакт"
//парСсылка - ссылка на текущий контроллируемый документ (даже если это недействительная ссылка нового документа - это не приведет к ошибкам)
//Возврат: ТЧ данных БК (состав данных см. в запросе ТекстЗапросаКБ())
Функция БКПоДаннымБДДС(парТчБДДСДокумента, знач парНомерЗаявкиШапка = Неопределено,  парСсылка) Экспорт

	пТЧДокумента = парТчБДДСДокумента.Скопировать();
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-04-19 (#3232)
	Если пТЧДокумента.Колонки.Найти("ПериодГод") = Неопределено Тогда 
		пТЧДокумента.Колонки.Добавить("ПериодГод", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-04-19 (#3232)
	
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = ТекстЗапросаКБ();
	
	пЗапрос.УстановитьПараметр("Ссылка", парСсылка);
	пЗапрос.УстановитьПараметр("СписокСтатей", пТЧДокумента.ВыгрузитьКолонку("СтатьяОборотов"));
	пЗапрос.УстановитьПараметр("ТабЧасть", пТЧДокумента);
	
	//Отборы и оптимизация{
	пЗапрос.УстановитьПараметр("СписокАналитика_2", пТЧДокумента.ВыгрузитьКолонку("Аналитика_2")); //Объект
	пЗапрос.УстановитьПараметр("СписокЦФО", пТЧДокумента.ВыгрузитьКолонку("ЦФО")); 
	пЗапрос.УстановитьПараметр("СписокПроект", пТЧДокумента.ВыгрузитьКолонку("Проект")); 
	
	пМассивЗаявок = пТЧДокумента.ВыгрузитьКолонку("Аналитика_1");
	Если ЗначениеЗаполнено(парНомерЗаявкиШапка) Тогда
				
		пМассивЗаявок.Добавить(парНомерЗаявкиШапка); //если заявка-контракт то в оптимизацию должен попасть и он (хотя есть сомнение: возможно в универсальной заявке он вообще здесь должен быть один)
	Иначе
		
		парНомерЗаявкиШапка = Документы.бит_ФормаВводаБюджета.ПустаяСсылка();
	КонецЕсли;
	
	пЗапрос.УстановитьПараметр("СписокАналитика_1", пМассивЗаявок); //№ заявки
	пЗапрос.УстановитьПараметр("ШапкаАналитика_1", парНомерЗаявкиШапка); //в отборы включается значение из шапки, для контракта
	//}Отборы и оптимизация{
	
	пСценарииКонтроллируемые = пТЧДокумента.ВыгрузитьКолонку("Сценарий");
	пЗапрос.УстановитьПараметр("Сценарий", ПолучитьКонтроллирующиеСценарии(пСценарииКонтроллируемые));
	
	Возврат пЗапрос.Выполнить().Выгрузить(); //в запросе представлены все строки ТЧ с данными суммы БК и признаками превышения
КонецФункции // БКПоДаннымБДДС() }bit_SVKushnirenko 10.03.2017 #2596 

//bit_SVKushnirenko 22.12.2016 #2669.3
//Выполняет оперативную выборку данных  бюджетного контроля по документу и выводит при превышении сведения о характере превышений
// Параметры:
//парТчБДДСДокумента - таблица значений БДДС ФВБ, где колонки:
//  Сумма = числовое значение сущности "Сумма без НДС";
//  Сценарий, Период, ЦФО, Проект, Аналитика_1, Аналитика_2 - типовые колонки аналитик тч БДДС
//  ОстатокПоБюджету = ОстатокПослеОперации (явное значение остатка вне зависимости от знака остатка);
//  БИТ_СуммаСверхБюджета = модуль ОстатокПослеОперации, если он <0;
//  бит_БК_ПревышениеБюджета = СверхБюджетаПризнак (булево, где Истина = есть превышение бюджета);
//  бит_БК_ПолнаяСуммаЛимита = СуммаКонтроль (полная сумма лимита БК до операций исчерпания по операциям планирования);
//
//парНомерЗаявкиШапка - ссылка на "№ заявки" для движений по сценарию "контакт"
//парСсылка - ссылка на текущий контроллируемый документ (даже если это недействительная ссылка нового документа - это не приведет к ошибкам)
//парОтказ - переменная отказа от выполнения транзакции
//парЗаголовок - строка-заголовок для вывода сообщений об ошибках
Процедура БюджетныйКонтрольОперативный(парТчБДДСДокумента, знач парНомерЗаявкиШапка = Неопределено,  парСсылка,  парОтказ = Неопределено, парЗаголовок = "") Экспорт
	
	//{ bit_SVKushnirenko 10.03.2017 #2596
	//ИсходныйКод{
	//пТЧДокумента = парТчБДДСДокумента.Скопировать();
	//
	//пЗапрос = Новый Запрос;
	//пЗапрос.Текст = ТекстЗапросаКБ();
	//
	//пЗапрос.УстановитьПараметр("Ссылка", парСсылка);
	//пЗапрос.УстановитьПараметр("СписокСтатей", пТЧДокумента.ВыгрузитьКолонку("СтатьяОборотов"));
	//пЗапрос.УстановитьПараметр("ТабЧасть", пТЧДокумента);
	//
	////Отборы и оптимизация{
	//пЗапрос.УстановитьПараметр("СписокАналитика_2", пТЧДокумента.ВыгрузитьКолонку("Аналитика_2")); //Объект
	//пЗапрос.УстановитьПараметр("СписокЦФО", пТЧДокумента.ВыгрузитьКолонку("ЦФО")); 
	//пЗапрос.УстановитьПараметр("СписокПроект", пТЧДокумента.ВыгрузитьКолонку("Проект")); 
	//
	//пМассивЗаявок = пТЧДокумента.ВыгрузитьКолонку("Аналитика_1");
	//Если ЗначениеЗаполнено(парНомерЗаявкиШапка) Тогда
	//			
	//	пМассивЗаявок.Добавить(парНомерЗаявкиШапка); //если заявка-контракт то в оптимизацию должен попасть и он (хотя есть сомнение: возможно в универсальной заявке он вообще здесь должен быть один)
	//Иначе
	//	
	//	парНомерЗаявкиШапка = Документы.бит_ФормаВводаБюджета.ПустаяСсылка();
	//КонецЕсли;
	//
	//пЗапрос.УстановитьПараметр("СписокАналитика_1", пМассивЗаявок); //№ заявки
	//пЗапрос.УстановитьПараметр("ШапкаАналитика_1", парНомерЗаявкиШапка); //в отборы включается значение из шапки, для контракта
	////}Отборы и оптимизация{
	//
	//пСценарииКонтроллируемые = пТЧДокумента.ВыгрузитьКолонку("Сценарий");
	//пЗапрос.УстановитьПараметр("Сценарий", ПолучитьКонтроллирующиеСценарии(пСценарииКонтроллируемые));
	//
	//пТЗРез = пЗапрос.Выполнить().Выгрузить(); //в запросе представлены все строки ТЧ с данными суммы БК и признаками превышения
	//}ИсходныйКод
	
	пТЗРез = БКПоДаннымБДДС(парТчБДДСДокумента, парНомерЗаявкиШапка, парСсылка);
	//} bit_SVKushnirenko 10.03.2017 #2596
	
	Если пТЗРез.Количество() = 0 Тогда
		
		Возврат; //запрос БК не вернул данных, значит нет предмета для контироля
	КонецЕсли;
	
	Если пТЗРез.Итог("СверхБюджетаПризнак") = 0 Тогда //БК выполнен, но ни одна строка не превысила бюджет
		
		Возврат;	
	Иначе
		
		парОтказ = Истина; //бюджет хотя бы в одной строке - отказ
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(парЗаголовок);
	КонецЕсли;
	
	//Сворачиваем данные по ключевым аналитикам для вывода пользователю
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-10 (#3045)	
	//пТЗРез.Свернуть("Сценарий, Период, ЦФО, СтатьяОборотов, Проект, Аналитика_1, Аналитика_2, ЕстьОстатокБюджетаПослеОперацииБольшеНуля, СверхБюджетаПризнак, ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам, ПолнаяСуммаСверхБюджетаПоВсемСтрокам, ОстатокДоОперации, ОстатокПослеОперации, СверхБюджетаПоКлючевым, СуммаКонтроль, СуммаОперации", "");
	//Заменено на:
	//ОКЕЙ Рычаков А.С.(СофтЛаб) 2020-01-15 Начало (#3568)
	//пТЗРез.Свернуть("Сценарий, Период, ЦФО, СтатьяОборотов, Контрагент, ДоговорКонтрагента, Проект, Аналитика_1, Аналитика_2, ЕстьОстатокБюджетаПослеОперацииБольшеНуля, СверхБюджетаПризнак, ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам, ПолнаяСуммаСверхБюджетаПоВсемСтрокам, ОстатокДоОперации, ОстатокПослеОперации, СверхБюджетаПоКлючевым, СуммаКонтроль, СуммаОперации", "");
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-10 (#3045)
	пТЗРез.Свернуть("Сценарий, СценарийКонтроллирующий, Период, ЦФО, СтатьяОборотов, Контрагент, ДоговорКонтрагента, Проект, Аналитика_1, Аналитика_2, ЕстьОстатокБюджетаПослеОперацииБольшеНуля, СверхБюджетаПризнак, ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам, ПолнаяСуммаСверхБюджетаПоВсемСтрокам, ОстатокДоОперации, ОстатокПослеОперации, СверхБюджетаПоКлючевым, СуммаКонтроль, СуммаОперации", "");
	//ОКЕЙ Рычаков А.С.(СофтЛаб) 2020-01-15 Конец (#3568)
	
	//Определение настроек выборки по ключевым аналитикам для вывода сообщений об ошибках
	пНастройкиВыбораКЗБПоСценариям = СценариПланированияНастройкиВыбораСумм();
		
	пМетаданныеПеречисления = Метаданные.Перечисления.бит_БК_ДопИзмеренияКонтроля;
	пПеречисленияИнд = Перечисления.бит_БК_ДопИзмеренияКонтроля;
	
	Для каждого пСтрокаОценкиЛимитов Из пТЗРез Цикл
		
		Если пСтрокаОценкиЛимитов.СверхБюджетаПризнак <>  1 Тогда
			
			Продолжить; //бюджет не превышен
		КонецЕсли;
		
		Попытка // на случай, если сценарий не предопределенный
			
			пПредопределенноеИмяСценария = Справочники.СценарииПланирования.ПолучитьИмяПредопределенного(пСтрокаОценкиЛимитов.Сценарий);
		Исключение
			
			//Задача 2669 не уточняет порядок выполнения БК для нестандартных сценариев, поэтому сохраняем его типовым для не предопределенных в конфигурации сценариев, а здесь пропускаем подобные данные
			//бит_ОбщегоНазначения.СообщитьОбОшибке("Сценарий: " + пСтрокаОценкиЛимитов.Сценарий + " - не является предопределенным бюджетный контроль ОК для него неопределен и не выполняется!",, парЗаголовок, СтатусСообщения.Важное);
			Продолжить;
		КонецПопытки;
		
		пИзмеренияБКОКПоСтроке = Неопределено;
		Если НЕ  пНастройкиВыбораКЗБПоСценариям.Свойство(пПредопределенноеИмяСценария, пИзмеренияБКОКПоСтроке)  Тогда
			
			//Задача 2669 не уточняет каким должно быть поведения в случае, если сценарий не указан в настройках регистра "Настройки БК (БИТ)", предполагаем, что для таких сценариев просто не выполняется БК ОК, но выполняется типовой БК-БИТ
			//бит_ОбщегоНазначения.СообщитьОбОшибке("Для сценария: " + пСтрокаОценкиЛимитов.Сценарий + " - в регистре ""Настройки БК (БИТ)"" не определены настройкий в группе ""Контроль бюджета"", бюджетный контроль ОК не выполняется!",, парЗаголовок, СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		//ОКЕЙ Рычаков А.С.(СофтЛаб) 2020-01-15 Начало (#3568)
		//пСценарийКонтроллируемый = пСтрокаОценкиЛимитов.Сценарий;
		пСценарийКонтроллируемый = пСтрокаОценкиЛимитов.СценарийКонтроллирующий;
		//ОКЕЙ Рычаков А.С.(СофтЛаб) 2020-01-15 Конец (#3568)
		пСценарийКонтроллируемыйВалюта = пСценарийКонтроллируемый.Валюта;
		
		пТекстСообщения = "По сценарию: """ + пСценарийКонтроллируемый + """, аналитике:" + Символы.ПС;
		Для каждого пЗначениеКлАналитики Из пИзмеренияБКОКПоСтроке Цикл
			
			пЗначениеИзмеренияПеречисления = пЗначениеКлАналитики.Значение;
			Если пЗначениеИзмеренияПеречисления = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодВсе  Тогда
				
				Продолжить; //такой период не является аналитикой
			ИначеЕсли пЗначениеИзмеренияПеречисления =  Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодМесяц  Тогда 
				
				пТекстСообщения = пТекстСообщения + "Период: " + Формат(пСтрокаОценкиЛимитов.Период, "ДФ='MMMM yyyy'") + Символы.ПС;
			ИначеЕсли пЗначениеИзмеренияПеречисления = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодГод  Тогда 
				
				пТекстСообщения = пТекстСообщения + "Период: " + Формат(пСтрокаОценкиЛимитов.Период, "ДФ=yyyy") + Символы.ПС;
			Иначе //остальные значения перечисления вносят текст сообзщения  по синониму и имени реквизита
				
				пМетаПеречисление = пМетаданныеПеречисления.ЗначенияПеречисления[пПеречисленияИнд.Индекс(пЗначениеИзмеренияПеречисления)];
				
				//Имя реквизита
				пИмя = пМетаПеречисление.Имя;				
				//Синоним
				пСиноним = пМетаПеречисление.Синоним;
				
				пТекстСообщения = пТекстСообщения + пСиноним + ": """ + пСтрокаОценкиЛимитов[пИмя] + """" + Символы.ПС;
			КонецЕсли; 
		КонецЦикла;
		
		пТекстСообщения = пТекстСообщения + "Остаток в рамках бюджета: " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(пСтрокаОценкиЛимитов.ОстатокДоОперации, пСценарийКонтроллируемыйВалюта,"0.00") + 
		", сумма операции: " +  ОбщегоНазначенияБПВызовСервера.ФорматСумм(пСтрокаОценкиЛимитов.СуммаОперации, пСценарийКонтроллируемыйВалюта,"0.00") + 
		//ОКЕЙ Рычаков А.С.(СофтЛаб) 2020-01-15 Начало (#3568)
		//", недостаточно: " +  ОбщегоНазначенияБПВызовСервера.ФорматСумм(пСтрокаОценкиЛимитов.СверхБюджетаПоКлючевым, пСценарийКонтроллируемыйВалюта,"0.00") +
		//"(превыш. " + 
		//Формат(?(пСтрокаОценкиЛимитов.СуммаКонтроль = 0, 100, 
		//пСтрокаОценкиЛимитов.СверхБюджетаПоКлючевым*100/пСтрокаОценкиЛимитов.СуммаКонтроль),"ЧДЦ=2; ЧРД=.; ЧН=-; ЧО=1") + "%)";
		", недостаточно средств: " +  ОбщегоНазначенияБПВызовСервера.ФорматСумм(пСтрокаОценкиЛимитов.СверхБюджетаПоКлючевым, пСценарийКонтроллируемыйВалюта,"0.00");
		//ОКЕЙ Рычаков А.С.(СофтЛаб) 2020-01-15 Конец (#3568)
		
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(пТекстСообщения);
		
		//Пример вывода сообщения
		//По сценарию "Контракт инвест",
		//по аналитике:
		//- Статья оборотов "Складское оборудование"
		//- ЦФО "Продажи (с 2016 г)"
		//- Проект "2016 Действующий"
		//- № заявки "Форма ввода бюджета 160808642 от 25.08.2016 11:43:06"
		//- Объект "001 ГМ СПб Озерки"
		//Остаток в рамках бюджета: 87 848,88 руб., сумма в документе: 96 325,81 руб., не достаточно: 8 476,93 руб. (превыш. 9,65%).
	КонецЦикла; 
КонецПроцедуры // БюджетныйКонтрольОперативный()

//bit_SVKushnirenko 25.12.2016 #2669.3
//Возвращает классификацию сценария для корректировки типовых методов бюджетного контроля БИТ: 
//если это сценарий  для которых описаны настройки ключевых аналитик в регистре "Настройки БК (БИТ)" по группе "Контроль бюджета" = ЛОЖЬ
//Иначе = ИСТИНА
// Параметры:
//парТекущийСценарий  = СправочникСсылка.СценарииПланирования - анализируемый сценарий
Функция ЭтоНеСценарийБКОК(парТекущийСценарий) Экспорт

	пЗапрос = Новый Запрос;
	пЗапрос.Текст = "ВЫБРАТЬ
	                |	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК ИмяНастройки
	                |ИЗ
	                |	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	                |ГДЕ
	                |	бит_БК_НастройкиБК.Группа = ""Контроль бюджета""
	                |	И бит_БК_НастройкиБК.ИмяНастройки = &пзСценарииКонтроля";
	
	пЗапрос.УстановитьПараметр("пзСценарииКонтроля", парТекущийСценарий);
	
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
	Если пТЗРез.Количество() > 0 Тогда //сценарий БК ОК
		
		Возврат Ложь;
	Иначе
		
		Возврат Истина;
	КонецЕсли;
КонецФункции // ЭтоНеСценарийБКОК()

//bit_SVKushnirenko 11.01.2017 #2669.4
//Выполняет проверку ограничений бюджетного контроля и при необходимости выводит сообщения для пользователя
//проверка выполняется по данным ТЧ движений документа ФВБ (оперативный расчет не выполняется по требованию заказчика)
// Параметры:
//парТчБДДСДокумента -  таблица значений БДДС ФВБ, где колонки:
//  Сумма = числовое значение сущности "Сумма без НДС";
//  Сценарий, Период, ЦФО, Проект, Аналитика_1, Аналитика_2 - типовые колонки аналитик тч БДДС
//  ОстатокПоБюджету = ОстатокПослеОперации (явное значение остатка вне зависимости от знака остатка);
//  БИТ_СуммаСверхБюджета = модуль ОстатокПослеОперации, если он <0;
//  бит_БК_ПревышениеБюджета = СверхБюджетаПризнак (булево, где Истина = есть превышение бюджета);
//  бит_БК_ПолнаяСуммаЛимита = СуммаКонтроль (полная сумма лимита БК до операций исчерпания по операциям планирования);
//
//парДата - дата актуальности настроейи  контроллирующих статей
//парНомерЗаявкиШапка - ссылка на "№ заявки" для движений по сценарию "контакт"
//парСверхБюджета - признак документа "Сверх бюджета", который отключает бюджетный контроль
//парОтказ - переменная отказа от выполнения транзакции
//парЗаголовок - строка-заголовок для вывода сообщений об ошибках
//Возврат:
//Истина = БК пройден успешно; Ложь = есть нарушения БК в данных ТЧ документа
Функция БюджетныйКонтрольНеОперативный(парТчБДДСДокумента, парНомерЗаявкиШапка, парСверхБюджета = Ложь, парОтказ = Ложь,  парЗаголовок = "") Экспорт
	
	пТЧДокумента = парТчБДДСДокумента.Скопировать();
	
	//Подготовка колонок для запроса
	пКолонки = пТЧДокумента.Колонки;
	пКолонки.бит_БК_ПревышениеБюджета.Имя = "ЕстьПревышениеБюджета";
	пКолонки.БИТ_СуммаСверхБюджета.Имя = "СуммаПревышения";
	пКолонки.бит_БК_ПолнаяСуммаЛимита.Имя = "СуммаЛимита";
	пКолонки.бит_БК_СуммаБезНДС.Имя = "СуммаОперации";
	
	//Получение ключевых аналитик ТЧ по общему правилу для запроса КЗБ, вычисление суммы для "Суммы без НДС" по ключевым аналитикам
	пЗапрос = Новый Запрос;
	пЗапрос.Текст = ТекстЗапросаЗначенийКлючевыхАналитикТЧ();
	пЗапрос.УстановитьПараметр("ТабЧасть", пТЧДокумента);
	пЗапрос.УстановитьПараметр("ШапкаАналитика_1", парНомерЗаявкиШапка); //в отборы включается значение из шапки, если это контракт
	пТЗРез = пЗапрос.Выполнить().Выгрузить(); //ТЧ-зеркало документа с данными ключевых аналитик, сопоставленных с номером строки
	
	Если пТЗРез.Количество() = 0 Тогда //БК пройден успешно (нет сверхбюджетных строк)
				
		Возврат Истина;
	КонецЕсли;
	
	бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(парЗаголовок);
	
	//Определение настроек выборки по ключевым аналитикам для вывода сообщений об ошибках
	пНастройкиВыбораКЗБПоСценариям = СоответствиеНастройкиКлючевыхАналитикСценарию();
		
	пМетаданныеПеречисления = Метаданные.Перечисления.бит_БК_ДопИзмеренияКонтроля;
	пПеречисленияИнд = Перечисления.бит_БК_ДопИзмеренияКонтроля;
	
	Для каждого пСтрокаОценкиЛимитов Из пТЗРез Цикл //в результате запроса только строки с превышением лимитов
		
		пИзмеренияБКОКПоСтроке = Неопределено;
		пСценарийСтроки = пСтрокаОценкиЛимитов.Сценарий;
		
		пИзмеренияБКОКПоСтроке = пНастройкиВыбораКЗБПоСценариям[пСценарийСтроки];
		Если пИзмеренияБКОКПоСтроке = Неопределено  Тогда
			
			//Задача 2669 не уточняет каким должно быть поведения в случае, если сценарий не указан в настройках регистра "Настройки БК (БИТ)", предполагаем, что для таких сценариев просто не выполняется БК ОК, но выполняется типовой БК-БИТ
			//бит_ОбщегоНазначения.СообщитьОбОшибке("Для сценария: " + пСценарийСтроки + " - в регистре ""Настройки БК (БИТ)"" не определены настройкий в группе ""Контроль бюджета"", бюджетный контроль ОК не выполняется!",, парЗаголовок, СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		пСценарийВалюта = пСценарийСтроки.Валюта;
		
		пТекстСообщения = "По сценарию: """ + пСценарийСтроки + """, аналитике:" + Символы.ПС;
		Для каждого пЗначениеКлАналитики Из пИзмеренияБКОКПоСтроке Цикл
			
			пЗначениеИзмеренияПеречисления = пЗначениеКлАналитики.Значение;
			Если пЗначениеИзмеренияПеречисления = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодВсе  Тогда
				
				Продолжить; //такой период не является аналитикой
			ИначеЕсли пЗначениеИзмеренияПеречисления =  Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодМесяц  Тогда 
				
				пТекстСообщения = пТекстСообщения + "Период: " + Формат(пСтрокаОценкиЛимитов.Период, "ДФ='MMMM yyyy'") + Символы.ПС;
			ИначеЕсли пЗначениеИзмеренияПеречисления = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодГод  Тогда 
				
				пТекстСообщения = пТекстСообщения + "Период: " + Формат(пСтрокаОценкиЛимитов.Период, "ДФ=yyyy") + Символы.ПС;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-24 (#3393)
			ИначеЕсли пЗначениеИзмеренияПеречисления = Перечисления.бит_БК_ДопИзмеренияКонтроля.ПериодПолугодие  Тогда 
				
				пТекстПолугодие = НСтр("ru = '%1 полугодие %2 года'");
				пТекстПолугодие = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пТекстПолугодие, ?(Месяц(пСтрокаОценкиЛимитов.Период)<7, "1", "2"),
																										   Формат(пСтрокаОценкиЛимитов.Период, "ДФ=yyyy"));
				
				
				пТекстСообщения = пТекстСообщения + "Период: " + пТекстПолугодие + Символы.ПС;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-24 (#3393)
			Иначе //остальные значения перечисления вносят текст сообзщения  по синониму и имени реквизита
				
				пМетаПеречисление = пМетаданныеПеречисления.ЗначенияПеречисления[пПеречисленияИнд.Индекс(пЗначениеИзмеренияПеречисления)];
				
				//Имя реквизита
				пИмя = пМетаПеречисление.Имя;				
				//Синоним
				пСиноним = пМетаПеречисление.Синоним;
				
				пТекстСообщения = пТекстСообщения + пСиноним + ": """ + пСтрокаОценкиЛимитов[ пИмя] + """" + Символы.ПС;
			КонецЕсли; 
		КонецЦикла;
		
		пТекстСообщения = пТекстСообщения + "Остаток в рамках бюджета: " + 
		
		ОбщегоНазначенияБПВызовСервера.ФорматСумм(?(пСтрокаОценкиЛимитов.СуммаЛимита = 0, 0, 
		пСтрокаОценкиЛимитов.СуммаОперации -  пСтрокаОценкиЛимитов.СуммаПревышения //остаток до операции
		), пСценарийВалюта,"0.00") + 
		
		", сумма операции: " +  ОбщегоНазначенияБПВызовСервера.ФорматСумм(пСтрокаОценкиЛимитов.СуммаОперации, пСценарийВалюта,"0.00") + 
		", недостаточно: " +  ОбщегоНазначенияБПВызовСервера.ФорматСумм(пСтрокаОценкиЛимитов.СуммаПревышения, пСценарийВалюта,"0.00") + 
		"(превыш. " + 
		Формат(?(пСтрокаОценкиЛимитов.СуммаЛимита = 0, 100, 
		пСтрокаОценкиЛимитов.СуммаПревышения*100/пСтрокаОценкиЛимитов.СуммаЛимита),"ЧДЦ=2; ЧРД=.; ЧН=-; ЧО=1") + "%)";
		
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(пТекстСообщения);
		
		//Пример вывода сообщения
		//По сценарию "Контракт инвест",
		//по аналитике:
		//- Статья оборотов "Складское оборудование"
		//- ЦФО "Продажи (с 2016 г)"
		//- Проект "2016 Действующий"
		//- № заявки "Форма ввода бюджета 160808642 от 25.08.2016 11:43:06"
		//- Объект "001 ГМ СПб Озерки"
		//Остаток в рамках бюджета: 87 848,88 руб., сумма в документе: 96 325,81 руб., не достаточно: 8 476,93 руб. (превыш. 9,65%).
	КонецЦикла; 
	
	//парОтказ = Истина;
	//Возврат Ложь; //есть превышения лимитов
	Возврат Истина; //по решению пользователя сообщения выводятся всегда, документ проводится всегда в ЛТ 2669 указаний нет
КонецФункции // БюджетныйКонтрольНеОперативный()

//{bit_SVKushnirenko 12.02.2017 #2657
//Возвращает текст запроса для закрытия остатков
Функция ТекстЗапросаДляРаспределенияЗакрытияОстатков()

	Возврат
	
	//{ bit_SVKushnirenko 10.04.2017 #2816
	//ИсходныйКод{
	//"ВЫБРАТЬ
	//|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ) КАК Период,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий КАК Сценарий,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый КАК СценарийКонтролируемый,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО КАК ЦФО,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект КАК Проект,
	//|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
	//|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2,
	//|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот - бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК Разница
	//|ПОМЕСТИТЬ Подготовка
	//|ИЗ
	//|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(&пзПериодНачало, &пзПериодКонец, Месяц, &пзУсловиеВыбораЗаписейРегистра) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ),
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый,
	//|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО,
	//|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета),
	//|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства)
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Период
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	НАЧАЛОПЕРИОДА(Подготовка.Период, ГОД) КАК Год,
	//|	СУММА(Подготовка.Разница) КАК РазницаВГоду
	//|ПОМЕСТИТЬ втОстаткиПоГодам
	//|ИЗ
	//|	Подготовка КАК Подготовка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	НАЧАЛОПЕРИОДА(Подготовка.Период, ГОД)
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Год
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Подготовка.СтатьяОборотов,
	//|	НАЧАЛОПЕРИОДА(Подготовка.Период, ГОД) КАК Год,
	//|	Подготовка.Период КАК Период,
	//|	Подготовка.Сценарий,
	//|	Подготовка.ЦФО,
	//|	Подготовка.Проект,
	//|	Подготовка.СценарийКонтролируемый,
	//|	Подготовка.Разница КАК СуммаОстаток,
	//|	Подготовка.Аналитика_1,
	//|	Подготовка.Аналитика_2,
	//|	Подготовка.Разница КАК СуммаКонтроль,
	//|	втОстаткиПоГодам.РазницаВГоду КАК РазницаВГоду
	//|ИЗ
	//|	Подготовка КАК Подготовка
	//|		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПоГодам КАК втОстаткиПоГодам
	//|		ПО (НАЧАЛОПЕРИОДА(Подготовка.Период, ГОД) = втОстаткиПоГодам.Год)
	//|ГДЕ
	//|	Подготовка.Разница > 0
	//|	И втОстаткиПоГодам.РазницаВГоду > 0
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Период
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Подготовка
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ втОстаткиПоГодам";
	//}ИсходныйКод
	
	//Исключение ошибочных пар сценариев
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) КАК Сценарий,
	|	МАКСИМУМ(ВЫРАЗИТЬ(бит_СоответствияАналитик.ЛеваяАналитика_1 КАК Справочник.СценарииПланирования)) КАК СценарийКонтролирующий
	|ПОМЕСТИТЬ СценарииБКОК
	|ИЗ
	|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
	|		ПО ((ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)) = (ВЫРАЗИТЬ(бит_СоответствияАналитик.ПраваяАналитика_1 КАК Справочник.СценарииПланирования)))
	|ГДЕ
	|	бит_БК_НастройкиБК.Группа = ""Контроль бюджета""
	|	И бит_СоответствияАналитик.ВидСоответствия.Код = ""бит_БК_СценарийВСценарийКонтролируемый""
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сценарий,
	|	СценарийКонтролирующий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ) КАК Период,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий КАК Сценарий,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО КАК ЦФО,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект КАК Проект,
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета) КАК Аналитика_1,
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства) КАК Аналитика_2,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-06 (#3046)
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Контрагент КАК Контрагент,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-06 (#3046)
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот - бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК Разница
	|ПОМЕСТИТЬ Подготовка
	|ИЗ
	|	СценарииБКОК КАК СценарииБКОК
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(&пзПериодНачало, &пзПериодКонец, Месяц, &пзУсловиеВыбораЗаписейРегистра) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО СценарииБКОК.Сценарий = бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый
	|			И СценарииБКОК.СценарийКонтролирующий = бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетовОбороты.Период, МЕСЯЦ),
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Сценарий,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-06 (#3046)
	|	бит_КонтрольныеЗначенияБюджетовОбороты.Контрагент,
	|	бит_КонтрольныеЗначенияБюджетовОбороты.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-06 (#3046)
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета),
	|	ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Справочник.ОбъектыСтроительства)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Подготовка.Период, ГОД) КАК Год,
	|	СУММА(Подготовка.Разница) КАК РазницаВГоду
	|ПОМЕСТИТЬ втОстаткиПоГодам
	|ИЗ
	|	Подготовка КАК Подготовка
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(Подготовка.Период, ГОД)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подготовка.СтатьяОборотов,
	|	НАЧАЛОПЕРИОДА(Подготовка.Период, ГОД) КАК Год,
	|	Подготовка.Период КАК Период,
	|	Подготовка.Сценарий,
	|	Подготовка.ЦФО,
	|	Подготовка.Проект,
	|	Подготовка.СценарийКонтролируемый,
	|	Подготовка.Разница КАК СуммаОстаток,
	|	Подготовка.Аналитика_1,
	|	Подготовка.Аналитика_2,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-06 (#3046)
	|	Подготовка.Контрагент,
	|	Подготовка.ДоговорКонтрагента,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-06 (#3046)
	|	Подготовка.Разница КАК СуммаКонтроль,
	|	втОстаткиПоГодам.РазницаВГоду КАК РазницаВГоду
	|ИЗ
	|	Подготовка КАК Подготовка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПоГодам КАК втОстаткиПоГодам
	|		ПО (НАЧАЛОПЕРИОДА(Подготовка.Период, ГОД) = втОстаткиПоГодам.Год)
	|ГДЕ
	|	Подготовка.Разница > 0
	|	И втОстаткиПоГодам.РазницаВГоду > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Подготовка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втОстаткиПоГодам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СценарииБКОК";
	//} bit_SVKushnirenko 10.04.2017 #2816
КонецФункции // ТекстЗапросаДляРаспределенияЗакрытияОстатков()
//}bit_SVKushnirenko 12.02.2017 #2657

//{bit_SVKushnirenko 10.02.2017 #2657.1
//Получение распределения входящей суммы из таблицы, по данным сверхмесячных по периоду сценариев
//Параметры:
//парСтруктураОтбора -  
//парСуммаРаспределения -  
//парПериодНачало - если задано определенное значение, дата начала выбора распределения по периодам
//парПериодКонец - если задано определенное значение, дата окончания выбора распределения по периодам
&НаСервере
Функция ПолучитьРаспределениеПоПериодамПланированияСверхМесячныхКлАН(парСтруктураОтбора, парСуммаРаспределения, парПериодНачало = Неопределено, парПериодКонец = Неопределено) Экспорт
	
	пЗапрос = Новый Запрос;
	
	пТекстЗапроса = ТекстЗапросаДляРаспределенияЗакрытияОстатков();
	пЗапрос.Текст = бит_БК_Общий.КорректировкаТекстаЗапросаЗакрытия(пТекстЗапроса, Истина);
	
	Если парПериодНачало =  Неопределено Тогда  
		
		пЗапрос.Текст = СтрЗаменить(пЗапрос.Текст, "&пзПериодНачало", ""); //параметр не нужен, выбираются все периоды
	Иначе
		
		пЗапрос.УстановитьПараметр("пзПериодНачало", парПериодНачало);
	КонецЕсли;
	 
	Если парПериодКонец =  Неопределено Тогда  
		
		пЗапрос.Текст = СтрЗаменить(пЗапрос.Текст, "&пзПериодКонец", ""); //параметр не нужен, выбираются все периоды
	Иначе
		
		пЗапрос.УстановитьПараметр("пзПериодКонец", парПериодКонец);
	КонецЕсли;
	
	Если парСтруктураОтбора.Количество() > 0 Тогда //есть параметры отбора
		
		пСтрокаУсловияОтбора = ""; пНомерПараметра = 1;
		Для каждого пЭлемент Из парСтруктураОтбора Цикл
		
			пЗначение = пЭлемент.Значение;
			Если ЗначениеЗаполнено(пЗначение) Тогда //
						
				пИмяПараметра = "пзОтбор" + пНомерПараметра;
				пСтрокаУсловияОтбора = пСтрокаУсловияОтбора + ?(пСтрокаУсловияОтбора = "", "", " и ") + пЭлемент.Ключ + " = &" + пИмяПараметра;
				пЗапрос.УстановитьПараметр(пИмяПараметра, пЭлемент.Значение);
				пНомерПараметра = пНомерПараметра + 1;
			КонецЕсли;
		КонецЦикла; 
		
		пЗапрос.Текст = СтрЗаменить(пЗапрос.Текст, "&пзУсловиеВыбораЗаписейРегистра", пСтрокаУсловияОтбора);
	Иначе
		
		пЗапрос.Текст = СтрЗаменить(пЗапрос.Текст, "&пзУсловиеВыбораЗаписейРегистра", "");
	КонецЕсли;

	пТЗРез = пЗапрос.Выполнить().Выгрузить(); //в запросе представлены все строки ТЧ с данными суммы БК и признаками превышения
	
	Если пТЗРез.Количество() = 0 Тогда
		
		Возврат Неопределено; //запрос БК не вернул данных, значит нет предмета для распределения
	КонецЕсли;
		
	//Последовательное закрытие по сумме остатка в периоде
	пТЗГодовИСуммОстатка = пТЗРез.Скопировать();
	пТЗГодовИСуммОстатка.Свернуть("Год, РазницаВГоду", ""); //получение годовых долей остатков к закрытию для распределения входящей суммы
	
	пОстатокКРаспределениюВсего = парСуммаРаспределения;
	пОстатокКРаспределениюГода = 0;
	пТекущийГодРаспределения = Дата(1, 1, 1, 0, 0, 0);
	
	пМассивУдаляемыхСтрок = Новый Массив;
	
	Для каждого пСтрокаБазы Из пТЗРез Цикл
		
		пГодСтроки = НачалоГода(пСтрокаБазы.Период);
		Если пГодСтроки <> пТекущийГодРаспределения Тогда  
			
			пТекущийГодРаспределения = НачалоГода(пСтрокаБазы.Период);
			пОстатокКРаспределениюГода = 0;
			Если пТЗГодовИСуммОстатка.Найти(пГодСтроки, "Год") <>  Неопределено Тогда  
				
				пОстатокКРаспределениюГода = пСтрокаБазы.РазницаВГоду
			КонецЕсли;
			
			Если пОстатокКРаспределениюВсего <= пОстатокКРаспределениюГода  Тогда  
				
				пОстатокКРаспределениюГода = пОстатокКРаспределениюВсего;
				пОстатокКРаспределениюВсего = 0;
			ИначеЕсли пОстатокКРаспределениюВсего > пОстатокКРаспределениюГода Тогда 
				
				пОстатокКРаспределениюВсего = пОстатокКРаспределениюВсего - пОстатокКРаспределениюГода;
			КонецЕсли;
		КонецЕсли;
		 
		Если пСтрокаБазы.СуммаОстаток <= пОстатокКРаспределениюГода Тогда  
			
			пОстатокКРаспределениюГода = пОстатокКРаспределениюГода - пСтрокаБазы.СуммаОстаток;
		ИначеЕсли пСтрокаБазы.СуммаОстаток > пОстатокКРаспределениюГода Тогда 
			
			пСтрокаБазы.СуммаОстаток = пОстатокКРаспределениюГода;
			пОстатокКРаспределениюГода = 0;
		Иначе //остаток распределения исчерпан, обнуляем таблицу остатков
			
			пСтрокаБазы.СуммаОстаток = 0;
		КонецЕсли;
		
		Если пСтрокаБазы.СуммаОстаток = 0 Тогда  
			
			пМассивУдаляемыхСтрок.Добавить(пСтрокаБазы);
		КонецЕсли;
	КонецЦикла; 
	
	Для каждого пСтрокаУдаления Из пМассивУдаляемыхСтрок Цикл //удалем строки с нулевыми суммами распределения, они не должны попасть в закрытие
	
		пТЗРез.Удалить(пСтрокаУдаления);
	КонецЦикла; 
	
	Возврат пТЗРез.Скопировать();
КонецФункции // ПолучитьРаспределениеПоПериодамПланированияСверхМесячныхКлАН()
//}bit_SVKushnirenko 10.02.2017 #2657.1

#КонецОбласти

//+СБ Пискунова 22.12.2016 #2691  
Функция ПолучитьВалютуДокумента(Документ) Экспорт
	//Если во всех строках документа валюта договора = рубль, тогда вернем "руб"
	Запрос = Новый Запрос;
	Запрос.Текст = 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-05 (#2873)
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	//|	бит_ФормаВводаБюджетаБДДС.бит_БК_ВалютаДоговора
	//|ИЗ
	//|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	//|ГДЕ
	//|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	//|	И бит_ФормаВводаБюджетаБДДС.бит_БК_ВалютаДоговора.Наименование ПОДОБНО &Наименование";
	//
	//Запрос.УстановитьПараметр("Наименование", "%руб%");
	//Заменено на:
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.бит_БК_ВалютаДоговора КАК бит_БК_ВалютаДоговора
	|ПОМЕСТИТЬ ВалютыТЧ
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ФормаВводаБюджетаБДДС.бит_БК_ВалютаДоговора
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	бит_БК_ВалютаДоговора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВалютыТЧ.бит_БК_ВалютаДоговора
	|ИЗ
	|	ВалютыТЧ КАК ВалютыТЧ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|		ПО ВалютыТЧ.бит_БК_ВалютаДоговора <> ВалютаРегламентированногоУчета.Значение";
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-05 (#2873)
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-05 (#2873)
	//Если Не РезультатЗапроса.Пустой() Тогда
	//Заменено на:
	Если РезультатЗапроса.Пустой() Тогда
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-05 (#2873)
		Возврат "руб";
	Иначе 
		Возврат "" ;
	КонецЕсли;   
	
КонецФункции

Функция ПолучитьПроцентПредоплаты(Документ) Экспорт
	//Если хотя бы в одной строке % предоплаты (в форме документа:ФормаДокументаУправляемая он так называется, а для объекта документа это реквизит бит_БК_СуммаПредоплаты) не 0 , 
	// то считаем что предоплата есть 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.бит_БК_СуммаПредоплаты
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|	И бит_ФормаВводаБюджетаБДДС.бит_БК_СуммаПредоплаты > 0";
	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;   
	
КонецФункции

Функция ПолучитьФормуОплаты(Документ) Экспорт
	//Если хотя бы в одной строке  бит_БК_ФормаОплаты = Наличные, тогда возвращаем наличные
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.бит_БК_СуммаПредоплаты
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|	И бит_ФормаВводаБюджетаБДДС.бит_БК_ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.бит_ВидыДенежныхСредств.Наличные)";
	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		Возврат "Наличные";
	Иначе 
		Возврат "";
	КонецЕсли;   
	
КонецФункции

Функция ПолучитьСуммуПоДокументу(Документ) Экспорт
	//Вычислим сумму по документу
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(бит_ФормаВводаБюджетаБДДС.бит_БК_СуммаБезНДС) КАК бит_БК_СуммаБезНДС
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка";
	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		Возврат ВыборкаДетальныеЗаписи.бит_БК_СуммаБезНДС;
	Иначе 
		Возврат 0;
	КонецЕсли;   
	
КонецФункции

Функция ПолучитьСуммуОстатокПоБюджетуПоДокументу(Документ) Экспорт
	//Вычислим ОстатокПоБюджету 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-22 (#2873)	
	//|	бит_ФормаВводаБюджета.бит_ИтогСуммаПоБюджету
	//Заменено на:
	|	-бит_ФормаВводаБюджета.бит_СуммаПревышающаяБюджет КАК бит_СуммаПревышающаяБюджет
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-22 (#2873)
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета КАК бит_ФормаВводаБюджета
	|ГДЕ
	|	бит_ФормаВводаБюджета.Ссылка = &Ссылка";
	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-22 (#2873)	
		//Возврат ВыборкаДетальныеЗаписи.бит_ИтогСуммаПоБюджету;
		//Заменено на:
		Возврат ВыборкаДетальныеЗаписи.бит_СуммаПревышающаяБюджет;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-22 (#2873)
	Иначе 
		Возврат 0;
	КонецЕсли;   
	
КонецФункции

Функция ПолучитьКоличествоРазличныхОбъектовСтроительстваПоДокументу(Документ) Экспорт
	//Вычислим ОстатокПоБюджету 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_ФормаВводаБюджетаБДДС.Аналитика_2) КАК КоличествоОбъектовСтроительства
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка";
	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		Возврат ВыборкаДетальныеЗаписи.КоличествоОбъектовСтроительства;
	Иначе 
		Возврат 0;
	КонецЕсли;   
	
КонецФункции

Функция ПолучитьКоличествоРазличныхОбъектовСтроительстваПоДокументуВРамкахЦФО(Документ,КодЦФО) Экспорт
	//Вычислим ОстатокПоБюджету 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_ФормаВводаБюджетаБДДС.Аналитика_2) КАК КоличествоОбъектовСтроительства
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|	И бит_ФормаВводаБюджетаБДДС.ЦФО.Код = &КодЦФО"; 	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("КодЦФО", КодЦФО);   	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		Возврат ВыборкаДетальныеЗаписи.КоличествоОбъектовСтроительства;
	Иначе 
		Возврат 0;
	КонецЕсли;   
	
КонецФункции

Функция ПолучитьСуммуПредоплатыПоДокументу(Документ) Экспорт
	
	//Это условие необходимо для того, чтобы группировать в произвольных условиях
	Возврат Документ.Ссылка.СБ_СуммаПредоплатыИтого;
	
КонецФункции

Функция ПолучитьПроцентКвартальногоПревышения(Документ) Экспорт
	
	
	//Считаем квартальное превышение с отбором по сценарию, ЦФО (функции) и периоду нарастающим итогом. 
	
	//Может оказаться так, что в табличной части будут указаны разные периоды, поэтому
	//1. Берем максимальный период в году
	//2. При этом, если в ТЧ будут указаны разные года, то считаем для каждого года отдельно 
	
	//3. Из полученных берем максимальный по модулю процент превышения
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГОД(НАЧАЛОПЕРИОДА(бит_ФормаВводаБюджетаБДДС.Период, ГОД)) КАК ГОД
	|ПОМЕСТИТЬ ВТ_ПериодГод
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО
	|ПОМЕСТИТЬ ВТ_ЦФОДокумента
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МАКСИМУМ(КОНЕЦПЕРИОДА(бит_ФормаВводаБюджетаБДДС.Период, КВАРТАЛ)) КАК Период
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодГод КАК ВТ_ПериодГод
	|		ПО (ГОД(бит_ФормаВводаБюджетаБДДС.Период) = ВТ_ПериодГод.ГОД)
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПериодГод.ГОД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период,
	|	ВТ_ЦФОДокумента.ЦФО
	|ПОМЕСТИТЬ ВТПериодыЦФО
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦФОДокумента КАК ВТ_ЦФОДокумента
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПериодыЦФО.Период,
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль) КАК СуммаСценарийКонтроль,
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение) КАК СуммаСценарийИсполнение,
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль) - СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение) КАК СуммаПревышения,
	|	ВЫБОР
	|		КОГДА СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль) = 0
	|			ТОГДА 100
	|		ИНАЧЕ СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение) * 100 / СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль)
	|	КОНЕЦ КАК ПроцентПревышения,
	|	ВТПериодыЦФО.ЦФО
	|ПОМЕСТИТЬ ВТ_ПолуИтог
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК бит_КонтрольныеЗначенияБюджетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыЦФО КАК ВТПериодыЦФО
	|		ПО (бит_КонтрольныеЗначенияБюджетов.Период >= НАЧАЛОПЕРИОДА(ВТПериодыЦФО.Период, ГОД))
	|			И бит_КонтрольныеЗначенияБюджетов.Период <= ВТПериодыЦФО.Период
	|			И бит_КонтрольныеЗначенияБюджетов.ЦФО = ВТПериодыЦФО.ЦФО
	|ГДЕ
	|	бит_КонтрольныеЗначенияБюджетов.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_У)
	|			И бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_У)
	|	И НЕ ВТПериодыЦФО.Период ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПериодыЦФО.Период,
	|	ВТПериодыЦФО.ЦФО
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль) - СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_ПолуИтог.ПроцентПревышения) КАК ПроцентПревышения,
	|	ВТ_ПолуИтог.ЦФО
	|ИЗ
	|	ВТ_ПолуИтог КАК ВТ_ПолуИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПолуИтог.ЦФО";
	//
	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат 0;
	Иначе 
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ПроцентПревышения = 0;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ТекущийПроцентПревышения = ВыборкаДетальныеЗаписи.ПроцентПревышения;
			ПроцентПревышения = ?(ТекущийПроцентПревышения >ПроцентПревышения  ,  ТекущийПроцентПревышения,ПроцентПревышения);  					
		КонецЦикла;    	
		
		Возврат  ПроцентПревышения;
		
	КонецЕсли; 
	
	
	
КонецФункции

Функция ПолучитьВидОперацииДляСтартаАлгоритмаИнвестиционнойЗаявки(Документ) Экспорт
	
	//Если все виды операций Инвестиционная, то тогда идем по маршруту для инвест. заявки	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_ФормаВводаБюджетаБДДС.СтатьяОборотов.ВидСтатьи
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|	И бит_ФормаВводаБюджетаБДДС.СтатьяОборотов.ВидСтатьи = ЗНАЧЕНИЕ(Справочник.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность)";
	
	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат Ложь;
	ИначеЕсли   РезультатЗапроса.Выгрузить().Количество() = Документ.Ссылка.БДДС.Количество() Тогда  
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;    	
	
	
КонецФункции

Функция ПолучитьВидОперацииДляСтартаАлгоритмаОперационнойЗаявки(Документ) Экспорт
	
	//Если все виды операций Операционная, то тогда идем по маршруту для операционной. заявки	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_ФормаВводаБюджетаБДДС.СтатьяОборотов.ВидСтатьи
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|	И бит_ФормаВводаБюджетаБДДС.СтатьяОборотов.ВидСтатьи = ЗНАЧЕНИЕ(Справочник.бит_ВидыСтатейОборотов.Выручка)";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат Ложь;
	ИначеЕсли   РезультатЗапроса.Выгрузить().Количество() = Документ.Ссылка.БДДС.Количество() Тогда  
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
	
КонецФункции

Функция ПолучитьВидОперацииДляСтартаАлгоритмаУниверсальнойЗаявки(Документ) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.СтатьяОборотов.ВидСтатьи КАК СтатьяОборотовВидСтатьи
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат Ложь;
	ИначеЕсли   РезультатЗапроса.Выгрузить().Количество() = 2 Тогда  
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
	
КонецФункции

Функция ПолучитьПользователей(Документ) Экспорт
	
	//Получим пользователей, которые согласуют документ	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_НазначенныеЗаместители.Состояние КАК Состояние,
	|	ВЫБОР
	|		КОГДА бит_НазначенныеЗаместители.Виза ССЫЛКА Справочник.бит_Визы
	|			ТОГДА бит_НазначенныеЗаместители.Виза
	|		ИНАЧЕ бит_ГруппыВизВизыГруппы.Виза
	|	КОНЕЦ КАК Виза,
	|	бит_НазначенныеЗаместители.Заместитель КАК Заместитель,
	|	бит_НазначенныеЗаместители.ДатаНачала КАК ДатаНачала,
	|	бит_НазначенныеЗаместители.ДатаОкончания КАК ДатаОкончания,
	|	бит_НазначенныеЗаместители.Пользователь КАК Пользователь,
	|	бит_БК_Инициаторы.Ссылка КАК Инициатор
	|ПОМЕСТИТЬ ВТ_ЗаместителиИВизы
	|ИЗ
	|	РегистрСведений.бит_НазначенныеЗаместители КАК бит_НазначенныеЗаместители
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_ГруппыВиз.ВизыГруппы КАК бит_ГруппыВизВизыГруппы
	|		ПО бит_НазначенныеЗаместители.Виза = бит_ГруппыВизВизыГруппы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
	|		ПО бит_НазначенныеЗаместители.Заместитель = бит_БК_Инициаторы.Пользователь
	|ГДЕ
	|	бит_НазначенныеЗаместители.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_СостоянияЗаместителей.Назначен)
	|	И бит_НазначенныеЗаместители.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-02-14 (#2980)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бит_НазначенныеЗаместители_Заместителей.Состояние,
	|	ВЫБОР
	|		КОГДА бит_НазначенныеЗаместители_Визирующих.Виза ССЫЛКА Справочник.бит_Визы
	|			ТОГДА бит_НазначенныеЗаместители_Визирующих.Виза
	|		ИНАЧЕ бит_ГруппыВизВизыГруппы.Виза
	|	КОНЕЦ,
	|	бит_НазначенныеЗаместители_Заместителей.Заместитель,
	|	бит_НазначенныеЗаместители_Заместителей.ДатаНачала,
	|	бит_НазначенныеЗаместители_Заместителей.ДатаОкончания,
	|	бит_НазначенныеЗаместители_Визирующих.Пользователь,
	|	бит_БК_Инициаторы.Ссылка
	|ИЗ
	|	РегистрСведений.бит_НазначенныеЗаместители КАК бит_НазначенныеЗаместители_Визирующих
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_ГруппыВиз.ВизыГруппы КАК бит_ГруппыВизВизыГруппы
	|		ПО бит_НазначенныеЗаместители_Визирующих.Виза = бит_ГруппыВизВизыГруппы.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_НазначенныеЗаместители КАК бит_НазначенныеЗаместители_Заместителей
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
	|			ПО бит_НазначенныеЗаместители_Заместителей.Заместитель = бит_БК_Инициаторы.Пользователь
	|		ПО бит_НазначенныеЗаместители_Визирующих.Заместитель = бит_НазначенныеЗаместители_Заместителей.Пользователь
	|			И бит_НазначенныеЗаместители_Визирующих.Виза = бит_НазначенныеЗаместители_Заместителей.Виза
	|ГДЕ
	|	бит_НазначенныеЗаместители_Визирующих.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_СостоянияЗаместителей.Назначен)
	|	И бит_НазначенныеЗаместители_Визирующих.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	|	И бит_НазначенныеЗаместители_Заместителей.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_СостоянияЗаместителей.Назначен)
	|	И бит_НазначенныеЗаместители_Заместителей.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-02-14 (#2980)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_УстановленныеВизы.Объект,
	|	бит_УстановленныеВизы.Виза,
	|	бит_УстановленныеВизы.ФизическоеЛицо КАК Инициатор,
	|	бит_УстановленныеВизы.ФизическоеЛицо.Email КАК Email,
	|	бит_УстановленныеВизы.ФизическоеЛицо.Пользователь КАК Пользователь,
	|	0 КАК ЭтоЗаместитель,
	|	бит_УстановленныеВизы.ФизическоеЛицо.Пользователь
	|ПОМЕСТИТЬ ВТ_ПолуИтог
	|ИЗ
	|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
	|ГДЕ
	|	бит_УстановленныеВизы.Объект В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бит_УстановленныеВизы.Объект,
	|	ВТ_ЗаместителиИВизы.Виза,
	|	ВТ_ЗаместителиИВизы.Инициатор,
	|	ВТ_ЗаместителиИВизы.Инициатор.Email,
	|	ВТ_ЗаместителиИВизы.Заместитель,
	|	1,
	|	ВТ_ЗаместителиИВизы.Пользователь
	|ИЗ
	|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗаместителиИВизы КАК ВТ_ЗаместителиИВизы
	|		ПО бит_УстановленныеВизы.Виза = ВТ_ЗаместителиИВизы.Виза
	|			И бит_УстановленныеВизы.ФизическоеЛицо.Пользователь = ВТ_ЗаместителиИВизы.Пользователь
	|ГДЕ
	|	бит_УстановленныеВизы.Объект В(&Ссылка)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-18 (#2875)	
	//|	И ВТ_ЗаместителиИВизы.ДатаНачала <= бит_УстановленныеВизы.Объект.Дата
	//Заменено на:
	|	И ВТ_ЗаместителиИВизы.ДатаНачала <= &ТекущаяДата
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-18 (#2875)	
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджета.Ссылка,
	|	бит_ПраваУстановкиВиз.Виза,
	|	бит_ПраваУстановкиВиз.Инициатор,
	|	бит_ПраваУстановкиВиз.Инициатор.Email,
	|	бит_ПраваУстановкиВиз.Инициатор.Пользователь,
	|	0,
	|	бит_ПраваУстановкиВиз.Инициатор.Пользователь
	|ИЗ
	|	РегистрСведений.бит_ПраваУстановкиВиз КАК бит_ПраваУстановкиВиз
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ФормаВводаБюджета КАК бит_ФормаВводаБюджета
	|		ПО (ИСТИНА)
	|ГДЕ
	|	бит_ПраваУстановкиВиз.СБ_ОтправлятьПочту
	|	И бит_ФормаВводаБюджета.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПолуИтог.Объект,
	|	ВТ_ПолуИтог.Виза,
	|	МАКСИМУМ(ВТ_ПолуИтог.ЭтоЗаместитель) КАК ЭтоЗаместитель,
	|	ВТ_ПолуИтог.ФизическоеЛицоПользователь КАК ЗаКогоЗамещает
	|ПОМЕСТИТЬ ВТ_ДляОграниченияПоСогласующим
	|ИЗ
	|	ВТ_ПолуИтог КАК ВТ_ПолуИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПолуИтог.Объект,
	|	ВТ_ПолуИтог.Виза,
	|	ВТ_ПолуИтог.ФизическоеЛицоПользователь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДляОграниченияПоСогласующим.Объект,
	|	ВТ_ДляОграниченияПоСогласующим.Виза,
	|	ВТ_ДляОграниченияПоСогласующим.ЭтоЗаместитель,
	|	ВТ_ПолуИтог.Инициатор,
	|	ВТ_ПолуИтог.Email,
	|	ВТ_ПолуИтог.Пользователь
	|ИЗ
	|	ВТ_ДляОграниченияПоСогласующим КАК ВТ_ДляОграниченияПоСогласующим
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПолуИтог КАК ВТ_ПолуИтог
	|		ПО ВТ_ДляОграниченияПоСогласующим.Объект = ВТ_ПолуИтог.Объект
	|			И ВТ_ДляОграниченияПоСогласующим.Виза = ВТ_ПолуИтог.Виза
	|			И ВТ_ДляОграниченияПоСогласующим.ЭтоЗаместитель = ВТ_ПолуИтог.ЭтоЗаместитель
	|			И ВТ_ДляОграниченияПоСогласующим.ЗаКогоЗамещает = ВТ_ПолуИтог.ФизическоеЛицоПользователь";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	//Запрос.УстановитьПараметр("ДатаДок", Документ.Ссылка.Дата);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-18 (#2875)	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-18 (#2875)	
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции
//ЦФО-Проект-Объект :
Функция ПолучитьПревышениеЦФО_Проект_Объект(Документ, КодЦФО = Неопределено) Экспорт
	
	//Проверим содержит ли таб.часть ЦФО с таким кодом. Если сожержит, то будет считать это условие без учета периода
	СчитатьСУчетомПериода = Истина;
	
	Если ЗначениеЗаполнено(КодЦФО) Тогда
		ПараметрыОтбора = Новый Структура; 
		ПараметрыОтбора.Вставить("ЦФО", Справочники.Подразделения.НайтиПоКоду(КодЦФО));
		НайденныеСтроки = Документ.БДДС.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтроки.Количество() > 0 Тогда 
			СчитатьСУчетомПериода = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	//Ппроверим прервышение	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО КАК ЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Проект КАК Проект,
	|	бит_ФормаВводаБюджетаБДДС.Аналитика_2 КАК Аналитика_2,
	|	НАЧАЛОПЕРИОДА(бит_ФормаВводаБюджетаБДДС.Период, ГОД) КАК Период
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК Разность,
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2,
	|	ВТ_Данные.Период
	|ПОМЕСТИТЬ ВТ_ПолуИтог
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Запись,
	|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
	|					И СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО ВТ_Данные.ЦФО = бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО
	|			И ВТ_Данные.Проект = бит_КонтрольныеЗначенияБюджетовОбороты.Проект
	|			И ВТ_Данные.Аналитика_2 = бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2
	|			И (ВЫБОР
	|				КОГДА &СчитатьСУчетомПериода = ИСТИНА
	|					ТОГДА бит_КонтрольныеЗначенияБюджетовОбороты.Период >= НАЧАЛОПЕРИОДА(ВТ_Данные.Период, ГОД)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА &СчитатьСУчетомПериода = ИСТИНА
	|					ТОГДА бит_КонтрольныеЗначенияБюджетовОбороты.Период <= КОНЕЦПЕРИОДА(ВТ_Данные.Период, ГОД)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2,
	|	ВТ_Данные.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТ_ПолуИтог.Разность) КАК Разность
	|ИЗ
	|	ВТ_ПолуИтог КАК ВТ_ПолуИтог";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("СчитатьСУчетомПериода", СчитатьСУчетомПериода);
	
	Если НЕ СчитатьСУчетомПериода Тогда 
		Запрос.Текст =  СтрЗаменить(Запрос.Текст, ",
		|	ВТ_Данные.Период" , " ");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда  		
		Возврат  Выборка.Разность;
	Иначе
		Возврат 0;
	КонецЕсли; 	
	
	
КонецФункции

Функция ПолучитьПревышениеЦФО_Проект_ОбъектБезПериода(Документ) Экспорт
	
	//Ппроверим прервышение	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО КАК ЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Проект КАК Проект,
	|	бит_ФормаВводаБюджетаБДДС.Аналитика_2 КАК Аналитика_2
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК Разность,
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2
	|ПОМЕСТИТЬ ВТ_ПолуИтог
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Запись,
	|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
	|					И СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО ВТ_Данные.ЦФО = бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО
	|			И ВТ_Данные.Проект = бит_КонтрольныеЗначенияБюджетовОбороты.Проект
	|			И ВТ_Данные.Аналитика_2 = бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТ_ПолуИтог.Разность) КАК Разность
	|ИЗ
	|	ВТ_ПолуИтог КАК ВТ_ПолуИтог";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда  		
		Возврат  Выборка.Разность;
	Иначе
		Возврат 0;
	КонецЕсли; 	
	
	
КонецФункции

Функция ПолучитьПроцентПревышениеЦФО_Проект_Объект(Документ, КодЦФО = Неопределено) Экспорт
	//Проверим содержит ли таб.часть ЦФО с таким кодом. Если сожержит, то будет считать это условие без учета периода
	СчитатьСУчетомПериода = Истина;
	
	Если ЗначениеЗаполнено(КодЦФО) Тогда
		ПараметрыОтбора = Новый Структура; 
		ПараметрыОтбора.Вставить("ЦФО", Справочники.Подразделения.НайтиПоКоду(КодЦФО));
		НайденныеСтроки = Документ.БДДС.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтроки.Количество() > 0 Тогда 
			СчитатьСУчетомПериода = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	//	И находим процент наименьшего отрицательного значения от колонки Контроль
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО КАК ЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Проект КАК Проект,
	|	бит_ФормаВводаБюджетаБДДС.Аналитика_2 КАК Аналитика_2,
	|	НАЧАЛОПЕРИОДА(бит_ФормаВводаБюджетаБДДС.Период, ГОД) КАК Период
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) = 0
	|			ТОГДА 100
	|		ИНАЧЕ (СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот)) * 100 / СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот)
	|	КОНЕЦ КАК Процент,
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2,
	|	ВТ_Данные.Период
	|ПОМЕСТИТЬ ВТ_ПолуИтог
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Запись,
	|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
	|					И СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО ВТ_Данные.ЦФО = бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО
	|			И ВТ_Данные.Проект = бит_КонтрольныеЗначенияБюджетовОбороты.Проект
	|			И ВТ_Данные.Аналитика_2 = бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2
	|			И (ВЫБОР
	|				КОГДА &СчитатьСУчетомПериода = ИСТИНА
	|					ТОГДА бит_КонтрольныеЗначенияБюджетовОбороты.Период >= НАЧАЛОПЕРИОДА(ВТ_Данные.Период, ГОД)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА &СчитатьСУчетомПериода = ИСТИНА
	|					ТОГДА бит_КонтрольныеЗначенияБюджетовОбороты.Период <= КОНЕЦПЕРИОДА(ВТ_Данные.Период, ГОД)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2,
	|	ВТ_Данные.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_ПолуИтог.Процент, 0) < 0
	|				ТОГДА -ЕСТЬNULL(ВТ_ПолуИтог.Процент, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_ПолуИтог.Процент, 0)
	|		КОНЕЦ) КАК Процент
	|ИЗ
	|	ВТ_ПолуИтог КАК ВТ_ПолуИтог";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("СчитатьСУчетомПериода", СчитатьСУчетомПериода);
	
	Если НЕ СчитатьСУчетомПериода Тогда 
		Запрос.Текст =  СтрЗаменить(Запрос.Текст, ",
		|	ВТ_Данные.Период" , " ");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда  		
		Возврат  Выборка.Процент;
	Иначе
		Возврат 0;
	КонецЕсли; 	
	
КонецФункции

Функция ПолучитьПроцентПревышениеЦФО_Проект_ОбъектБезПериода(Документ) Экспорт
	
	//	И находим процент наименьшего отрицательного значения от колонки Контроль
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО КАК ЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Проект КАК Проект,
	|	бит_ФормаВводаБюджетаБДДС.Аналитика_2 КАК Аналитика_2
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) = 0
	|			ТОГДА 100
	|		ИНАЧЕ (СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот)) * 100 / СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот)
	|	КОНЕЦ КАК Процент,
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2
	|ПОМЕСТИТЬ ВТ_ПолуИтог
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Запись,
	|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
	|					И СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО ВТ_Данные.ЦФО = бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО
	|			И ВТ_Данные.Проект = бит_КонтрольныеЗначенияБюджетовОбороты.Проект
	|			И ВТ_Данные.Аналитика_2 = бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_ПолуИтог.Процент, 0) < 0
	|				ТОГДА -ЕСТЬNULL(ВТ_ПолуИтог.Процент, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_ПолуИтог.Процент, 0)
	|		КОНЕЦ) КАК Процент
	|ИЗ
	|	ВТ_ПолуИтог КАК ВТ_ПолуИтог";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда  		
		Возврат  Выборка.Процент;
	Иначе
		Возврат 0;
	КонецЕсли; 	
	
КонецФункции

Функция ПроверитьПревышениеЦФО_Проект_Объект(Документ, КодЦФО = Неопределено) Экспорт
	
	//Проверим содержит ли таб.часть ЦФО с таким кодом. Если сожержит, то будет считать это условие без учета периода
	СчитатьСУчетомПериода = Истина;
	
	Если ЗначениеЗаполнено(КодЦФО) Тогда
		ПараметрыОтбора = Новый Структура; 
		ПараметрыОтбора.Вставить("ЦФО", Справочники.Подразделения.НайтиПоКоду(КодЦФО));
		НайденныеСтроки = Документ.БДДС.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтроки.Количество() > 0 Тогда 
			СчитатьСУчетомПериода = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	//Проверим превышение по 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Проект,
	|	бит_ФормаВводаБюджетаБДДС.Аналитика_2,
	|	НАЧАЛОПЕРИОДА(бит_ФормаВводаБюджетаБДДС.Период, ГОД) КАК Период
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2,
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) КАК СуммаСценарийКонтрольОборот,
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК СуммаСценарийИсполнениеОборот,
	|	ВТ_Данные.Период
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Запись,
	|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
	|					И СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО ВТ_Данные.ЦФО = бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО
	|			И ВТ_Данные.Проект = бит_КонтрольныеЗначенияБюджетовОбороты.Проект
	|			И ВТ_Данные.Аналитика_2 = бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2
	|			И (ВЫБОР
	|				КОГДА &СчитатьСУчетомПериода = ИСТИНА
	|					ТОГДА бит_КонтрольныеЗначенияБюджетовОбороты.Период >= НАЧАЛОПЕРИОДА(ВТ_Данные.Период, ГОД)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА &СчитатьСУчетомПериода = ИСТИНА
	|					ТОГДА бит_КонтрольныеЗначенияБюджетовОбороты.Период <= КОНЕЦПЕРИОДА(ВТ_Данные.Период, ГОД)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2,
	|	ВТ_Данные.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) < 0";	
	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("СчитатьСУчетомПериода", СчитатьСУчетомПериода);
	
	Если НЕ СчитатьСУчетомПериода Тогда 
		Запрос.Текст =  СтрЗаменить(Запрос.Текст, ",
		|	ВТ_Данные.Период" , " ");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Возврат Ложь; //в бюджет НЕ уложились
	Иначе 
		Возврат Истина; //в бюджет уложились
	КонецЕсли; 
	
	
	
КонецФункции

Функция ПроверитьПревышениеЦФО_Проект_ОбъектБезПериода(Документ) Экспорт
	
	//Проверим превышение по 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Проект,
	|	бит_ФормаВводаБюджетаБДДС.Аналитика_2
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2,
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) КАК СуммаСценарийКонтрольОборот,
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК СуммаСценарийИсполнениеОборот
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Запись,
	|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
	|					И СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО ВТ_Данные.ЦФО = бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО
	|			И ВТ_Данные.Проект = бит_КонтрольныеЗначенияБюджетовОбороты.Проект
	|			И ВТ_Данные.Аналитика_2 = бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.Аналитика_2
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) < 0";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Возврат Ложь; //в бюджет НЕ уложились
	Иначе 
		Возврат Истина; //в бюджет уложились
	КонецЕсли;
	
	
	
КонецФункции

//ЦФО-Проект-СтатьяОборотов :
Функция ПроверитьПревышениеЦФО_Проект_СтатьяОборотов(Документ) Экспорт
	
	//Проверим превышение по 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Проект,
	|	бит_ФормаВводаБюджетаБДДС.СтатьяОборотов,
	|	НАЧАЛОПЕРИОДА(бит_ФормаВводаБюджетаБДДС.Период, ГОД) КАК Период
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.СтатьяОборотов,
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) КАК СуммаСценарийКонтрольОборот,
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК СуммаСценарийИсполнениеОборот,
	|	ВТ_Данные.Период
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Запись,
	|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
	|					И СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО ВТ_Данные.ЦФО = бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО
	|			И ВТ_Данные.Проект = бит_КонтрольныеЗначенияБюджетовОбороты.Проект
	|			И ВТ_Данные.СтатьяОборотов = бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов
	|			И (бит_КонтрольныеЗначенияБюджетовОбороты.Период >= НАЧАЛОПЕРИОДА(ВТ_Данные.Период, ГОД))
	|			И (бит_КонтрольныеЗначенияБюджетовОбороты.Период <= КОНЕЦПЕРИОДА(ВТ_Данные.Период, ГОД))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.СтатьяОборотов,
	|	ВТ_Данные.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) < 0";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Возврат Ложь; //в бюджет НЕ уложились
	Иначе 
		Возврат Истина; //в бюджет уложились
	КонецЕсли;
	
	
	
КонецФункции

Функция ПолучитьПревышениеЦФО_Проект_СтатьяОборотов(Документ) Экспорт
	
	//Ппроверим прервышение	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО КАК ЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Проект КАК Проект,
	|	бит_ФормаВводаБюджетаБДДС.СтатьяОборотов КАК СтатьяОборотов,
	|	НАЧАЛОПЕРИОДА(бит_ФормаВводаБюджетаБДДС.Период, ГОД) КАК Период
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) КАК Разность,
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.СтатьяОборотов,
	|	ВТ_Данные.Период
	|ПОМЕСТИТЬ ВТ_ПолуИтог
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Запись,
	|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
	|					И СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО ВТ_Данные.ЦФО = бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО
	|			И ВТ_Данные.Проект = бит_КонтрольныеЗначенияБюджетовОбороты.Проект
	|			И ВТ_Данные.СтатьяОборотов = бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов
	|			И (бит_КонтрольныеЗначенияБюджетовОбороты.Период >= НАЧАЛОПЕРИОДА(ВТ_Данные.Период, ГОД))
	|			И (бит_КонтрольныеЗначенияБюджетовОбороты.Период <= КОНЕЦПЕРИОДА(ВТ_Данные.Период, ГОД))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.СтатьяОборотов,
	|	ВТ_Данные.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТ_ПолуИтог.Разность) КАК Разность
	|ИЗ
	|	ВТ_ПолуИтог КАК ВТ_ПолуИтог";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда  		
		Возврат  Выборка.Разность;
	Иначе
		Возврат 0;
	КонецЕсли;	
	
КонецФункции

Функция ПолучитьПроцентПревышениеЦФО_Проект_СтатьяОборотов(Документ) Экспорт
	
	//Ппроверим прервышение	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО КАК ЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Проект КАК Проект,
	|	бит_ФормаВводаБюджетаБДДС.СтатьяОборотов КАК СтатьяОборотов,
	|	НАЧАЛОПЕРИОДА(бит_ФормаВводаБюджетаБДДС.Период, ГОД) КАК Период
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) = 0
	|			ТОГДА 100
	|		ИНАЧЕ (СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот)) * 100 / СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот)
	|	КОНЕЦ КАК Процент,
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.СтатьяОборотов,
	|	ВТ_Данные.Период
	|ПОМЕСТИТЬ ВТ_ПолуИтог
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|				,
	|				,
	|				Запись,
	|				Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Бюджет_Инвест)
	|					И СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)) КАК бит_КонтрольныеЗначенияБюджетовОбороты
	|		ПО ВТ_Данные.ЦФО = бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО
	|			И ВТ_Данные.Проект = бит_КонтрольныеЗначенияБюджетовОбороты.Проект
	|			И ВТ_Данные.СтатьяОборотов = бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов
	|			И (бит_КонтрольныеЗначенияБюджетовОбороты.Период >= НАЧАЛОПЕРИОДА(ВТ_Данные.Период, ГОД))
	|			И (бит_КонтрольныеЗначенияБюджетовОбороты.Период <= КОНЕЦПЕРИОДА(ВТ_Данные.Период, ГОД))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.ЦФО,
	|	ВТ_Данные.Проект,
	|	ВТ_Данные.СтатьяОборотов,
	|	ВТ_Данные.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийКонтрольОборот) - СУММА(бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_ПолуИтог.Процент, 0) < 0
	|				ТОГДА -ЕСТЬNULL(ВТ_ПолуИтог.Процент, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_ПолуИтог.Процент, 0)
	|		КОНЕЦ) КАК Процент
	|ИЗ
	|	ВТ_ПолуИтог КАК ВТ_ПолуИтог";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда  		
		Возврат  Выборка.Процент;
	Иначе
		Возврат 0;
	КонецЕсли; 	
	
	
КонецФункции

Функция ПолучитьОстатокПоБюджетуПоКаждойСтроке(Документ) Экспорт
	
	//Нужно создать именно произвольное условие, чтобы иметь возможность компоновать в в наборе условий произвольным образом
	//Если в колонке Остаток по Бюджету в каждой строке заявки сумма≥0 – да
	//Если хотя бы в одной из строк заявки в колонке Остаток по бюджету сумма < 0 - нет
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(бит_ФормаВводаБюджетаБДДС.ОстатокПоБюджету, 0) КАК бит_БК_ОстатокПоБюджету
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|	И ЕСТЬNULL(бит_ФормаВводаБюджетаБДДС.ОстатокПоБюджету, 0) < 0";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПроверитьБДДССодержитПроектСНаименованием(Документ,Код) Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(бит_ФормаВводаБюджетаБДДС.бит_БК_ОстатокПоБюджету, 0) КАК бит_БК_ОстатокПоБюджету
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|	И бит_ФормаВводаБюджетаБДДС.Проект = &Проект";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("Проект", Справочники.Проекты.НайтиПоКоду(Код));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Функция РеквизитыДляМуршрутовВидимы(Документ) Экспорт
	
	АлгоритмАктуальный = бит_уп_Сервер.ПолучитьАлгоритмВизирования(Документ.Ссылка); 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-18 (#2921)  	
	//Если АлгоритмАктуальный = Справочники.бит_уп_Алгоритмы.НайтиПоКоду("00-000030") или АлгоритмАктуальный = Справочники.бит_уп_Алгоритмы.НайтиПоКоду("00-000032") или АлгоритмАктуальный = Справочники.бит_уп_Алгоритмы.НайтиПоКоду("00-000033")Тогда
	//	Возврат Истина;
	//Иначе
	//	Возврат Ложь;   		
	//КонецЕсли;
	//Заменено на:
	Если Не ЗначениеЗаполнено(АлгоритмАктуальный) Тогда 
		Возврат Ложь;
	Иначе 
		Возврат АлгоритмАктуальный.ок_НоваяСхема;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-18 (#2921)
	
КонецФункции

Функция ВДокументеБольшеОдногоЦФО(Документ) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ бит_ФормаВводаБюджетаБДДС.ЦФО) КАК КоличествоРазличныхЦФО,
	|	бит_ФормаВводаБюджетаБДДС.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ФормаВводаБюджетаБДДС.Ссылка";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Если Выборка.КоличествоРазличныхЦФО >1 Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции
//-СБ Пискунова 22.12.2016 #2691

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-18 (#2921)
Функция КоличествоОЦРВДокументе(Документ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(ОК_БК_ОтветственныеЗаЦентрРезультата.Инициатор, ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка))) КАК КоличествоИнициаторов
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОК_БК_ОтветственныеЗаЦентрРезультата КАК ОК_БК_ОтветственныеЗаЦентрРезультата
	|		ПО бит_ФормаВводаБюджетаБДДС.СтатьяОборотов = ОК_БК_ОтветственныеЗаЦентрРезультата.СтатьяОборотов
	|			И бит_ФормаВводаБюджетаБДДС.ЦФО = ОК_БК_ОтветственныеЗаЦентрРезультата.ЦФО
	|			И бит_ФормаВводаБюджетаБДДС.Аналитика_2 = ОК_БК_ОтветственныеЗаЦентрРезультата.ОбъектСтроительства
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка = &Ссылка
	|	И ЕСТЬNULL(ОК_БК_ОтветственныеЗаЦентрРезультата.Инициатор, ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.КоличествоИнициаторов;
	КонецЕсли;		
	
КонецФункции

Функция ЕстьПревышениеПоАналитикам(парОбъект, СтрокаАналитик = "") Экспорт
	
	СтруктураВозврата = Новый Структура;
	
	СтруктураВозврата.Вставить("СверхБюджета"			, Ложь);
	СтруктураВозврата.Вставить("СуммаПревышающаяБюджет" , 0);
	СтруктураВозврата.Вставить("ИтогСуммаПоБюджету"     , 0);
	СтруктураВозврата.Вставить("ПревышениеБюджета" 		, 0);
	СтруктураВозврата.Вставить("ПроцентПревышения"		, 0);
	СтруктураВозврата.Вставить("СуммаКонтроль"			, 0);
	
	ЗначенияПеречисления = Метаданные.Перечисления.бит_БК_ДопИзмеренияКонтроля.ЗначенияПеречисления;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-01 (#2986)
	Если Не ПустаяСтрока(СтрокаАналитик) Тогда 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-01 (#2986)
	
	СписокАналитик = Новый СписокЗначений;
	
	Для Каждого ИмяАналитики Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаАналитик,",",Истина) Цикл 
		Если ЗначенияПеречисления.Найти(ИмяАналитики) <> Неопределено Тогда 
			СписокАналитик.Добавить(ПредопределенноеЗначение("Перечисление.бит_БК_ДопИзмеренияКонтроля."+ИмяАналитики));
		КонецЕсли;
	КонецЦикла;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-01 (#2986)
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-01 (#2986)
	
	//Для заполнения в теле процедуры
	пТчБДДСДокумента = парОбъект.БДДС;
	пТЧДокумента = пТчБДДСДокумента.Выгрузить().Скопировать();
	
	пНастройкиВыбораКЗБПоСценариям = СценариПланированияНастройкиВыбораСумм();
		
	пСценарииКонтроллируемые = пТЧДокумента.ВыгрузитьКолонку("Сценарий");
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-01 (#2986)
	Если Не ПустаяСтрока(СтрокаАналитик) Тогда 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-01 (#2986)

	Для Каждого Сценарий Из пСценарииКонтроллируемые Цикл 
		Если Не ЗначениеЗаполнено(Сценарий) ИЛИ
			 НЕ Сценарий.Предопределенный
		Тогда 
			Продолжить;
		КонецЕсли;
		
		пНастройкиВыбораКЗБПоСценариям.Вставить(Сценарий.ИмяПредопределенныхДанных,СписокАналитик);
		
	КонецЦикла;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-01 (#2986)
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-01 (#2986)
	
	//Для формирования данных БК
	пТЧДляЗапросаБК = пТЧДокумента.Скопировать();
	пКолонки = пТЧДляЗапросаБК.Колонки;
	пКолонки.Сумма.Имя = "бкСуммаСНДС";
	пКолонки.бит_БК_СуммаБезНДС.Имя = "Сумма";
	
	пПериодВыборки = парОбъект.Дата;
	
	пЗапрос = Новый Запрос;
	
	пЗапрос.Текст = ТекстЗапросаКБ(,пНастройкиВыбораКЗБПоСценариям);
	
	пЗапрос.УстановитьПараметр("Ссылка"			, парОбъект.Ссылка);
	пЗапрос.УстановитьПараметр("СписокСтатей"	, пТЧДокумента.ВыгрузитьКолонку("СтатьяОборотов"));
	пЗапрос.УстановитьПараметр("ТабЧасть"		, пТЧДляЗапросаБК);
	
	//Отборы и оптимизация{
	пЗапрос.УстановитьПараметр("СписокАналитика_2"	, пТЧДокумента.ВыгрузитьКолонку("Аналитика_2")); //Объект
	пЗапрос.УстановитьПараметр("СписокЦФО"			, пТЧДокумента.ВыгрузитьКолонку("ЦФО")); 
	пЗапрос.УстановитьПараметр("СписокПроект"		, пТЧДокумента.ВыгрузитьКолонку("Проект")); 
	
	пМассивЗаявок = пТЧДокумента.ВыгрузитьКолонку("Аналитика_1");
	пМассивЗаявок.Добавить(парОбъект.бит_БК_НомерЗаявки); //если заявка-контракт то в оптимизацию должен попасть и он (хотя есть сомнение: возможно в универсальной заявке он вообще здесь должен быть один)
	
	пЗапрос.УстановитьПараметр("СписокАналитика_1", пМассивЗаявок); //№ заявки
	пЗапрос.УстановитьПараметр("ШапкаАналитика_1", парОбъект.бит_БК_НомерЗаявки); //в отборы включается значение из шапки, если это контракт
	//}Отборы и оптимизация{
		
	пЗапрос.УстановитьПараметр("Сценарий", ПолучитьКонтроллирующиеСценарии(пСценарииКонтроллируемые));
	пЗапрос.УстановитьПараметр("Дата"	 , пПериодВыборки); 
		
	пТЗРез = пЗапрос.Выполнить().Выгрузить();
		
	Если пТЗРез.Количество() > 0 Тогда //БК что-то вернул и это следует интерпретировать
		
		СтруктураВозврата.СверхБюджета 			 = ?(пТЗРез.Итог("СверхБюджетаПризнак") > 0, Истина, Ложь);
		СтруктураВозврата.СуммаПревышающаяБюджет = пТЗРез[0].ПолнаяСуммаСверхБюджетаПоВсемСтрокам; //одинаковое значение для всех строк универсального БК
		СтруктураВозврата.ИтогСуммаПоБюджету	 = пТЗРез[0].ПолнаяСуммаОстаткаСвободныхСредствПоВсемСтрокам; //одинаковое значение для всех строк универсального БК
		СтруктураВозврата.СуммаКонтроль			 = пТЗРез.Итог("СуммаКонтроль");
		
		Если СтруктураВозврата.СверхБюджета Тогда 			
			Если СтруктураВозврата.СуммаКонтроль=0 Тогда 
				СтруктураВозврата.ПроцентПревышения = 100;
			Иначе 
				СтруктураВозврата.ПроцентПревышения = 100*СтруктураВозврата.СуммаПревышающаяБюджет / СтруктураВозврата.СуммаКонтроль;
			КонецЕсли;
		КонецЕсли;		 	
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-18 (#2921)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-05-17 (#2971)

Функция ПолучитьТаблицуСПревышениямиПоАналитикам(СписокАналитик, пТЧДокумента, Дата, бит_БК_НомерЗаявки, Ссылка) Экспорт
			
	пНастройкиВыбораКЗБПоСценариям = СценариПланированияНастройкиВыбораСумм();
		
	пСценарииКонтроллируемые = пТЧДокумента.ВыгрузитьКолонку("Сценарий");
	
	Для Каждого Сценарий Из пСценарииКонтроллируемые Цикл 
		Если Не ЗначениеЗаполнено(Сценарий) ИЛИ
			 НЕ Сценарий.Предопределенный
		Тогда 
			Продолжить;
		КонецЕсли;
		
		пНастройкиВыбораКЗБПоСценариям.Вставить(Сценарий.ИмяПредопределенныхДанных,СписокАналитик);
		
	КонецЦикла;
		
	//Для формирования данных БК
	пТЧДляЗапросаБК = пТЧДокумента.Скопировать();
	пКолонки = пТЧДляЗапросаБК.Колонки;
	пКолонки.Сумма.Имя = "бкСуммаСНДС";
	пКолонки.бит_БК_СуммаБезНДС.Имя = "Сумма";
	
	пПериодВыборки = Дата;
	
	пЗапрос = Новый Запрос;                             
							
	пЗапрос.Текст = ТекстЗапросаКБ(,пНастройкиВыбораКЗБПоСценариям);
	
	пЗапрос.УстановитьПараметр("Ссылка"			, Ссылка);
	пЗапрос.УстановитьПараметр("СписокСтатей"	, пТЧДокумента.ВыгрузитьКолонку("СтатьяОборотов"));
	пЗапрос.УстановитьПараметр("ТабЧасть"		, пТЧДляЗапросаБК);
	
	//Отборы и оптимизация{
	пЗапрос.УстановитьПараметр("СписокАналитика_2"	, пТЧДокумента.ВыгрузитьКолонку("Аналитика_2")); //Объект
	пЗапрос.УстановитьПараметр("СписокЦФО"			, пТЧДокумента.ВыгрузитьКолонку("ЦФО")); 
	пЗапрос.УстановитьПараметр("СписокПроект"		, пТЧДокумента.ВыгрузитьКолонку("Проект")); 
	
	пМассивЗаявок = пТЧДокумента.ВыгрузитьКолонку("Аналитика_1");
	пМассивЗаявок.Добавить(бит_БК_НомерЗаявки); //если заявка-контракт то в оптимизацию должен попасть и он (хотя есть сомнение: возможно в универсальной заявке он вообще здесь должен быть один)
	
	пЗапрос.УстановитьПараметр("СписокАналитика_1", пМассивЗаявок); //№ заявки
	пЗапрос.УстановитьПараметр("ШапкаАналитика_1", бит_БК_НомерЗаявки); //в отборы включается значение из шапки, если это контракт
	//}Отборы и оптимизация{
		
	пЗапрос.УстановитьПараметр("Сценарий", ПолучитьКонтроллирующиеСценарии(пСценарииКонтроллируемые));
	пЗапрос.УстановитьПараметр("Дата"	 , пПериодВыборки); 
		
	Возврат пЗапрос.Выполнить().Выгрузить();
	                                        	
КонецФункции

//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-05-17 (#2971)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-08-06 (#3051)
Процедура ПроверитьИДобавитьЗаписьПоАналитике1(Ссылка,Аналитика,ОК_ФВБ) Экспорт
	
	Если Не ЗначениеЗаполнено(ОК_ФВБ) Тогда 
		
		ЗаписьДопАналитик = РегистрыСведений.бит_ДополнительныеАналитики.СоздатьМенеджерЗаписи();
		ЗаписьДопАналитик.Объект			= Ссылка;
		ЗаписьДопАналитик.Аналитика 		= Аналитика;
		ЗаписьДопАналитик.Прочитать();
		Если ЗаписьДопАналитик.Выбран() Тогда 
			ЗаписьДопАналитик.Удалить();
		КонецЕсли;		
		
		Возврат;
		
	КонецЕсли;
	
	пЗапрос = Новый Запрос;
	пЗапрос.УстановитьПараметр("Объект" 			, Ссылка);
	пЗапрос.УстановитьПараметр("Аналитика"  		, Аналитика);
	пЗапрос.УстановитьПараметр("ЗначениеАналитики"  , ОК_ФВБ);
	
	пТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_ДополнительныеАналитики.ЗначениеАналитики КАК ЗначениеАналитики
	|ИЗ
	|	РегистрСведений.бит_ДополнительныеАналитики КАК бит_ДополнительныеАналитики
	|ГДЕ
	|	бит_ДополнительныеАналитики.Объект = &Объект
	|	И бит_ДополнительныеАналитики.Аналитика = &Аналитика
	|	И бит_ДополнительныеАналитики.ЗначениеАналитики = &ЗначениеАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	бит_ДополнительныеАналитики.ЗначениеАналитики";
	
	пЗапрос.Текст = пТекстЗапроса;
	
	пРезультат = пЗапрос.Выполнить();
	
	Если НЕ пРезультат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьДопАналитик = РегистрыСведений.бит_ДополнительныеАналитики.СоздатьМенеджерЗаписи();
	ЗаписьДопАналитик.Объект			= Ссылка;
	ЗаписьДопАналитик.Аналитика 		= Аналитика;
	ЗаписьДопАналитик.ЗначениеАналитики = ОК_ФВБ;
		
	Попытка
				
		ЗаписьДопАналитик.Записать();		
				
	Исключение
				
		пТекстОшибки = НСтр("ru = 'Не удалось добавить запись в РС для объекта %1 со значением аналитики %2 по причине: 
		|%3'");
		пТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(пТекстОшибки, Ссылка,
																						  	 ОК_ФВБ,
																							 ОписаниеОшибки());
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение ТЧ документа по упр. аналитикам'"), УровеньЖурналаРегистрации.Ошибка, Метаданные.РегистрыСведений.бит_ДополнительныеАналитики, Ссылка, пТекстОшибки);
		
		Возврат;
				
	КонецПопытки;
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-08-06 (#3051)

//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2018-10-11 (#3098)
Процедура ок_ВременныеТаблицыДляКонтроляОстатков2018(МенеджерВременныхТаблиц, НаборЗаписейДокументаФакта, ТипОперации)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НаборЗаписейДокументаФакта", НаборЗаписейДокументаФакта);
	Запрос.УстановитьПараметр("ТипОперации", ТипОперации);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_КонтрольныеЗначенияБюджетов.Период КАК Период,
	|	бит_КонтрольныеЗначенияБюджетов.Активность КАК Активность,
	|	бит_КонтрольныеЗначенияБюджетов.Регистратор КАК Регистратор,
	|	бит_КонтрольныеЗначенияБюджетов.Сценарий КАК Сценарий,
	|	бит_КонтрольныеЗначенияБюджетов.ЦФО КАК ЦФО,
	|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов КАК СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетов.Контрагент КАК Контрагент,
	|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	бит_КонтрольныеЗначенияБюджетов.Проект КАК Проект,
	|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет КАК БанковскийСчет,
	|	бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1 КАК Аналитика_1,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2 КАК Аналитика_2,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3 КАК Аналитика_3,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4 КАК Аналитика_4,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5 КАК Аналитика_5,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6 КАК Аналитика_6,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7 КАК Аналитика_7,
	|	бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение КАК СуммаСценарийИсполнение,
	|	бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль КАК СуммаСценарийКонтроль
	|ПОМЕСТИТЬ Т_НаборЗаписей
	|ИЗ
	|	&НаборЗаписейДокументаФакта КАК бит_КонтрольныеЗначенияБюджетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФВБ.Ссылка КАК Контракт,
	|	ФВБ.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ФВБ.бит_БК_НомерЗаявки КАК ЗаявкаИнвест
	|ПОМЕСТИТЬ Т_ФВБ_Контракт
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета КАК ФВБ
	|ГДЕ
	|	(ФВБ.ДоговорКонтрагента, ФВБ.бит_БК_НомерЗаявки) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т_НаборЗаписей.ДоговорКонтрагента,
	|				Т_НаборЗаписей.Аналитика_1
	|			ИЗ
	|				Т_НаборЗаписей
	|			ГДЕ
	|				НЕ Т_НаборЗаписей.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И Т_НаборЗаписей.СтатьяОборотов.ВидСтатьи = ЗНАЧЕНИЕ(Справочник.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность)
	|				И Т_НаборЗаписей.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КЗБ.Сценарий КАК Сценарий,
	|	КЗБ.СценарийКонтролируемый КАК СценарийКонтролируемый
	|ПОМЕСТИТЬ Т_СценарииКонтроля
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК КЗБ
	|ГДЕ
	|	КЗБ.Регистратор ССЫЛКА Документ.бит_ФормаВводаБюджета
	//|	И НЕ КЗБ.Регистратор В
	//|				(ВЫБРАТЬ ПЕРВЫЕ 1
	//|					Т_НаборЗаписей.Регистратор
	//|				ИЗ
	//|					Т_НаборЗаписей)
	|	И КЗБ.Активность
	|	И КЗБ.Аналитика_1 В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т_НаборЗаписей.Аналитика_1
	|			ИЗ
	|				Т_НаборЗаписей
	|			ГДЕ
	|				НЕ (ВЫРАЗИТЬ(Т_НаборЗаписей.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета)) = ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка))
	|	И КЗБ.СуммаСценарийКонтроль <> 0
	|	И КЗБ.ДоговорКонтрагента В 
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т_НаборЗаписей.ДоговорКонтрагента
	|			ИЗ
	|				Т_НаборЗаписей)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетов.Период, МЕСЯЦ) КАК Период,
	|	бит_КонтрольныеЗначенияБюджетов.Регистратор КАК Регистратор,
	|	бит_КонтрольныеЗначенияБюджетов.Сценарий КАК Сценарий,
	|	бит_КонтрольныеЗначенияБюджетов.ЦФО КАК ЦФО,
	|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов КАК СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетов.Контрагент КАК Контрагент,
	|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	бит_КонтрольныеЗначенияБюджетов.Проект КАК Проект,
	|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет КАК БанковскийСчет,
	|	бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1 КАК Аналитика_1,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2 КАК Аналитика_2,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3 КАК Аналитика_3,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4 КАК Аналитика_4,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5 КАК Аналитика_5,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6 КАК Аналитика_6,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7 КАК Аналитика_7,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ""ОтменаПроведения""
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийИсполнение)
	|	КОНЕЦ КАК СуммаСценарийИсполнение,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ""ОтменаПроведения""
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(бит_КонтрольныеЗначенияБюджетов.СуммаСценарийКонтроль)
	|	КОНЕЦ КАК СуммаСценарийКонтроль
	|ПОМЕСТИТЬ Т_ДвиженияДокумента
	|ИЗ
	|	Т_НаборЗаписей КАК бит_КонтрольныеЗначенияБюджетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_СценарииКонтроля КАК Т_СценарииКонтроля
	|		ПО бит_КонтрольныеЗначенияБюджетов.Сценарий = Т_СценарииКонтроля.Сценарий
	|			И бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый = Т_СценарииКонтроля.СценарийКонтролируемый
	|ГДЕ
	|	бит_КонтрольныеЗначенияБюджетов.Активность
	|	И НЕ (ВЫРАЗИТЬ(бит_КонтрольныеЗначенияБюджетов.Аналитика_1 КАК Документ.бит_ФормаВводаБюджета)) = ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(бит_КонтрольныеЗначенияБюджетов.Период, МЕСЯЦ),
	|	бит_КонтрольныеЗначенияБюджетов.Регистратор,
	|	бит_КонтрольныеЗначенияБюджетов.Сценарий,
	|	бит_КонтрольныеЗначенияБюджетов.ЦФО,
	|	бит_КонтрольныеЗначенияБюджетов.СтатьяОборотов,
	|	бит_КонтрольныеЗначенияБюджетов.Контрагент,
	|	бит_КонтрольныеЗначенияБюджетов.ДоговорКонтрагента,
	|	бит_КонтрольныеЗначенияБюджетов.Проект,
	|	бит_КонтрольныеЗначенияБюджетов.НоменклатурнаяГруппа,
	|	бит_КонтрольныеЗначенияБюджетов.БанковскийСчет,
	|	бит_КонтрольныеЗначенияБюджетов.СценарийКонтролируемый,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_1,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_2,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_3,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_4,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_5,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_6,
	|	бит_КонтрольныеЗначенияБюджетов.Аналитика_7
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	КЗБ.Период КАК Период,
	|	КЗБ.СтатьяОборотов КАК СтатьяОборотов,
	|	КЗБ.Сценарий КАК Сценарий,
	|	КЗБ.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	КЗБ.Аналитика_1 КАК Аналитика_1
	|ПОМЕСТИТЬ Т_СтатьиОборотов
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК КЗБ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Т_СценарииКонтроля КАК Т_СценарииКонтроля
	|		ПО КЗБ.Сценарий = Т_СценарииКонтроля.Сценарий
	|			И КЗБ.СценарийКонтролируемый = Т_СценарииКонтроля.СценарийКонтролируемый
	|ГДЕ
	|	КЗБ.СуммаСценарийКонтроль <> 0
	|	И КЗБ.Активность
	|	И КЗБ.Аналитика_1 В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т_ДвиженияДокумента.Аналитика_1
	|			ИЗ
	|				Т_ДвиженияДокумента) 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Т_СтатьиОборотов.СтатьяОборотов КАК СтатьяОборотов,
	|	МАКСИМУМ(бит_БК_КонтролирующиеСтатьиОборотов.Период) КАК ПериодКС,
	|	Т_СтатьиОборотов.Период КАК Период
	|ПОМЕСТИТЬ Т_Контр_Периоды
	|ИЗ
	|	Т_СтатьиОборотов КАК Т_СтатьиОборотов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов КАК бит_БК_КонтролирующиеСтатьиОборотов
	|		ПО Т_СтатьиОборотов.СтатьяОборотов = бит_БК_КонтролирующиеСтатьиОборотов.КонтролируемаяСтатья
	|			И Т_СтатьиОборотов.Период >= бит_БК_КонтролирующиеСтатьиОборотов.Период
	|ГДЕ
	|	бит_БК_КонтролирующиеСтатьиОборотов.АктивностьСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	Т_СтатьиОборотов.СтатьяОборотов,
	|	Т_СтатьиОборотов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Т_Контр_Периоды.СтатьяОборотов КАК СтатьяОборотов,
	|	бит_БК_КонтролирующиеСтатьиОборотов.КонтролирующаяСтатья КАК КонтролирующаяСтатья,
	|	Т_Контр_Периоды.Период КАК Период
	|ПОМЕСТИТЬ Т_КонтрСтатьи
	|ИЗ
	|	Т_Контр_Периоды КАК Т_Контр_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов КАК бит_БК_КонтролирующиеСтатьиОборотов
	|		ПО Т_Контр_Периоды.СтатьяОборотов = бит_БК_КонтролирующиеСтатьиОборотов.КонтролируемаяСтатья
	|			И Т_Контр_Периоды.ПериодКС = бит_БК_КонтролирующиеСтатьиОборотов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА Т_СтатьиОборотов.Сценарий.бит_БК_ИспользоватьКонтроллирующиеСтатьи
	|			ТОГДА ЕСТЬNULL(Т_КонтрСтатьи.КонтролирующаяСтатья, Т_СтатьиОборотов.СтатьяОборотов)
	|		ИНАЧЕ Т_СтатьиОборотов.СтатьяОборотов
	|	КОНЕЦ КАК СтатьяОборотов
	|ПОМЕСТИТЬ АналитикаПоСтатьямОборотов
	|ИЗ
	|	Т_СтатьиОборотов КАК Т_СтатьиОборотов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т_КонтрСтатьи КАК Т_КонтрСтатьи
	|		ПО Т_СтатьиОборотов.СтатьяОборотов = Т_КонтрСтатьи.СтатьяОборотов
	|			И Т_СтатьиОборотов.Период = Т_КонтрСтатьи.Период
	|ГДЕ
	|	НЕ Т_СтатьиОборотов.СтатьяОборотов = ЗНАЧЕНИЕ(Справочник.бит_СтатьиОборотов.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_СтатьиОборотов.Ссылка КАК СтатьяОборотов
	|ПОМЕСТИТЬ Т_СтатьиДляОтбора
	|ИЗ
	|	Справочник.бит_СтатьиОборотов КАК бит_СтатьиОборотов
	|ГДЕ
	|	НЕ 1 В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					1 КАК ЕстьСтатьи
	|				ИЗ
	|					АналитикаПоСтатьямОборотов КАК АналитикаПоСтатьямОборотов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т_СтатьиОборотов.СтатьяОборотов
	|ИЗ
	|	Т_СтатьиОборотов КАК Т_СтатьиОборотов
	|ГДЕ
	|	1 В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				1 КАК ЕстьСтатьи
	|			ИЗ
	|				АналитикаПоСтатьямОборотов КАК АналитикаПоСтатьямОборотов)
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)
	|			ТОГДА НАЧАЛОПЕРИОДА(КЗБ.Период, ГОД)
	|		КОГДА КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_У)
	|				ИЛИ КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_У)
	|				ИЛИ КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_А)
	|			ТОГДА НАЧАЛОПЕРИОДА(КЗБ.Период, МЕСЯЦ)
	|		КОГДА КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест)
	|				ИЛИ КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_Инвест)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК Период,
	|	КЗБ.СтатьяОборотов КАК СтатьяОборотов,
	|	КЗБ.Сценарий КАК Сценарий,
	|	КЗБ.ЦФО КАК ЦФО,
	|	КЗБ.Контрагент КАК Контрагент,
	|	КЗБ.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	КЗБ.Проект КАК Проект,
	|	КЗБ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	КЗБ.БанковскийСчет КАК БанковскийСчет,
	|	КЗБ.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	ЕСТЬNULL(Т_ФВБ_Контракт.Контракт, КЗБ.Аналитика_1) КАК Аналитика_1,
	|	КЗБ.Аналитика_2 КАК Аналитика_2,
	|	КЗБ.Аналитика_3 КАК Аналитика_3,
	|	КЗБ.Аналитика_4 КАК Аналитика_4,
	|	КЗБ.Аналитика_5 КАК Аналитика_5,
	|	КЗБ.Аналитика_6 КАК Аналитика_6,
	|	КЗБ.Аналитика_7 КАК Аналитика_7,
	|	СУММА(КЗБ.СуммаСценарийКонтроль) КАК СуммаСценарийКонтроль,
	|	СУММА(КЗБ.СуммаСценарийИсполнение) КАК СуммаСценарийИсполнение,
	|	0 КАК СуммаСценарийКонтрольОперации,
	|	0 КАК СуммаСценарийИсполнениеОперации
	|ПОМЕСТИТЬ Т_ДанныеПоБюджету
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК КЗБ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т_ФВБ_Контракт КАК Т_ФВБ_Контракт
	|		ПО (Т_ФВБ_Контракт.ЗаявкаИнвест = КЗБ.Аналитика_1)
	|			И (Т_ФВБ_Контракт.ДоговорКонтрагента = КЗБ.ДоговорКонтрагента)
	|			И (КЗБ.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест))
	|ГДЕ
	|	(КЗБ.Сценарий, КЗБ.СценарийКонтролируемый) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т_СценарииКонтроля.Сценарий,
	|				Т_СценарииКонтроля.СценарийКонтролируемый
	|			ИЗ
	|				Т_СценарииКонтроля)
	|	И КЗБ.Аналитика_1 В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Т_ДвиженияДокумента.Аналитика_1
	|			ИЗ
	|				Т_ДвиженияДокумента)
	|	И КЗБ.СтатьяОборотов В
	|			(ВЫБРАТЬ
	|				Т_СтатьиДляОтбора.СтатьяОборотов
	|			ИЗ
	|				Т_СтатьиДляОтбора)
	|	И КЗБ.Активность
	|	И НЕ КЗБ.Регистратор В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					Т_ДвиженияДокумента.Регистратор
	|				ИЗ
	|					Т_ДвиженияДокумента) 
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)
	|			ТОГДА НАЧАЛОПЕРИОДА(КЗБ.Период, ГОД)
	|		КОГДА КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_У)
	|				ИЛИ КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_У)
	|				ИЛИ КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_А)
	|			ТОГДА НАЧАЛОПЕРИОДА(КЗБ.Период, МЕСЯЦ)
	|		КОГДА КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест)
	|				ИЛИ КЗБ.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_Инвест)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ,
	|	КЗБ.СтатьяОборотов,
	|	КЗБ.Сценарий,
	|	КЗБ.ЦФО,
	|	КЗБ.Контрагент,
	|	КЗБ.ДоговорКонтрагента,
	|	КЗБ.Проект,
	|	КЗБ.НоменклатурнаяГруппа,
	|	КЗБ.БанковскийСчет,
	|	КЗБ.СценарийКонтролируемый,
	|	ЕСТЬNULL(Т_ФВБ_Контракт.Контракт, КЗБ.Аналитика_1),
	|	КЗБ.Аналитика_2,
	|	КЗБ.Аналитика_3,
	|	КЗБ.Аналитика_4,
	|	КЗБ.Аналитика_5,
	|	КЗБ.Аналитика_6,
	|	КЗБ.Аналитика_7
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Т_ДвиженияДокумента.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_Инвест)
	|			ТОГДА НАЧАЛОПЕРИОДА(Т_ДвиженияДокумента.Период, ГОД)
	|		КОГДА Т_ДвиженияДокумента.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_У)
	|				ИЛИ Т_ДвиженияДокумента.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Заявка_У)
	|				ИЛИ Т_ДвиженияДокумента.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_А)
	|			ТОГДА НАЧАЛОПЕРИОДА(Т_ДвиженияДокумента.Период, МЕСЯЦ)
	|		КОГДА Т_ДвиженияДокумента.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест)
	|				ИЛИ Т_ДвиженияДокумента.СценарийКонтролируемый = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_Инвест)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ,
	|	Т_ДвиженияДокумента.СтатьяОборотов,
	|	Т_ДвиженияДокумента.Сценарий,
	|	Т_ДвиженияДокумента.ЦФО,
	|	Т_ДвиженияДокумента.Контрагент,
	|	Т_ДвиженияДокумента.ДоговорКонтрагента,
	|	Т_ДвиженияДокумента.Проект,
	|	Т_ДвиженияДокумента.НоменклатурнаяГруппа,
	|	Т_ДвиженияДокумента.БанковскийСчет,
	|	Т_ДвиженияДокумента.СценарийКонтролируемый,
	|	ЕСТЬNULL(Т_ФВБ_Контракт.Контракт, Т_ДвиженияДокумента.Аналитика_1),
	|	Т_ДвиженияДокумента.Аналитика_2,
	|	Т_ДвиженияДокумента.Аналитика_3,
	|	Т_ДвиженияДокумента.Аналитика_4,
	|	Т_ДвиженияДокумента.Аналитика_5,
	|	Т_ДвиженияДокумента.Аналитика_6,
	|	Т_ДвиженияДокумента.Аналитика_7,
	|	0,
	|	0,
	|	Т_ДвиженияДокумента.СуммаСценарийКонтроль,
	|	Т_ДвиженияДокумента.СуммаСценарийИсполнение
	|ИЗ
	|	Т_ДвиженияДокумента КАК Т_ДвиженияДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т_ФВБ_Контракт КАК Т_ФВБ_Контракт
	|		ПО (Т_ФВБ_Контракт.ЗаявкаИнвест = Т_ДвиженияДокумента.Аналитика_1)
	|			И (Т_ФВБ_Контракт.ДоговорКонтрагента = Т_ДвиженияДокумента.ДоговорКонтрагента)
	|			И (Т_ДвиженияДокумента.Сценарий = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Контракт_Инвест))
	|;
	|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Т_ДанныеПоБюджету.Период КАК Период,
	//|	Т_ДанныеПоБюджету.СтатьяОборотов КАК СтатьяОборотов,
	//|	Т_ДанныеПоБюджету.Сценарий КАК Сценарий,
	//|	Т_ДанныеПоБюджету.ЦФО КАК ЦФО,
	//|	Т_ДанныеПоБюджету.Контрагент КАК Контрагент,
	//|	Т_ДанныеПоБюджету.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//|	Т_ДанныеПоБюджету.Проект КАК Проект,
	//|	Т_ДанныеПоБюджету.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	//|	Т_ДанныеПоБюджету.БанковскийСчет КАК БанковскийСчет,
	//|	Т_ДанныеПоБюджету.СценарийКонтролируемый КАК СценарийКонтролируемый,
	//|	Т_ДанныеПоБюджету.Аналитика_1 КАК Аналитика_1,
	//|	Т_ДанныеПоБюджету.Аналитика_2 КАК Аналитика_2,
	//|	Т_ДанныеПоБюджету.Аналитика_3 КАК Аналитика_3,
	//|	Т_ДанныеПоБюджету.Аналитика_4 КАК Аналитика_4,
	//|	Т_ДанныеПоБюджету.Аналитика_5 КАК Аналитика_5,
	//|	Т_ДанныеПоБюджету.Аналитика_6 КАК Аналитика_6,
	//|	Т_ДанныеПоБюджету.Аналитика_7 КАК Аналитика_7,
	//|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийКонтроль) КАК СуммаСценарийКонтроль,
	//|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийИсполнение) КАК СуммаСценарийИсполнение,
	//|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийИсполнениеОперации) КАК СуммаСценарийИсполнениеОперации,
	//|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийКонтрольОперации) КАК СуммаСценарийКонтрольОперации,
	//|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийКонтроль) + СУММА(Т_ДанныеПоБюджету.СуммаСценарийКонтрольОперации) - СУММА(Т_ДанныеПоБюджету.СуммаСценарийИсполнение) - СУММА(Т_ДанныеПоБюджету.СуммаСценарийИсполнениеОперации) КАК ОстатокБюджета
	//|ПОМЕСТИТЬ Т_Итоговая
	//|ИЗ
	//|	Т_ДанныеПоБюджету КАК Т_ДанныеПоБюджету
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Т_ДанныеПоБюджету.Период,
	//|	Т_ДанныеПоБюджету.СтатьяОборотов,
	//|	Т_ДанныеПоБюджету.Сценарий,
	//|	Т_ДанныеПоБюджету.ЦФО,
	//|	Т_ДанныеПоБюджету.Контрагент,
	//|	Т_ДанныеПоБюджету.ДоговорКонтрагента,
	//|	Т_ДанныеПоБюджету.Проект,
	//|	Т_ДанныеПоБюджету.НоменклатурнаяГруппа,
	//|	Т_ДанныеПоБюджету.БанковскийСчет,
	//|	Т_ДанныеПоБюджету.СценарийКонтролируемый,
	//|	Т_ДанныеПоБюджету.Аналитика_1,
	//|	Т_ДанныеПоБюджету.Аналитика_2,
	//|	Т_ДанныеПоБюджету.Аналитика_3,
	//|	Т_ДанныеПоБюджету.Аналитика_4,
	//|	Т_ДанныеПоБюджету.Аналитика_5,
	//|	Т_ДанныеПоБюджету.Аналитика_6,
	//|	Т_ДанныеПоБюджету.Аналитика_7
	|"
	;
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Процедура ок_ПолучитьНастройкиКонтроляБюджетаПоСценариям(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_БК_НастройкиБК.ИмяНастройки КАК Сценарий,
	|	бит_БК_НастройкиБК.Значение КАК СписокИзмерений
	|ИЗ
	|	РегистрСведений.бит_БК_НастройкиБК КАК бит_БК_НастройкиБК
	|ГДЕ
	|	бит_БК_НастройкиБК.Группа = ""Контроль бюджета""
	|	И ВЫРАЗИТЬ(бит_БК_НастройкиБК.ИмяНастройки КАК Справочник.СценарииПланирования) В (ВЫБРАТЬ РАЗЛИЧНЫЕ СценарийКонтролируемый ИЗ Т_ДанныеПоБюджету)"
	;
	
	// подготовим таблицу, в которой для каждого измерения РН КЗБ установим признак необходимости контроля
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("СценарийДляКонтроля", Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования"));
	Результат.Колонки.Добавить("Период", Новый ОписаниеТипов("ПеречислениеСсылка.бит_БК_ДопИзмеренияКонтроля"));
	
	ТекстЗапроса = 
	"ВЫБРАТЬ 
	|	ТаблицаКонтроляБюджета.СценарийДляКонтроля,
	|   ТаблицаКонтроляБюджета.Период";
	
	МетаДатаРегистра = Метаданные.РегистрыНакопления.бит_КонтрольныеЗначенияБюджетов;
	Для Каждого Измерение Из МетаДатаРегистра.Измерения Цикл
		Результат.Колонки.Добавить(Измерение.Имя, Новый ОписаниеТипов("Булево"));
		ТекстЗапроса = ТекстЗапроса + "," + Символы.ПС + "ТаблицаКонтроляБюджета." + Измерение.Имя;
	КонецЦикла;
	
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		
		СписокИзмерений = Выборка.СписокИзмерений.Получить();
		Если Не ТипЗнч(СписокИзмерений) = Тип("СписокЗначений") Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРез = Результат.Добавить();
		СтрокаРез.СценарийДляКонтроля = Выборка.Сценарий;
		Для Каждого ЭлСписка Из СписокИзмерений Цикл
			ИмяИзмерения = ОбщегоНазначения.ИмяЗначенияПеречисления(ЭлСписка.Значение);
			Если Не Результат.Колонки.Найти(ИмяИзмерения) = Неопределено Тогда
				СтрокаРез[ИмяИзмерения] = Истина;
			ИначеЕсли Лев(ИмяИзмерения, 6) = "Период" Тогда
				СтрокаРез.Период = ЭлСписка.Значение;	
			КонецЕсли;	
		КонецЦикла;	
		
	КонецЦикла;	
	
	// поместим результат во временную таблицу, ее будем использовать в основном запросе получения данных
	Запрос.Текст = ТекстЗапроса + "
	|ПОМЕСТИТЬ Т_ИзмеренияКонтроля
	|ИЗ &ТаблицаКонтроляБюджета КАК ТаблицаКонтроляБюджета"
	;
	Запрос.УстановитьПараметр("ТаблицаКонтроляБюджета", Результат);
	Запрос.Выполнить();
	
КонецПроцедуры	

Функция ок_ПолучитьАктуальныеСтатусыФВБ(МенеджерВременныхТаблиц, СтатусПоУмолчанию = Неопределено, ИсключаемыйСтатус = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_ИсторияИзмененияСтатусовОбъектов.Объект КАК Объект,
	|	бит_ИсторияИзмененияСтатусовОбъектов.Статус КАК Статус,
	|	бит_ИсторияИзмененияСтатусовОбъектов.Пользователь КАК Пользователь,
	|	бит_ИсторияИзмененияСтатусовОбъектов.Период КАК ДатаИзмененияСтатуса
	|ПОМЕСТИТЬ ИСтатусовПолная
	|ИЗ
	|	РегистрСведений.бит_ИсторияИзмененияСтатусовОбъектов КАК бит_ИсторияИзмененияСтатусовОбъектов
	|ГДЕ
	|	бит_ИсторияИзмененияСтатусовОбъектов.Объект В (ВЫБРАТЬ РАЗЛИЧНЫЕ Аналитика_1 ИЗ Т_ДанныеПоБюджету)
	|	И бит_ИсторияИзмененияСтатусовОбъектов.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т_ДанныеПоБюджету.Аналитика_1,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(&пзСтатусПоУмолчанию) = ТИП(Справочник.бит_СтатусыОбъектов)
	|				И &пзСтатусПоУмолчанию <> ЗНАЧЕНИЕ(Справочник.бит_СтатусыОбъектов.ПустаяСсылка)
	|			ТОГДА &пзСтатусПоУмолчанию
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.бит_СтатусыОбъектов.ПустаяСсылка)
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка),
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ИЗ 
	|	Т_ДанныеПоБюджету КАК Т_ДанныеПоБюджету
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСтатусовПоИсключ.Объект КАК Объект,
	|	ИСтатусовПоИсключ.Статус КАК Статус,
	|	ИСтатусовПоИсключ.Пользователь КАК Пользователь,
	|	ИСтатусовПоИсключ.ДатаИзмененияСтатуса
	|ПОМЕСТИТЬ ИСтатусовПоИсключ
	|ИЗ
	|	ИСтатусовПолная КАК ИСтатусовПоИсключ
	|ГДЕ
	|	НЕ ИСтатусовПоИсключ.Статус В (&пзСтатусыИсключения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ИСтатусовПолная.ДатаИзмененияСтатуса) КАК ДатаИзмененияСтатуса,
	|	ИСтатусовПолная.Объект,
	|	ИСтатусовПолная.Статус
	|ПОМЕСТИТЬ МаксДатаВсе
	|ИЗ
	|	ИСтатусовПолная КАК ИСтатусовПолная
	|
	|СГРУППИРОВАТЬ ПО
	|	ИСтатусовПолная.Объект,
	|	ИСтатусовПолная.Статус
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ИСтатусовПоИсключ.ДатаИзмененияСтатуса) КАК ДатаИзмененияСтатуса,
	|	ИСтатусовПоИсключ.Объект
	|ПОМЕСТИТЬ итМаксДата
	|ИЗ
	|	ИСтатусовПоИсключ КАК ИСтатусовПоИсключ
	|СГРУППИРОВАТЬ ПО
	|	ИСтатусовПоИсключ.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	итМаксДата.Объект,
	|	итМаксДата.ДатаИзмененияСтатуса,
	|	МАКСИМУМ(ИСтатусовПолная.ДатаИзмененияСтатуса) КАК ДатаИзмененияСтатуса_1
	|ПОМЕСТИТЬ итДоМаксДата
	|ИЗ
	|	итМаксДата КАК итМаксДата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИСтатусовПолная КАК ИСтатусовПолная
	|		ПО итМаксДата.ДатаИзмененияСтатуса > ИСтатусовПолная.ДатаИзмененияСтатуса
	|		И итМаксДата.Объект = ИСтатусовПолная.Объект
	|
	|СГРУППИРОВАТЬ ПО
	|	итМаксДата.ДатаИзмененияСтатуса,
	|	итМаксДата.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСтатусов.Объект,
	|	ИСтатусов.Статус,
	|	ИСтатусовПолная.Статус КАК СтатусПредыдущий,
	|	ИСтатусов.Пользователь,
	|	итДоМаксДата.ДатаИзмененияСтатуса
	|ИЗ
	|	итДоМаксДата КАК итДоМаксДата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИСтатусовПоИсключ КАК ИСтатусов
	|		ПО итДоМаксДата.ДатаИзмененияСтатуса = ИСтатусов.ДатаИзмененияСтатуса
	|		И итДоМаксДата.Объект = ИСтатусов.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИСтатусовПолная КАК ИСтатусовПолная
	|		ПО итДоМаксДата.ДатаИзмененияСтатуса_1 = ИСтатусовПолная.ДатаИзмененияСтатуса
	|		И итДоМаксДата.Объект = ИСтатусовПолная.Объект"
	;
	Запрос.УстановитьПараметр("пзСтатусыИсключения", ИсключаемыйСтатус);
	Запрос.УстановитьПараметр("пзСтатусПоУмолчанию", СтатусПоУмолчанию);
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выбрать();
	
КонецФункции

Функция ок_ОбновитьСтатусыЗаявок2018(НаборЗаписейДокументаФакта, ДокументДвижений, ТекущийПроцесс = "ОтменаПроведения")
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// подготовим таблицы для анализа
	ок_ВременныеТаблицыДляКонтроляОстатков2018(Запрос.МенеджерВременныхТаблиц, НаборЗаписейДокументаФакта, ТекущийПроцесс);
		
	// получим настройку "Контроль бюджет" и с учетом полученных настроек переопределим значения в полученных данных КЗБ
	ок_ПолучитьНастройкиКонтроляБюджетаПоСценариям(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т_ДанныеПоБюджету.Сценарий КАК Сценарий,
	|	Т_ДанныеПоБюджету.СценарийКонтролируемый КАК СценарийКонтролируемый,
	|	ВЫБОР
	|		КОГДА Т_ИзмеренияКонтроля.Период = ЗНАЧЕНИЕ(Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодГод)
	|			ТОГДА НАЧАЛОПЕРИОДА(Т_ДанныеПоБюджету.Период, ГОД)
	|		КОГДА Т_ИзмеренияКонтроля.Период = ЗНАЧЕНИЕ(Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодМесяц)
	|			ТОГДА НАЧАЛОПЕРИОДА(Т_ДанныеПоБюджету.Период, МЕСЯЦ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК Период,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.СтатьяОборотов, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.СтатьяОборотов ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК СтатьяОборотов,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.ЦФО, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.ЦФО ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК ЦФО,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Контрагент, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Контрагент ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК Контрагент,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.ДоговорКонтрагента, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.ДоговорКонтрагента ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК ДоговорКонтрагента,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Проект, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Проект ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК Проект,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.НоменклатурнаяГруппа, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.НоменклатурнаяГруппа ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.БанковскийСчет, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.БанковскийСчет ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК БанковскийСчет,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_1, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_1 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК Аналитика_1,	
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_2, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_2 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК Аналитика_2,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_3, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_3 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК Аналитика_3,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_4, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_4 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК Аналитика_4,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_5, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_5 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК Аналитика_5,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_6, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_6 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК Аналитика_6,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_7, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_7 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК Аналитика_7,
	|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийКонтроль) КАК СуммаСценарийКонтроль,
	|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийИсполнение) КАК СуммаСценарийИсполнение,
	|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийИсполнениеОперации) КАК СуммаСценарийИсполнениеОперации,
	|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийКонтрольОперации) КАК СуммаСценарийКонтрольОперации,
	|	СУММА(Т_ДанныеПоБюджету.СуммаСценарийКонтроль) + СУММА(Т_ДанныеПоБюджету.СуммаСценарийКонтрольОперации) - СУММА(Т_ДанныеПоБюджету.СуммаСценарийИсполнение) - СУММА(Т_ДанныеПоБюджету.СуммаСценарийИсполнениеОперации) КАК ОстатокБюджета
	|ПОМЕСТИТЬ Т_Итоговая
	|ИЗ
	|	Т_ДанныеПоБюджету КАК Т_ДанныеПоБюджету
	|		ЛЕВОЕ СОЕДИНЕНИЕ Т_ИзмеренияКонтроля КАК Т_ИзмеренияКонтроля
	|		ПО (Т_ДанныеПоБюджету.СценарийКонтролируемый = Т_ИзмеренияКонтроля.СценарийДляКонтроля)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т_ДанныеПоБюджету.Сценарий,
	|	Т_ДанныеПоБюджету.СценарийКонтролируемый,
	|	ВЫБОР
	|		КОГДА Т_ИзмеренияКонтроля.Период = ЗНАЧЕНИЕ(Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодГод)
	|			ТОГДА НАЧАЛОПЕРИОДА(Т_ДанныеПоБюджету.Период, ГОД)
	|		КОГДА Т_ИзмеренияКонтроля.Период = ЗНАЧЕНИЕ(Перечисление.бит_БК_ДопИзмеренияКонтроля.ПериодМесяц)
	|			ТОГДА НАЧАЛОПЕРИОДА(Т_ДанныеПоБюджету.Период, МЕСЯЦ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.СтатьяОборотов, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.СтатьяОборотов ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.ЦФО, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.ЦФО ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Контрагент, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Контрагент ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.ДоговорКонтрагента, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.ДоговорКонтрагента ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Проект, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Проект ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.НоменклатурнаяГруппа, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.НоменклатурнаяГруппа ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.БанковскийСчет, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.БанковскийСчет ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_1, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_1 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,	
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_2, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_2 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_3, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_3 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_4, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_4 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_5, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_5 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_6, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_6 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Т_ИзмеренияКонтроля.Аналитика_7, ЛОЖЬ) ТОГДА Т_ДанныеПоБюджету.Аналитика_7 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Т_Итоговая.Аналитика_1 КАК Аналитика_1,
	|	Т_Итоговая.Аналитика_1.ВидОперации КАК ВидОперации,	
	|	МАКСИМУМ(Т_Итоговая.ОстатокБюджета) КАК ОстатокБюджета
	|ИЗ
	|	Т_Итоговая КАК Т_Итоговая
	|
	|СГРУППИРОВАТЬ ПО
	|	Т_Итоговая.Аналитика_1,	
	|	Т_Итоговая.Аналитика_1.ВидОперации"
	;
	Результат = Запрос.Выполнить();
		
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	пСтатусЗакрыта 			= ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Закрыта");
	пСтатусЧерновик 		= ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_Черновик");
	пСтатусНаРассмотрении 	= ПредопределенноеЗначение("Справочник.бит_СтатусыОбъектов.ФормаВвода_НаРассмотрении");
	
	пМассивИсключений = Новый Массив;
	пМассивИсключений.Добавить(пСтатусЗакрыта);
	пМассивИсключений.Добавить(пСтатусЧерновик);
	
	ВыборкаСтатусов = ок_ПолучитьАктуальныеСтатусыФВБ(Запрос.МенеджерВременныхТаблиц, пСтатусЧерновик);
	
	// удаляем все временные таблицы
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	СтруктураРолей = ОпределитьРольПользователяБюджетногоКонтролера(ТекущийПользователь);	
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ДокументДвижений = Выборка.Аналитика_1 и ТекущийПроцесс = "ОтменаПроведения" Тогда    			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-03-22 (#2986)
			//УстановитьСтатусЗаявки(пТекущаяСтрока.Аналитика_1, пСтатусЧерновик);//отмена проведения самой заявки = Черновик
			//Заменено на:
			Если (СтруктураРолей.Инвестиционный ИЛИ СтруктураРолей.Операционный) и РольДоступна("бит_БК_ГлавныйБК") 
				 //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-05-24 (#3018)
				 И Выборка.ВидОперации <> ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт")
				 //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-05-24 (#3018)
			Тогда 
				УстановитьСтатусЗаявки(Выборка.Аналитика_1, пСтатусНаРассмотрении);//отмена проведения самой заявки = Черновик	
			Иначе 
				УстановитьСтатусЗаявки(Выборка.Аналитика_1, пСтатусЧерновик);//отмена проведения самой заявки = На рассмотрении, если ФК
			КонецЕсли;
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-03-22 (#2986)
			
		Иначе
					
			СтруктураПоиска = Новый Структура("Объект", Выборка.Аналитика_1);
			Если ВыборкаСтатусов.НайтиСледующий(СтруктураПоиска) Тогда // определим текущий статус ФВБ
		
				Если Выборка.ОстатокБюджета <= 0 Тогда //все остатки закрыты или отрицательны
					Если Не ВыборкаСтатусов.Статус = пСтатусЗакрыта И РазрешитьУстановкуСтатусаЗакрытПоМатрицеРазрешений(ТипЗнч(ДокументДвижений), ВыборкаСтатусов.Статус, ДокументДвижений, Выборка.Аналитика_1) Тогда
						УстановитьСтатусЗаявки(Выборка.Аналитика_1, пСтатусЗакрыта); // закрываем заявку
					КонецЕсли;
				ИначеЕсли ВыборкаСтатусов.Статус = пСтатусЗакрыта Тогда //ищем предыдущий статус = не "Закрыт"
					УстановитьБывшийСтатусЗаявкиДоИсключаемого(Выборка.Аналитика_1, пМассивИсключений, пСтатусЗакрыта);
				КонецЕсли;
			Иначе
				Возврат Ложь; // не смогли определить статус ФВБ
			КонецЕсли;
			ВыборкаСтатусов.Сбросить();
		КонецЕсли;
	КонецЦикла; 
	
	Возврат Истина; //считаем, что все прошло условно хорошо (если более одной заявки, то это значение формальне)
	
КонецФункции	
//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2018-10-11 (#3098)

// ++ БоровинскаяОА (СофтЛаб) 06.02.19 (#3131)
Процедура ЗаполнитьСписокСтавокНДСДляДокументовБК(ЭлементФормы) Экспорт
	
	МассивНДС = Новый Массив;
	Для каждого Ставка Из Перечисления.СтавкиНДС Цикл
		Если Ставка <> Перечисления.СтавкиНДС.НДС0 Тогда
			МассивНДС.Добавить(Ставка);
		КонецЕсли;
	КонецЦикла;
	ЭлементФормы.РежимВыбораИзСписка = Истина;
	ЭлементФормы.СписокВыбора.ЗагрузитьЗначения(МассивНДС);
	
КонецПроцедуры
// -- БоровинскаяОА (СофтЛаб) 06.02.19 (#3131)

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции механизма контроля по бюджету.
//  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Функция формирует полный текст запроса для контроля по бюджету.
// 
// Параметры:
// СтруктураПараметров - Структура.
// 
// Возвращаемое значение:
//   ТекстЗапроса - Строка.
// 
Функция СформироватьТекстЗапросаДляКонтроля(СтруктураПараметров) Экспорт

	ИзмеренияКонтроля             = СтруктураПараметров.ИзмеренияКонтроля;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
	Если СтруктураПараметров.Свойство("РесурсыДоп") Тогда 
		РесурсыДоп = СтруктураПараметров.РесурсыДоп;
	Иначе 
		РесурсыДоп = Новый Структура;
	КонецЕсли;         	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)
	
	КонтролироватьНеУстановленные = СтруктураПараметров.КонтролироватьНеУстановленные;
	Сценарий                      = СтруктураПараметров.Сценарий;
	РежимКонтроля                 = СтруктураПараметров.РежимКонтроля;
	
	Если СтрСравнить(РежимКонтроля, "Заявки") = 0 Тогда
		УсловиеНаСценарий = Истина;
	ИначеЕсли СтрСравнить(РежимКонтроля, "ГрафикиДоговоров") = 0 Тогда
		УсловиеНаСценарий = Истина;
	Иначе
		УсловиеНаСценарий = Ложь;
	КонецЕсли; 
	
    Периодичность = ПериодичностьКонтроляСценария(Сценарий);
	СтрПериодичность = бит_ОбщегоНазначения.ПолучитьИмяЗначенияПеречисления(Перечисления.бит_ПериодичностьПланирования,Периодичность);
	
	Разделитель =
	"
	|;
	|/////////////////////////////////////////////////////////////
	|";
	ТекстыЗапросовПакета = Новый Массив;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
	//ТекстТаблицаДляКонтроля      = ТекстЗапросаТаблицаДляКонтроля(ИзмеренияКонтроля,РежимКонтроля);
	//Заменено на:
	ТекстТаблицаДляКонтроля      = ТекстЗапросаТаблицаДляКонтроля(ИзмеренияКонтроля,РежимКонтроля,РесурсыДоп);	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)	
	ТекстОстатки                 = ТекстЗапросаОстаткиПоБюджету(ИзмеренияКонтроля, СтрПериодичность,
																			УсловиеНаСценарий, РежимКонтроля);
	ТекстНаличиеАналитик         = ТекстЗапросаНаличиеАналитик(ИзмеренияКонтроля);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
	//ТекстКонтрольНаличиеАналитик = ТекстЗапросаКонтрольНаличиеАналитик(ИзмеренияКонтроля);
	//ТекстКонтроль                = ТекстЗапросаКонтроль(ИзмеренияКонтроля,КонтролироватьНеУстановленные);
	//Заменено на:		
	ТекстКонтрольНаличиеАналитик = ТекстЗапросаКонтрольНаличиеАналитик(ИзмеренияКонтроля,РесурсыДоп);
	ТекстКонтроль                = ТекстЗапросаКонтроль(ИзмеренияКонтроля,КонтролироватьНеУстановленные,Периодичность,РесурсыДоп);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)
	
	ТекстУдалить = 
	"УНИЧТОЖИТЬ ТаблицаОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДляКонтроля
	|;				   
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаличиеАналитик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДляКонтроляНаличиеАналитик";
	
	ТекстыЗапросовПакета.Добавить(ТекстТаблицаДляКонтроля);
	ТекстыЗапросовПакета.Добавить(ТекстОстатки);
	ТекстыЗапросовПакета.Добавить(ТекстНаличиеАналитик);
	ТекстыЗапросовПакета.Добавить(ТекстКонтрольНаличиеАналитик);
	ТекстыЗапросовПакета.Добавить(ТекстКонтроль);
	ТекстыЗапросовПакета.Добавить(ТекстУдалить);
	
	Если СтрСравнить(РежимКонтроля, "Бюджет") = 0 Тогда
		ТекстыЗапросовПакета.Добавить("УНИЧТОЖИТЬ ТаблицаДляКонтроляНач");
	КонецЕсли; 			   
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросовПакета, Разделитель);
	
	Возврат ТекстЗапроса;

КонецФункции

// Функция обрабатывает результат выполнения запроса для контроля по бюджету. Заполняется таблица
// движений регистра бит_КонтрольныеЗначенияБюджетов.
// 
// Параметры:
//  Результат           - РезультатЗапроса.
//  ТаблицаДвижений     - ТаблицаЗначений - Таблица движений регистра бит_КонтрольныеЗначенияБюджетов.
//  СтруктураПараметров - Структура.
//  Отказ               - Булево.
//  Заголовок           - Строка.
// 
// Возвращаемое значение:
// 	МассивСтрокПревышения - массив - массив структур, каждая строка по которой произошло превышение бюджета
// 									преобразуется в структуру и помещается в массив.
// 
Функция ОбработатьРезультатКонтроля(Результат, ТаблицаДвижений, СтруктураПараметров, Отказ, Заголовок) Экспорт
	
	// Массив содержит строки по которым произошло превышение бюджета.
	МассивСтрокПревышения = Новый Массив;
	
	ИзмеренияКонтроля    = СтруктураПараметров.ИзмеренияКонтроля;	
	Сценарий             = СтруктураПараметров.Сценарий;
	КонтролироватьБюджет = СтруктураПараметров.КонтролироватьБюджет;
	СверхБюджета         = СтруктураПараметров.СверхБюджета;
	РежимКонтроля        = ?(СтруктураПараметров.Свойство("РежимКонтроля"), СтруктураПараметров.РежимКонтроля, "");
	
	Объект = Неопределено;
	СтруктураПараметров.Свойство("Объект", Объект);
	
	ВалютаСценария       = Сценарий.Валюта;
	
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	флЕстьПревышение = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		// Добавим строку в таблицу движений по регистру контролируемых значений.
		СтрокаДвижение = ТаблицаДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДвижение,Выборка);
		СтрокаДвижение.СуммаСценарийИсполнение = Выборка.Сумма;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-10 (#3078)
		Если Результат.Колонки.Найти("СуммаСНДС")<>Неопределено Тогда 
			СтрокаДвижение.СуммаСценарийИсполнениеСНДС = Выборка.СуммаСНДС;
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-10 (#3078)		
		СтрокаДвижение.КоличествоСценарийИсполнение = Выборка.Количество;
		Если НЕ ЗначениеЗаполнено(СтрокаДвижение.Сценарий) Тогда
			СтрокаДвижение.Сценарий = Сценарий;
		КонецЕсли; 
		
		//1С-ИжТиСи, Кондратьев, 16.03.2020, обновление, некомментированный исправленный код (
		//флКонтрольКоличества = Ложь;		
		//флКонтрольСуммы      = Истина;
		//1С-ИжТиСи, Кондратьев, 16.03.2020, обновление, некомментированный исправленный код )
		
		// Возможно статья оборотов является не лимитируемой для текущего режима контроля.
		Если СтрСравнить(РежимКонтроля, "Заявки") = 0 Тогда
			ЭтоЛимитируемаяСтатья = НЕ Выборка.НеКонтролировать_Заявки;
		ИначеЕсли СтрСравнить(РежимКонтроля, "Бюджет") = 0 Тогда
			ЭтоЛимитируемаяСтатья = НЕ Выборка.НеКонтролировать_Бюджеты;
			//1С-ИжТиСи, Кондратьев, 16.03.2020, обновление, некомментированный исправленный код (
			//флКонтрольКоличества = НЕ Выборка.НеКонтролировать_Количество;		
			//флКонтрольСуммы      = НЕ Выборка.НеКонтролировать_Сумма;
			//1С-ИжТиСи, Кондратьев, 16.03.2020, обновление, некомментированный исправленный код )
		ИначеЕсли СтрСравнить(РежимКонтроля, "ГрафикиДоговоров") = 0 Тогда
			ЭтоЛимитируемаяСтатья = НЕ Выборка.НеКонтролировать_Графики;
		Иначе
			ЭтоЛимитируемаяСтатья = Истина;
		КонецЕсли;
		
		// Обработаем ситуацию превышения бюджета
		//{ bit_SVKushnirenko 25.12.2016 #2669.3
		//Если КонтролироватьБюджет 
		//	 И (    ( Выборка.Разность<0 И флКонтрольСуммы) 
		//	     ИЛИ( Выборка.КоличествоРазность<0 И флКонтрольКоличества )) 
		//	 И ЭтоЛимитируемаяСтатья Тогда
		Если КонтролироватьБюджет И (Выборка.Разность<0 ИЛИ Выборка.КоличествоРазность<0) И ЭтоЛимитируемаяСтатья И бит_БК_Общий.ЭтоНеСценарийБКОК(СтрокаДвижение.Сценарий) Тогда
		//} bit_SVKushnirenko 25.12.2016 #2669.3
			
			флЕстьПревышение = Истина;
			
			Периодичность = ПериодичностьКонтроляСценария(Сценарий);
			
			ПредставлениеПериода = бит_Бюджетирование.СформироватьПредставлениеПериода(Выборка.Период,Периодичность);   
			
			// Каждую строку преобразуем в структуру
			СтруктураСтрокиПревышения = Новый Структура;
			
			СтруктураСтрокиПревышения.Вставить("Период"				, Выборка.Период);
			СтруктураСтрокиПревышения.Вставить("СтатьяОборотов"		, Выборка.СтатьяОборотов);
			СтруктураСтрокиПревышения.Вставить("Остаток"			, Выборка.Остаток);
			СтруктураСтрокиПревышения.Вставить("Сумма"				, Выборка.Сумма);
			СтруктураСтрокиПревышения.Вставить("Разность"			, Выборка.Разность);
			СтруктураСтрокиПревышения.Вставить("КоличествоОстаток"	, Выборка.КоличествоОстаток);
			СтруктураСтрокиПревышения.Вставить("Количество"			, Выборка.Количество);
			СтруктураСтрокиПревышения.Вставить("КоличествоРазность"	, Выборка.КоличествоРазность);
			
			// Соберем информацию о заполнении доп. аналитик.
			ТекстАналитика = Новый Массив(); 
			ШаблонАналитики = "- %1 = ""%2""";
			Для каждого КлючИЗначение Из ИзмеренияКонтроля Цикл
				ИмяИзмерения = КлючИЗначение.Ключ;
				Синоним = КлючИЗначение.Значение.Синоним;
				Если Выборка["Есть"+ИмяИзмерения] = 1 Тогда
					Если ЗначениеЗаполнено(Выборка[ИмяИзмерения]) Тогда
						ТекстАналитика.Добавить(СтрШаблон(ШаблонАналитики, Синоним, Выборка[ИмяИзмерения]));
					КонецЕсли; 
					СтруктураСтрокиПревышения.Вставить(ИмяИзмерения, Выборка[ИмяИзмерения]);
				КонецЕсли; 
			КонецЦикла; 
			
			ТекстАналитика = СтрСоединить(ТекстАналитика, Символы.ПС);
			ТекстАналитика = ?(ПустаяСтрока(ТекстАналитика), "", Символы.ПС) + ТекстАналитика;
			ТекстСообщения = НСтр("ru = 'По сценарию ""%1"", по аналитике:
								|- Статья оборотов = ""%2"" %3 превышен бюджет периода %4.';
								|en = 'For scenario ""%1"", for analytics:
								|- Turnover item ""%2"" %3 budget of period exceeded %4.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
															Сценарий, Выборка.СтатьяОборотов, ТекстАналитика, ПредставлениеПериода);
															
			//1С-ИжТиСи, Кондратьев, 16.03.2020, обновление, некомментированный исправленный код (
			//Если Выборка.Разность <0 И флКонтрольСуммы Тогда
			Если Выборка.Разность <0 Тогда
			//1С-ИжТиСи, Кондратьев, 16.03.2020, обновление, некомментированный исправленный код )
			
				Расшифровка = НСтр("ru = ' Остаток бюджета: %1, сумма в документе: %2, не достаточно: %3.'; 
									|en = ' Budget balance: %1, amount in the document: %2, %3.'");
				Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Расшифровка, 
												бит_ОбщегоНазначения.ФорматСумм(Выборка.Остаток,ВалютаСценария,"0.00"), 
												бит_ОбщегоНазначения.ФорматСумм(Выборка.Сумма,ВалютаСценария,"0.00"),
												бит_ОбщегоНазначения.ФорматСумм(-Выборка.Разность,ВалютаСценария,"0.00"));
												
				ТекстСообщения = ТекстСообщения + Расшифровка;   								
			КонецЕсли; 
			
			//1С-ИжТиСи, Кондратьев, 16.03.2020, обновление, некомментированный исправленный код (
			//Если Выборка.КоличествоРазность <0 И флКонтрольКоличества Тогда
			Если Выборка.КоличествоРазность <0 Тогда
			//1С-ИжТиСи, Кондратьев, 16.03.2020, обновление, некомментированный исправленный код (
				
				Расшифровка = НСтр("ru = ' Количество бюджета: %1, количество в документе: %2, не достаточно: %3.';
									|en = ' Budget quantity: %1, quantity in  the document: %2, not enough: %3.'");
				Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Расшифровка, 
												бит_ОбщегоНазначения.ФорматСумм(Выборка.КоличествоОстаток,,"0.000"),
												бит_ОбщегоНазначения.ФорматСумм(Выборка.Количество,,"0.000"),
												бит_ОбщегоНазначения.ФорматСумм(-Выборка.КоличествоРазность,,"0.000"));
												
				ТекстСообщения = ТекстСообщения + Расшифровка; 
			КонецЕсли; 
			
			МассивСтрокПревышения.Добавить(СтруктураСтрокиПревышения);
			
			Если Сверхбюджета Тогда
				// Эксперимент: Принято решение не сообщать пользователю, если документ проводится "сверх бюджета".
				// Поэтому очистм массив.
				МассивСтрокПревышения = Новый Массив(); 
				//ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект); 
			Иначе
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект,,,Отказ); 
			КонецЕсли; 
		КонецЕсли; // Превышен бюджет.
	КонецЦикла;  // По выборке.
	
	Если флЕстьПревышение И СверхБюджета Тогда
		ТекстСообщения = НСтр("ru='Документ проведен сверх бюджета.';
								|en='Document will be entered off the budget'");
		// Эксперимент: Принято решение не сообщать пользователю, если документ проводится "сверх бюджета".
		//ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект);  
	КонецЕсли; 
	
    Возврат МассивСтрокПревышения;
	
КонецФункции

// Функция формирует структуру, описывающую набор измерений для контроля по бюджету.
// 
// Параметры:
//  МассивИсключений  - Массив.
//  ИзмеренияТипы     - Структура.
//  ИзмеренияСинонимы - Структура.
//  НастройкиДопИзмерений - Соответствие.
// 
// Возвращаемое значение:
//   ИзмеренияКонтроля   - Структура
// 
Функция КонструкторСтруктурыИзмеренияКонтроля(МассивИсключений, ИзмеренияТипы = Неопределено, ИзмеренияСинонимы = Неопределено, НастройкиДопИзмерений = Неопределено) Экспорт
											  
    Если МассивИсключений = Неопределено Тогда
		 МассивИсключений = Новый Массив;
	КонецЕсли; 											  
	
	Если ИзмеренияТипы = Неопределено Тогда
	    ИзмеренияТипы = бит_Бюджетирование.ПолучитьИзмеренияБюджетирования("Все","Тип",,МассивИсключений);
	КонецЕсли; 
	
	Если ИзмеренияСинонимы = Неопределено Тогда
		ИзмеренияСинонимы = бит_Бюджетирование.ПолучитьИзмеренияБюджетирования("Все","Синоним",,МассивИсключений);
	КонецЕсли; 
	
	Если НастройкиДопИзмерений = Неопределено Тогда
		 НастройкиДопИзмерений = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_НастройкиДополнительныхИзмерений");
	КонецЕсли; 
	
	ИзмеренияКонтроля = Новый Структура;
	
	Для каждого КлючИЗначение Из ИзмеренияТипы Цикл
		ИмяИзмерения = КлючИЗначение.Ключ;
		Если Найти(ИмяИзмерения,"Аналитика_")>0 Тогда
			НастройкаИзмерения = НастройкиДопИзмерений[ИмяИзмерения];
			Если НастройкаИзмерения = Неопределено Тогда
			     Продолжить;
			Иначе	
			     Синоним        = НастройкаИзмерения.Синоним;
				 ПустоеЗначение = НЕОПРЕДЕЛЕНО;
			КонецЕсли; 
		Иначе	
			ПустоеЗначение = КлючИЗначение.Значение.ПривестиЗначение();
			Синоним        = ИзмеренияСинонимы[ИмяИзмерения];
		КонецЕсли; 
		Параметры = КонструкторСтруктурыКонтроля(Синоним,ПустоеЗначение);
	    ИзмеренияКонтроля.Вставить(ИмяИзмерения,Параметры);
	КонецЦикла; 
	
	Возврат ИзмеренияКонтроля;

КонецФункции

// Процедура заполняет параметры запроса контроля по структуре измерений контроля.
// 
// Параметры:
//  ТаблицаДляКонтроля  - ИмяИзмерения.
//  ИзмеренияКонтроля   - Структура.
//  Запрос              - Запрос.
// 
Процедура ЗаполнитьПараметрыПоИзмерениямКонтроля(ТаблицаДляКонтроля, ИзмеренияКонтроля, Запрос) Экспорт

   Для каждого КлючИЗначение Из ИзмеренияКонтроля Цикл
	   
	   ИмяИзмерения = КлючИЗначение.Ключ;
	   Параметры    = КлючИЗначение.Значение;
	   
	   МассивПараметров = ТаблицаДляКонтроля.ВыгрузитьКолонку(ИмяИзмерения);
	   бит_РаботаСКоллекциями.УдалитьПовторяющиесяЭлементыМассива(МассивПараметров);		 
	   МассивПараметров.Добавить(Неопределено);
	   МассивПараметров.Добавить(Параметры.ПустоеЗначение);
	   
	   Запрос.УстановитьПараметр("Массив"+ИмяИзмерения,МассивПараметров);
	   Запрос.УстановитьПараметр("Пусто"+ИмяИзмерения,Параметры.ПустоеЗначение);
	   
   КонецЦикла; 

КонецПроцедуры

// Процедура сворачивает таблицу для контроля по измерениям для контроля.
// 
// Параметры:
//  ТаблицаДляКонтроля  - ТаблицаЗначений.
//  ИзмеренияКонтроля   - Структура.
//  Периодичность       - ПеречислениеСсылка.бит_ПериодичностьПланирования.
// 
Процедура СвернутьТаблицуКонтроля(ТаблицаДляКонтроля, ИзмеренияКонтроля, Периодичность) Экспорт
	
	ИзмеренияДляСвертки = "Период,Сценарий,СтатьяОборотов";
	
	Для каждого СтрокаТаблицы Из ТаблицаДляКонтроля Цикл
		СтрокаТаблицы.Период = бит_Бюджетирование.ПолучитьНачалоПериода(СтрокаТаблицы.Период,Периодичность);
	КонецЦикла; 
	
	Для каждого КлючИЗначение Из ИзмеренияКонтроля Цикл
		ИзмеренияДляСвертки = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ИзмеренияДляСвертки,КлючИЗначение.Ключ,",");
	КонецЦикла; 
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-09-14 (#3078)
	Если ТаблицаДляКонтроля.Колонки.Найти("СуммаСНДС")<>Неопределено Тогда 
		ТаблицаДляКонтроля.Свернуть(ИзмеренияДляСвертки,"Сумма,СуммаСНДС,Количество");
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-09-14 (#3078)	
	
	ТаблицаДляКонтроля.Свернуть(ИзмеренияДляСвертки,"Сумма,Количество");
	
КонецПроцедуры

// Функция получает периодичность с которой контролируется сценарий сценария. 
// Если значение периодичности не удалось 
// определить возвращается периодичность МЕСЯЦ.
// 
// Параметры:
//  Сценарий  - СправочникСсылка.СценарииПланирования.
// 
// Возвращаемое значение:
//   Периодичность   - СправочникСсылка.бит_ПериодичностьПланирования.
// 
Функция ПериодичностьКонтроляСценария(Сценарий) Экспорт
	
	Периодичность = Сценарий.ПериодичностьКонтроля;
	Если НЕ ЗначениеЗаполнено(Периодичность) Тогда
		Периодичность = Перечисления.бит_ПериодичностьПланирования.Месяц;
	КонецЕсли; 
	
	Возврат Периодичность;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует текст запроса извлечения данных из таблицы контроля. В режиме контроля по бюджету
// проверяется необходимость контроля по регистру сведений бит_НастройкиКонтроляПоСценариям.
// 
// Параметры:
//  ИзмеренияДоп - Структура
//  РежимКонтроля  - Строка - "Заявки", "Бюджет", "ГрафикиДоговоров".
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка.
// 
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
//Функция ТекстЗапросаТаблицаДляКонтроля(ИзмеренияДоп,РежимКонтроля) 
//Заменено на:
Функция ТекстЗапросаТаблицаДляКонтроля(ИзмеренияДоп,РежимКонтроля,РесурсыДоп) 
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)

	Если СтрСравнить(РежимКонтроля, "Заявки") = 0 Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДляКонтроля.Период КАК Период,
		|	ТаблицаДляКонтроля.Сценарий КАК Сценарий,
		|	ТаблицаДляКонтроля.СтатьяОборотов КАК СтатьяОборотов,
		|	&ИзмеренияДоп КАК ИзмеренияДоп,
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
		|	%РесурсыДоп%
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)		
		|	ТаблицаДляКонтроля.Количество КАК Количество,
		|	ТаблицаДляКонтроля.Сумма КАК Сумма
		|ПОМЕСТИТЬ ТаблицаДляКонтроля
		|ИЗ
		|	&ТаблицаДляКонтроля КАК ТаблицаДляКонтроля";
	ИначеЕсли СтрСравнить(РежимКонтроля, "ГрафикиДоговоров") = 0 Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДляКонтроля.Период КАК Период,
		|	ТаблицаДляКонтроля.Сценарий КАК Сценарий,
		|	ТаблицаДляКонтроля.СтатьяОборотов КАК СтатьяОборотов,
		|	&ИзмеренияДоп КАК ИзмеренияДоп,
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
		|	%РесурсыДоп%
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)		
		|	ТаблицаДляКонтроля.Количество КАК Количество,
		|	ТаблицаДляКонтроля.Сумма КАК Сумма
		|ПОМЕСТИТЬ ТаблицаДляКонтроля
		|ИЗ
		|	&ТаблицаДляКонтроля КАК ТаблицаДляКонтроля";
	ИначеЕсли СтрСравнить(РежимКонтроля, "Бюджет") = 0 Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДляКонтроля.Период КАК Период,
		|	ТаблицаДляКонтроля.Сценарий КАК Сценарий,
		|	ТаблицаДляКонтроля.СтатьяОборотов КАК СтатьяОборотов,
		|	&ИзмеренияДоп КАК ИзмеренияДоп,
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
		|	%РесурсыДоп%
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)		
		|	ТаблицаДляКонтроля.Количество КАК Количество,
		|	ТаблицаДляКонтроля.Сумма КАК Сумма
		|ПОМЕСТИТЬ ТаблицаДляКонтроляНач
		|ИЗ
		|	&ТаблицаДляКонтроля КАК ТаблицаДляКонтроля
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДляКонтроляНач.Период КАК Период,
		|	ТаблицаДляКонтроляНач.СтатьяОборотов КАК СтатьяОборотов,
		|	&ИзмеренияДопНач КАК ИзмеренияДопНач,
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
		|	%РесурсыДопНач%
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)		
		|	ТаблицаДляКонтроляНач.Количество КАК Количество,
		|	ТаблицаДляКонтроляНач.Сумма КАК Сумма
		|ПОМЕСТИТЬ ТаблицаДляКонтроля
		|ИЗ
		|	ТаблицаДляКонтроляНач КАК ТаблицаДляКонтроляНач
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_НастройкаКонтроляПоСценариям КАК ВключениеКонтроля
		|		ПО ТаблицаДляКонтроляНач.Сценарий = ВключениеКонтроля.Сценарий
		|			И ТаблицаДляКонтроляНач.Период >= ВключениеКонтроля.Период
		|			И (ТаблицаДляКонтроляНач.Период <= ВключениеКонтроля.ДатаОкончания
		|				ИЛИ ВключениеКонтроля.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		|ГДЕ
		|	НЕ ВключениеКонтроля.Сценарий ЕСТЬ NULL";
	КонецЕсли; 
	
	Разделитель = "," + Символы.ПС + Символы.Таб;
	ПоляИзмеренияДоп = Новый Массив;
	ПоляИзмеренияДопНач = Новый Массив;
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		ПоляИзмеренияДоп.Добавить("ТаблицаДляКонтроля." + КлючИЗначение.Ключ);
		ПоляИзмеренияДопНач.Добавить("ТаблицаДляКонтроляНач." + КлючИЗначение.Ключ);
	КонецЦикла; 
	
	ТекстИзмеренияДоп    = СтрСоединить(ПоляИзмеренияДоп, Разделитель);
	ТекстИзмеренияДопНач = СтрСоединить(ПоляИзмеренияДопНач, Разделитель);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИзмеренияДоп КАК ИзмеренияДоп", ТекстИзмеренияДоп);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИзмеренияДопНач КАК ИзмеренияДопНач", ТекстИзмеренияДопНач);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
	ТекстРесурсы    = "";	
	ТекстРесурсыДоп = "";
	Для каждого КлючИЗначение Из РесурсыДоп Цикл
		
		ИмяРесурса      = "ТаблицаДляКонтроля."+КлючИЗначение.Ключ;
		ИмяРесурсаДоп   = "ТаблицаДляКонтроляНач."+КлючИЗначение.Ключ;
		ТекстРесурсы    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстРесурсы,ИмяРесурса,","+Символы.ПС);
		ТекстРесурсыДоп = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстРесурсыДоп,ИмяРесурсаДоп,","+Символы.ПС);
		
	КонецЦикла; 
	
	Если Не ПустаяСтрока(ТекстРесурсы) Тогда 
		ТекстРесурсы    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстРесурсы,",","");
	КонецЕсли;
	Если Не ПустаяСтрока(ТекстРесурсыДоп) Тогда 
		ТекстРесурсыДоп = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстРесурсыДоп,",","");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%РесурсыДоп%"   ,ТекстРесурсы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%РесурсыДопНач%",ТекстРесурсыДоп);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует текст выборки контрольных значений из регистра бит_КонтрольныеЗначенияБюджетов.
// 
// Параметры:
//  ИзмеренияДоп  - Структура
//  Периодичность - ПеречислениеСсылка.бит_ПериодичностьПланирования
//  УсловиеНаСценарий  - Булево.
// 
// Возвращаемое значение:
// ТекстЗапроса   - Строка.
// 
Функция ТекстЗапросаОстаткиПоБюджету(ИзмеренияДоп, Периодичность, УсловиеНаСценарий, РежимКонтроля) 
	
	// Измерение СценарийКонтролируемый стало составного типа и по умолчанию там стоит значение Неопределено.
	ИмяСправочникаСценарии = бит_ОбщегоНазначения.ПолучитьИмяСправочникаСценарииБюджетирования();
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(КонтрольныеЗначения.СуммаСценарийКонтрольОборот) КАК СуммаСценарийКонтроль,
	|	СУММА(КонтрольныеЗначения.СуммаСценарийИсполнениеОборот) КАК СуммаСценарийИсполнение,
	|	СУММА(КонтрольныеЗначения.СуммаСценарийКонтрольОборот - КонтрольныеЗначения.СуммаСценарийИсполнениеОборот) КАК Остаток,
	|	СУММА(КонтрольныеЗначения.КоличествоСценарийКонтрольОборот) КАК КоличествоСценарийКонтроль,
	|	СУММА(КонтрольныеЗначения.КоличествоСценарийИсполнениеОборот) КАК КоличествоСценарийИсполнение,
	|	СУММА(КонтрольныеЗначения.КоличествоСценарийКонтрольОборот - КонтрольныеЗначения.КоличествоСценарийИсполнениеОборот) КАК КоличествоОстаток,				   
	|	%Период% КАК Период,
	|	КонтрольныеЗначения.Сценарий КАК Сценарий,				   
	|	КонтрольныеЗначения.СтатьяОборотов КАК СтатьяОборотов,
	|	%ИзмеренияДоп%
	|ПОМЕСТИТЬ ТаблицаОстаток
	|ИЗ
	|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			%Периодичность%,
	|			ВЫБОР
	|				КОГДА СценарийКонтролируемый = НЕОПРЕДЕЛЕНО
	|						ИЛИ СценарийКонтролируемый ЕСТЬ NULL
	|					ТОГДА %СправочникСценарии% = &СценарийКонтролируемый
	|				ИНАЧЕ СценарийКонтролируемый = &СценарийКонтролируемый
	|			КОНЕЦ
	|			%УсловиеНаСценарий%
	|			И СтатьяОборотов В ИЕРАРХИИ (&МассивСтатьяОборотов)
	|			%Отбор%) КАК КонтрольныеЗначения
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтрольныеЗначения.Период,	
	|	КонтрольныеЗначения.Сценарий,				   				   
	|	КонтрольныеЗначения.СтатьяОборотов,
	|	%ИзмеренияДоп%
	|%УсловиеБюджет%";
	
	Разделитель = "," + Символы.ПС + Символы.Таб;
	РаздлительОтбра = Символы.ПС + Символы.Таб + Символы.Таб + Символы.Таб + "И ";
	ПоляИзмеренияДоп = Новый Массив;
	ПараметрыОтбора = Новый Массив;
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		ИмяПоляДоп = СтрШаблон("КонтрольныеЗначения.%1", КлючИЗначение.Ключ);
		СтрОтбор = СтрШаблон("%1 В (&Массив%1)", КлючИЗначение.Ключ);
		ПоляИзмеренияДоп.Добавить(ИмяПоляДоп);
		ПараметрыОтбора.Добавить(СтрОтбор);
	КонецЦикла; 
	
	ТекстИзмеренияДоп = СтрСоединить(ПоляИзмеренияДоп, Разделитель);
	Если ПараметрыОтбора.Количество() > 0 Тогда
		ТекстОтбор = "И " + СтрСоединить(ПараметрыОтбора, РаздлительОтбра);
	Иначе
		ТекстОтбор = "";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИзмеренияДоп%", ТекстИзмеренияДоп);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Отбор%", ТекстОтбор);
	
	ТекстПериод = СтрШаблон("НАЧАЛОПЕРИОДА(КонтрольныеЗначения.Период, %1)", Периодичность);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Период%", ТекстПериод);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Периодичность%", Периодичность);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СправочникСценарии%",
								"ЗНАЧЕНИЕ(Справочник."+ИмяСправочникаСценарии+".ПустаяСсылка)");
	
	Если УсловиеНаСценарий Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеНаСценарий%", " И Сценарий = &Сценарий");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеНаСценарий%", "");
	КонецЕсли; 
	
	Если СтрСравнить(РежимКонтроля, "Бюджет") = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеБюджет%",
									"ИМЕЮЩИЕ
									|	СУММА(КонтрольныеЗначения.СуммаСценарийКонтрольОборот) > 0");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеБюджет%",""); 
	КонецЕсли;
	
	Возврат ТекстЗапроса;				   

КонецФункции

// Функция формирует фрагмент текста запроса, отвечающий за определение необходимости 
// контроля по аналитикам.
// 
// Параметры:
//  ИзмеренияДоп  - Структура.
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка.
// 
Функция ТекстЗапросаНаличиеАналитик(ИзмеренияДоп) 

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОстаток.Период КАК Период,
	|	ТаблицаОстаток.Сценарий КАК Сценарий,
	|	ТаблицаОстаток.СтатьяОборотов КАК СтатьяОборотов,
	|	&НаличиеАналитик КАК НаличиеАналитик
	|ПОМЕСТИТЬ НаличиеАналитик
	|ИЗ
	|	ТаблицаОстаток КАК ТаблицаОстаток
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстаток.Период,
	|	ТаблицаОстаток.Сценарий,
	|	ТаблицаОстаток.СтатьяОборотов";
	
	Разделитель = "," + Символы.ПС + Символы.Таб;
	ПоляНаличияАналитик = Новый Массив;
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		Стр =
		"МАКСИМУМ(ВЫБОР
		|			КОГДА ТаблицаОстаток.%1 = &Пусто%1
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК %1";
		Стр = СтрШаблон(Стр, КлючИЗначение.Ключ);
		ПоляНаличияАналитик.Добавить(Стр);
	КонецЦикла; 
	
	ТекстНаличиеАналитик = СтрСоединить(ПоляНаличияАналитик, Разделитель);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаличиеАналитик КАК НаличиеАналитик", ТекстНаличиеАналитик);
	
	Возврат ТекстЗапроса;				   

КонецФункции

// Функция формирует фрагмент текста запроса выбирающий из таблицы контроля только те аналитики,
// по которым необходимо провести контроль.
// 
// Параметры:
//  ИзмеренияДоп  - Структура.
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка.
// 
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
//Функция ТекстЗапросаКонтрольНаличиеАналитик(ИзмеренияДоп) 
//Заменено на:
Функция ТекстЗапросаКонтрольНаличиеАналитик(ИзмеренияДоп, РесурсыДоп) 
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДляКонтроля.Период КАК Период,
	|	НаличиеАналитик.Сценарий КАК Сценарий,
	|	ТаблицаДляКонтроля.СтатьяОборотов КАК СтатьяОборотов,
	|	&ИзмеренияДоп КАК ИзмеренияДоп,
    //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
    |    %РесурсыДоп%
    //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)	
	|	СУММА(ТаблицаДляКонтроля.Количество) КАК Количество,
	|	СУММА(ТаблицаДляКонтроля.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаДляКонтроляНаличиеАналитик
	|ИЗ
	|	ТаблицаДляКонтроля КАК ТаблицаДляКонтроля
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеАналитик КАК НаличиеАналитик
	|		ПО ТаблицаДляКонтроля.Период = НаличиеАналитик.Период
	|			И ТаблицаДляКонтроля.СтатьяОборотов = НаличиеАналитик.СтатьяОборотов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляКонтроля.Период,
	|	НаличиеАналитик.Сценарий,
	|	ТаблицаДляКонтроля.СтатьяОборотов,
	|	%СгруппироватьДоп%";

	Разделитель = "," + Символы.ПС + Символы.Таб;
	ПоляИзмеренияДоп = Новый Массив;
	ПоляГруппировкиДоп = Новый Массив;
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		СтрГруппировкаДоп = 
		"ВЫБОР
		|		КОГДА ЕСТЬNULL(НаличиеАналитик.%1, 0) = 1 
		|			ТОГДА ТаблицаДляКонтроля.%1
		|		ИНАЧЕ NULL
		|	КОНЕЦ";
		СтрГруппировкаДоп = СтрШаблон(СтрГруппировкаДоп, КлючИЗначение.Ключ);
		
		СтрИзмерениеДоп = СтрГруппировкаДоп + " КАК %1,
		|	МАКСИМУМ(ЕСТЬNULL(НаличиеАналитик.%1, 0)) КАК Есть%1";
		СтрИзмерениеДоп = СтрШаблон(СтрИзмерениеДоп, КлючИЗначение.Ключ);
		
		ПоляИзмеренияДоп.Добавить(СтрИзмерениеДоп);
		ПоляГруппировкиДоп.Добавить(СтрГруппировкаДоп);
	КонецЦикла; 	
	
	ТекстИзмеренияДоп = СтрСоединить(ПоляИзмеренияДоп, Разделитель);
	ТекстСгруппироватьДоп = СтрСоединить(ПоляГруппировкиДоп, Разделитель);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИзмеренияДоп КАК ИзмеренияДоп", ТекстИзмеренияДоп);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СгруппироватьДоп%", ТекстСгруппироватьДоп);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
	ТекстРесурсы    = "";	
	Для каждого КлючИЗначение Из РесурсыДоп Цикл
		
		ИмяРесурса = "СУММА(ТаблицаДляКонтроля."+КлючИЗначение.Ключ+") КАК " + КлючИЗначение.Ключ;	
		
		ТекстРесурсы    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстРесурсы,ИмяРесурса,","+Символы.ПС);
				
	КонецЦикла; 
	
	Если Не ПустаяСтрока(ТекстРесурсы) Тогда 
		ТекстРесурсы    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстРесурсы,",","");
	КонецЕсли;                                                                                    	
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%РесурсыДоп%"   ,ТекстРесурсы);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)
	
    Возврат ТекстЗапроса;				   
				   
КонецФункции

// Функция формирует фрагмент текста запроса, осуществляющего контроль.
// 
// Параметры:
//  ИзмеренияДоп  - Структура
//  КонтролироватьНеУстановленные  - Булево.
// 
// Возвращаемое значение:
//   ТекстЗапроса   - Строка.
// 
//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
//Функция ТекстЗапросаКонтроль(ИзмеренияДоп,КонтролироватьНеУстановленные) 
//Заменено на:
Функция ТекстЗапросаКонтроль(ИзмеренияДоп,КонтролироватьНеУстановленные,Периодичность,РесурсыДоп) 
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДляКонтроляНаличиеАналитик.Период КАК Период,
	|	ТаблицаОстаток.Сценарий КАК Сценарий,
	|	ТаблицаДляКонтроляНаличиеАналитик.СтатьяОборотов КАК СтатьяОборотов,
	|	ЕСТЬNULL(Таблица.НеКонтролировать_Заявки, ЛОЖЬ) КАК НеКонтролировать_Заявки,
	|	ЕСТЬNULL(Таблица.НеКонтролировать_Количество, ЛОЖЬ) КАК НеКонтролировать_Количество,
	|	ЕСТЬNULL(Таблица.НеКонтролировать_Сумма, ЛОЖЬ) КАК НеКонтролировать_Сумма,
	|	ЕСТЬNULL(Таблица.НеКонтролировать_Бюджеты, ЛОЖЬ) КАК НеКонтролировать_Бюджеты,
	|	ЕСТЬNULL(Таблица.НеКонтролировать_Графики, ЛОЖЬ) КАК НеКонтролировать_Графики,
	|	&ИзмеренияДоп КАК ИзмеренияДоп,
    //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
    |    %РесурсыДоп%
    //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)	
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ТаблицаОстаток.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТаблицаОстаток.КоличествоОстаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Количество, 0) КАК КоличествоРазность,
	|	ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Сумма, 0) КАК Сумма,
	|	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) КАК Остаток,
	|	ЕСТЬNULL(ТаблицаОстаток.Остаток, 0) - ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик.Сумма, 0) КАК Разность
	|ИЗ
	|	ТаблицаДляКонтроляНаличиеАналитик КАК ТаблицаДляКонтроляНаличиеАналитик
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_СтатьиОборотов КАК Таблица
	|		ПО ТаблицаДляКонтроляНаличиеАналитик.СтатьяОборотов = Таблица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстаток КАК ТаблицаОстаток
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
	//|		ПО ТаблицаДляКонтроляНаличиеАналитик.Период = ТаблицаОстаток.Период
	|		ПО 	НачалоПериода(ТаблицаДляКонтроляНаличиеАналитик.Период,"+Периодичность+") = ТаблицаОстаток.Период	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)
	|			И ТаблицаДляКонтроляНаличиеАналитик.СтатьяОборотов = ТаблицаОстаток.СтатьяОборотов
	|		%СоединенияДоп%";
				   
	Если НЕ КонтролироватьНеУстановленные Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ГДЕ
		|	(НЕ ТаблицаОстаток.СтатьяОборотов ЕСТЬ NULL)";
	КонецЕсли; 			   
	
	Разделитель = "," + Символы.ПС + Символы.Таб;
	РазделительСоединения = Символы.ПС + "И ";
	ПоляИзмеренияДоп = Новый Массив;
	ПоляСоединенияДоп = Новый Массив;
	Для каждого КлючИЗначение Из ИзмеренияДоп Цикл
		СтрИзмерениеДоп =
		"ТаблицаОстаток.%1,
		|	ТаблицаДляКонтроляНаличиеАналитик.Есть%1";
		СтрИзмерениеДоп = СтрШаблон(СтрИзмерениеДоп, КлючИЗначение.Ключ); 
		ПоляИзмеренияДоп.Добавить(СтрИзмерениеДоп);
		
		СтрСоединение = 
		"(ВЫБОР
		|	КОГДА ТаблицаДляКонтроляНаличиеАналитик.Есть%1 = 1
		|		ТОГДА ТаблицаДляКонтроляНаличиеАналитик.%1 = ТаблицаОстаток.%1
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ)";
		СтрСоединение = СтрШаблон(СтрСоединение, КлючИЗначение.Ключ);
		ПоляСоединенияДоп.Добавить(СтрСоединение);
   КонецЦикла; 
	
   ТекстИзмеренияДоп = СтрСоединить(ПоляИзмеренияДоп, Разделитель);
   
   Если ПоляСоединенияДоп.Количество() > 0 Тогда
	   ТекстСоединенияДоп = "И " + СтрСоединить(ПоляСоединенияДоп, РазделительСоединения);
   Иначе	
	   ТекстСоединенияДоп = "";
   КонецЕсли;
   
   ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИзмеренияДоп КАК ИзмеренияДоп", ТекстИзмеренияДоп);
   ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СоединенияДоп%", ТекстСоединенияДоп);
   
   //ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-10-09 (#3078)
   ТекстРесурсы    = "";	
   Для каждого КлючИЗначение Из РесурсыДоп Цикл
	                  
	   ИмяРесурса = "ЕСТЬNULL(ТаблицаДляКонтроляНаличиеАналитик."+КлючИЗначение.Ключ+",0) КАК " + КлючИЗначение.Ключ;	
	   
	   ТекстРесурсы    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстРесурсы,ИмяРесурса,","+Символы.ПС);
	   
   КонецЦикла; 
   
   Если Не ПустаяСтрока(ТекстРесурсы) Тогда 
		ТекстРесурсы    = бит_СтрокиКлиентСервер.ДобавитьСтрокуСРазделителем(ТекстРесурсы,",","");
   КонецЕсли;                                                                                    	
	
   ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%РесурсыДоп%"   ,ТекстРесурсы);
   //ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-10-09 (#3078)
   
   Возврат ТекстЗапроса;
				   
КонецФункции

// Функция формирует структуру, описывающую измерение для контроля.
// 
// Параметры:
//  Синоним  - строка
//  ПустоеЗначение  - Произвольный.
// 
// Возвращаемое значение:
//   РезСтруктура   - Структура.
// 
Функция КонструкторСтруктурыКонтроля(Синоним, ПустоеЗначение)

  РезСтруктура = Новый Структура("Синоним,ПустоеЗначение");
  РезСтруктура.Синоним        = Синоним;
  РезСтруктура.ПустоеЗначение = ПустоеЗначение;
  
  Возврат РезСтруктура;

КонецФункции

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-12-06 (#3078)
Процедура ОчиститьНеиспользуемыеИзмеренияКонтроля(Движение,соотСценарийОчищаемыеПоля,мдЗнчПеречисления,КолонкиТаблицыДвижений) Экспорт
	
	мОчищаемыеПоля = соотСценарийОчищаемыеПоля.Получить(Движение.Сценарий);
	
	Если мОчищаемыеПоля = Неопределено Тогда 
		
		мОчищаемыеПоля = Новый Массив;
		
		бит_СписокИзмеренийКонтроляБюджета = бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Измерения контроля бюджета", Движение.Сценарий, Новый СписокЗначений, "СписокЗначений"); 					
		
		Для Каждого ЗнчПеречисления ИЗ мдЗнчПеречисления Цикл 
			Если бит_СписокИзмеренийКонтроляБюджета.НайтиПоЗначению(Перечисления.бит_БК_ИзмеренияКонтроляБюджета[ЗнчПеречисления.Имя]) = Неопределено И
				НЕ ЗнчПеречисления.Имя = "Сценарий" И
				НЕ ЗнчПеречисления.Имя = "СтатьяОборотов"			
				Тогда  
				Если КолонкиТаблицыДвижений.Найти(ЗнчПеречисления.Имя)<>Неопределено Тогда 
					мОчищаемыеПоля.Добавить(ЗнчПеречисления.Имя);				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;  
		
		соотСценарийОчищаемыеПоля.Вставить(Движение.Сценарий, мОчищаемыеПоля);		
		
	КонецЕсли;
	
	Если мОчищаемыеПоля.Количество()>0 Тогда 
		Для Каждого пИмяПоля Из мОчищаемыеПоля Цикл 
			Движение[пИмяПоля] = Неопределено;
		КонецЦикла;			
	КонецЕсли;
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-12-06 (#3078)

#КонецОбласти

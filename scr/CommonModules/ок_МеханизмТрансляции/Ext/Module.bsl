
#Область ПрограммныйИнтерфейс

// Функция - Это вид расчета инвестиционные для Дт
//
// Параметры:
//  ЗаписьИсточник	 - РегистрБухгалтерииЗапись.Хозрасчетный - Запись источника
// 
// Возвращаемое значение:
//  Булево - Это вид расчета "Инвестиционные"
//
Функция ЭтоВидРасчетаИнвестиционныеВИсточникеДт(ЗаписьИсточник) Экспорт
	Возврат ЭтоВидРасчетаИнвестиционныеВИсточнике(ЗаписьИсточник, "Дт");
КонецФункции

// Функция - Это вид расчета инвестиционные для Кт
//
// Параметры:
//  ЗаписьИсточник	 - РегистрБухгалтерииЗапись.Хозрасчетный - Запись источника
// 
// Возвращаемое значение:
//  Булево - Это вид расчета "Инвестиционные"
//
Функция ЭтоВидРасчетаИнвестиционныеВИсточникеКт(ЗаписьИсточник) Экспорт
	Возврат ЭтоВидРасчетаИнвестиционныеВИсточнике(ЗаписьИсточник, "Кт");
КонецФункции

// Функция формирует строковое представление значения для добавления в код.
// 
// Параметры:
//  ЗначениеКолонки  - Произвольный.
//  ИДСтроки         - Строка.
//  ИмяКолонки       - Строка.
// 
// Возвращаемое значение:
//   ПредставлениеЗначения   - Строка.
//
Функция СформироватьПредставлениеПроизвольногоУсловия(Знач ЗначениеКолонки, вхДтКт = "Дт") Экспорт

	ДтКт	= ?(ПустаяСтрока(вхДтКт), "Дт", вхДтКт);
	
	ПредставлениеЗначения	=	ЗначениеКолонки;
	Если СтрНайти(ПредставлениеЗначения, "[ДтКт]") > 0 Тогда	 
		ПредставлениеЗначения = СтрЗаменить(ПредставлениеЗначения, "[ДтКт]", ДтКт);
	КонецЕсли;
	
	Возврат ПредставлениеЗначения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция - Это вид расчета инвестиционные
//
// Параметры:
//  ЗаписьИсточник	 - РегистрБухгалтерииЗапись.Хозрасчетный - Запись источника
//  ДтКт			 - Строка								 - Дт/Кт
// 
// Возвращаемое значение:
//  Булево - Это вид расчета "Инвестиционные"
//
Функция ЭтоВидРасчетаИнвестиционныеВИсточнике(ЗаписьИсточник, ДтКт)
	
	Если Не ТипЗнч(ЗаписьИсточник) = Тип("РегистрБухгалтерииЗапись.Хозрасчетный") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВидСубконтоДоговоры	=	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	
	МассивДоговоров	=	Новый Массив;
	
	//Если Не ЗаписьИсточник.СчетДт.ВидыСубконто.Найти(ВидСубконтоДоговоры) = Неопределено Тогда
	//	МассивДоговоров.Добавить(ЗаписьИсточник.СубконтоДт.Договоры);
	//ИначеЕсли Не ЗаписьИсточник.СчетКт.ВидыСубконто.Найти(ВидСубконтоДоговоры) = Неопределено Тогда
	//	МассивДоговоров.Добавить(ЗаписьИсточник.СубконтоКт.Договоры);
	//Иначе
	//	Возврат Ложь;
	//КонецЕсли;
	
	Если ДтКт = "Дт" И Не ЗаписьИсточник.СчетДт.ВидыСубконто.Найти(ВидСубконтоДоговоры) = Неопределено Тогда
		МассивДоговоров.Добавить(ЗаписьИсточник.СубконтоДт.Договоры);
	ИначеЕсли ДтКт = "Кт" И Не ЗаписьИсточник.СчетКт.ВидыСубконто.Найти(ВидСубконтоДоговоры) = Неопределено Тогда
		МассивДоговоров.Добавить(ЗаписьИсточник.СубконтоКт.Договоры);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Запрос	=	Новый Запрос;
	Запрос.УстановитьПараметр("ВидРасчета",			Перечисления.ПринадлежностиРасчетовПоДоговорам.Инвестиционные);
	Запрос.УстановитьПараметр("МассивДоговоров",	МассивДоговоров);
	Запрос.УстановитьПараметр("Дата",				ЗаписьИсточник.Период);
	Запрос.Текст	=
	"ВЫБРАТЬ
	|	УстановкаВидовРасчетовПоДоговорамСрезПоследних.ВидРасчета КАК ВидРасчета
	|ИЗ
	|	РегистрСведений.УстановкаВидовРасчетовПоДоговорам.СрезПоследних(&Дата, ДоговорКонтрагента В (&МассивДоговоров)) КАК УстановкаВидовРасчетовПоДоговорамСрезПоследних
	|ГДЕ
	|	УстановкаВидовРасчетовПоДоговорамСрезПоследних.ВидРасчета = &ВидРасчета";
	Результат	=	Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
		
КонецФункции

#КонецОбласти

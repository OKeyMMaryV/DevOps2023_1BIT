#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру с описание трудовой деятельности сотрудника в заданном периоде.
// Данные отбираются кратно месяцу т.е. с начала месяца начала периода и по конец месяца окончания периода.
//
// Параметры:
//		Сотрудник			- Массив, СправочникСсылка.Сотрудники
//		НачалоПериода		- Дата, если не задана то возвращает данные, начиная с даты приема
//		ОкончаниеПериода	- Дата, если не задана то возвращает все учтенные данные
//
// Возвращаемое значение;
//		Структура		- см.ПустаяСтруктураДанныхТрудовойДеятельности
//		Неопределено	- Если данных о трудовой деятельности нет
//
Функция ДанныеТрудовойДеятельностиСотрудника(ТолькоРазрешенные, ФизическоеЛицо, Организация, НачалоПериода = Неопределено, ОкончаниеПериода = Неопределено) Экспорт
	
	ДанныеСотрудников = ДанныеТрудовойДеятельностиСотрудников(
		ТолькоРазрешенные, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо), Организация, НачалоПериода, ОкончаниеПериода);
	
	Если ДанныеСотрудников.Количество() > 0 Тогда
		Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(ДанныеСотрудников)[0];
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает массив структур с описание трудовой деятельности сотрудников в заданном периоде.
// Данные отбираются кратно месяцу т.е. с начала месяца начала периода и по конец месяца окончания периода.
//
// Параметры:
//		Сотрудники			- Массив, состоящий из СправочникСсылка.Сотрудники
//		НачалоПериода		- Дата, если не задана то возвращает данные, начиная с даты приема
//		ОкончаниеПериода	- Дата, если не задана то возвращает все учтенные данные
//
// Возвращаемое значение;
//		Массив		- Структур, см.ПустаяСтруктураДанныхТрудовойДеятельности
//
Функция ДанныеТрудовойДеятельностиСотрудников(ТолькоРазрешенные, ФизическоеЛицо, Организация, НачалоПериода = Неопределено, ОкончаниеПериода = Неопределено, ВидыМероприятий = Неопределено, СобытияВсехСотрудников = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Если ЗначениеЗаполнено(НачалоПериода)
		Или ЗначениеЗаполнено(ОкончаниеПериода) Тогда
		
		Запрос.УстановитьПараметр("НачалоПериода", ?(ЗначениеЗаполнено(НачалоПериода), НачалоМесяца(НачалоПериода), '00010101'));
		Запрос.УстановитьПараметр("ОкончаниеПериода", ?(ЗначениеЗаполнено(ОкончаниеПериода), КонецМесяца(ОкончаниеПериода), '39991231'));
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Сотрудники.Ссылка КАК Сотрудник,
			|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
			|	&НачалоПериода КАК НачалоПериода,
			|	&ОкончаниеПериода КАК ОкончаниеПериода
			|ПОМЕСТИТЬ ВТСотрудникиПериодыДанных
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|ГДЕ
			|	Сотрудники.ФизическоеЛицо В(&ФизическоеЛицо)
			|	И Сотрудники.ГоловнаяОрганизация = &ГоловнаяОрганизация";
		
		ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
		
		Запрос.Выполнить();
		
	Иначе
		
		Отборы = Новый Массив;
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(Отборы, "ФизическоеЛицо", "В", ФизическоеЛицо);
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(Отборы, "ГоловнаяОрганизация", "=", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
		
		КадровыйУчет.СоздатьВТТекущиеКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, Отборы, "ДатаПриема,ДатаУвольнения");
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТекущиеКадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
			|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ВЫБОР
			|		КОГДА ТекущиеКадровыеДанныеСотрудников.ДатаПриема < ДАТАВРЕМЯ(2020, 1, 1)
			|			ТОГДА ДАТАВРЕМЯ(2020, 1, 1)
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(ТекущиеКадровыеДанныеСотрудников.ДатаПриема, МЕСЯЦ)
			|	КОНЕЦ КАК НачалоПериода,
			|	ВЫБОР
			|		КОГДА ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
			|		ИНАЧЕ КОНЕЦПЕРИОДА(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, МЕСЯЦ)
			|	КОНЕЦ КАК ОкончаниеПериода
			|ПОМЕСТИТЬ ВТСотрудникиПериодыДанных
			|ИЗ
			|	ВТТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников";
		
		ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Возврат ДанныеТрудовойДеятельностиСотрудниковПоТаблицеОтборов(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, Организация, ВидыМероприятий, СобытияВсехСотрудников);
	
КонецФункции

// Возвращает массив структур с описание трудовой деятельности сотрудников заданной организации
// в заданном периоде. Данные отбираются кратно месяцу т.е. с начала месяца начала периода и по
// конец месяца окончания периода.
//
// Параметры:
//		Организация			- СправочникСсылка.Организации
//		НачалоПериода		- Дата, если не задана то возвращает данные, начиная с даты приема
//		ОкончаниеПериода	- Дата, если не задана то возвращает все учтенные данные
//
// Возвращаемое значение;
//		Массив		- Структур, см.ПустаяСтруктураДанныхТрудовойДеятельности
//
Функция ДанныеТрудовойДеятельностиСотрудниковОрганизации(ТолькоРазрешенные, Организация, НачалоПериода, ОкончаниеПериода, ВидыМероприятий = Неопределено, СобытияВсехСотрудников = Ложь) Экспорт
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.Организация = Организация;
	ПараметрыПолучения.НачалоПериода = НачалоДня(НачалоПериода);
	ПараметрыПолучения.ОкончаниеПериода = КонецДня(ОкончаниеПериода);
	
	СотрудникиОрганизации = КадровыйУчет.СотрудникиОрганизации(ТолькоРазрешенные, ПараметрыПолучения);
	
	Возврат ДанныеТрудовойДеятельностиСотрудников(
		ТолькоРазрешенные, СотрудникиОрганизации.ВыгрузитьКолонку("ФизическоеЛицо"), Организация, НачалоПериода, ОкончаниеПериода, ВидыМероприятий, СобытияВсехСотрудников);
	
КонецФункции

Функция ВывестиМакетыДокументов(ВыборкаДанныхДляПечати, ПутьКМакету, ОбъектыПечати) Экспорт
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ЧастиПутиКМакету = СтрРазделить(ПутьКМакету, ".");
	ДокументРезультат.КлючПараметровПечати = ЧастиПутиКМакету[ЧастиПутиКМакету.Количество() - 1];
	
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету);
	
	Пока ВыборкаДанныхДляПечати.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		Пока ВыборкаДанныхДляПечати.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
			
			Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			Шапка = Макет.ПолучитьОбласть("Шапка");
			Шапка.Параметры.Заполнить(ВыборкаДанныхДляПечати);
			
			Подвал = Макет.ПолучитьОбласть("Подвал");
			Подвал.Параметры.Заполнить(ВыборкаДанныхДляПечати);
			
			ДокументРезультат.Вывести(Шапка);
			
			ОбластиСтрок = Новый Массив;
			НомерСтрокиФормы = 1;
			Пока ВыборкаДанныхДляПечати.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(ВыборкаДанныхДляПечати.ВидМероприятия) Тогда
					Продолжить;
				КонецЕсли;
				
				Строка = Макет.ПолучитьОбласть("Строка");
				Строка.Параметры.Заполнить(ВыборкаДанныхДляПечати);
				Строка.Параметры.НомерСтрокиФормы = НомерСтрокиФормы;
				Строка.Параметры.ТрудоваяФункция = ПредставлениеВыполняемойФункции(ВыборкаДанныхДляПечати);
				
				Строка.Параметры.ВидМероприятия = ВРег(Строка.Параметры.ВидМероприятия);
				
				Строка.Параметры.НомерДокументаОснования = ПредставлениеНомераДокументаОснования(ВыборкаДанныхДляПечати);
				
				Если ЗначениеЗаполнено(Строка.Параметры.ОснованиеУвольнения) Тогда
					Строка.Параметры.ОснованиеУвольнения = ПредставлениеПричиныУвольнения(ВыборкаДанныхДляПечати);
				КонецЕсли;
				
				ОбластиСтрок.Добавить(Строка);
				НомерСтрокиФормы = НомерСтрокиФормы + 1;
				
			КонецЦикла;
			
			Для Каждого Строка Из ОбластиСтрок Цикл
				
				МассивОбластей = Новый Массив;
				МассивОбластей.Добавить(Строка);
				Если Строка = ОбластиСтрок[ОбластиСтрок.Количество() - 1] Тогда
					МассивОбластей.Добавить(Подвал);
				КонецЕсли;
				
				Если Не ДокументРезультат.ПроверитьВывод(МассивОбластей) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
				КонецЕсли;
				
				ДокументРезультат.Вывести(Строка);
				
			КонецЦикла;
			
			ДокументРезультат.Вывести(Подвал);
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДанныхДляПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Процедура НаименованиеДокументаПриИзмененииНаСервере(Организация, ВидДокумента, НаименованиеДокумента) Экспорт
	
	НаименованияДокументов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭлектронныеТрудовыеКнижки", "НаименованияДокументов");
	Если НаименованияДокументов = Неопределено Тогда
		НаименованияДокументов = Новый Соответствие;
	КонецЕсли;
	
	НаименованияДокументовОрганизации = НаименованияДокументов.Получить(Организация);
	Если НаименованияДокументовОрганизации = Неопределено Тогда
		НаименованияДокументовОрганизации = Новый Структура;
	КонецЕсли;
	
	НаименованияДокументовОрганизации.Вставить(ВидДокумента, НаименованиеДокумента);
	НаименованияДокументов.Вставить(Организация, НаименованияДокументовОрганизации);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ЭлектронныеТрудовыеКнижки", "НаименованияДокументов", НаименованияДокументов);
	
КонецПроцедуры

Процедура ЗаполнитьНаименованиеДокумента(ОбъектДокумента, ВидДокумента) Экспорт
	
	Если ЗначениеЗаполнено(ОбъектДокумента.Организация) Тогда
		
		НаименованияДокументов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭлектронныеТрудовыеКнижки", "НаименованияДокументов");
		Если НаименованияДокументов <> Неопределено Тогда
			
			НаименованияДокументовОрганизации = НаименованияДокументов.Получить(ОбъектДокумента.Организация);
			Если НаименованияДокументовОрганизации <> Неопределено Тогда
				
				Если НаименованияДокументовОрганизации.Свойство(ВидДокумента) Тогда
					
					Если ЗначениеЗаполнено(НаименованияДокументовОрганизации[ВидДокумента]) Тогда
						ОбъектДокумента.НаименованиеДокумента = НаименованияДокументовОрганизации[ВидДокумента];
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПустаяТаблицаДанныхТрудовойДеятельности()
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаДанных.Колонки.Добавить("Фамилия", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("Отчество", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("СтраховойНомерПФР", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("ДатаРождения", Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ЯвляетсяСовместителем", Новый ОписаниеТипов("Булево"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПродолжении", Новый ОписаниеТипов("ДокументСсылка.ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПродолженииДата", Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПродолженииОтмена", Новый ОписаниеТипов("Булево"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПредоставлении", Новый ОписаниеТипов("ДокументСсылка.ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПредоставленииДата", Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ЗаявлениеОПредоставленииОтмена", Новый ОписаниеТипов("Булево"));
	ТаблицаДанных.Колонки.Добавить("ТрудоваяДеятельность", Новый ОписаниеТипов("Массив"));
	
	Возврат ТаблицаДанных;
	
КонецФункции

Функция ПустаяСтруктураЗаписиОТрудовойДеятельности()
	
	СтруктураЗаписи = Новый Структура(
		"Регистратор,
		|ФизическоеЛицо,
		|СотрудникЗаписи,
		|ДатаМероприятия,
		|ВидМероприятия,
		|Сведения,
		|Подразделение,
		|Должность,
		|РазрядКатегория,
		|КодПоРееструДолжностей,
		|ТрудоваяФункция,
		|НаименованиеДокументаОснования,
		|ДатаДокументаОснования,
		|СерияДокументаОснования,
		|НомерДокументаОснования,
		|ОснованиеУвольнения,
		|ДатаС,
		|ДатаПо,
		|ДатаОтмены,
		|ЯвляетсяСовместителем,
		|Идентификатор");
	
	Возврат СтруктураЗаписи;
	
КонецФункции

Функция ДанныеТрудовойДеятельностиСотрудниковПоТаблицеОтборов(МенеджерВременныхТаблиц, ТолькоРазрешенные, Организация, ВидыМероприятий = Неопределено, СобытияВсехСотрудников = Ложь)
	
	ДанныеСотрудников = ПустаяТаблицаДанныхТрудовойДеятельности();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	КадровыеДанные = "Организация, ДатаУвольнения, Фамилия, Имя, Отчество, СтраховойНомерПФР, ДатаРождения, ВидЗанятости";
	
	Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиПериодыДанных", "Сотрудник,ОкончаниеПериода");
	
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(Описатель, ТолькоРазрешенные, КадровыеДанные);
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадровыеДанные.Сотрудник КАК Сотрудник,
		|	КадровыеДанные.Фамилия КАК Фамилия,
		|	КадровыеДанные.Имя КАК Имя,
		|	КадровыеДанные.Отчество КАК Отчество,
		|	КадровыеДанные.ДатаРождения КАК ДатаРождения,
		|	КадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	КадровыеДанные.ВидЗанятости КАК ВидЗанятости,
		|	ВЫБОР
		|		КОГДА КадровыеДанные.ВидЗанятости ЕСТЬ NULL
		|			ТОГДА 9999999999
		|		ИНАЧЕ РАЗНОСТЬДАТ(ВЫБОР
		|					КОГДА КадровыеДанные.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА ДАТАВРЕМЯ(2100, 1, 1)
		|					ИНАЧЕ КадровыеДанные.ДатаУвольнения
		|				КОНЕЦ, ДАТАВРЕМЯ(2100, 1, 1), ДЕНЬ) * 100 + КадровыеДанные.ВидЗанятости.Порядок
		|	КОНЕЦ КАК ПриоритетРабочегоМеста
		|ПОМЕСТИТЬ ВТПриоритетыСотрудников
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|ГДЕ
		|	КадровыеДанные.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МИНИМУМ(КадровыеДанные.ПриоритетРабочегоМеста) КАК ПриоритетРабочегоМеста
		|ПОМЕСТИТЬ ВТПриоритетыФизическиехЛиц
		|ИЗ
		|	ВТПриоритетыСотрудников КАК КадровыеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	КадровыеДанные.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриоритетыСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПриоритетыСотрудников.Фамилия КАК Фамилия,
		|	ПриоритетыСотрудников.Имя КАК Имя,
		|	ПриоритетыСотрудников.Отчество КАК Отчество,
		|	ПриоритетыСотрудников.ДатаРождения КАК ДатаРождения,
		|	ПриоритетыСотрудников.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ПриоритетыСотрудников.ВидЗанятости КАК ВидЗанятости
		|ПОМЕСТИТЬ ВТДанныеФизическихЛиц
		|ИЗ
		|	ВТПриоритетыСотрудников КАК ПриоритетыСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетыФизическиехЛиц КАК ПриоритетыФизическиехЛиц
		|		ПО ПриоритетыСотрудников.ФизическоеЛицо = ПриоритетыФизическиехЛиц.ФизическоеЛицо
		|			И ПриоритетыСотрудников.ПриоритетРабочегоМеста = ПриоритетыФизическиехЛиц.ПриоритетРабочегоМеста";
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	
	Запрос.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗаявлениеСотрудники.ВидЗаявления = ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.ВедениеБумажнойТрудовойКнижки)
		|				ТОГДА ЗаявлениеСотрудники.Ссылка
		|			ИНАЧЕ NULL
		|		КОНЕЦ) КАК ЗаявлениеОПродолжении,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗаявлениеСотрудники.ВидЗаявления = ЗНАЧЕНИЕ(Перечисление.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности.СведенияОТрудовойДеятельностиВЭлектроннойФорме)
		|				ТОГДА ЗаявлениеСотрудники.Ссылка
		|			ИНАЧЕ NULL
		|		КОНЕЦ) КАК ЗаявлениеОПредоставлении,
		|	ЗаявлениеСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТЗаявленияСотрудников
		|ИЗ
		|	Документ.ЗаявлениеОПредоставленииСведенийОТрудовойДеятельности.Сотрудники КАК ЗаявлениеСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ПО ЗаявлениеСотрудники.Сотрудник = СотрудникиПериодыДанных.Сотрудник
		|			И (ЗаявлениеСотрудники.Ссылка.Дата МЕЖДУ СотрудникиПериодыДанных.НачалоПериода И СотрудникиПериодыДанных.ОкончаниеПериода)
		|ГДЕ
		|	НЕ ЗаявлениеСотрудники.ЗаявлениеОтозвано
		|	И ЗаявлениеСотрудники.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявлениеСотрудники.Сотрудник.ФизическоеЛицо";
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	Запрос.Выполнить();
	
	СоздатьВТКадровыеСобытия(Запрос.МенеджерВременныхТаблиц, Организация, ТолькоРазрешенные, СобытияВсехСотрудников);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадровыеСобытия.СотрудникЗаписи КАК СотрудникЗаписи,
		|	КадровыеДанные.Фамилия КАК Фамилия,
		|	КадровыеДанные.Имя КАК Имя,
		|	КадровыеДанные.Отчество КАК Отчество,
		|	КадровыеДанные.ДатаРождения КАК ДатаРождения,
		|	КадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(КадровыеСобытия.ВидЗанятости, КадровыеДанные.ВидЗанятости) В (ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство), ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЯвляетсяСовместителем,
		|	КадровыеСобытия.Регистратор КАК Регистратор,
		|	ЗаявленияСотрудников.ЗаявлениеОПродолжении КАК ЗаявлениеОПродолжении,
		|	ЗаявленияСотрудников.ЗаявлениеОПродолжении.Дата КАК ЗаявлениеОПродолженииДата,
		|	ЗаявленияСотрудников.ЗаявлениеОПредоставлении КАК ЗаявлениеОПредоставлении,
		|	ЗаявленияСотрудников.ЗаявлениеОПредоставлении.Дата КАК ЗаявлениеОПредоставленииДата,
		|	КадровыеСобытия.ДатаМероприятия КАК ДатаМероприятия,
		|	КадровыеСобытия.ВидМероприятия КАК ВидМероприятия,
		|	КадровыеСобытия.Сведения КАК Сведения,
		|	КадровыеСобытия.Подразделение КАК Подразделение,
		|	КадровыеСобытия.Должность КАК Должность,
		|	КадровыеСобытия.РазрядКатегория КАК РазрядКатегория,
		|	КадровыеСобытия.КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	КадровыеСобытия.ТрудоваяФункция КАК ТрудоваяФункция,
		|	КадровыеСобытия.НаименованиеДокументаОснования КАК НаименованиеДокументаОснования,
		|	КадровыеСобытия.ДатаДокументаОснования КАК ДатаДокументаОснования,
		|	КадровыеСобытия.СерияДокументаОснования КАК СерияДокументаОснования,
		|	КадровыеСобытия.НомерДокументаОснования КАК НомерДокументаОснования,
		|	КадровыеСобытия.ОснованиеУвольнения КАК ОснованиеУвольнения,
		|	КадровыеСобытия.ДатаС КАК ДатаС,
		|	КадровыеСобытия.ДатаПо КАК ДатаПо,
		|	КадровыеСобытия.ДатаОтмены КАК ДатаОтмены
		|ИЗ
		|	ВТДанныеФизическихЛиц КАК КадровыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеСобытия КАК КадровыеСобытия
		|		ПО КадровыеДанные.ФизическоеЛицо = КадровыеСобытия.ФизическоеЛицо
		|			И (&ОтборПоВидамМероприятий)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаявленияСотрудников КАК ЗаявленияСотрудников
		|		ПО КадровыеДанные.ФизическоеЛицо = ЗаявленияСотрудников.ФизическоеЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	Фамилия,
		|	ФизическоеЛицо,
		|	ДатаМероприятия";
	
	Если ВидыМероприятий <> Неопределено Тогда
		Запрос.УстановитьПараметр("ВидыМероприятий", ВидыМероприятий);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоВидамМероприятий", "КадровыеСобытия.ВидМероприятия В (&ВидыМероприятий)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоВидамМероприятий", "ИСТИНА");
	КонецЕсли;
	
	СписокСвойств = ДоступныеПоляВсехВидовМероприятий() + ",ФизическоеЛицо";
	ДоступныеПоля = ДоступныеПоляВидовМероприятий();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
		
		ДанныеСотрудника = ДанныеСотрудников.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСотрудника, Выборка);
		
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ВидМероприятия) Тогда
				ЗаписьОДеятельности = ПустаяСтруктураЗаписиОТрудовойДеятельности();
				ЗаполнитьЗначенияСвойств(ЗаписьОДеятельности, Выборка, СписокСвойств + "," + ДоступныеПоля[Выборка.ВидМероприятия]);
				ЗаписьОДеятельности.Идентификатор = Строка(Новый УникальныйИдентификатор);
				ЗаписьОДеятельности.НомерДокументаОснования = ЗарплатаКадрыОтчеты.НомерНаПечать(Выборка.НомерДокументаОснования);
				ДанныеСотрудника.ТрудоваяДеятельность.Добавить(ЗаписьОДеятельности);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ДанныеСотрудников;
	
КонецФункции

Функция ДоступныеПоляВсехВидовМероприятий() Экспорт 
	
	Возврат "ЯвляетсяСовместителем,ДатаМероприятия,ВидМероприятия,Сведения,НаименованиеДокументаОснования,ДатаДокументаОснования,НомерДокументаОснования,СерияДокументаОснования,ДатаОтмены,СотрудникЗаписи";
	
КонецФункции

Функция ДоступныеПоляВидовМероприятий() Экспорт
	
	ДоступныеПоля = Новый Соответствие;
	ДоступныеПоля.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.ЗапретЗаниматьДолжность, "Должность,КодПоРееструДолжностей,РазрядКатегория,ТрудоваяФункция,ДатаС,ДатаПо");
	ДоступныеПоля.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.Перевод, "Должность,КодПоРееструДолжностей,РазрядКатегория,Подразделение,ТрудоваяФункция");
	ДоступныеПоля.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.Переименование, "Должность,КодПоРееструДолжностей,РазрядКатегория,Подразделение,ТрудоваяФункция");
	ДоступныеПоля.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.Прием, "Должность,КодПоРееструДолжностей,РазрядКатегория,Подразделение,ТрудоваяФункция");
	ДоступныеПоля.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.Увольнение, "ОснованиеУвольнения");
	ДоступныеПоля.Вставить(Перечисления.ВидыМероприятийТрудовойДеятельности.УстановлениеВторойПрофессии, "Должность,КодПоРееструДолжностей,РазрядКатегория,ТрудоваяФункция");
	
	Возврат ДоступныеПоля;
	
КонецФункции

Процедура СоздатьВТКадровыеСобытия(МенеджерВременныхТаблиц, Организация, ТолькоРазрешенные, СобытияВсехСотрудников)
	
	Запрос = КадровыйУчет.ЗапросВТСобытияТрудовыхКнижек(Организация, ТолькоРазрешенные);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиПериодыДанных.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТСотрудникиСДаннымиПериода
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСобытияТрудовыхКнижек КАК СобытияТрудовыхКнижекОтчетные
		|		ПО СотрудникиПериодыДанных.Сотрудник = СобытияТрудовыхКнижекОтчетные.Сотрудник
		|			И (СобытияТрудовыхКнижекОтчетные.ДатаМероприятия МЕЖДУ СотрудникиПериодыДанных.НачалоПериода И СотрудникиПериодыДанных.ОкончаниеПериода)
		|ГДЕ
		|	НЕ СобытияТрудовыхКнижекОтчетные.Сотрудник ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	СотрудникиПериодыДанных.ФизическоеЛицо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявленияСотрудников.ФизическоеЛицо
		|ИЗ
		|	ВТЗаявленияСотрудников КАК ЗаявленияСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиПериодыДанных.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТСотрудникиСДаннымиДоНачалаУчета
		|ИЗ
		|	ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСобытияТрудовыхКнижек КАК СобытияТрудовыхКнижек
		|		ПО СотрудникиПериодыДанных.Сотрудник = СобытияТрудовыхКнижек.Сотрудник
		|			И (СобытияТрудовыхКнижек.ДатаМероприятия < ВЫБОР
		|				КОГДА СотрудникиПериодыДанных.НачалоПериода < ДАТАВРЕМЯ(2020, 1, 1)
		|					ТОГДА ДАТАВРЕМЯ(2020, 1, 1)
		|				ИНАЧЕ СотрудникиПериодыДанных.НачалоПериода
		|			КОНЕЦ)
		|			И (СобытияТрудовыхКнижек.ДатаМероприятия >= ДАТАВРЕМЯ(2020, 1, 1))
		|ГДЕ
		|	СобытияТрудовыхКнижек.Сотрудник ЕСТЬ NULL
		|	И СотрудникиПериодыДанных.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				СотрудникиСДаннымиПериода.ФизическоеЛицо
		|			ИЗ
		|				ВТСотрудникиСДаннымиПериода КАК СотрудникиСДаннымиПериода)
		|
		|СГРУППИРОВАТЬ ПО
		|	СотрудникиПериодыДанных.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СобытияТрудовыхКнижек.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(СобытияТрудовыхКнижек.ДатаМероприятия) КАК ДатаМероприятия
		|ПОМЕСТИТЬ ВТДатыМероприятийДоНачалаУчета
		|ИЗ
		|	ВТСобытияТрудовыхКнижек КАК СобытияТрудовыхКнижек
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСДаннымиДоНачалаУчета КАК СотрудникиСДаннымиДоНачалаУчета
		|		ПО СобытияТрудовыхКнижек.ФизическоеЛицо = СотрудникиСДаннымиДоНачалаУчета.ФизическоеЛицо
		|ГДЕ
		|	СобытияТрудовыхКнижек.ДатаМероприятия < ДАТАВРЕМЯ(2020, 1, 1)
		|
		|СГРУППИРОВАТЬ ПО
		|	СобытияТрудовыхКнижек.ФизическоеЛицо";
	
	Если СобытияВсехСотрудников Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕ СобытияТрудовыхКнижекОтчетные.Сотрудник ЕСТЬ NULL", "(ИСТИНА)");
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("КодПоРееструДолжностей", Null);
	Запрос.УстановитьПараметр("НаименованиеДокументаОснования", НСтр("ru = 'Приказ'"));
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СобытияТрудовыхКнижек.Ссылка КАК Регистратор,
		|	ВЫБОР
		|		КОГДА СобытияТрудовыхКнижек.НаименованиеДокумента = """"
		|			ТОГДА &НаименованиеДокументаОснования
		|		ИНАЧЕ СобытияТрудовыхКнижек.НаименованиеДокумента
		|	КОНЕЦ КАК НаименованиеДокументаОснования,
		|	СобытияТрудовыхКнижек.Номер КАК НомерДокументаОснования,
		|	СобытияТрудовыхКнижек.Дата КАК ДатаДокументаОснования,
		|	СобытияТрудовыхКнижек.Сотрудник КАК СотрудникЗаписи,
		|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадровыеДанные.ВидЗанятости КАК ВидЗанятости,
		|	СобытияТрудовыхКнижек.ДатаМероприятия КАК ДатаМероприятия,
		|	СобытияТрудовыхКнижек.Организация КАК Организация,
		|	СобытияТрудовыхКнижек.Подразделение КАК Подразделение,
		|	СобытияТрудовыхКнижек.Должность КАК Должность,
		|	&КодПоРееструДолжностей КАК КодПоРееструДолжностей,
		|	СобытияТрудовыхКнижек.РазрядКатегория КАК РазрядКатегория,
		|	СобытияТрудовыхКнижек.ТрудоваяФункция КАК ТрудоваяФункция,
		|	СобытияТрудовыхКнижек.ВидМероприятия КАК ВидМероприятия,
		|	СобытияТрудовыхКнижек.СтатьяТКРФ КАК ОснованиеУвольнения,
		|	"""" КАК Сведения,
		|	"""" КАК СерияДокументаОснования,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаС,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПо,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОтмены
		|ПОМЕСТИТЬ ВТКадровыеСобытия
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСобытияТрудовыхКнижек КАК СобытияТрудовыхКнижек
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыМероприятийДоНачалаУчета КАК ДатыМероприятийДоНачалаУчета
		|			ПО СобытияТрудовыхКнижек.ФизическоеЛицо = ДатыМероприятийДоНачалаУчета.ФизическоеЛицо
		|				И СобытияТрудовыхКнижек.ДатаМероприятия = ДатыМероприятийДоНачалаУчета.ДатаМероприятия
		|		ПО КадровыеДанные.Сотрудник = СобытияТрудовыхКнижек.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СобытияТрудовыхКнижек.Ссылка,
		|	ВЫБОР
		|		КОГДА СобытияТрудовыхКнижек.НаименованиеДокумента = """"
		|			ТОГДА &НаименованиеДокументаОснования
		|		ИНАЧЕ СобытияТрудовыхКнижек.НаименованиеДокумента
		|	КОНЕЦ,
		|	СобытияТрудовыхКнижек.Номер,
		|	СобытияТрудовыхКнижек.Дата,
		|	СобытияТрудовыхКнижек.Сотрудник,
		|	КадровыеДанные.ФизическоеЛицо,
		|	КадровыеДанные.ВидЗанятости,
		|	СобытияТрудовыхКнижек.ДатаМероприятия,
		|	СобытияТрудовыхКнижек.Организация,
		|	СобытияТрудовыхКнижек.Подразделение,
		|	СобытияТрудовыхКнижек.Должность,
		|	&КодПоРееструДолжностей,
		|	СобытияТрудовыхКнижек.РазрядКатегория,
		|	СобытияТрудовыхКнижек.ТрудоваяФункция,
		|	СобытияТрудовыхКнижек.ВидМероприятия,
		|	СобытияТрудовыхКнижек.СтатьяТКРФ,
		|	"""",
		|	"""",
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	ДАТАВРЕМЯ(1, 1, 1)
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСобытияТрудовыхКнижек КАК СобытияТрудовыхКнижек
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиПериодыДанных КАК СотрудникиПериодыДанных
		|			ПО СобытияТрудовыхКнижек.Сотрудник = СотрудникиПериодыДанных.Сотрудник
		|				И (СобытияТрудовыхКнижек.ДатаМероприятия МЕЖДУ ВЫБОР
		|					КОГДА СотрудникиПериодыДанных.НачалоПериода < ДАТАВРЕМЯ(2020, 1, 1)
		|						ТОГДА ДАТАВРЕМЯ(2020, 1, 1)
		|					ИНАЧЕ СотрудникиПериодыДанных.НачалоПериода
		|				КОНЕЦ И СотрудникиПериодыДанных.ОкончаниеПериода)
		|		ПО КадровыеДанные.Сотрудник = СобытияТрудовыхКнижек.Сотрудник";
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		МодульГосударственнаяСлужба = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		МодульГосударственнаяСлужба.ДобавитьИсточникДанныхКодовДолжностейГосударственнойСлужбы(Запрос);
	КонецЕсли;
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Запрос.Текст, ТолькоРазрешенные);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПредставлениеВыполняемойФункции(ВыборкаДанных)
	
	ПредставлениеФункции = "";
	
	СоставПредставления = Новый Массив;
	Если ЗначениеЗаполнено(ВыборкаДанных.ТрудоваяФункция) Тогда
		СоставПредставления.Добавить(ВыборкаДанных.ТрудоваяФункция);
	Иначе
		
		Если ЗначениеЗаполнено(ВыборкаДанных.Должность) Тогда
			СоставПредставления.Добавить(ВыборкаДанных.Должность);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаДанных.РазрядКатегория) Тогда
			СоставПредставления.Добавить(ВыборкаДанных.РазрядКатегория);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыборкаДанных.КодПоРееструДолжностей) Тогда
		СоставПредставления.Добавить(ВыборкаДанных.КодПоРееструДолжностей);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыборкаДанных.Сведения) Тогда
		СоставПредставления.Добавить(ВыборкаДанных.Сведения);
	КонецЕсли;
	
	ПредставлениеФункции = СтрСоединить(СоставПредставления, ", ");
	
	Если ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Прием
		Или ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Перевод
		Или ВыборкаДанных.ВидМероприятия = Перечисления.ВидыМероприятийТрудовойДеятельности.Увольнение Тогда
		
		Если ЗначениеЗаполнено(ВыборкаДанных.Подразделение) Тогда
			ПредставлениеФункции = ?(ЗначениеЗаполнено(ПредставлениеФункции), ПредставлениеФункции + "; ", "") + Строка(ВыборкаДанных.ПодразделениеНаименованиеДляТК);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПредставлениеФункции;
	
КонецФункции

Функция ПредставлениеПричиныУвольнения(ВыборкаДанных) Экспорт
	
	НормативныйДокумент = КадровыйУчет.НормативныйДокументОснованияУвольнения(ВыборкаДанных.ОснованиеУвольнения);
	ПредставлениеПунктаСтатьи = ""
		+ ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеУвольненияПодпункт), Нстр("ru = ' Подпункт '"), "") + ВыборкаДанных.ОснованиеУвольненияПодпункт
		+ ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеУвольненияПункт), Нстр("ru = ' Пункт '"), "") + ВыборкаДанных.ОснованиеУвольненияПункт
		+ ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеУвольненияЧасть), Нстр("ru = ' Часть '"), "") + ВыборкаДанных.ОснованиеУвольненияЧасть
		+ ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеУвольненияСтатья), Нстр("ru = ' Статья '"), "") + ВыборкаДанных.ОснованиеУвольненияСтатья;
		
	Возврат ?(ЗначениеЗаполнено(ВыборкаДанных.ОснованиеПричиныУвольнения), ВыборкаДанных.ОснованиеПричиныУвольнения, "")
		+ ?(ЗначениеЗаполнено(ПредставлениеПунктаСтатьи), ", ", "") + ПредставлениеПунктаСтатьи
		+ ?(ЗначениеЗаполнено(НормативныйДокумент), ", ", "") + НормативныйДокумент;
	
КонецФункции

Функция ПредставлениеНомераДокументаОснования(ВыборкаДанных)
	
	Возврат ВыборкаДанных.НомерДокументаОснования + ?(ЗначениеЗаполнено(ВыборкаДанных.СерияДокументаОснования), " ", "") + ВыборкаДанных.СерияДокументаОснования;
	
КонецФункции

#КонецОбласти

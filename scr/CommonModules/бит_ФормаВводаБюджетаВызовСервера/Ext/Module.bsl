
Функция ОтправитьСообщениеOutlook(Ссылка, ТекстКнопки) Экспорт
	Если ТекстКнопки = "Отправить" Тогда
		ЕстьВложение = Ложь;
	ИначеЕсли ТекстКнопки = "Отправить_заявка_операционный_Вложение" Тогда 
		ЕстьВложение = Истина;
		ИмяПФ = "Печать(заявка операционный)";
	ИначеЕсли ТекстКнопки = "Отправить_заявка_инвестиционный_Вложение" Тогда 
		ЕстьВложение = Истина;
		ИмяПФ = "Печать(заявка инвестиционный)";
	ИначеЕсли ТекстКнопки = "Отправить_заявка_строительство_Вложение" Тогда 
		ЕстьВложение = Истина;
		ИмяПФ = "Печать(заявка строительство)";
		
		// + БИТ AMerkulov 2014-06-24 /  Отправка формы OPEX	
	ИначеЕсли ТекстКнопки = "Отправить_заявка_операционный_ВложениеOPEX" Тогда 
		ЕстьВложение = Истина;
		ИмяПФ = "OPEX";
		
		// - БИТ AMerkulov 2014-06-24 /  Отправка формы OPEX
		
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Начало (#3499)	
	ИначеЕсли ТекстКнопки = "Отправить_заявка_операционный_ВложениеOPEX_АнглийскаяВерсия" Тогда 
		ЕстьВложение = Истина;
		ИмяПФ = "OPEX_eng";	
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Конец (#3499)
	
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
	ИменаТабДокументов = Новый СписокЗначений;
	
	Если ЕстьВложение Тогда 
		//формируем печатную форму
		
		// + БИТ AMerkulov  2015-12-20 /  Отправка формы OPEX	
		Если ИмяПФ = "OPEX" Тогда
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-19 (#2873)
			//ТабДокумент = ПечатьOPEX_ПоулчитьТабличныйДокумент(Ссылка);
			//Заменено на:
			ТабДокумент = бит_ФормаВводаБюджетаВызовСервера.ПечатьФВБ_ПолучитьТабличныйДокумент(Ссылка);
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-19 (#2873)
			//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Начало (#3499
			//ИменаТабДокументов.Добавить(ТабДокумент,"ИмяМакета");
			ИмяФайла = "Заявка № " + СокрЛП(Ссылка.Номер) + " от " + Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy");
			ИменаТабДокументов.Добавить(ТабДокумент,ИмяФайла);
			//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Конец (#3499)
			
		//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Начало (#3499)
		ИначеЕсли ИмяПФ = "OPEX_eng" Тогда
		    ТабДокумент = бит_ФормаВводаБюджетаВызовСервера.ПечатьФВБ_ПолучитьТабличныйДокумент(Ссылка,Истина);
			ИмяФайла = "Заявка № " + СокрЛП(Ссылка.Номер) + " от " + Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy") + " eng";
			ИменаТабДокументов.Добавить(ТабДокумент,ИмяФайла);
		//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Конец (#3499)
			
		Иначе						
			
			ВнешнийИсточник = бит_БК_Общий.ПолучитьВнешнийИсточникПоНаименованию(Ссылка, ИмяПФ);
			ВнешняяОбработкаОбъект = бит_БК_Общий.ПолучитьОбъектВнешнейОбработки(ВнешнийИсточник, ложь);
			//ВнешняяОбработкаОбъект.СсылкаНаОбъект = Ссылка;
			//ТабДокумент = ВнешняяОбработкаОбъект.Печать(); 			
			МассивОбъектов = Новый Массив;
			МассивОбъектов.Добавить(Ссылка);
			// БИТ_YK_н 01/16 Доработка #2128
			ТабДокумент = ВнешняяОбработкаОбъект.СформироватьПечатнуюФорму(МассивОбъектов);
			// БИТ_YK_к
			
			//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Начало (#3499)
			//ИменаТабДокументов.Добавить(ТабДокумент,"ИмяМакета");
			ИмяФайла = "Заявка № " + СокрЛП(Ссылка.Номер) + " от " + Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy");
			ИменаТабДокументов.Добавить(ТабДокумент,?(ИмяПФ = "Печать(заявка строительство)",ИмяФайла,"ИмяМакета"));
			//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Конец (#3499)
			
		КонецЕсли;
		// - БИТ AMerkulov  2015-12-20/  Отправка формы OPEX	
		

		
	КонецЕсли;
	
	//объект печати список тек. документ
	ОбъектыПечати = Новый СписокЗначений;
	ОбъектыПечати.Добавить(Ссылка.Метаданные().Имя, Ссылка.Метаданные().Синоним);
	
	//подготовим структуру сообщения
	Если Ссылка.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный  
		Или Ссылка.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный Тогда 
		Шаблон	= Справочники.бит_фн_ШаблоныСообщений.бит_БК_ШаблонЗаявкиОпер;
	ИначеЕсли Ссылка.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда
		Шаблон	= Справочники.бит_фн_ШаблоныСообщений.бит_БК_ШаблонЗаявкиИнвестСтрой;
	КонецЕсли;
	
	СтруктураКонтекста = Новый Структура;
	СтруктураКонтекста.Вставить("ТекущийОбъект",Ссылка);
	СтруктураОтбор = Новый Структура("Объект,Виза",Ссылка,Справочники.бит_Визы.бит_БК_ФинКонтролер);
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	Если Не НаборЗаписей.Количество() = 0 Тогда 
		СтруктураКонтекста.Вставить("ФизическоеЛицо",НаборЗаписей[0].ФизическоеЛицо);
		СтруктураКонтекста.Вставить("Решение",НаборЗаписей[0].Решение);
	КонецЕсли; 	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
	СтруктураКонтекста.Вставить("ТипТекстаСообщения",Шаблон.ТипТекстаСообщения);
	СтруктураКонтекста.Вставить("ДатаДокумента"		,Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy"));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)
	
	//ОК Калинин М. 140912  добавим всех экспертов отдельной строкой с визой эксперта, когда она будет
	ДополнитьСтруктураКонтекстаПисьма(ссылка,СтруктураКонтекста);
	//ОК Калинин М.	
	СтрокаАналитика_2 = "";
	//ОК Калинин М. 260912 "указывать только уникальные значения"
	//Для Каждого ТекСтрока Из Ссылка.БДДС Цикл
	СсылкаБДДС_=Ссылка.БДДС.Выгрузить(,"Аналитика_2");
	СсылкаБДДС_.Свернуть("Аналитика_2");
	СсылкаБДДС_.Сортировать("Аналитика_2");	
	Для Каждого ТекСтрока Из СсылкаБДДС_ Цикл
	//ОК Калинин М.                                   
		СтрокаАналитика_2 = СтрокаАналитика_2 + ТекСтрока.Аналитика_2.Наименование + ", ";
	КонецЦикла;
	СтрокаАналитика_2 = Сред(СтрокаАналитика_2,1,СтрДлина(СтрокаАналитика_2) - 2);
	СтруктураКонтекста.Вставить("Аналитика_2",СтрокаАналитика_2);
	//статус
	// Возвращаемое значение:
	//   РезСтруктура   – Структура("Статус,Пользователь,Дата,ОплатаСтатус,ОплатаПользователь,ОплатаДата")
    СтруктураСтатус = бит_Визирование.ПолучитьСтатусОбъекта(Ссылка, Перечисления.бит_ВидыСтатусовОбъектов.Статус);
	СтруктураКонтекста.Вставить("Статус",СтруктураСтатус.Статус);
	
	//Начало_бит_Магомедов_09.08.2012 
	//Если Номер начинается с W вставляем в тело, иначе в шапку
	Если Лев(Ссылка.Номер,1) = "W" Тогда 
		СтруктураКонтекста.Вставить("ТелоНомер", "Служебный код:      "+Ссылка.Номер);
		СтруктураКонтекста.Вставить("ЗаголовокНомер", "");
	Иначе 
		СтруктураКонтекста.Вставить("ТелоНомер", "");
		СтруктураКонтекста.Вставить("ЗаголовокНомер", " № "+Ссылка.Номер);
	КонецЕсли;
		
	//Конец_бит_Магомедов_09.08.2012 
	
	СообщениеСтруктура = бит_фн_ОповещенияСервер.СформироватьСообщениеПоШаблону(Шаблон, СтруктураКонтекста);	
	бит_БК_ПараметрыОтправкиСообщения = бит_БК_Общий.ПолучитьПараметрыОтправкиСообщения(Ссылка);
	СообщениеСтруктура.Вставить("Адрес",бит_БК_ПараметрыОтправкиСообщения.Адрес);
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
	СообщениеСтруктура.Вставить("ТипТекстаСообщения",Шаблон.ТипТекстаСообщения);
	СтруктураКонтекста.Вставить("ДатаДокумента"		,Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy"));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)
	
	Результат = Новый Структура("ИменаТабДокументов, ОбъектыПечати, СообщениеСтруктура", ИменаТабДокументов, ОбъектыПечати, СообщениеСтруктура);
	Возврат Результат;
	
КонецФункции

Процедура ОтправитьСообщениеКлиент(Ссылка, НастройкиДоставки, Получатель) Экспорт
	
	ЭтотОбъект = Ссылка;
	
	//ОК Калинин М. 310812 проверка реквизитов
	Отказ=ложь;	
	//ПроверкаРеквизитов(Отказ,"");                                     	
	СтруктураОбязательныхПолей = Новый Структура;  
	СтруктураОбязательныхПолей.Вставить("Аналитика_1"	,"Не заполнено значение реквизита ""№ заявки""!");	
	СтруктураОбязательныхПолей.Вставить("Аналитика_2"	,"Не заполнено значение реквизита ""Объект""!");
	СтруктураОбязательныхПолей.Вставить("СтатьяОборотов","Не заполнено значение реквизита ""Статья оборотов""!");
	СтруктураОбязательныхПолей.Вставить("ЦФО"			,"Не заполнено значение реквизита ""Функция""!");	
	бит_Бюджетирование.ПроверитьЗаполнениеТабличнойЧастиБДДС(ЭтотОбъект,"БДДС",СтруктураОбязательныхПолей,Отказ,"");
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	//ОК Калинин М.

	//подготовим структуру сообщения
	Если Ссылка.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный  
		Или Ссылка.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Универсальный Тогда 
		Шаблон	= Справочники.бит_фн_ШаблоныСообщений.бит_БК_ШаблонЗаявкиОпер;
	ИначеЕсли Ссылка.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда  
		Шаблон	= Справочники.бит_фн_ШаблоныСообщений.бит_БК_ШаблонЗаявкиИнвестСтрой;
	КонецЕсли;
	
	СтруктураКонтекста = Новый Структура;
	СтруктураКонтекста.Вставить("ТекущийОбъект",Ссылка);
	
	
	СтруктураОтбор = Новый Структура("Объект,Виза",Ссылка,Справочники.бит_Визы.бит_БК_Бюджетодержатель);
	
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	Если Не НаборЗаписей.Количество() = 0 Тогда 
		СтруктураКонтекста.Вставить("ФизическоеЛицоОЦР",НаборЗаписей[0].ФизическоеЛицо);
		СтруктураКонтекста.Вставить("РешениеОЦР",НаборЗаписей[0].Решение);
	КонецЕсли;
	
	
	
	СтруктураОтбор = Новый Структура("Объект,Виза",Ссылка,Справочники.бит_Визы.бит_БК_ФинКонтролер);
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	Если Не НаборЗаписей.Количество() = 0 Тогда 
		СтруктураКонтекста.Вставить("ФизическоеЛицо",НаборЗаписей[0].ФизическоеЛицо);
		СтруктураКонтекста.Вставить("Решение",НаборЗаписей[0].Решение);
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
	СтруктураКонтекста.Вставить("ТипТекстаСообщения",Шаблон.ТипТекстаСообщения);
	СтруктураКонтекста.Вставить("ДатаДокумента"		,Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy"));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)
	
	//ОК Калинин М. 140912  добавим дополнительные визы
	ДополнитьСтруктураКонтекстаПисьма(ссылка,СтруктураКонтекста);
	//ОК Калинин М.
	СтрокаАналитика_2 = "";
	//ОК Калинин М. 260912 "указывать только уникальные значения"
	//Для Каждого ТекСтрока Из Ссылка.БДДС Цикл
	СсылкаБДДС_=Ссылка.БДДС.Выгрузить(,"Аналитика_2");
	СсылкаБДДС_.Свернуть("Аналитика_2");
	СсылкаБДДС_.Сортировать("Аналитика_2");	
	Для Каждого ТекСтрока Из СсылкаБДДС_ Цикл
	//ОК Калинин М.
			СтрокаАналитика_2 = СтрокаАналитика_2 + ТекСтрока.Аналитика_2.Наименование + ", ";
	КонецЦикла;
	СтрокаАналитика_2 = Сред(СтрокаАналитика_2,1,СтрДлина(СтрокаАналитика_2) - 2);
	СтруктураКонтекста.Вставить("Аналитика_2",СтрокаАналитика_2);
	СтруктураСтатус = бит_Визирование.ПолучитьСтатусОбъекта(Ссылка,Перечисления.бит_ВидыСтатусовОбъектов.Статус);
	СтруктураКонтекста.Вставить("Статус", СтруктураСтатус.Статус);
	
	//Начало_бит_Магомедов_09.08.2012 
	//Если Номер начинается с W вставляем в тело, иначе в шапку
	//ОК Калинин М. 280812 если номер начинается с любого регистра
	//Если Лев(Ссылка.Номер,1) = "W" Тогда 
	Если ВРЕГ(Лев(Ссылка.Номер,1)) = "W" Тогда 
	//ОК Калинин М. 
		СтруктураКонтекста.Вставить("ТелоНомер", "Служебный код:      "+Ссылка.Номер);
		СтруктураКонтекста.Вставить("ЗаголовокНомер", "");
	Иначе 
		СтруктураКонтекста.Вставить("ТелоНомер", "");
		СтруктураКонтекста.Вставить("ЗаголовокНомер", " № "+Ссылка.Номер);
	КонецЕсли;
		
	//Конец_бит_Магомедов_09.08.2012 
	
	СообщениеСтруктура = бит_фн_ОповещенияСервер.СформироватьСообщениеПоШаблону(Шаблон, СтруктураКонтекста);
	
	//Добавим в Настройки доставки - Настройки SMTP, Отправитель
	ТекущийИнициатор = ЭтотОбъект.бит_БК_Инициатор;
	Если Не ЗначениеЗаполнено(ТекущийИнициатор.Email) Тогда 
		Сообщить("Не указан адрес инициатора "+ТекущийИнициатор);
    КонецЕсли;
	НастройкиДоставки.Вставить("EMailАдресОтправителя",ТекущийИнициатор.Email);
	//НастройкиДоставки.Вставить("EMailАдресОтправителя",НастройкиДоставки.ПользовательSMTP);     //ОК Довбешка Т.30.01.2017
	//Подготовим Структуру параметров - Получатель
	
	//ОК Калинин М. 150313    
	Если типЗнч(Получатель)=тип("СписокЗначений")  тогда
	    Получатели=Получатель;
		СписокИнициаторПолучателяEmail=Новый СписокЗначений;
		Отказ=Ложь;
		для каждого Получатель_ из Получатели 
			цикл
			
			
			ИнициаторПолучателя = Неопределено;
			Если ТипЗнч(Получатель_.Значение) = Тип("СправочникСсылка.Пользователи") Тогда 
				ИнициаторПолучателя = Справочники.бит_БК_Инициаторы.НайтиПоРеквизиту("Пользователь",Получатель_.Значение);
				Если ИнициаторПолучателя = Неопределено Тогда 
					Сообщить("Не удалось определить получателя в списке пользователей"+строка(Получатель_.Значение));
					отказ=истина;
				ИначеЕсли Не ЗначениеЗаполнено(ИнициаторПолучателя.Email) Тогда 
					Сообщить("Не указан адрес получателя ");
					отказ=истина;
				КонецЕсли;		
			ИначеЕсли ТипЗнч(Получатель_.Значение) = Тип("СправочникСсылка.бит_БК_Инициаторы") Тогда 
				ИнициаторПолучателя = Получатель_.Значение;
			КонецЕсли;
			
			Если не ИнициаторПолучателя=Неопределено тогда
				СписокИнициаторПолучателяEmail.Добавить(ИнициаторПолучателя.Email);
			КонецЕсли;	
		КонецЦикла;
		СтруктураПараметров = Новый Структура("АдресПолучателя",СписокИнициаторПолучателяEmail);
	иначе
	//ОК Калинин М.
		ИнициаторПолучателя = Неопределено;
		Если ТипЗнч(Получатель) = Тип("СправочникСсылка.Пользователи") Тогда 
			ИнициаторПолучателя = Справочники.бит_БК_Инициаторы.НайтиПоРеквизиту("Пользователь",Получатель);
		ИначеЕсли ТипЗнч(Получатель) = Тип("СправочникСсылка.бит_БК_Инициаторы") Тогда 
			ИнициаторПолучателя = Получатель;
		КонецЕсли;
		Если ИнициаторПолучателя = Неопределено Тогда 
			Сообщить("Не удалось определить получателя");
			Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ИнициаторПолучателя.Email) Тогда 
			Сообщить("Не указан адрес получателя "+ИнициаторПолучателя);
			Возврат;
		КонецЕсли;
		СтруктураПараметров = Новый Структура("АдресПолучателя",ИнициаторПолучателя.Email);
	КонецЕсли;
	
	//Добавим в копию инициатора
	СтруктураПараметров.Вставить("АдресПолучателяКопии", ТекущийИнициатор.Email); 
		
	//отправка
	ПротоколОтправки="";
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-25 (#2873)
	Если НЕ СтруктураПараметров.Свойство("ТипТекстаСообщения") И 
		 ЗначениеЗаполнено(Шаблон.ТипТекстаСообщения)
	Тогда 
		СтруктураПараметров.Вставить("ТипТекстаСообщения",ТипТекстаПочтовогоСообщения[Шаблон.ТипТекстаСообщения]);
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-25 (#2873)
	
	//ОК Калинин М. 150313
	//бит_БК_Общий.ОтправитьСообщение(СообщениеСтруктура, НастройкиДоставки, СтруктураПараметров,ПротоколОтправки);
	ОтправитьСообщение(Ссылка, СообщениеСтруктура, НастройкиДоставки, СтруктураПараметров,ПротоколОтправки);
	//ОК Калинин М. 
	
	Сообщить(ПротоколОтправки);
	
КонецПроцедуры 

Процедура ОтправитьСообщениеКлиентСогласование(Ссылка, НастройкиДоставки, Получатель) Экспорт
	
	ЭтотОбъект = Ссылка;
	
	//ОК Калинин М. 310812 проверка реквизитов
	Отказ=ложь;	
	//ПроверкаРеквизитов(Отказ,"");                                     	
	СтруктураОбязательныхПолей = Новый Структура;  
	СтруктураОбязательныхПолей.Вставить("Аналитика_1"	,"Не заполнено значение реквизита ""№ заявки""!");	
	СтруктураОбязательныхПолей.Вставить("Аналитика_2"	,"Не заполнено значение реквизита ""Объект""!");
	СтруктураОбязательныхПолей.Вставить("СтатьяОборотов","Не заполнено значение реквизита ""Статья оборотов""!");
	СтруктураОбязательныхПолей.Вставить("ЦФО"			,"Не заполнено значение реквизита ""Функция""!");	
	бит_Бюджетирование.ПроверитьЗаполнениеТабличнойЧастиБДДС(ЭтотОбъект,"БДДС",СтруктураОбязательныхПолей,Отказ,"");
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	//ОК Калинин М.
	
	//подготовим структуру сообщения
	Шаблон	= Справочники.бит_фн_ШаблоныСообщений.бит_БК_ШаблонЗаявкиСогласование;
	
	СтруктураКонтекста = Новый Структура;
	СтруктураКонтекста.Вставить("ТекущийОбъект",Ссылка);
	СтруктураОтбор = Новый Структура("Объект,Виза",Ссылка,Справочники.бит_Визы.бит_БК_Бюджетодержатель);
	
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	Если Не НаборЗаписей.Количество() = 0 Тогда 
		СтруктураКонтекста.Вставить("ФизическоеЛицоОЦР",НаборЗаписей[0].ФизическоеЛицо);
		СтруктураКонтекста.Вставить("РешениеОЦР",НаборЗаписей[0].Решение);
	КонецЕсли;
	
	
	СтруктураОтбор = Новый Структура("Объект,Виза",Ссылка,Справочники.бит_Визы.бит_БК_ФинКонтролер);
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	Если Не НаборЗаписей.Количество() = 0 Тогда 
		СтруктураКонтекста.Вставить("ФизическоеЛицо",НаборЗаписей[0].ФизическоеЛицо);
		СтруктураКонтекста.Вставить("Решение",НаборЗаписей[0].Решение);
	КонецЕсли;
		
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
	СтруктураКонтекста.Вставить("ТипТекстаСообщения",Шаблон.ТипТекстаСообщения);
	СтруктураКонтекста.Вставить("ДатаДокумента"		,Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy"));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)
	
	//ОК Калинин М. 140912  добавим дополнительные визы
	ДополнитьСтруктураКонтекстаПисьма(ссылка,СтруктураКонтекста);
	//ОК Калинин М.
	СтрокаАналитика_2 = "";
	//ОК Калинин М. 260912 "указывать только уникальные значения"
	//Для Каждого ТекСтрока Из Ссылка.БДДС Цикл
	СсылкаБДДС_=Ссылка.БДДС.Выгрузить(,"Аналитика_2");
	СсылкаБДДС_.Свернуть("Аналитика_2");
	СсылкаБДДС_.Сортировать("Аналитика_2");	
	Для Каждого ТекСтрока Из СсылкаБДДС_ Цикл
	//ОК Калинин М.
			СтрокаАналитика_2 = СтрокаАналитика_2 + ТекСтрока.Аналитика_2.Наименование + ", ";
	КонецЦикла;
	СтрокаАналитика_2 = Сред(СтрокаАналитика_2,1,СтрДлина(СтрокаАналитика_2) - 2);
	СтруктураКонтекста.Вставить("Аналитика_2",СтрокаАналитика_2);
	СтруктураСтатус = бит_Визирование.ПолучитьСтатусОбъекта(Ссылка,Перечисления.бит_ВидыСтатусовОбъектов.Статус);
	СтруктураКонтекста.Вставить("Статус", СтруктураСтатус.Статус);
	
	//Начало_бит_Магомедов_09.08.2012 
	//Если Номер начинается с W вставляем в тело, иначе в шапку
	//ОК Калинин М. 280812 если номер начинается с любого регистра
	//Если Лев(Ссылка.Номер,1) = "W" Тогда 
	Если ВРЕГ(Лев(Ссылка.Номер,1)) = "W" Тогда 
	//ОК Калинин М. 
		СтруктураКонтекста.Вставить("ТелоНомер", "Служебный код:      "+Ссылка.Номер);
		СтруктураКонтекста.Вставить("ЗаголовокНомер", "");
	Иначе 
		СтруктураКонтекста.Вставить("ТелоНомер", "");
		СтруктураКонтекста.Вставить("ЗаголовокНомер", " № "+Ссылка.Номер);
	КонецЕсли;
		
	//Конец_бит_Магомедов_09.08.2012 
	
	СообщениеСтруктура = бит_фн_ОповещенияСервер.СформироватьСообщениеПоШаблону(Шаблон, СтруктураКонтекста);
	
	//Добавим в Настройки доставки - Настройки SMTP, Отправитель
	ТекущийИнициатор = ЭтотОбъект.бит_БК_Инициатор;
	Если Не ЗначениеЗаполнено(ТекущийИнициатор.Email) Тогда 
		Сообщить("Не указан адрес инициатора "+ТекущийИнициатор);
	КонецЕсли;
	
	// + БИТ AMerkulov 2015-01-12		
	//НастройкиДоставки.Вставить("EMailАдресОтправителя",ЭтотОбъект.ОК_ОЦР.Email);
	НастройкиДоставки.Вставить("EMailАдресОтправителя",ПараметрыСеанса.бит_БК_ТекущийИнициатор.Email);
	//НастройкиДоставки.Вставить("EMailАдресОтправителя",НастройкиДоставки.ПользовательSMTP);     //ОК Довбешка Т.30.01.2017
	// - БИТ AMerkulov 2015-01-12		
	
	СтруктураПараметров = Новый Структура("АдресПолучателя",ТекущийИнициатор.Email);	
	
	////+ Сундукова 24.03.2016 - Михаил Руденко сказал убрать, согласовано с Екатериной.
	//// + БИТ AMerkulov 2015-04-16	
	//СтруктураОтбор_ = Новый Структура("Объект",Ссылка);
	//НаборЗаписей_ = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор_);
	//ТаблицаВиз = НаборЗаписей_.Выгрузить();
	//ТаблицаВиз.СОртировать("КодСортировки");
	//Флаг = Ложь;
	//Для Каждого Стр Из ТаблицаВиз Цикл
	//	
	//	Если Флаг = Истина И Стр.Решение <> Справочники.бит_ВидыРешенийСогласования.Согласовано Тогда
	//		Если ЗначениеЗаполнено(Стр.ФизическоеЛицо.Email) Тогда
	//			СтруктураПараметров.Вставить("АдресПолучателяКопии", Стр.ФизическоеЛицо.Email); 				
	//			Прервать;
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//	Если Стр.ФизическоеЛицо = ПараметрыСеанса.бит_БК_ТекущийИнициатор И Стр.Решение = Справочники.бит_ВидыРешенийСогласования.Согласовано  Тогда
	//		Флаг = Истина;
	//	КонецЕсли;
	//КонецЦикла;
	////СтруктураПараметров.Вставить("АдресПолучателяКопии", ЭтотОбъект.ОК_ОЦР.Email); 
	//// - БИТ AMerkulov 2015-04-16
	
	//Добавим в копию инициатора
	СтруктураПараметров.Вставить("АдресПолучателяКопии", ТекущийИнициатор.Email);
	////- Сундукова 24.03.2016 - Михаил Руденко сказал убрать, согласовано с Екатериной.	
		
	//отправка
	ПротоколОтправки="";
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-26 (#2873)
	Если НЕ СтруктураПараметров.Свойство("ТипТекстаСообщения") И 
		 ЗначениеЗаполнено(Шаблон.ТипТекстаСообщения)
	Тогда 
		СтруктураПараметров.Вставить("ТипТекстаСообщения",ТипТекстаПочтовогоСообщения[Шаблон.ТипТекстаСообщения]);
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-26 (#2873)
	
	//ОК Калинин М. 150313
	//бит_БК_Общий.ОтправитьСообщение(СообщениеСтруктура, НастройкиДоставки, СтруктураПараметров,ПротоколОтправки);
	ОтправитьСообщение(Ссылка, СообщениеСтруктура, НастройкиДоставки, СтруктураПараметров,ПротоколОтправки);
	//ОК Калинин М. 
	
	Сообщить(ПротоколОтправки);
	
КонецПроцедуры 

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-09 (#2931)
//Процедура СБ_ОтправитьСообщениеКлиентОЦРОСтатусе(Ссылка, НастройкиДоставки, Получатель) Экспорт
	//
	//ЭтотОбъект = Ссылка;
	//
	////подготовим структуру сообщения
	//Шаблон	= Справочники.бит_фн_ШаблоныСообщений.НайтиПоКоду("00-000005");
	//
	//СтруктураКонтекста = Новый Структура;
	//СтруктураКонтекста.Вставить("ТекущийОбъект",Ссылка);  	
	//
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
	//СтруктураКонтекста.Вставить("ТипТекстаСообщения",Шаблон.ТипТекстаСообщения);
	//СтруктураКонтекста.Вставить("ДатаДокумента"		,Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy"));
	////ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)
	//
	//ДополнитьСтруктураКонтекстаПисьма(ссылка,СтруктураКонтекста);
	//
	//СтруктураСтатус = бит_Визирование.ПолучитьСтатусОбъекта(Ссылка,Перечисления.бит_ВидыСтатусовОбъектов.Статус);
	//СтруктураКонтекста.Вставить("Статус", СтруктураСтатус.Статус);
	//СтруктураКонтекста.Вставить("Номер", Ссылка.Номер);	
	//
	//СообщениеСтруктура = бит_фн_ОповещенияСервер.СформироватьСообщениеПоШаблону(Шаблон, СтруктураКонтекста);
	//
	////Добавим в Настройки доставки - Настройки SMTP, Отправитель
	//ТекущийИнициатор = ЭтотОбъект.бит_БК_Инициатор;
	//Если Не ЗначениеЗаполнено(ТекущийИнициатор.Email) Тогда 
	//	Сообщить("Не указан адрес инициатора "+ТекущийИнициатор);
	//КонецЕсли;
	//
	//НастройкиДоставки.Вставить("EMailАдресОтправителя", ПараметрыСеанса.бит_БК_ТекущийИнициатор.Email);
	//		
	//
	//СтруктураПараметров = Новый Структура("АдресПолучателя",ТекущийИнициатор.Email);	
	//
	////Добавим в копию инициатора
	//СтруктураПараметров.Вставить("АдресПолучателяКопии", ТекущийИнициатор.Email);
	//
	//
	////отправка
	//ПротоколОтправки="";
	//
	//ОтправитьСообщение(Ссылка, СообщениеСтруктура, НастройкиДоставки, СтруктураПараметров,ПротоколОтправки);  	
	//Сообщить(ПротоколОтправки);
//Заменено на:
Процедура СБ_ОтправитьСообщениеКлиентОЦРОСтатусе(Ссылка) Экспорт
	
	Шаблон	= СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("ШаблонСообщения_ДляОтправкиПисем_ОЦРОСтатусе",ПредопределенноеЗначение("Справочник.бит_фн_ШаблоныСообщений.ПустаяСсылка"));

	РежимыВывода = бит_ОбщегоНазначения.ОпределитьРежимыВывода("Нет");			
		
	КэшАдресов = Новый ТаблицаЗначений;
	КэшАдресов.Колонки.Добавить("Получатель"             ,Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	КэшАдресов.Колонки.Добавить("ВидКонтактнойИнформации");
	КэшАдресов.Колонки.Добавить("Адрес"                  );

	КэшАдресов.Индексы.Добавить("Получатель,ВидКонтактнойИнформации");       

	СтруктураКонтекста = ПолучитьСтруктуруКонтекстаДляПисьмаИнициатору(Ссылка,Шаблон);

	СтрокаКэш = КэшАдресов.Добавить();
	СтрокаКэш.Получатель = СтруктураКонтекста.Получатель;
	СтрокаКэш.Адрес	     = СтруктураКонтекста.ИнициаторEmail;
	                                                                    
	СтруктураКонтекста.Вставить("НеПроверятьНаличиеЗаписи" , Истина);

	//1С-ИжТиСи, Кондратьев, 03.2020, обновление (
	//Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.ЗаписатьОповещение(Неопределено
	Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.СформироватьИЗаписатьСообщение(Неопределено
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление )	
										   ,СтруктураКонтекста.Шаблон
										   ,СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("НастройкаДоставки_ДляОтправкиПисем")
										   ,СтруктураКонтекста
										   ,КэшАдресов
										   ,РежимыВывода.ВыводитьОшибки);

		
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-09 (#2931)
	
КонецПроцедуры 
//-СБ Пискунова 10.03.2017 #2691

//ОКЕЙ Наумов А.Н.(СофтЛаб) Начало 2017-02-22 (#3103)
Процедура СохранитьВременныеФайлыВложений(пИдентификатор,СписокФайловДляОтправляемогоПисьма
	//ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2020-12-07 (#3941)
	, СУчетомФлагаКОтправке = Ложь
	//ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2020-12-07 (#3941)
	) Экспорт
	
	пНаборВрФП = РегистрыСведений.ок_ВременныеФайлыПисем.СоздатьНаборЗаписей();
	пНаборВрФП.Отбор.Идентификатор.Установить(пИдентификатор);	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)
	соотИменаФайлов = Новый Соответствие;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-02 (#3036)
	
	Для Каждого Строка Из СписокФайловДляОтправляемогоПисьма Цикл
	
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		//поддержка альтернативных вариантов
		ТипЗначения = ТипЗнч(Строка.Файл);
		Если ТипЗначения = Тип("ДвоичныеДанные") Тогда
			пДвоичныеДанные = Строка.Файл;
		ИначеЕсли ТипЗначения = Тип("ТабличныйДокумент") Тогда
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("pdf");
			Строка.Файл.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.PDF);
			ВременныФайл = Новый Файл(ИмяВременногоФайла);
			Если Не ВременныФайл.Существует() Тогда
				Продолжить;
			КонецЕсли;
			пДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
			УдалитьФайлы(ИмяВременногоФайла);
		Иначе	
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)
		//пДвоичныеДанные = Строка.Файл.Хранилище.Получить();
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-09-09 (#3426)
		//пДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(Строка.Файл);
		//Заменено на:
		Если ТипЗнч(Строка.Файл) = Тип("СправочникСсылка.бит_ХранилищеДополнительнойИнформации") Тогда 
			пДвоичныеДанные = Строка.Файл.Хранилище.Получить();
		Иначе	
			пДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(Строка.Файл);
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-09-09 (#3426)
		
		Если ТипЗнч(пДвоичныеДанные) <> Тип("ДвоичныеДанные") Тогда
			Продолжить;
		КонецЕсли;
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		КонецЕсли;	
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
		пТекИндексИмениФайла = соотИменаФайлов.Получить(Строка.ИмяФайла);
		Если пТекИндексИмениФайла = Неопределено Тогда 			
			пТекИндексИмениФайла = 0;
		Иначе
			пТекИндексИмениФайла = пТекИндексИмениФайла + 1;
		КонецЕсли;		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-02 (#3036)
		
		пЗапись = пНаборВрФП.Добавить();
		пЗапись.Идентификатор  = пИдентификатор;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)		
		//пЗапись.ПолноеИмяФайла = Строка.ИмяФайла;
		//Заменено на:         
		пИндексНачалаРасширения = СтрНайти(Строка.ИмяФайла,".",НаправлениеПоиска.СКонца);
		
		Если пИндексНачалаРасширения>0 Тогда 
			пИмяФайлаБезРасширения  = Лев(Строка.ИмяФайла,пИндексНачалаРасширения-1);
			пРасширение 			= Сред(Строка.ИмяФайла,пИндексНачалаРасширения);
		Иначе
			пИмяФайлаБезРасширения = Строка.ИмяФайла;
			пРасширение = "";
		КонецЕсли;
		пЗапись.ПолноеИмяФайла = пИмяФайлаБезРасширения + ?(пТекИндексИмениФайла = 0,"",пТекИндексИмениФайла) + пРасширение;
		
		соотИменаФайлов.Вставить(Строка.ИмяФайла, пТекИндексИмениФайла);		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)
		//пЗапись.Файл		   = Строка.Файл.Хранилище;
		пЗапись.Файл		   = Новый ХранилищеЗначения(пДвоичныеДанные);
		
		//ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2020-12-07 (#3941)
		Если СУчетомФлагаКОтправке И ТипЗнч(Строка.Файл) = Тип("СправочникСсылка.ЭДПрисоединенныеФайлы") Тогда 
			пЗапись.КОтправке =  Строка.Файл.ок_КОтправке;
		КонецЕсли;	
		//ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2020-12-07 (#3941)
		
	КонецЦикла;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-07-02 (#3036)
	Если пНаборВрФП.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-07-02 (#3036)
	
	пНаборВрФП.Записать();
	
КонецПроцедуры
//ОКЕЙ Наумов А.Н.(СофтЛаб) Конец 2017-02-22 (#3103)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-09 (#2931)
Процедура ОтправитьСообщениеИнициаторуОСменеСтатуса(Ссылка) Экспорт
	
	РежимыВывода = бит_ОбщегоНазначения.ОпределитьРежимыВывода("Нет");			
	
    КэшАдресов = Новый ТаблицаЗначений;
    КэшАдресов.Колонки.Добавить("Получатель"             ,Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
    КэшАдресов.Колонки.Добавить("ВидКонтактнойИнформации");
    КэшАдресов.Колонки.Добавить("Адрес"                  );
    
    КэшАдресов.Индексы.Добавить("Получатель,ВидКонтактнойИнформации");       
 
    СтруктураКонтекста = ПолучитьСтруктуруКонтекстаДляПисьмаИнициатору(Ссылка,Справочники.бит_фн_ШаблоныСообщений.бит_БК_ШаблонЗаявкиСогласование);
	
	СтрокаКэш = КэшАдресов.Добавить();
    СтрокаКэш.Получатель = СтруктураКонтекста.Получатель;
    СтрокаКэш.Адрес	     = СтруктураКонтекста.ИнициаторEmail;
                                                                        
    СтруктураКонтекста.Вставить("НеПроверятьНаличиеЗаписи" , Истина);
	
    //1С-ИжТиСи, Кондратьев, 03.2020, обновление (
	//Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.ЗаписатьОповещение(Неопределено
	Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.СформироватьИЗаписатьСообщение(Неопределено
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление )
    									   ,СтруктураКонтекста.Шаблон
    									   ,СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("НастройкаДоставки_ДляОтправкиПисем")
    									   ,СтруктураКонтекста
    									   ,КэшАдресов
    									   ,РежимыВывода.ВыводитьОшибки);
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-09 (#2931)

Функция ОтправитьСообщение(Ссылка, СообщениеСтруктура, НастройкиДоставки, СтруктураПараметров,ПротоколОтправки="") 
	
	флДействиеВыполнено = Ложь;			
	Отказ = Ложь;
	
		
	Если НЕ Отказ Тогда
		
		// сформируем почтовый профиль
		ИПП 					= Новый ИнтернетПочтовыйПрофиль;
		ИПП.АдресСервераSMTP 	= НастройкиДоставки.АдресSMTP;   
		ИПП.ПортSMTP 			= НастройкиДоставки.ПортSMTP;
		Если НЕ ПустаяСтрока(СокрЛП(НастройкиДоставки.SMTPАутентификация)) Тогда
			
			ИПП.АутентификацияSMTP 	= СпособSMTPАутентификации[СокрЛП(НастройкиДоставки.SMTPАутентификация)];
			
		КонецЕсли; 
		ИПП.ПользовательSMTP 	= НастройкиДоставки.ПользовательSMTP;
		ИПП.ПарольSMTP 			= НастройкиДоставки.ПарольSMTP;
		
		//ИПП.АдресСервераPOP3    = НастройкиДоставки.АдресPOP3;
		//ИПП.ПортPOP3            = НастройкиДоставки.ПортPOP3;
		//Если НЕ ПустаяСтрока(СокрЛП(НастройкиДоставки.POPАутентификация)) Тогда
		//	
		//	ИПП.АутентификацияPOP3  = СпособPOP3Аутентификации[СокрЛП(НастройкиДоставки.POPАутентификация)];
		//	
		//КонецЕсли; 
		//ИПП.Пользователь        = НастройкиДоставки.ПользовательPOP3;
		//ИПП.Пароль              = НастройкиДоставки.ПарольPOP3;
		                         
		
		// Создадим сообщение 
		Сообщение = Новый ИнтернетПочтовоеСообщение; 
		Сообщение.Отправитель.Адрес = НастройкиДоставки.EMailАдресОтправителя;
		Сообщение.ОбратныйАдрес.Добавить(НастройкиДоставки.EMailАдресОтправителя);
		Если типЗнч(СтруктураПараметров.АдресПолучателя)=тип("СписокЗначений") тогда
			для каждого получательАдрес из  СтруктураПараметров.АдресПолучателя цикл
				Сообщение.Получатели.Добавить(получательАдрес);	
			КонецЦикла;	
		иначе			
			Сообщение.Получатели.Добавить(СтруктураПараметров.АдресПолучателя);
		КонецЕсли;	
		
		// BIT AMetkulov 06022015 ++
		Если СтруктураПараметров.Свойство("АдресПолучателяКопии") И ЗначениеЗаполнено(СтруктураПараметров.АдресПолучателяКопии) Тогда 
			Сообщение.Копии.Добавить(СтруктураПараметров.АдресПолучателяКопии);
		КонецЕсли;
		// BIT AMetkulov 06022015 --
		
        //ОК Довбешка Т. 15.04.2014
		Если Ссылка.бит_БК_ТипРасходаИсключительный Тогда
			Сообщение.Тема = "АВАРИЯ! " + СообщениеСтруктура.Заголовок; 
		Иначе
			Сообщение.Тема = СообщениеСтруктура.Заголовок; 
		КонецЕсли; 
		//Сообщение.Тема = СообщениеСтруктура.Заголовок;		
		//ОК
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-25 (#2873)
		//Сообщение.Тексты.Добавить(СообщениеСтруктура.Текст + Символы.ПС + СообщениеСтруктура.Подпись); 
		//Заменено на:
		ТипТекстаСообщения = ТипТекстаПочтовогоСообщения.ПростойТекст;
		Если СтруктураПараметров.Свойство("ТипТекстаСообщения") Тогда 
			ТипТекстаСообщения = СтруктураПараметров.ТипТекстаСообщения;
		КонецЕсли;
		Сообщение.Тексты.Добавить(СообщениеСтруктура.Текст + Символы.ПС + СообщениеСтруктура.Подпись,ТипТекстаСообщения); 
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-25 (#2873)
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-17 (#2916)
		//Дублируется - печатная форма помещается во вложение из форм ФВБ		
		//Если Ссылка <> Неопределено Тогда
		//	МассивЦФО = Новый Массив;
		//	МассивЦФО.Добавить(Справочники.Подразделения.НайтиПоКоду("000000114")); //Отдел по управлению недвижимостью
		//	МассивЦФО.Добавить(Справочники.Подразделения.НайтиПоКоду("000000038"));  //эксплуатация
		//	
		//	//МассивОбъектов = Новый Массив;
		//	//МассивОбъектов.Добавить(СообщениеСтруктура.СБ_ФормаВводаБюджета);
		//	
		//	Запрос = Новый Запрос;
		//	Запрос.Текст = 
		//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		//	|	бит_ФормаВводаБюджетаБДДС.ЦФО
		//	|ИЗ
		//	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
		//	|ГДЕ
		//	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
		//	|	И бит_ФормаВводаБюджетаБДДС.ЦФО В(&ЦФО)
		//	|	И бит_ФормаВводаБюджетаБДДС.Ссылка.ВидОперации = &ВидОперации";
		//	
		//	Запрос.УстановитьПараметр("ВидОперации", ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный"));
		//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		//	Запрос.УстановитьПараметр("ЦФО", МассивЦФО);
		//	
		//	РезультатЗапроса = Запрос.Выполнить();
		//	
		//	Если РезультатЗапроса.Пустой() Тогда
		//		ТабДок = бит_ФормаВводаБюджетаВызовСервера.ПечатьФВБ_ПолучитьТабличныйДокумент(Ссылка);   					
		//	Иначе
		//		ТабДок = бит_ФормаВводаБюджетаВызовСервера.ПечатьФВБ_ПолучитьТабличныйДокументПечатьСтроительство(Ссылка);
		//	КонецЕсли; 
		//	
		//	типФайла=ТипФайлаТабличногоДокумента.HTML;
		//	ИмяФайла=Ссылка.Номер;				
		//	имяФайлаСвложением = КаталогВременныхФайлов()+ПараметрыСеанса.бит_ИдентификаторСеанса+ИмяФайла+"."+(строка(типФайла));			
		//	ТабДок.Записать(имяФайлаСвложением,типФайла);
		//	Сообщение.Вложения.Добавить(имяФайлаСвложением);
		//КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-17 (#2916)
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-30 (#2916)
		//Снял комментарии с кода ниже
		Если (НастройкиДоставки.Свойство("Вложение")) тогда
			ТабДокумент=НастройкиДоставки.Вложение.ТабДок;
			Если типзнч(ТабДокумент)=тип("ТабличныйДокумент") тогда		
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2020-04-06 (#3691)
				//типФайла=ТипФайлаТабличногоДокумента.HTML;
				//Заменено на:
				типФайла = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("Визирование", "ФорматВложенийПечатныхФорм", "PDF"); 
				Попытка
					типФайла = ТипФайлаТабличногоДокумента[типФайла];
				Исключение 
					типФайла = ТипФайлаТабличногоДокумента.PDF;
				КонецПопытки;      
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2020-04-06 (#3691)
				//+Сундукова 21.04.2016 №2396 - на случай одновременной записи.
				//имяФайлаСвложением = КаталогВременныхФайлов()+НастройкиДоставки.Вложение.ИмяФайла+"."+(строка(типФайла));			
				имяФайлаСвложением = КаталогВременныхФайлов()+ПараметрыСеанса.бит_ИдентификаторСеанса+НастройкиДоставки.Вложение.ИмяФайла+"."+(строка(типФайла));			
				//-Сундукова 21.04.2016 №2396 - на случай одновременной записи.
				ТабДокумент.Записать(имяФайлаСвложением,типФайла);
				Сообщение.Вложения.Добавить(имяФайлаСвложением);
				
				//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2020-07-20 (#3817)
				УдалитьФайлы(имяФайлаСвложением);
				//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2020-07-20 (#3817)
				
			КонецЕсли;	
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-30 (#2916)
		//
		//// + БИТ Amerkulov	03022014
		//Если РольДоступна("Guest") И ПараметрыСеанса.бит_БК_ТекущийИнициатор.ИспользуемаяФорма = 1 Тогда
		//	
		//	// + БИТ Amerkulov	27112014
		//	Сообщение.Вложения.Очистить();
		//	// - БИТ Amerkulov	27112014
		//	
		//	Макет = Документы.бит_ФормаВводаБюджета.ПолучитьМакет("битМакетВложения");
		//	ОбъектИсточникДанных = Ссылка;
		//	СсылкаНаОбъект = Ссылка;
		//	ТабДок = Новый ТабличныйДокумент;
		//	ОбластьШапки = Макет.ПолучитьОбласть("Print_Titles");
		//	ОбластьШапки.Параметры.Заполнить(ОбъектИсточникДанных);
		//	
		//	Если ОбъектИсточникДанных.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда
		//		ОбластьШапки.Параметры.Заголовок = "Заявка на инвестиционные расходы" 
		//	ИначеЕсли ОбъектИсточникДанных.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда
		//		ОбластьШапки.Параметры.Заголовок = "Заявка на операционные расходы" 
		//	Иначе			
		//		ОбластьШапки.Параметры.Заголовок = "Заявка на опер. и инвест. расходы" 
		//	КонецЕсли;
		//	
		//	//+СБ Пискунова #2691 02.03.2017 Визы будут в подвале
		//	
		//	//// BIT AMerkulov 12112014 ++
		//	//
		//	//СтруктураОтбор = Новый Структура("Объект", СсылкаНаОбъект);
		//	//СтруктураОтбор.Вставить("Виза", Справочники.бит_Визы.бит_БК_Бюджетодержатель);
		//	//
		//	//НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
		//	//
		//	//Если НаборЗаписей.Количество() Тогда
		//	//	ОбластьШапки.Параметры.ОК_ОЦРРешение = НаборЗаписей[0].Решение;					
		//	//КонецЕсли;	
		//	//
		//	//
		//	//
		//	//
		//	//ОбластьШапки.Параметры.бит_БК_ИнициаторЦФО 			= ОбъектИсточникДанных.бит_БК_Инициатор.ЦФО;
		//	//ОбластьШапки.Параметры.бит_БК_ИнициаторДолжность 	= ОбъектИсточникДанных.бит_БК_Инициатор.Должность;
		//	//ОбластьШапки.Параметры.бит_БК_ИнициаторТелефон 		= ОбъектИсточникДанных.бит_БК_Инициатор.Телефон;
		//	//ОбластьШапки.Параметры.бит_БК_ИнициаторEmail	 	= ОбъектИсточникДанных.бит_БК_Инициатор.Email;
		//	//
		//	//ОбластьШапки.Параметры.ОК_ОЦРЦФО 					= ОбъектИсточникДанных.ОК_ОЦР.ЦФО;
		//	//ОбластьШапки.Параметры.ОК_ОЦРДолжность 				= ОбъектИсточникДанных.ОК_ОЦР.Должность;
		//	//ОбластьШапки.Параметры.ОК_ОЦРТелефон 				= ОбъектИсточникДанных.ОК_ОЦР.Телефон;
		//	//ОбластьШапки.Параметры.ОК_ОЦРEmail	 				= ОбъектИсточникДанных.ОК_ОЦР.Email;
		//	////ОбластьШапки.Параметры.ОК_ОЦРОбъект	 				= ОбъектИсточникДанных.ОК_ОЦР.ОбъектСтроительства;
		//	//-СБ Пискунова #2691 02.03.2017 Визы будут в подвале
		//	
		//	ОбластьШапки.Параметры.СуммаЗаявки = ОбъектИсточникДанных.БДДС.Итог("бит_БК_СуммаБезНДС");
		//	
		//	ТабДок.Вывести(ОбластьШапки);
		//	
		//	Для Каждого Строка Из ОбъектИсточникДанных.БДДС Цикл
		//		ОбластьСтроки = Макет.ПолучитьОбласть("Row");
		//		ОбластьСтроки.Параметры.Заполнить(Строка);
		//		ОбластьСтроки.Параметры.Период = Формат(Строка.Период,"ДФ=""ММММ гггг""");
		//		ТабДок.Вывести(ОбластьСтроки);
		//	КонецЦикла;
		//	
		//	ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
		//	
		//	//+СБ Пискунова #2691 02.03.2017 Визы будут в подвале

		//	//СтруктураОтбор = Новый Структура("Объект",СсылкаНаОбъект);
		//	//НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
		//	//
		//	//счЭксперт = 1;
		//	//Для Каждого ТекСтрока Из НаборЗаписей Цикл
		//	//	Если ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_ФинКонтролер Тогда 
		//	//		
		//	//		ВывестиОбластьПодвала(ОбластьПодвала,"1",ТекСтрока);
		//	//		
		//	//	ИначеЕсли  ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_Эксперт И счЭксперт <= 1 Тогда
		//	//		ВывестиОбластьПодвала(ОбластьПодвала,"3",ТекСтрока);				
		//	//		счЭксперт = счЭксперт + 1;
		//	//		
		//	//	ИначеЕсли   ТекСтрока.Виза = Справочники.бит_Визы.НайтиПоНаименованию("Функциональный директор") Тогда
		//	//		
		//	//		ВывестиОбластьПодвала(ОбластьПодвала,"2",ТекСтрока);
		//	//		
		//	//	ИначеЕсли   ТекСтрока.ДобавленаВручную Тогда
		//	//		ВывестиОбластьПодвала(ОбластьПодвала,"4",ТекСтрока);
		//	//	КонецЕсли;
		//	//	
		//	//КонецЦикла;	
		//	//
		//	//
		//	//ТабДок.Вывести(ОбластьПодвала);
		//	
		//	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
		//	ОбластьВизы = Макет.ПолучитьОбласть("СБ_Визы");
		//	Запрос = Новый Запрос;
		//	Запрос.Текст = 
		//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		//	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.Виза, """")) КАК Виза,
		//	|	ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо, """") КАК ФизическоеЛицо,
		//	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.Решение, """")) КАК Решение,
		//	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо.ЦФО, """")) КАК ЦФО,
		//	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо.Email, """")) КАК Email,
		//	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо.Должность, """")) КАК Должность,
		//	|	МАКСИМУМ(ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо.Телефон, """")) КАК Телефон,
		//	|	МАКСИМУМ(бит_УстановленныеВизы.КодСортировки) КАК КодСортировки,
		//	|	бит_УстановленныеВизы.Виза.СБ_ГруппаВиз
		//	|ИЗ
		//	|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
		//	|ГДЕ
		//	|	бит_УстановленныеВизы.Объект = &Объект
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	бит_УстановленныеВизы.Виза.СБ_ГруппаВиз,
		//	|	ЕСТЬNULL(бит_УстановленныеВизы.ФизическоеЛицо, """")
		//	|
		//	|УПОРЯДОЧИТЬ ПО
		//	|	КодСортировки";
		//	
		//	Запрос.УстановитьПараметр("Объект", СсылкаНаОбъект.Ссылка);
		//	
		//	РезультатЗапроса = Запрос.Выполнить();
		//	
		//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		//	Сч = 0;
		//	СчГрупп = 0;
		//	НомерГруппы = 0;
		//	Кол = 0;
		//	КоличествоВиз = ВыборкаДетальныеЗаписи.Количество();
		//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//		
		//		Если (Цел(СчГрупп/4)= СчГрупп/4  и СчГрупп <>0)     Тогда
		//			ТабДок.Вывести(ОбластьВизы);
		//			//ном = 0;
		//			Для  ном =1 по ном=4 Цикл 
		//				ОбластьВизы.Параметры["Виза"+ном] ="";
		//				ОбластьВизы.Параметры["Фио"+ном] = "";
		//				ОбластьВизы.Параметры["Телефон"+ном] = "";
		//				ОбластьВизы.Параметры["Функция"+ном] = "";
		//				ОбластьВизы.Параметры["Должность"+ном] = "";
		//				ОбластьВизы.Параметры["Email"+ном] ="";
		//				ОбластьВизы.Параметры["Решение"+ном] ="";
		//				ном = ном+1;
		//			КонецЦикла;
		//			Сч = 0;
		//		КонецЕсли;
		//		СчГрупп=СчГрупп+1;
		//		Сч = Сч + 1;
		//		
		//		 Для  ном = сч по 4 Цикл 
		//			ОбластьВизы.Параметры["Виза"+ном] ="";
		//			ОбластьВизы.Параметры["Фио"+ном] = "";
		//			ОбластьВизы.Параметры["Телефон"+ном] = "";
		//			ОбластьВизы.Параметры["Функция"+ном] = "";
		//			ОбластьВизы.Параметры["Должность"+ном] = "";
		//			ОбластьВизы.Параметры["Email"+ном] ="";
		//			ОбластьВизы.Параметры["Решение"+ном] ="";
		//			ном = ном+1;
		//		КонецЦикла;
		//
		//		
		//		ОбластьВизы.Параметры["Виза"+Сч] = ВыборкаДетальныеЗаписи.Виза;
		//		ОбластьВизы.Параметры["Фио"+Сч] = ВыборкаДетальныеЗаписи.ФизическоеЛицо;
		//		ОбластьВизы.Параметры["Телефон"+Сч] = ВыборкаДетальныеЗаписи.Телефон;
		//		ОбластьВизы.Параметры["Функция"+Сч] = ВыборкаДетальныеЗаписи.ЦФО;
		//		ОбластьВизы.Параметры["Должность"+Сч] = ВыборкаДетальныеЗаписи.Должность;
		//		ОбластьВизы.Параметры["Email"+Сч] = ВыборкаДетальныеЗаписи.Email;
		//		ОбластьВизы.Параметры["Решение"+сч] =ВыборкаДетальныеЗаписи.Решение;
		//		
		//		Кол = Кол+1;
		//		номНачальный =сч+1;
		//		Для  ном = номНачальный по 4 Цикл 
		//			ОбластьВизы.Параметры["Виза"+ном] ="";
		//			ОбластьВизы.Параметры["Фио"+ном] = "";
		//			ОбластьВизы.Параметры["Телефон"+ном] = "";
		//			ОбластьВизы.Параметры["Функция"+ном] = "";
		//			ОбластьВизы.Параметры["Должность"+ном] = "";
		//			ОбластьВизы.Параметры["Email"+ном] ="";
		//			ОбластьВизы.Параметры["Решение"+ном] ="";
		//			ном = ном+1;
		//		КонецЦикла;
		//		
		//		Если Кол = КоличествоВиз   Тогда
		//			
		//			ТабДок.Вывести(ОбластьВизы); 				
		//		КонецЕсли;
		//	КонецЦикла;	
		//	
		//	//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
		//
		//		Если СсылкаНаОбъект.бит_Комментарии.Количество() Тогда
		//		
		//		ОбластьМакета = Макет.ПолучитьОбласть("Комментарии_Шапка");
		//		ТабДок.Вывести(ОбластьМакета);
		//		
		//		Для Каждого Стр Из СсылкаНаОбъект.бит_Комментарии Цикл
		//			
		//			ОбластьМакета = Макет.ПолучитьОбласть("Комментарии_Строка");
		//			ОбластьМакета.Параметры.Заполнить(Стр);
		//			ТабДок.Вывести(ОбластьМакета);
		//			
		//		КонецЦикла;
		//		
		//		
		//	КонецЕсли;
		//	//-СБ Пискунова #2691 02.03.2017 Визы будут в подвале
		//	
		//	// BIT AMerkulov 12112014 --
		//	
		//	
		//	//+Сундукова 21.04.2016 №2396 - на случай одновременной записи.
		//	//имяФайлаСвложением = КаталогВременныхФайлов()+"Заявка_на_расход.html";				
		//	//ТабДок.Записать(имяФайлаСвложением,ТипФайлаТабличногоДокумента.HTML4);
		//	имяФайлаСвложением = КаталогВременныхФайлов()+ПараметрыСеанса.бит_ИдентификаторСеанса+"Заявка_на_расход.html";				
		//	ТабДок.Записать(имяФайлаСвложением,ТипФайлаТабличногоДокумента.HTML4);			
		//	//-Сундукова 21.04.2016 №2396


		//	Сообщение.Вложения.Добавить(имяФайлаСвложением);
		//КонецЕсли;
		//// - БИТ Amerkulov

		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-10-30 (#2916)
		//Снял комментарии с кода ниже
		// + БИТ AMerkulov 2015-04-22
		Если (НастройкиДоставки.Свойство("МассивИменВложений")) И (НастройкиДоставки.Свойство("МассивСсылокВложений"))  тогда
			Для Каждого СтрокаФайла Из НастройкиДоставки.МассивСсылокВложений Цикл 
				Сообщение.Вложения.Добавить(СтрокаФайла.Хранилище.Получить(), СтрокаФайла.ИмяФайла);
			КонецЦикла;
		КонецЕсли;
		// - БИТ AMerkulov 2015-04-22
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-10-30 (#2916)
		
		// Подключимся и отправим сформированное сообщение
		Попытка
			
			Почта = Новый ИнтернетПочта; 
			Почта.Подключиться(ИПП); 
			Почта.Послать(Сообщение); 
			флДействиеВыполнено = Истина;
			ПротоколОтправки    = "Сообщение отправлено по адресу "
			                       +СтруктураПараметров.АдресПолучателя
								   +"  "
								   +ТекущаяДата()
								   +".";
			
		Исключение
			
			флДействиеВыполнено = Ложь;
			ПротоколОтправки    = "Сообщение  не удалось отправить по адресу "
			                       +СтруктураПараметров.АдресПолучателя
								   +"  "
								   +ТекущаяДата()
								   +" по причине "
								   +ОписаниеОшибки()
								   +".";
			
			
		КонецПопытки;
		
		Почта.Отключиться(); 
		
	КонецЕсли; 
	
	Возврат флДействиеВыполнено;
	
КонецФункции

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
//Процедура ДополнитьСтруктураКонтекстаПисьма(Ссылка,СтруктураКонтекста)
//Заменено на:
Процедура ДополнитьСтруктураКонтекстаПисьма(Ссылка,СтруктураКонтекста) Экспорт
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)
	//+СБ. Пискунова 11.06.2017 #2691 Изменим порядок согласующих в письме.
	
	#Область Бекап
	// BIT AMerkulov 15-04-2015 ++	
	допстрока_="";       	
	//ДобавитьВизу(Ссылка, допстрока_,"Функциональный директор");
	//ДобавитьВизу(Ссылка, допстрока_,"Генеральный директор");		
	
	СтруктураОтбор_ = Новый Структура("Объект",Ссылка);
	НаборЗаписей_ = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор_);
	
	
	Для Каждого ТекСтрока Из НаборЗаписей_ Цикл	
		
		Решение = ТекСтрока.Решение.Наименование;
		Если Не ЗначениеЗаполнено(Решение) Тогда
			
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-07-24 (#3231)
			//Решение = "Требуется доп. согласование";
			//Заменено на:
			Решение = НСтр("ru = 'Требуется согласование'");
			//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-07-24 (#3231)
			
		КонецЕсли;
		
		
		Если ТекСтрока.Виза <> Справочники.бит_Визы.бит_БК_ФинКонтролер 
			И ТекСтрока.Виза <> Справочники.бит_Визы.бит_БК_Бюджетодержатель
			И ТекСтрока.Виза <> Справочники.бит_Визы.бит_БК_РуководительИнициатора
			И ЗначениеЗаполнено(ТекСтрока.ФизическоеЛицо) 
			Тогда
			допстрока_=допстрока_+ТекСтрока.Виза+": "+ТекСтрока.ФизическоеЛицо.Наименование+" "+ Решение+"	"+Символы.ПС;
		КонецЕсли;
		
		Если  ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_Бюджетодержатель Тогда
			СтруктураКонтекста.Вставить("РешениеБюджетодержателя",Решение);		
		КонецЕсли;

		
	КонецЦикла;	
	
	
	////добавим всех экспертов отдельной строкой с визой эксперта
	//экспертыСтр="";
	//разделитель=", ";
	//СтруктураОтбор_ = Новый Структура("Объект,Виза",Ссылка,Справочники.бит_Визы.бит_БК_Эксперт);
	//НаборЗаписей_ = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор_);
	//Для Каждого ТекСтрока Из НаборЗаписей_ Цикл		
	//	ЭкспертыСтр=ЭкспертыСтр+ТекСтрока.ФизическоеЛицо.Наименование+" "+ТекСтрока.Решение+разделитель;						
	//КонецЦикла;	
	//ЭкспертыСтр=Лев(ЭкспертыСтр,стрдлина(ЭкспертыСтр)-стрдлина(разделитель)); //убираем последний разделитель		
	//допстрока_=допстрока_+"Эксперты: "+ЭкспертыСтр;
	//
	#КонецОбласти
	
	допстрока_="";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
	//"ВЫБРАТЬ
	//Заменено на:
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)
	|	бит_УстановленныеВизы.ФизическоеЛицо,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
	//|	бит_УстановленныеВизы.Виза,
	//|	бит_УстановленныеВизы.Решение
	//Заменено на:
	|	МАКСИМУМ(ЕСТЬNULL(ВЫРАЗИТЬ(бит_УстановленныеВизы.Виза.ОК_ПредставлениеДляПечати КАК Строка(500)), """")) КАК Виза,
	|	МАКСИМУМ(бит_УстановленныеВизы.Решение) КАК Решение,
	|	МАКСИМУМ(бит_УстановленныеВизы.ДатаКрайняя) КАК ДатаКрайняя,
	|	бит_УстановленныеВизы.ФизическоеЛицо.Наименование КАК Наименование,
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-12 (#2942)
	//|	МАКСИМУМ(бит_УстановленныеВизы.КодСортировки) КАК КодСортировки
	//Заменено на:
	|	МИНИМУМ(бит_УстановленныеВизы.КодСортировки) КАК КодСортировки
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-12 (#2942)
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)
	|ИЗ
	|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы	
	|ГДЕ
	|	бит_УстановленныеВизы.Объект = &Объект
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-07 (#2879)
	|СГРУППИРОВАТЬ ПО
	|	бит_УстановленныеВизы.ФизическоеЛицо,
	|	бит_УстановленныеВизы.ФизическоеЛицо.Наименование,
	|	бит_УстановленныеВизы.Виза.СБ_ГруппаВиз
	|
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-07 (#2879)
	|УПОРЯДОЧИТЬ ПО
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-07 (#2879)
	//|	бит_УстановленныеВизы.КодСортировки";
	//Заменено на:
	|	КодСортировки";
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-07 (#2879)
	
	Запрос.УстановитьПараметр("Объект", Ссылка);
			
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Решение = ВыборкаДетальныеЗаписи.Решение.Наименование;
			Если Не ЗначениеЗаполнено(Решение) Тогда
				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-07-24 (#3231)
				//Решение = "Требуется доп. согласование";
				//Заменено на:
				Решение = НСтр("ru = 'Требуется согласование'");
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-07-24 (#3231)
				
			КонецЕсли; 			
			
			Если ВыборкаДетальныеЗаписи.Виза <> Справочники.бит_Визы.бит_БК_ФинКонтролер 
				И ВыборкаДетальныеЗаписи.Виза <> Справочники.бит_Визы.бит_БК_Бюджетодержатель
				И ВыборкаДетальныеЗаписи.Виза <> Справочники.бит_Визы.бит_БК_РуководительИнициатора
				И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ФизическоеЛицо) 
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-09-05 (#2879)
				И ВыборкаДетальныеЗаписи.ФизическоеЛицо <> ПредопределенноеЗначение("Справочник.бит_БК_Инициаторы.СБ_НеЗадан")
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-09-05 (#2879)
				Тогда
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
				//допстрока_=допстрока_+ВыборкаДетальныеЗаписи.Виза+": "+ВыборкаДетальныеЗаписи.ФизическоеЛицо.Наименование+" "+ Решение+"	"+Символы.ПС;
				//Заменено на:
				Если СтруктураКонтекста.Свойство("ТипТекстаСообщения") И
					 СтруктураКонтекста.ТипТекстаСообщения = Строка(ТипТекстаПочтовогоСообщения.HTML) 
				Тогда 
					 допстрока_ = допстрока_ + "<TR>"
					 						 + "<TD style = ""padding-right:10px;width:310px;"">"+ВыборкаДетальныеЗаписи.Виза+": </TD><TD style = ""padding-right:10px;width:300px;"">"+ВыборкаДетальныеЗаписи.Наименование+"</TD><TD style = ""padding-right:10px;width:300px;"">"+Решение+"</TD><TD style = ""padding-right:10px;width:300px;color: red;"">"+?(Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаКрайняя),"",ВыборкаДетальныеЗаписи.ДатаКрайняя)+"</TD>"
					 						 + "</TR>";
				Иначе
					допстрока_=допстрока_+ВыборкаДетальныеЗаписи.Виза+": "+ВыборкаДетальныеЗаписи.Наименование+" "+ Решение+"	"+Символы.ПС;
				КонецЕсли;
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)
			КонецЕсли;              
			
			Если  ВыборкаДетальныеЗаписи.Виза = Справочники.бит_Визы.бит_БК_Бюджетодержатель Тогда
				СтруктураКонтекста.Вставить("РешениеБюджетодержателя",Решение);		
			КонецЕсли; 	
			
		КонецЦикла;		
		
	КонецЕсли;
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-08-07 (#2879)
	Если СтруктураКонтекста.Свойство("ТипТекстаСообщения") И
		 СтруктураКонтекста.ТипТекстаСообщения = Строка(ТипТекстаПочтовогоСообщения.HTML) 
	Тогда 
	    
		допстрока_ = "<TABLE cellspacing=""0"" border=""1"" cellpadding=""0"" width = 1200px>
					|<TR>
					//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-05-27 Начало (#3752)
					//|<TD style = ""text-align:center;font-weight: bold;width:310px;"">Согласующие по заявке</TD><TD style = ""text-align:center;font-weight: bold;width:300px;"">ФИО Согласующего</TD><TD style = ""text-align:center;font-weight: bold;width:290px;"">Решение</TD><TD style = ""text-align:center;font-weight: bold;width:300px;color: red;"">Срок принятия решения</TD>
					|<TD style = ""text-align:center;font-weight: bold;width:310px;"">Роль</TD><TD style = ""text-align:center;font-weight: bold;width:300px;"">ФИО</TD><TD style = ""text-align:center;font-weight: bold;width:290px;"">Решение</TD><TD style = ""text-align:center;font-weight: bold;width:300px;color: red;"">Срок принятия решения</TD>
					//ОКЕЙ Рычаков А.С.(СофтЛаб)2020-05-27 Начало (#3752)
					|</TR>"		             
					 + допстрока_ 
					 + "</TABLE>";
					 
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-17 (#3393)
		Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") Тогда 
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-17 (#3393)
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-07-24 (#3231)
		стрКомменты = "";
		Для Каждого стрКомментарий Из Ссылка.бит_Комментарии Цикл 
			стрКомменты = стрКомменты + "<TR>"
									  + "<TD style = ""padding-right:10px;width:510px;"">"+стрКомментарий.Пользователь+"</TD><TD style = ""padding-right:10px;width:700px;"">"+стрКомментарий.Комментарий+"</TD>"
									  + "</TR>";
		КонецЦикла;
		Если Не ПустаяСтрока(стрКомменты) Тогда 
			допстрока_ = "<TABLE cellspacing=""0"" border=""1"" cellpadding=""0"" width = 1200px>
			|<TR>
			|<TD style = ""text-align:center;font-weight: bold;width:510px;"">ФИО</TD><TD style = ""text-align:center;font-weight: bold;width:700px;"">Комментарий</TD>			
			|</TR>"
			+стрКомменты 
			+ "</TABLE><BR/>"
			+ допстрока_;
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-07-24 (#3231)
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-17 (#3393)
		КонецЕсли;
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-17 (#3393)			
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-08-07 (#2879)	
	
	//-СБ. Пискунова 11.06.2017 #2691 Изменим порядок согласующих в письме.
	СтруктураКонтекста.Вставить("дополнительные_визы",допстрока_);
	
	
	
	// BIT AMerkulov 15-04-2015 --
	

конецпроцедуры	

Процедура ДобавитьВизу(Ссылка, допстрока_,ВизаНаименование)
	СтруктураОтбор = Новый Структура("Объект,Виза",Ссылка,Справочники.бит_Визы.НайтиПоНаименованию(ВизаНаименование));
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	Если Не НаборЗаписей.Количество() = 0 Тогда 
		попытка
			Если ЗначениеЗаполнено(НаборЗаписей[0].ФизическоеЛицо) тогда
				допстрока_=допстрока_+ВизаНаименование+": "+НаборЗаписей[0].ФизическоеЛицо.Наименование+" "+НаборЗаписей[0].Решение.Наименование+"	"+Символы.ПС;//обманем Outlock табом, чтобы не удалял "лишние" разрывы
			конецесли	
		исключение
			
		конецпопытки;
	КонецЕсли;
	
КонецПроцедуры	

//+Сенин С.В. 08.08.16 №2560
//не используется
//
Функция ПечатьOPEX_ПоулчитьТабличныйДокумент(Ссылка) Экспорт
	
	Макет = Документы.бит_ФормаВводаБюджета.ПолучитьМакет("битМакетВложения");
	СсылкаНаОбъект = Ссылка;
	ОбъектИсточникДанных = Ссылка;
	ТабДок = Новый ТабличныйДокумент;
	ОбластьШапки = Макет.ПолучитьОбласть("Print_Titles");
	ОбластьШапки.Параметры.Заполнить(ОбъектИсточникДанных);
	
	Если ОбъектИсточникДанных.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда
		ОбластьШапки.Параметры.Заголовок = "Заявка на инвестиционные расходы" 
	ИначеЕсли ОбъектИсточникДанных.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда
		ОбластьШапки.Параметры.Заголовок = "Заявка на операционные расходы" 
	Иначе			
		ОбластьШапки.Параметры.Заголовок = "Заявка на опер. и инвест. расходы" 
	КонецЕсли;
	
	
	// BIT AMerkulov 12112014 ++
	
	СтруктураОтбор = Новый Структура("Объект", СсылкаНаОбъект);
	СтруктураОтбор.Вставить("Виза", Справочники.бит_Визы.бит_БК_Бюджетодержатель);
	
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	
	Если НаборЗаписей.Количество() Тогда
		ОбластьШапки.Параметры.ОК_ОЦРРешение = НаборЗаписей[0].Решение;					
	КонецЕсли;	
	
	// BIT AMerkulov 12112014 --
	
	//BIT AKrishtopov 11032016 -->>
	Если СсылкаНаОбъект.ОК_РазмерПредоплаты = 0 Тогда
		ОбластьШапки.Параметры.ОК_РазмерПредоплаты = "0%";
	КонецЕсли;
	//BIT AKrishtopov 11032016 <<--
	
	ОбластьШапки.Параметры.бит_БК_ИнициаторЦФО 			= ОбъектИсточникДанных.бит_БК_Инициатор.ЦФО;
	ОбластьШапки.Параметры.бит_БК_ИнициаторДолжность 	= ОбъектИсточникДанных.бит_БК_Инициатор.Должность;
	ОбластьШапки.Параметры.бит_БК_ИнициаторТелефон 		= ОбъектИсточникДанных.бит_БК_Инициатор.Телефон;
	ОбластьШапки.Параметры.бит_БК_ИнициаторEmail	 	= ОбъектИсточникДанных.бит_БК_Инициатор.Email;
	
	ОбластьШапки.Параметры.ОК_ОЦРЦФО 					= ОбъектИсточникДанных.ОК_ОЦР.ЦФО;
	ОбластьШапки.Параметры.ОК_ОЦРДолжность 				= ОбъектИсточникДанных.ОК_ОЦР.Должность;
	ОбластьШапки.Параметры.ОК_ОЦРТелефон 				= ОбъектИсточникДанных.ОК_ОЦР.Телефон;
	ОбластьШапки.Параметры.ОК_ОЦРEmail	 				= ОбъектИсточникДанных.ОК_ОЦР.Email;
	//ОбластьШапки.Параметры.ОК_ОЦРОбъект	 				= ОбъектИсточникДанных.ОК_ОЦР.ОбъектСтроительства;
	ОбластьШапки.Параметры.СтатусДокумента = ПолучитьСтатусДокумента(СсылкаНаОбъект);//БИТ АКриштопов 08062016 №2419	
	ОбластьШапки.Параметры.СуммаЗаявки = ОбъектИсточникДанных.БДДС.Итог("бит_БК_СуммаБезНДС");
	СуммаЗаявки = ОбъектИсточникДанных.БДДС.Итог("бит_БК_СуммаБезНДС");
	
	ТабДок.Вывести(ОбластьШапки);
	
	//БИТ АКриштопов 25.04.2016 ++ #2419
	Для Каждого Строка Из ОбъектИсточникДанных.БДДС Цикл
		ОбластьСтроки = Макет.ПолучитьОбласть("Row");
		ОбластьСтроки.Параметры.Заполнить(Строка);
		ОбластьСтроки.Параметры.Период = Формат(Строка.Период,"ДФ=""ММММ гггг""");
		ТабДок.Вывести(ОбластьСтроки);
	КонецЦикла;
	
	ОбластьИтогов = Макет.ПолучитьОбласть("ОбластьИтог");
	ОбластьИтогов.Параметры.Итогбит_БК_СуммаБезНДС = СуммаЗаявки;
	ОбластьИтогов.Параметры.ИтогОстатокПоБюджету = ОбъектИсточникДанных.бит_ИтогСуммаПоБюджету;
	ТабДок.Вывести(ОбластьИтогов);
	ОбластьКомментФинКон = Макет.ПолучитьОбласть("КомментарийФинКонтролера");
	ОбластьКомментФинКон.Параметры.КомментарийФинКон = ОбъектИсточникДанных.Комментарий; 
	ТабДок.Вывести(ОбластьКомментФинКон);
	//БИТ АКриштопов 25.04.3016 -- #2419
	
	ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвала2 = Макет.ПолучитьОбласть("Подвал2");
	
	СтруктураОтбор = Новый Структура("Объект",СсылкаНаОбъект);
	НаборЗаписей = бит_Визирование.ПрочитатьНаборВиз(СтруктураОтбор);
	
	
	ТаблицаДопВиз = Новый ТаблицаЗначений;
	ТаблицаДопВиз.Колонки.Добавить("Виза");
	ТаблицаДопВиз.Колонки.Добавить("Решение");
	ТаблицаДопВиз.Колонки.Добавить("Наименование");
	
	
	счЭксперт = 1;
	Для Каждого ТекСтрока Из НаборЗаписей Цикл
		Если ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_ФинКонтролер Тогда 
			
			ВывестиОбластьПодвала(ОбластьПодвала,"1",ТекСтрока);
			
		ИначеЕсли  ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_Эксперт И счЭксперт <= 1 Тогда
			ВывестиОбластьПодвала(ОбластьПодвала,"3",ТекСтрока);				
			счЭксперт = счЭксперт + 1;
			
		ИначеЕсли   ТекСтрока.Виза = Справочники.бит_Визы.НайтиПоНаименованию("Функциональный директор") Тогда
			
			ВывестиОбластьПодвала(ОбластьПодвала,"2",ТекСтрока);
			
		ИначеЕсли   ТекСтрока.Виза = Справочники.бит_Визы.НайтиПоНаименованию("Генеральный директор") Тогда
			ВывестиОбластьПодвала(ОбластьПодвала,"4",ТекСтрока);
			
			
		ИначеЕсли   ТекСтрока.Виза = Справочники.бит_Визы.бит_БК_Бюджетодержатель Тогда
			//Бюджетодержатель уже отражен выше как ОЦР 							
		Иначе
			
			СтрокаДопВиз = ТаблицаДопВиз.Добавить();
			СтрокаДопВиз.Виза = ТекСтрока.ФизическоеЛицо;
			СтрокаДопВиз.Решение = ТекСтрока.Решение;
			СтрокаДопВиз.Наименование = ТекСтрока.Виза.Наименование;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	
	ТабДок.Вывести(ОбластьПодвала);
	
	
	Если ТаблицаДопВиз.Количество() Тогда
		
		ОбластьПодвала = Макет.ПолучитьОбласть("Подвал1");
		инд = 4;
		
		Для Каждого Стр Из ТаблицаДопВиз Цикл
			инд = инд +1;
			
			Если инд < 9 Тогда
				
				ОбластьПодвала.Параметры["Фио"+инд] = Стр.Виза;
				ОбластьПодвала.Параметры["Телефон"+инд] = Стр.Виза.Телефон;
				ОбластьПодвала.Параметры["Функция"+инд] = Стр.Виза.ЦФО;
				ОбластьПодвала.Параметры["Должность"+инд] = Стр.Виза.Должность;
				ОбластьПодвала.Параметры["Email"+инд] = Стр.Виза.Email;
				ОбластьПодвала.Параметры["Решение"+инд] = Стр.Решение;						
				ОбластьПодвала.Параметры["ДопВиза"+инд] = Стр.Наименование;	
			КонецЕсли;
			
			Если инд > 8 и инд < 13 Тогда
				
				ОбластьПодвала2.Параметры["Фио"+инд] = Стр.Виза;
				ОбластьПодвала2.Параметры["Телефон"+инд] = Стр.Виза.Телефон;
				ОбластьПодвала2.Параметры["Функция"+инд] = Стр.Виза.ЦФО;
				ОбластьПодвала2.Параметры["Должность"+инд] = Стр.Виза.Должность;
				ОбластьПодвала2.Параметры["Email"+инд] = Стр.Виза.Email;
				ОбластьПодвала2.Параметры["Решение"+инд] = Стр.Решение;						
				ОбластьПодвала2.Параметры["ДопВиза"+инд] = Стр.Наименование;	
			КонецЕсли;
			
			
		КонецЦикла;
		ТабДок.Вывести(ОбластьПодвала);
		Если инд > 8 Тогда
			ТабДок.Вывести(ОбластьПодвала2);				
		КонецЕсли;
		
		
		
	КонецЕсли;	
	
	Если СсылкаНаОбъект.бит_Комментарии.Количество() Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("Комментарии_Шапка");
		ТабДок.Вывести(ОбластьМакета);
		
		Для Каждого Стр Из СсылкаНаОбъект.бит_Комментарии Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Комментарии_Строка");
			ОбластьМакета.Параметры.Заполнить(Стр);
			ТабДок.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		
	КонецЕсли;
	
	
	// BIT AMerkulov 12112014 --
	
	
	
	// BIT AMerkulov 12112014 --
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	Возврат ТабДок;	
	
КонецФункции

Функция ПолучитьСтатусДокумента(Док) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	бит_СтатусыОбъектов.Статус КАК СтатусДокумента
		|ИЗ
		|	РегистрСведений.бит_СтатусыОбъектов КАК бит_СтатусыОбъектов
		|ГДЕ
		|	бит_СтатусыОбъектов.Объект = &Док
		|
		|УПОРЯДОЧИТЬ ПО
		|	бит_СтатусыОбъектов.ДатаИзмененияСтатуса УБЫВ";
	
	Запрос.УстановитьПараметр("Док", Док);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.СтатусДокумента;
	КонецЦикла;
	Возврат "";	
КонецФункции

Процедура ВывестиОбластьПодвала(Область,Номер,СтрокаНабора)
//+Сундукова 24.03.2016	                                                     
Если значениезаполнено(СтрокаНабора.ФизическоеЛицо) тогда	
	//-Сундукова 24.03.2016
	Область.Параметры["Фио"+Номер] = СтрокаНабора.ФизическоеЛицо;
	Область.Параметры["Телефон"+Номер] = СтрокаНабора.ФизическоеЛицо.Телефон;
	Область.Параметры["Функция"+Номер] = СтрокаНабора.ФизическоеЛицо.ЦФО;
	Область.Параметры["Должность"+Номер] = СтрокаНабора.ФизическоеЛицо.Должность;
	Область.Параметры["Email"+Номер] = СтрокаНабора.ФизическоеЛицо.Email;
	//+Сундукова 24.03.2016	                                                     
КонецЕсли;
//-Сундукова 24.03.2016

	Область.Параметры["Решение"+Номер] = СтрокаНабора.Решение;
//	Область.Параметры["Объект"+Номер] = СтрокаНабора.ФизическоеЛицо.ОбъектСтроительства;
	
	Если Номер = "4" Тогда
		Область.Параметры.ДопНаименование = СтрокаНабора.Виза.Наименование;		
	КонецЕсли;
	
	
	
КонецПроцедуры

Функция ПолучитьВнешнийОтчет(имяотчета_, ПоискПоКоду = Ложь) Экспорт 
	рез_="";
	попытка
			
		Если ПоискПоКоду Тогда
			рез_=Справочники.ДополнительныеОтчетыИОбработки.НайтиПоКоду(имяотчета_);
		Иначе
			рез_=Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию(имяотчета_);
		КонецЕсли;
		
	
	исключение
		сообщить(ОписаниеОшибки());	
	конецпопытки;
	Возврат рез_;
КонецФункции	

Функция бит_ПроверитьПоБюджету_Новый_Опер_НаСервере(Ссылка) Экспорт 
	ТЗ = Ссылка.БДДС.Выгрузить();
	
	ТЗдляЦФО = ТЗ.Скопировать(); //Функция
	ТЗдляПроекта = ТЗ.Скопировать();
	ТЗдляОбъекта = ТЗ.Скопировать(); //Аналитика2 (ОбъектыСтроительства)
	
	// 1 ЦФО (Функция)
	ТЗдляЦФО.Свернуть("ЦФО");
	МассивЦФО = ТЗдляЦФО.ВыгрузитьКолонку("ЦФО");
	СписокЦФО= Новый СписокЗначений;
	СписокЦФО.ЗагрузитьЗначения(МассивЦФО);

	// Поиск шаблонов ЦФО

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныОтчетовПараметры.Ссылка как Шаблон
		|ИЗ
		|	Справочник.ШаблоныОтчетов.Параметры КАК ШаблоныОтчетовПараметры
		|ГДЕ
		|	ШаблоныОтчетовПараметры.ЦФО В (&ЦФО)
		|
		|СГРУППИРОВАТЬ ПО
		|	ШаблоныОтчетовПараметры.Ссылка";

	Запрос.УстановитьПараметр("ЦФО", СписокЦФО);

	Результат = Запрос.Выполнить().Выгрузить();

	
	МассивШаблонов = Результат.ВыгрузитьКолонку("Шаблон");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныОтчетовПараметры.ЦФО как ЦФО
		|ИЗ
		|	Справочник.ШаблоныОтчетов.Параметры КАК ШаблоныОтчетовПараметры
		|ГДЕ
		|	ШаблоныОтчетовПараметры.Ссылка В (&МассивШаблонов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ШаблоныОтчетовПараметры.ЦФО";

	Запрос.УстановитьПараметр("МассивШаблонов", МассивШаблонов);

	Результат = Запрос.Выполнить().Выгрузить();

	
	массивЦФО = Результат.ВыгрузитьКолонку("ЦФО");

	Если массивЦФО.Количество()>0 Тогда
	СписокЦФО= Новый СписокЗначений;
	СписокЦФО.ЗагрузитьЗначения(массивЦФО);
	КонецЕсли;

	
	//// 2 Проекты
	//ТЗдляПроекта.Свернуть("Проект");
	//СписокПроектов = ТЗдляПроекта.ВыгрузитьКолонку("Проект");
	
	//// 3 Объекты
	//ТЗдляОбъекта.Свернуть("Аналитика_2");
	//СписокОбъектов = ТЗдляОбъекта.ВыгрузитьКолонку("Аналитика_2");
	
	Результат = Новый Структура("СписокЦФО, СписокПроектов, СписокОбъектов", СписокЦФО, , );
	
	Возврат Результат;
	
КонецФункции

Функция бит_ПроверитьПоБюджету_Новый_Инвест_НаСервере(Ссылка) Экспорт 
	ТЗ = Ссылка.БДДС.Выгрузить();
	
	ТЗдляЦФО = ТЗ.Скопировать(); //Функция
	ТЗдляПроекта = ТЗ.Скопировать();
	ТЗдляОбъекта = ТЗ.Скопировать(); //Аналитика2 (ОбъектыСтроительства)
	
	// 1 ЦФО (Функция)
	ТЗдляЦФО.Свернуть("ЦФО");
	МассивЦФО = ТЗдляЦФО.ВыгрузитьКолонку("ЦФО");
	СписокЦФО= Новый СписокЗначений;
	СписокЦФО.ЗагрузитьЗначения(МассивЦФО);

	
	// Поиск шаблонов ЦФО

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныОтчетовПараметры.Ссылка как Шаблон
		|ИЗ
		|	Справочник.ШаблоныОтчетов.Параметры КАК ШаблоныОтчетовПараметры
		|ГДЕ
		|	ШаблоныОтчетовПараметры.ЦФО В (&ЦФО)
		|
		|СГРУППИРОВАТЬ ПО
		|	ШаблоныОтчетовПараметры.Ссылка";

	Запрос.УстановитьПараметр("ЦФО", СписокЦФО);

	Результат = Запрос.Выполнить().Выгрузить();

	
	МассивШаблонов = Результат.ВыгрузитьКолонку("Шаблон");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныОтчетовПараметры.ЦФО как ЦФО
		|ИЗ
		|	Справочник.ШаблоныОтчетов.Параметры КАК ШаблоныОтчетовПараметры
		|ГДЕ
		|	ШаблоныОтчетовПараметры.Ссылка В (&МассивШаблонов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ШаблоныОтчетовПараметры.ЦФО";

	Запрос.УстановитьПараметр("МассивШаблонов", МассивШаблонов);

	Результат = Запрос.Выполнить().Выгрузить();

	
	массивЦФО = Результат.ВыгрузитьКолонку("ЦФО");

	Если массивЦФО.Количество()>0 Тогда
	СписокЦФО= Новый СписокЗначений;
	СписокЦФО.ЗагрузитьЗначения(массивЦФО);
	КонецЕсли;

	
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	// 2 Проекты
	ТЗдляПроекта.Свернуть("Проект");
	СписокПроектов = ТЗдляПроекта.ВыгрузитьКолонку("Проект");
	
	// 3 Объекты
	ТЗдляОбъекта.Свернуть("Аналитика_2");
	СписокОбъектов = ТЗдляОбъекта.ВыгрузитьКолонку("Аналитика_2");
	
	Результат = Новый Структура("СписокЦФО, СписокПроектов, СписокОбъектов", СписокЦФО, СписокПроектов, СписокОбъектов);
	
	Возврат Результат;
	
КонецФункции


// + БИТ AMerkulov 2014-06-24 /  Установка бюджетодержателя
Процедура УстановитьБюджетодержателя(Ссылка)Экспорт
	
	Если ЗначениеЗаполнено(Ссылка.ОК_ОЦР) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	бит_УстановленныеВизы.Объект,
		|	бит_УстановленныеВизы.Виза,
		|	бит_УстановленныеВизы.ИД,
		|	бит_УстановленныеВизы.Пользователь,
		|	бит_УстановленныеВизы.ФизическоеЛицо,
		|	бит_УстановленныеВизы.ДобавленаВручную,
		|	бит_УстановленныеВизы.ДатаУстановки,
		|	бит_УстановленныеВизы.КодСортировки,
		|	бит_УстановленныеВизы.Должность,
		|	бит_УстановленныеВизы.Комментарий,
		|	бит_УстановленныеВизы.Статус,
		|	бит_УстановленныеВизы.Решение,
		|	бит_УстановленныеВизы.Маршрут,
		|	бит_УстановленныеВизы.Алгоритм,
		|	бит_УстановленныеВизы.ТочкаАлгоритма,
		|	бит_УстановленныеВизы.ДатаКрайняя,
		|	бит_УстановленныеВизы.ВремяНаУстановку
		|ИЗ
		|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
		|ГДЕ
		|	бит_УстановленныеВизы.Объект = &Объект
		|	И бит_УстановленныеВизы.Виза = &Виза");
		
		Запрос.УстановитьПараметр("Объект", Ссылка);
		Запрос.УстановитьПараметр("Виза", Справочники.бит_Визы.бит_БК_Бюджетодержатель);
		
		//БИТ АКриштопов 10062016 ++
		ВыборкаЗаписи = Запрос.Выполнить().Выгрузить();
		Отбор = Новый Структура;
		Отбор.Вставить("ФизическоеЛицо", Ссылка.ОК_ОЦР);
		НайденныеСтроки = ВыборкаЗаписи.НайтиСтроки(Отбор);
		Если ВыборкаЗаписи.Количество() > 0 И НайденныеСтроки.Количество() = 0  Тогда
		//Если ВыборкаЗаписи.Следующий() И (Не ЗначениеЗаполнено(ВыборкаЗаписи.ФизическоеЛицо) ИЛИ ВыборкаЗаписи.ФизическоеЛицо <> Ссылка.ОК_ОЦР) Тогда  //БИТ АКриштопов 17052016 #2463
		
			Запись = РегистрыСведений.бит_УстановленныеВизы.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаЗаписи[0]);
			Запись.ФизическоеЛицо = Ссылка.ОК_ОЦР;
			Запись.Записать();
	
		КонецЕсли;
	Иначе
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	бит_УстановленныеВизы.Объект,
		|	бит_УстановленныеВизы.Виза,
		|	бит_УстановленныеВизы.ИД,
		|	бит_УстановленныеВизы.Пользователь,
		|	бит_УстановленныеВизы.ФизическоеЛицо,
		|	бит_УстановленныеВизы.ДобавленаВручную,
		|	бит_УстановленныеВизы.ДатаУстановки,
		|	бит_УстановленныеВизы.КодСортировки,
		|	бит_УстановленныеВизы.Должность,
		|	бит_УстановленныеВизы.Комментарий,
		|	бит_УстановленныеВизы.Статус,
		|	бит_УстановленныеВизы.Решение,
		|	бит_УстановленныеВизы.Маршрут,
		|	бит_УстановленныеВизы.Алгоритм,
		|	бит_УстановленныеВизы.ТочкаАлгоритма,
		|	бит_УстановленныеВизы.ДатаКрайняя,
		|	бит_УстановленныеВизы.ВремяНаУстановку
		|ИЗ
		|	РегистрСведений.бит_УстановленныеВизы КАК бит_УстановленныеВизы
		|ГДЕ
		|	бит_УстановленныеВизы.Объект = &Объект
		|	И бит_УстановленныеВизы.Виза = &Виза");
		
		Запрос.УстановитьПараметр("Объект", Ссылка);
		Запрос.УстановитьПараметр("Виза", Справочники.бит_Визы.бит_БК_Бюджетодержатель);
		
		//БИТ АКриштопов 10062016 ++
		ВыборкаЗаписи = Запрос.Выполнить().Выгрузить();
		Если ВыборкаЗаписи.Количество() > 0 Тогда
			//Если ВыборкаЗаписи.Следующий() И (Не ЗначениеЗаполнено(ВыборкаЗаписи.ФизическоеЛицо) ИЛИ ВыборкаЗаписи.ФизическоеЛицо <> Ссылка.ОК_ОЦР) Тогда  //БИТ АКриштопов 17052016 #2463
			
			Запись = РегистрыСведений.бит_УстановленныеВизы.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаЗаписи[0]);
			Запись.ФизическоеЛицо = Ссылка.ОК_ОЦР;
			Запись.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	


// БИТ_YK_н 01/16
Функция ВернутьКонтролирующуюСтатью(ДатаНачала, СтатьяОборотов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних.КонтролирующаяСтатья
	|ИЗ
	|	РегистрСведений.бит_БК_КонтролирующиеСтатьиОборотов.СрезПоследних(
	|			&ДатаНачала,
	|			КонтролируемаяСтатья = &КонтролируемаяСтатья
	|				И АктивностьСтроки) КАК бит_БК_КонтролирующиеСтатьиОборотовСрезПоследних";
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	Запрос.УстановитьПараметр("КонтролируемаяСтатья",СтатьяОборотов);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		КонтролирующаяСтатья = Выборка.КонтролирующаяСтатья;
	Иначе
		КонтролирующаяСтатья = СтатьяОборотов;
	КонецЕсли;
	Возврат КонтролирующаяСтатья;
КонецФункции
// - БИТ AMerkulov 2014-06-24 

//{ bit_SVKushnirenko 20.12.2016 #2657
//ИсходныйКод{
///+Сундукова 28.03.2016
//Процедура ОбновитьДанныеПоОстаткуБюджета(Объект) экспорт
//	Если не объект.проведен тогда
//		Если Объект.ВидОперации <> Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.ФинансовыйПлан Тогда 
//			объект.СверхБюджета = ложь;
//			//+Сундукова 31.03.16 - добавили два реквизита.
//			//бит_СуммаПревышающаяБюджет - нужен для отправки писем (там только сумма меньше нуля)
//			//бит_ИтогСуммаПоБюджету - нужен для подсчета итога по колонкам
//			объект.бит_СуммаПревышающаяБюджет = 0;
//			объект.бит_ИтогСуммаПоБюджету = 0;
//			//-Сундукова 31.03.16
//			// БИТ_YK_н 01/16
//			Если Объект.БДДС.Количество() > 0 Тогда
//				СписокПериодов  	 = Объект.БДДС.Выгрузить();
//				СписокОбъектов  	 = СписокПериодов.ВыгрузитьКолонку("Аналитика_2");
//				СписокЦФО 			 = СписокПериодов.ВыгрузитьКолонку("ЦФО");
//				СписокСтатей		 = СписокПериодов.ВыгрузитьКолонку("СтатьяОборотов");
//				СписокСценариевКонтр = СписокПериодов.выгрузитьКолонку("Сценарий");
//				СписокПериодов.Сортировать("Период Возр");
//				Если объект.ВидОперации =   Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный тогда
//					МинПериод = СписокПериодов[0].Период;  
//				иначе
//					МинПериод = НачалоГода(СписокПериодов[0].Период); 
//				КонецЕсли;
//				СписокСценарийБюджет = ПолучитьСоотвествиеСценариев(СписокПериодов);			
//				
//				Таблица = бит_БК_Общий.ПолучитьОстатокБюджетаПоАналитикам(СписокОбъектов, СписокЦФО, СписокСтатей, Объект.Ссылка, МинПериод,СписокСценарийБюджет,СписокСценариевКонтр,Объект.БДДС.Выгрузить());
//				
//				//Сундукова - разная обработка для разных сценариев
//				ТаблСценарий = Таблица.скопировать();
//				ТаблСценарий.свернуть("сценарий");
//				Для каждого СтрокаСценарий из ТаблСценарий цикл
//					Если СтрокаСценарий.сценарий = справочники.СценарииПланирования.Бюджет_Инвест или
//						СтрокаСценарий.сценарий = справочники.СценарииПланирования.Заявка_Инвест или
//						СтрокаСценарий.сценарий = справочники.СценарииПланирования.Контракт_Инвест тогда
//						КонтрольГод = истина;
//					иначе
//						КонтрольГод = ложь;
//					КонецЕсли;

//					СтруктураОтбора = Новый Структура;     
//					СтруктураОтбора.Вставить("сценарий", СтрокаСценарий.сценарий);									
//					ТаблСвернутаяБезСтатей = Таблица.скопировать(СтруктураОтбора);
//					если КонтрольГод тогда
//						ТаблСвернутаяБезСтатей.свернуть("Контролирующая,сценарий,Объект,Остаток,Период,ЦФО,проект");
//					иначе
//						ТаблСвернутаяБезСтатей.свернуть("Контролирующая,сценарий,Объект,Остаток,Период,ЦФО");
//					конецЕсли;
//					Для Каждого СтрокаТаб Из ТаблСвернутаяБезСтатей Цикл							
//						СтруктураОтбора = Новый Структура;     
//						СтруктураОтбора.Вставить("сценарий", СтрокаСценарий.сценарий);
//						СтруктураОтбора.Вставить("Контролирующая", СтрокаТаб.Контролирующая);				
//						СтруктураОтбора.Вставить("Объект", СтрокаТаб.Объект );				
//						СтруктураОтбора.Вставить("Период", СтрокаТаб.Период );
//						СтруктураОтбора.Вставить("ЦФО",     СтрокаТаб.ЦФО );
//						если КонтрольГод тогда
//							СтруктураОтбора.Вставить("проект",     СтрокаТаб.проект );
//						КонецЕсли;
//						ПолученныеСтроки = Таблица.НайтиСтроки(СтруктураОтбора);
//						
//						СуммаБезНДС = 0;				
//						СтруктураОтбора.Удалить("Объект");
//						СтруктураОтбора.Удалить("Контролирующая");
//						Если КонтрольГод тогда
//							СтруктураОтбора.Удалить("Период");
//						КонецЕсли;
//						
//						МассивСтрокТабЧасти = новый массив;
//						Для каждого ТекСтрока из ПолученныеСтроки цикл							
//							СтруктураОтбора.Вставить("Аналитика_2", СтрокаТаб.Объект);									
//							СтруктураОтбора.Вставить("СтатьяОборотов", ТекСтрока.СтатьяОборотов);				
//							
//							//{ bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
//							//+Сенин С.В. 13.11.2016 №2669
//							Если СтрокаСценарий.сценарий = справочники.СценарииПланирования.Контракт_Инвест Тогда
//								СтруктураОтбора.Вставить("ЦФО", ТекСтрока.ЦФО);				
//							КонецЕсли; 
//							//-Сенин С.В. 13.11.2016 №2669							
//							//} bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
//							
//							 СтрокиБДДС = Объект.БДДС.НайтиСтроки(СтруктураОтбора);					
//							Для каждого Стр из СтрокиБДДС Цикл
//								Если не КонтрольГод или (КонтрольГод и НачалоГода(Стр.Период) = СтрокаТаб.Период) тогда 
//									СуммаБезНДС = СуммаБезНДС + Стр.бит_БК_СуммаБезНДС;
//									МассивСтрокТабЧасти.Добавить(стр);
//									
//									//{ bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
//									//+Сенин С.В. 13.11.2016 №2669
//									ИначеЕсли КонтрольГод и СтрокаСценарий.сценарий = справочники.СценарииПланирования.Контракт_Инвест Тогда
//										СуммаБезНДС = СуммаБезНДС + Стр.бит_БК_СуммаБезНДС;
//										МассивСтрокТабЧасти.Добавить(стр);
//									//-Сенин С.В. 13.11.2016 №2669							
//									//} bit SVKushnirenko 01.12.2016 #Перенос кода SSenin
//									 
//								КонецЕсли;
//							КонецЦикла;
//						КонецЦикла;
//						ОстатокПоБюджету = СтрокаТаб.Остаток - СуммаБезНДС;
//						//+Сундукова 31.03.16
//						Если ОстатокПоБюджету < 0 Тогда
//							объект.бит_СуммаПревышающаяБюджет = объект.бит_СуммаПревышающаяБюджет+ОстатокПоБюджету;
//						КонецЕсли;
//						объект.бит_ИтогСуммаПоБюджету = объект.бит_ИтогСуммаПоБюджету+ОстатокПоБюджету;
//						//-Сундукова 31.03.16

//						Для каждого ТекСтрока из МассивСтрокТабЧасти цикл
//							ТекСтрока.ОстатокПоБюджету = ОстатокПоБюджету;							
//							Если ОстатокПоБюджету < 0 Тогда
//								ТекСтрока.БИТ_СуммаСверхБюджета = ТекСтрока.ОстатокПоБюджету * (-1);
//								ТекСтрока.бит_БК_ПревышениеБюджета = истина;
//								объект.СверхБюджета = истина;
//							Иначе
//								ТекСтрока.БИТ_СуммаСверхБюджета = 0;
//								ТекСтрока.бит_БК_ПревышениеБюджета = ложь;
//							КонецЕсли;
//						КонецЦикла;
//						//-Сундукова 25.03.2016
//					КонецЦикла;
//				КонецЦикла;
//			КонецЕсли;
//			// БИТ_YK_к
//		КонецЕсли;
//		
//	КонецЕсли;	
//КонецПроцедуры
//}ИсходныйКод
//} bit_SVKushnirenko 20.12.2016 #2657

//+Сундукова 21.04.16 №2362
//Функция ПолучитьСоотвествиеСценариев(СписокСценариев)
Функция ПолучитьСоотвествиеСценариев(СписокСценариев) экспорт
	//+Сундукова 21.04.16 №2362
	СписокСценариев.свернуть("Сценарий");
	МассивСценариев = новый массив;
	для каждого текСтрока из СписокСценариев цикл
		Если ТекСтрока.Сценарий = справочники.СценарииПланирования.Заявка_Инвест тогда
			СценарийСоотвествия = справочники.СценарииПланирования.Бюджет_Инвест;
		ИначеЕсли ТекСтрока.Сценарий = справочники.СценарииПланирования.Заявка_У тогда
			СценарийСоотвествия = справочники.СценарииПланирования.Бюджет_У;
		ИначеЕсли ТекСтрока.Сценарий = справочники.СценарииПланирования.Контракт_Инвест тогда
			СценарийСоотвествия = справочники.СценарииПланирования.Заявка_Инвест;
		КонецЕсли;
		МассивСценариев.Добавить(СценарийСоотвествия);
	КонецЦикла;
	возврат МассивСценариев;
КонецФункции

//--Сундукова 28.03.2016

//+Сенин С.В. 08.08.16 №2560
//
Функция ПечатьФВБ_ПолучитьТабличныйДокументПечатьСтроительство(Ссылка) Экспорт
	
	ВнешнийИсточник = бит_БК_Общий.ПолучитьВнешнийИсточникПоНаименованию(Ссылка, "Печать(заявка строительство)");
	
	ВнешняяОбработкаОбъект = бит_БК_Общий.ПолучитьОбъектВнешнейОбработки(ВнешнийИсточник, ложь);
	
	МассивОбъектов = новый Массив();
	МассивОбъектов.Добавить(Ссылка);
	
	табДок = ВнешняяОбработкаОбъект.СформироватьПечатнуюФорму(МассивОбъектов);
	
	Возврат табДок;
	
КонецФункции // ()
//-Сенин С.В. 08.08.16 №2560

//+Сенин С.В. 08.08.16 №2560
//
Функция ПечатьФВБ_ПолучитьТабличныйДокумент(Ссылка,АнглийскаяВерсия = Ложь) Экспорт //ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Добавил параметр АнглийскаяВерсия (#3499)

	//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Начало (#3499)
	//ВнешнийИсточник = бит_БК_Общий.ПолучитьВнешнийИсточникПоНаименованию(Ссылка, "Печать(заявка универсальная)");
	Если АнглийскаяВерсия Тогда 
		ВнешнийИсточник = бит_БК_Общий.ПолучитьВнешнийИсточникПоНаименованию(Ссылка, "Печать (заявка универсальная) eng");
	Иначе 
		ВнешнийИсточник = бит_БК_Общий.ПолучитьВнешнийИсточникПоНаименованию(Ссылка, "Печать(заявка универсальная)");
	КонецЕсли;	
	//ОКЕЙ Рычаков А.С.(СофтЛаб)2019-10-07 Конец (#3499)
		
	ВнешняяОбработкаОбъект = бит_БК_Общий.ПолучитьОбъектВнешнейОбработки(ВнешнийИсточник, ложь);
	
	МассивОбъектов = новый Массив();
		МассивОбъектов.Добавить(Ссылка);
		
	табДок = ВнешняяОбработкаОбъект.СформироватьПечатнуюФорму(МассивОбъектов);
	
	Возврат табДок;

КонецФункции // ()
//-Сенин С.В. 08.08.16 №2560

//+Сенин С.В. 11.08.16 №2521
Функция ПолучитьЗначениеРеквизита(объект, Реквизит) Экспорт
		
	Возврат объект[Реквизит];
	
КонецФункции
//-Сенин С.В. 11.08.16 №2521

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2017-11-08 (#2931)
&НаСервере
Функция ПолучитьСтруктуруКонтекстаДляПисьмаИнициатору(Ссылка, Шаблон) Экспорт
	
	СтруктураКонтекста = Новый Структура("ФизическоеЛицоОЦР,РешениеОЦР,ФизическоеЛицо,Решение,Пользователь,Получатель,ТипТекстаСообщения,Статус,Инициатор,ИнициаторEmail,Шаблон,Номер,Дата");
    СтруктураКонтекста.Вставить("Период"       	,ТекущаяДата());
    СтруктураКонтекста.Вставить("ТекущийОбъект"	,Ссылка);         				
	СтруктураКонтекста.Вставить("Шаблон"		,Шаблон);
			
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"	,	Ссылка);
	Запрос.УстановитьПараметр("Шаблон"	,	Шаблон);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФВБ_БДДС.Ссылка КАК Документ,
	|	бит_фн_ШаблоныСообщений.ТипТекстаСообщения КАК ТипТекстаСообщения,
	|	ФВБ_БДДС.Ссылка.Дата КАК Дата,
	|	ФВБ_БДДС.Ссылка.бит_БК_Инициатор КАК Инициатор,
	|	ФВБ_БДДС.Ссылка.бит_БК_Инициатор.Email КАК ИнициаторEmail,
	|	ФВБ_БДДС.Аналитика_2.Наименование КАК Аналитика_2,
	|	ФВБ_БДДС.Ссылка.Номер КАК Номер,
	|	ЕСТЬNULL(бит_СтатусыОбъектов.Статус, ЗНАЧЕНИЕ(Справочник.бит_СтатусыОбъектов.ПустаяСсылка)) КАК Статус,
	|	ФВБ_БДДС.Ссылка.бит_БК_Инициатор.Пользователь КАК Пользователь,
	|	ФВБ_БДДС.Ссылка.бит_БК_Инициатор.Пользователь КАК Получатель,
	|	ЕСТЬNULL(УстановленныеВизы_ОЦР.Решение, ЗНАЧЕНИЕ(Справочник.бит_ВидыРешенийСогласования.ПустаяСсылка)) КАК РешениеОЦР,
	|	ЕСТЬNULL(УстановленныеВизы_ОЦР.ФизическоеЛицо, ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)) КАК ФизическоеЛицоОЦР,
	|	ЕСТЬNULL(УстановленныеВизы_ФК.ФизическоеЛицо, ЗНАЧЕНИЕ(Справочник.бит_БК_Инициаторы.ПустаяСсылка)) КАК ФизическоеЛицо,
	|	ЕСТЬNULL(УстановленныеВизы_ФК.Решение, ЗНАЧЕНИЕ(Справочник.бит_ВидыРешенийСогласования.ПустаяСсылка)) КАК Решение
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК ФВБ_БДДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_фн_ШаблоныСообщений КАК бит_фн_ШаблоныСообщений
	|		ПО (бит_фн_ШаблоныСообщений.Ссылка = &Шаблон)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СтатусыОбъектов КАК бит_СтатусыОбъектов
	|		ПО ФВБ_БДДС.Ссылка = бит_СтатусыОбъектов.Объект
	|			И (бит_СтатусыОбъектов.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_УстановленныеВизы КАК УстановленныеВизы_ОЦР
	|		ПО ФВБ_БДДС.Ссылка = УстановленныеВизы_ОЦР.Объект
	|			И (УстановленныеВизы_ОЦР.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_Бюджетодержатель))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_УстановленныеВизы КАК УстановленныеВизы_ФК
	|		ПО ФВБ_БДДС.Ссылка = УстановленныеВизы_ФК.Объект
	|			И (УстановленныеВизы_ФК.Виза = ЗНАЧЕНИЕ(Справочник.бит_Визы.бит_БК_ФинКонтролер))
	|ГДЕ
	|	ФВБ_БДДС.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Аналитика_2
	|ИТОГИ
	|	МАКСИМУМ(ТипТекстаСообщения),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Инициатор),
	|	МАКСИМУМ(ИнициаторEmail),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Статус),
	|	МАКСИМУМ(Пользователь),
	|	МАКСИМУМ(Получатель),
	|	МАКСИМУМ(РешениеОЦР),
	|	МАКСИМУМ(ФизическоеЛицоОЦР),
	|	МАКСИМУМ(ФизическоеЛицо),
	|	МАКСИМУМ(Решение)
	|ПО
	|	Документ
	//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-03 (#3853)
	|	,Аналитика_2
	//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-03 (#3853) 
	|";
	
	ВыборкаШапка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	ВыборкаШапка.Следующий();
	
	ЗаполнитьЗначенияСвойств(СтруктураКонтекста, ВыборкаШапка);
	
	СтруктураКонтекста.Вставить("ДатаДокумента"		,Формат(ВыборкаШапка.Дата,"ДФ=dd.MM.yyyy"));
	
	Если ВРЕГ(Лев(Ссылка.Номер,1)) = "W" Тогда 	
		СтруктураКонтекста.Вставить("ТелоНомер", "Служебный код:      "+ВыборкаШапка.Номер);
		СтруктураКонтекста.Вставить("ЗаголовокНомер", "");
	Иначе 
		СтруктураКонтекста.Вставить("ТелоНомер", "");
		СтруктураКонтекста.Вставить("ЗаголовокНомер", " № "+ВыборкаШапка.Номер);
	КонецЕсли; 
	
	//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-03 (#3853)
	//ВыборкаДетали = ВыборкаШапка.Выбрать();
	ВыборкаДетали = ВыборкаШапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-03 (#3853)
	СтрокаАналитика_2 = "";
	Пока ВыборкаДетали.Следующий() Цикл 
		СтрокаАналитика_2 = СтрокаАналитика_2 + ВыборкаДетали.Аналитика_2 + ", ";
	КонецЦикла;
	СтрокаАналитика_2 = Сред(СтрокаАналитика_2,1,СтрДлина(СтрокаАналитика_2) - 2);
	СтруктураКонтекста.Вставить("Аналитика_2",СтрокаАналитика_2);
			
	ДополнитьСтруктураКонтекстаПисьма(Ссылка,СтруктураКонтекста);
				
	Возврат СтруктураКонтекста;

	
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2017-11-08 (#2931)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-01-31 (#2975)
Функция ОтправитьПисьмоАдресату(Ссылка, Отправитель, Получатели, ИдентификаторЗаписи) Экспорт
	
	пРезультат = Новый Структура;
	пРезультат.Вставить("ОтправкаОсуществлена"	,	Истина);
	
	пОшибки = Новый Массив;
	РежимыВывода = бит_ОбщегоНазначения.ОпределитьРежимыВывода("Нет");			
	
    КэшАдресов = Новый ТаблицаЗначений;
    КэшАдресов.Колонки.Добавить("Получатель"             ,Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
    КэшАдресов.Колонки.Добавить("ВидКонтактнойИнформации");
    КэшАдресов.Колонки.Добавить("Адрес"                  );

    КэшАдресов.Индексы.Добавить("Получатель,ВидКонтактнойИнформации");       
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бит_БК_Инициаторы.Ссылка КАК Получатель,
	|	бит_БК_Инициаторы.Email КАК Адрес
	|ИЗ
	|	Справочник.бит_БК_Инициаторы КАК бит_БК_Инициаторы
	|ГДЕ
	|	бит_БК_Инициаторы.Ссылка В(&Получатели)";
	
	Запрос.УстановитьПараметр("Получатели", Получатели);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 
		пРезультат.Вставить("ОтправкаОсуществлена"	,	Ложь);
		пОшибки.Добавить(НСтр("ru = 'Не найдены получатели писем'"));
		пРезультат.Вставить("Ошибки"				, пОшибки);		
		Возврат пРезультат;
	КонецЕсли;
	
	СписокПолучателейСАдресами = РезультатЗапроса.Выгрузить();
	
	пАдреса = "";
	
	Для Каждого пПолучатель Из Получатели Цикл 
		
		НайденнаяСтрока = СписокПолучателейСАдресами.Найти(пПолучатель.Значение);
		Если НайденнаяСтрока = Неопределено ИЛИ
			 ПустаяСтрока(НайденнаяСтрока.Адрес)
		Тогда 
			ТекстСообщения = НСтр("ru = 'Не удалось получить адрес для получателя ""%1%""!'");
			ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения,Строка(пПолучатель.Значение));																									
			пОшибки.Добавить(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		СтрокаКэша = КэшАдресов.Добавить();
		СтрокаКэша.Получатель = пПолучатель.Значение;
		СтрокаКэша.Адрес 	  = НайденнаяСтрока.Адрес;
		
		пАдреса = пАдреса + ";" + СтрокаКэша.Адрес;
		
	КонецЦикла;
	
	пРезультат.Вставить("Адреса", Сред(пАдреса,2));
	
	Шаблон	= Справочники.бит_фн_ШаблоныСообщений.бит_БК_ШаблонЗаявкиОпер;
	
	Если Ссылка.ВидОперации = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный Тогда  
		Шаблон	= Справочники.бит_фн_ШаблоныСообщений.бит_БК_ШаблонЗаявкиИнвестСтрой;
	КонецЕсли;
		
    СтруктураКонтекста = ПолучитьСтруктуруКонтекстаДляПисьмаИнициатору(Ссылка,Шаблон);
	
	СтруктураКонтекста.Вставить("Получатель"				, Получатели);
	                                                                 
    СтруктураКонтекста.Вставить("НеПроверятьНаличиеЗаписи"  , Истина);
	
	СтруктураКонтекста.Вставить("ИдентификаторЗаписи"		, ИдентификаторЗаписи);
	                                                    	
	СтруктураКонтекста.Вставить("Пользователь"				, Отправитель);
	
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление (
	//Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.ЗаписатьОповещение(Неопределено
	Обработки.бит_фн_ОбработкаЗаписейРегистрацииОповещений.СформироватьИЗаписатьСообщение(Неопределено
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление )
    									   ,СтруктураКонтекста.Шаблон
    									   ,СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("НастройкаДоставки_ДляОтправкиПисемИзТонкойФормыФВБ")
    									   ,СтруктураКонтекста
    									   ,КэшАдресов
    									   ,РежимыВывода.ВыводитьОшибки
										   ,пОшибки);
										   
										   
 	пРезультат.Вставить("Ошибки"	,	пОшибки);
	
	Возврат пРезультат;
	
КонецФункции

//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-01-31 (#2975)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-05-07 (#2971)
Функция ПолучитьТабДокументВложения(ДокументСсылка) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка"		, ДокументСсылка);
	Запрос.УстановитьПараметр("СписокЦФО"			, бит_БК_Общий.ПолучитьЗначениеНастройкиБК("Визирование","Список ЦФО для печати формы ""Строительство""",Новый СписокЗначений));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Подразделения.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ0_ЦФО
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	Подразделения.Ссылка В(&СписокЦФО)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_ФормаВводаБюджетаБДДС.ЦФО КАК ЦФО
	|ИЗ
	|	Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ0_ЦФО КАК ВТ0_ЦФО
	|		ПО бит_ФормаВводаБюджетаБДДС.ЦФО = ВТ0_ЦФО.Ссылка
	|			И (бит_ФормаВводаБюджетаБДДС.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный))
	|ГДЕ
	|	бит_ФормаВводаБюджетаБДДС.Ссылка В(&Ссылка)
	|	И ВТ0_ЦФО.Ссылка ЕСТЬ NULL";	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат бит_ФормаВводаБюджетаВызовСервера.ПечатьФВБ_ПолучитьТабличныйДокументПечатьСтроительство(ДокументСсылка);		
	Иначе
		Возврат бит_ФормаВводаБюджетаВызовСервера.ПечатьФВБ_ПолучитьТабличныйДокумент(ДокументСсылка);   					
	КонецЕсли; 	
				
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-05-07 (#2971)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-11-19 (#3102)
Функция ПолучитьВидОперацииФВБ(ФВБ) Экспорт
	Возврат ФВБ.ВидОперации;
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-11-19 (#3102)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-12-05 (#3567)
Функция ОпределитьПризнакПерезаполненияОстатков(ФВБ) Экспорт
	
	Результат = Ложь;
	
	// Получим алгоритм визирования, если необходимо.
	РезАлгоритмы        = бит_уп_Сервер.ПолучитьАлгоритмыОбъектаСистемы(ФВБ, ПредопределенноеЗначение("Перечисление.бит_уп_ВидыАлгоритмов.Визирование")); 
	Если ТипЗнч(РезАлгоритмы.Визирование) = Тип("Массив") Тогда
		АлгоритмВизирования      = РезАлгоритмы.Визирование[0];
	Иначе	
		АлгоритмВизирования      = РезАлгоритмы.Визирование;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(АлгоритмВизирования) Тогда 
		Возврат Результат;
	КонецЕсли;
	      	      	
	мСтрокСПараметром = АлгоритмВизирования.ПараметрыАлгоритма.НайтиСтроки(Новый Структура("Имя", "ПерезаполнятьОстаткиДокумента"));
	Если мСтрокСПараметром.Количество()>0 И
		 мСтрокСПараметром[0].ЗначениеПоУмолчанию = Истина
	Тогда 
		Результат = Истина;
	КонецЕсли;		
	
	Возврат Результат;
	
КонецФункции
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-12-05 (#3567)
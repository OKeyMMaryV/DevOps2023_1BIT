
#Область СлужебныйПрограммныйИнтерфейс

// Процедура управляет доступностью формы в зависимости от установленных дат запрета редактирования.
// 
// Параметры:
//  ТекущаяФорма  - УправляемаяФорма - форма объекта
//  ТекущийОбъект - ДанныеФормыСтруктура - основной реквизит формы.
// 
Процедура УстановитьДоступностьФормыОбъекта(ТекущаяФорма, ТекущийОбъект) Экспорт
	
	МетаОбъект = ТекущийОбъект.Ссылка.Метаданные();
	
	Если ПропуститьПроверкуДатыЗапрета(МетаОбъект, ТекущаяФорма) Тогда
		Возврат;
	КонецЕсли;
	
	ЗапретРедактирования = ВыполнитьПроверкуДатыЗапретаРедактирования(МетаОбъект, ТекущийОбъект);
	
	ТекущаяФорма.ТолькоПросмотр = ЗапретРедактирования;
	
КонецПроцедуры

// Инициирует проверку даты запрета перед записью документа, вызывается из подписки на событие.
// 
// Параметры:
// 	Источник - ДокументОбъект
// 	Отказ - булево
// 	РежимЗаписи - РежимЗаписиДокумента
// 	РежимПроведения.
// 
Процедура ПроверитьДатыЗапретаРедактированияПередЗаписьюДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ИсточникМета = Источник.Метаданные();
	
	Если ПропуститьПроверкуДатыЗапрета(ИсточникМета, Источник, РежимЗаписи) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = ВыполнитьПроверкуДатыЗапретаРедактирования(ИсточникМета, Источник);
	
КонецПроцедуры

// Выполняет проверку даты запрета редактирования.
// 
// Параметры:
// 	МетаДокОбъект - ОбъектМетаданных: Документ - метаданные документа по которому производится проверка.
// 	ДокОбъект - ДокументОбъект, ДанныеФормыСтруктура - документ.
// 	РежимСообщений - Строка - выводить или нет сообщения об ошибках.
// 
// Возвращаемое значение:
// 	Отказ - булево - Истина - документ попадает в закрытый период, его редактирование запрещено.
// 
Функция ВыполнитьПроверкуДатыЗапретаРедактирования(МетаДокОбъект, ДокОбъект, РежимСообщений = "Ошибки") Экспорт 
	
	// Флаг отказа редактирования документа в текущем периоде.
	Отказ = Ложь;
	
	ВыводитьОшибки = ?(РежимСообщений="Все" ИЛИ РежимСообщений="Ошибки",Истина,Ложь);
	
	ТекущийПользователь = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
	
	Если НЕ ЗначениеЗаполнено(ТекущийПользователь) Тогда
		Отказ = Истина;
		
		Если ВыводитьОшибки Тогда
			ТекстСообщения = НСтр("ru='Текущий пользователь не авторизован.'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,,Отказ);
		КонецЕсли; 
	КонецЕсли;
	
	ОбъектСистемы = бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(МетаДокОбъект);
	
	Если НЕ ЗначениеЗаполнено(ОбъектСистемы) Тогда
		Отказ = Истина;
		
		Если ВыводитьОшибки Тогда
			ТекстСообщения = НСтр("ru='Не найден объект системы, соответствующий текущему документу. Обновите объекты системы в справочнике ""Объекты системы""'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,,Отказ);
		КонецЕсли; 
	КонецЕсли;
	
	Если Отказ Тогда
		Если ВыводитьОшибки Тогда
			ТекстСообщения = НСтр("ru='Невозможно выполнить проверку даты запрета редактирования!'");
			бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		КонецЕсли;
		
		Возврат Отказ;
	КонецЕсли;	
	
	// Получим данные документа для проверки
	ДанныеДокумента = ПолучитьТаблицуДанныхПоДокументу(МетаДокОбъект, ДокОбъект, ОбъектСистемы);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Данные"		   , ДанныеДокумента);
	Запрос.УстановитьПараметр("Пользователь"   , ТекущийПользователь);
	Запрос.УстановитьПараметр("ОбъектСистемы"  , ОбъектСистемы);
	Запрос.УстановитьПараметр("ВсеПользователи", Справочники.ГруппыПользователей.ВсеПользователи);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Данные.Организация,
	|	Данные.Дата,
	|	Данные.КлючСтроки
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	&Данные КАК Данные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_ДатыЗапретаРедактирования.Организация,
	|	бит_ДатыЗапретаРедактирования.Пользователь,
	|	бит_ДатыЗапретаРедактирования.ОбъектСистемы,
	|	бит_ДатыЗапретаРедактирования.ДатаЗапрета,
	|	ВЫБОР
	|		КОГДА бит_ДатыЗапретаРедактирования.Организация В (Данные.Организация)
	|			ТОГДА 9
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА бит_ДатыЗапретаРедактирования.Пользователь = &Пользователь
	|			ТОГДА 99
	|		КОГДА ТИПЗНАЧЕНИЯ(бит_ДатыЗапретаРедактирования.Пользователь) = ТИП(Справочник.ГруппыПользователей)
	|			ТОГДА 11
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА бит_ДатыЗапретаРедактирования.ОбъектСистемы = &ОбъектСистемы
	|			ТОГДА 999
	|		КОГДА ТИПЗНАЧЕНИЯ(бит_ДатыЗапретаРедактирования.ОбъектСистемы) = ТИП(Справочник.бит_ГруппыОбъектовСистемы)
	|			ТОГДА 100
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Приоритет,
	|	Данные.КлючСтроки,
	|	Данные.Дата
	|ПОМЕСТИТЬ ДатыЗапрета
	|ИЗ
	|	Данные КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДатыЗапретаРедактирования КАК бит_ДатыЗапретаРедактирования
	|		ПО (бит_ДатыЗапретаРедактирования.Организация В (Данные.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)))
	|ГДЕ
	|	бит_ДатыЗапретаРедактирования.Пользователь В
	// Изменение кода. Начало. 03.06.2013{{
	|"
		+ ?(Метаданные.РегистрыСведений.Найти("СоставыГруппПользователей") <> Неопределено, "
		|			(ВЫБРАТЬ СоставыГруппПользователей.ГруппаПользователей КАК Пользователь
		|			 ИЗ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
		|			 ГДЕ СоставыГруппПользователей.Пользователь = &Пользователь
		|", "
		|			(ВЫБРАТЬ СоставыГруппПользователей.Ссылка КАК Пользователь
		|			 ИЗ Справочник.ГруппыПользователей.ПользователиГруппы КАК СоставыГруппПользователей
		|			 ГДЕ СоставыГруппПользователей.Пользователь = &Пользователь
		|
		// Дата запрета редактирования для группы ВсеПользователи.
		|			ОБЪЕДИНИТЬ ВСЕ		
		|			ВЫБРАТЬ
		|				&ВсеПользователи
		|
		|			ОБЪЕДИНИТЬ ВСЕ		
		|			ВЫБРАТЬ
		|				&Пользователь
		|")
	+ "
	// Изменение кода. Конец. 03.06.2013}}
	|		
	|			ОБЪЕДИНИТЬ ВСЕ		
	|			ВЫБРАТЬ
	|				НЕОПРЕДЕЛЕНО
	|		
	|			ОБЪЕДИНИТЬ ВСЕ		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|		
	|			ОБЪЕДИНИТЬ ВСЕ		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.ГруппыПользователей.ПустаяСсылка))
	|	И бит_ДатыЗапретаРедактирования.ОбъектСистемы В
	|			(ВЫБРАТЬ
	|				бит_ГруппыОбъектовСистемыОбъектыСистемы.Ссылка КАК ОбъектСистемы
	|			ИЗ
	|				Справочник.бит_ГруппыОбъектовСистемы.ОбъектыСистемы КАК бит_ГруппыОбъектовСистемыОбъектыСистемы
	|			ГДЕ
	|				бит_ГруппыОбъектовСистемыОбъектыСистемы.ОбъектСистемы = &ОбъектСистемы
	|			СГРУППИРОВАТЬ ПО
	|						бит_ГруппыОбъектовСистемыОбъектыСистемы.Ссылка
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				НЕОПРЕДЕЛЕНО
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				&ОбъектСистемы
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.бит_ОбъектыСистемы.ПустаяСсылка)
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.бит_ГруппыОбъектовСистемы.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыЗапрета.КлючСтроки,
	|	МАКСИМУМ(ДатыЗапрета.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ МаксимальныеПриоритеты
	|ИЗ
	|	ДатыЗапрета КАК ДатыЗапрета
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыЗапрета.КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ДатыЗапрета.ДатаЗапрета) КАК ДатаЗапрета,
	|	МаксимальныеПриоритеты.КлючСтроки,
	|	МаксимальныеПриоритеты.Приоритет
	|ПОМЕСТИТЬ МинимальныеДатыЗапрета
	|ИЗ
	|	МаксимальныеПриоритеты КАК МаксимальныеПриоритеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыЗапрета КАК ДатыЗапрета
	|		ПО МаксимальныеПриоритеты.КлючСтроки = ДатыЗапрета.КлючСтроки
	|			И МаксимальныеПриоритеты.Приоритет = ДатыЗапрета.Приоритет
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеПриоритеты.КлючСтроки,
	|	МаксимальныеПриоритеты.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МинимальныеДатыЗапрета.КлючСтроки,
	|	ДатыЗапрета.Организация,
	|	ДатыЗапрета.Пользователь,
	|	ДатыЗапрета.ОбъектСистемы,
	|	МинимальныеДатыЗапрета.ДатаЗапрета,
	|	МинимальныеДатыЗапрета.Приоритет,
	|	ДатыЗапрета.Дата
	|ИЗ
	|	МинимальныеДатыЗапрета КАК МинимальныеДатыЗапрета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыЗапрета КАК ДатыЗапрета
	|		ПО МинимальныеДатыЗапрета.КлючСтроки = ДатыЗапрета.КлючСтроки
	|			И МинимальныеДатыЗапрета.Приоритет = ДатыЗапрета.Приоритет
	|			И МинимальныеДатыЗапрета.ДатаЗапрета = ДатыЗапрета.ДатаЗапрета";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Отказ Тогда
			Прервать;
		КонецЕсли;
		
		Если Выборка.Дата <= КонецДня(Выборка.ДатаЗапрета) Тогда
			
			Отказ = Истина;
			
			Если ЗначениеЗаполнено(Выборка.Организация) Тогда
				ТекстОрганизация = НСтр("ru='по организации ""%1%""'");
				ТекстОрганизация = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстОрганизация,Выборка.Организация);
			Иначе
				ТекстОрганизация = НСтр("ru='по всем организациям'");
			КонецЕсли;
			
			Если ТипЗнч(Выборка.Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
				ТекстПользователь = НСтр("ru='для пользователя ""%1%""'");
			Иначе
				ТекстПользователь = НСтр("ru='для группы пользователей ""%1%""'");
			КонецЕсли;
			ТекстПользователь = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстПользователь,Выборка.Пользователь);
			
			Если НЕ ЗначениеЗаполнено(Выборка.ОбъектСистемы) Тогда
				ТекстОбъектСистемы = НСтр("ru='на все документы'");
			ИначеЕсли ЗначениеЗаполнено(Выборка.ОбъектСистемы)
				И ТипЗнч(Выборка.ОбъектСистемы) = Тип("СправочникСсылка.бит_ГруппыОбъектовСистемы") Тогда	
				ТекстОбъектСистемы = НСтр("ru='на группу объектов ""%1%""'");
				ТекстОбъектСистемы = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстОбъектСистемы,Выборка.ОбъектСистемы);
			Иначе
				ТекстОбъектСистемы = НСтр("ru='на документы ""%1%""'");
				ТекстОбъектСистемы = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстОбъектСистемы,Выборка.ОбъектСистемы);
			КонецЕсли;
			
			ТекстСообщения = НСтр("ru='Редактирование данных этого периода запрещено: Запрет установлен %1% %2% %3% по %4% (включительно)'");
			ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения
																						,ТекстОбъектСистемы
																						,ТекстОрганизация
																						,ТекстПользователь
																						,Формат(Выборка.ДатаЗапрета,"ДФ=dd.MM.yyyy"));
																						
			Если ВыводитьОшибки Тогда
				бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения,,,Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

// Функция определяет необходимость выполнения проверки даты запрета редактирования.
// 
// Параметры:
// 	МетаИсточник - ОбъектМетаданных: Документ - метаданные документа по которому производится проверка.
// 	Источник - УправляемаяФорма, ДокументОбъект - объект- инициатор проверки.
// 	РежимЗаписи - Неопределено, РежимЗаписиДокумента.
// 
// Возвращаемое значение:
// 	ПропуститьПроверку - булево.
// 
Функция ПропуститьПроверкуДатыЗапрета(МетаОбъект, Источник, РежимЗаписи=Неопределено) Экспорт 
	
	ПропуститьПроверку = Ложь;
	
	// Проверке подлежат только документы
	Если НЕ бит_РаботаСМетаданными.ОбъектПринадлежитКоллекцииМетаданных("Документы", МетаОбъект.Имя) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Наличие записей в регистре включает механизм даты запрета редактирования.
	Если НЕ НастройкаЗапретаРедактированияВыполнена() Тогда
		ПропуститьПроверку = Истина;
	КонецЕсли;
	
	// Документ не является регистратором каких-либо регистров.
	Если МетаОбъект.Движения.Количество() = 0
		И МетаОбъект.Проведение = Метаданные.СвойстваОбъектов.Проведение.Запретить Тогда
		
		ПропуститьПроверку = Истина;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("УправляемаяФорма") Тогда
		
		//ижтиси, шадрин, 11.08.2015(
		Если ТипЗнч(Источник.Параметры.Ключ) = Тип("ДокументСсылка.бит_ОперацияУправленческий") Тогда
			Если МетаОбъект.Реквизиты.Найти("РегистрБухгалтерии") <> Неопределено Тогда
				Если Источник.Параметры.Ключ.РегистрБухгалтерии <> Справочники.бит_ОбъектыСистемы.НайтиПоКоду("000001024") Тогда
					ПропуститьПроверку = Истина;
				КонецЕсли;
			Иначе
				ПропуститьПроверку = Истина;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Источник.Параметры.Ключ) = Тип("ДокументСсылка.бит_ПереоценкаВалютныхДенежныхСтатей") Тогда
			
			Если Источник.Параметры.Ключ.ОбъектСистемы <> Справочники.бит_ОбъектыСистемы.НайтиПоКоду("000001024") Тогда
				ПропуститьПроверку = Истина;
			КонецЕсли;				
			
		КонецЕсли;
		//ижтиси, шадрин, 11.08.2015)
		
		// Лазейка для программного изменения документов.
		Если Источник.Параметры.Свойство("бит_НеПроверятьДатыЗапретаРедактирования") Тогда
			ПропуститьПроверку = Истина;
		КонецЕсли;
		
		// Открылась форма нового документа
		Если Источник.Параметры.Ключ.Пустая() Тогда
			ПропуститьПроверку = Истина;
		КонецЕсли;
		
		// Документ не проведен
		Если МетаОбъект.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить
			И НЕ Источник.Параметры.Ключ.Проведен Тогда
			
			ПропуститьПроверку = Истина;
		КонецЕсли;
		
	Иначе	
		
		//ижтиси, шадрин, 11.08.2015(
		Если ТипЗнч(Источник) = Тип("ДокументСсылка.бит_ОперацияУправленческий") Тогда
			Если МетаОбъект.Реквизиты.Найти("РегистрБухгалтерии") <> Неопределено Тогда
				Если Источник.РегистрБухгалтерии <> Справочники.бит_ОбъектыСистемы.НайтиПоКоду("000001024") Тогда
					ПропуститьПроверку = Истина;
				КонецЕсли;
			Иначе
				ПропуститьПроверку = Истина;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументСсылка.бит_ПереоценкаВалютныхДенежныхСтатей") Тогда
			
			Если Источник.ОбъектСистемы <> Справочники.бит_ОбъектыСистемы.НайтиПоКоду("000001024") Тогда
				ПропуститьПроверку = Истина;
			КонецЕсли;				
			
		КонецЕсли;
		//ижтиси, шадрин, 11.08.2015)		
		
		// При обмене данными не выполняем проверку
		Если Источник.ОбменДанными.Загрузка Тогда
			ПропуститьПроверку = Истина;
		КонецЕсли;
		
		// Лазейка для программного изменения документов.
		Если Источник.ДополнительныеСвойства.Свойство("бит_НеПроверятьДатыЗапретаРедактирования") Тогда
			ПропуститьПроверку = Истина;
		КонецЕсли;
		
		// Не позволяем выполнять запись проведенного документа без перепроведения.
		Если МетаОбъект.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить
			И РежимЗаписи = РежимЗаписиДокумента.Запись
			И НЕ Источник.Проведен Тогда
			
			ПропуститьПроверку = Истина;
		КонецЕсли;
		
	КонецЕсли;

	Возврат ПропуститьПроверку;
	
КонецФункции

// Процедура - обработчик подписки "бит_ДатаЗапретаРедактированияПередЗаписьюДокумента".
// 
Процедура бит_ДатаЗапретаРедактированияПередЗаписьюДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
    	Возврат;
	КонецЕсли;
	
	Если бит_ОбщиеПеременныеСервер.ЗначениеПеременной("бит_ЭтоЧужойПодчиненныйУзел") = Истина Тогда
		Возврат;
	КонецЕсли; 			
	
	ПроверитьДатыЗапретаРедактированияПередЗаписьюДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция проверяет наличие записей в регистре бит_ДатыЗапретаРедактирования.
// 
// Параметры:
// 	нет
// 
// Возвращаемое значение:
// 	НастройкаВыполнена - булево - Истина - регистр заполнен.
// 
Функция НастройкаЗапретаРедактированияВыполнена()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	бит_ДатыЗапретаРедактирования.ДатаЗапрета
	|ИЗ
	|	РегистрСведений.бит_ДатыЗапретаРедактирования КАК бит_ДатыЗапретаРедактирования";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		НастройкаВыполнена = Ложь;
	Иначе
		НастройкаВыполнена = Истина;
	КонецЕсли;
	
	Возврат НастройкаВыполнена;
	
КонецФункции

// Получает таблицу значений реквизитов объекта, влияющих на проверку.
// 
// Параметры:
// 	МетаИсточник - ОбъектМетаданных: Документ - метаданные документа по которому производится проверка.
// 	Источник - ДокументОбъект, ДанныеФормыСтруктура - документ.
// 	ОбъектСистемы - СправочникСсылка.бит_ОбъектыСистемы.
// 
// Возвращаемое значение:
// 	Данные - ТаблицаЗначений.
// 	
Функция ПолучитьТаблицуДанныхПоДокументу(МетаИсточник, Источник, ОбъектСистемы)
	
	Данные = Новый ТаблицаЗначений;
	Данные.Колонки.Добавить("КлючСтроки"	, Новый ОписаниеТипов("Число"));
	Данные.Колонки.Добавить("Дата"			, Новый ОписаниеТипов("Дата"));
	Данные.Колонки.Добавить("Организация"	, Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	ИмяРеквизитаДата = ПолучитьИмяРеквизитаДатаДокумента(ОбъектСистемы.ИмяОбъектаПолное);
	ЕстьОрганизация = бит_РаботаСМетаданными.ЕстьРеквизит("Организация", МетаИсточник);
	
	ЗаписываемыеДокументы = Новый Соответствие;
	ЗаписываемыеДокументы.Вставить("ОперацияБух", Истина);
	ЗаписываемыеДокументы.Вставить("бит_ОперацияБюджетирование",Истина);
	ЗаписываемыеДокументы.Вставить("бит_ОперацияУправленческий", Истина);
	
	// Параметры документа до изменения
	Если ЗначениеЗаполнено(Источник.Ссылка) И (Источник.Ссылка.Проведен ИЛИ ЗаписываемыеДокументы[МетаИсточник.Имя] = Истина) Тогда 
		// Если документ не проведен, нет смысла проверять предыдущие значения реквизитов.
		
		НоваяСтрока = Данные.Добавить();
		НоваяСтрока.Дата = Источник.Ссылка[ИмяРеквизитаДата];
		Если ЕстьОрганизация Тогда
			НоваяСтрока.Организация = Источник.Ссылка.Организация;
		КонецЕсли;
		
	КонецЕсли;
	
	// Параметры документа после изменения
	НоваяСтрока = Данные.Добавить();
	НоваяСтрока.Дата = Источник[ИмяРеквизитаДата];
	Если ЕстьОрганизация Тогда
		НоваяСтрока.Организация = Источник.Организация;
	КонецЕсли;
	
	Данные.Свернуть("КлючСтроки,Дата,Организация");
	
	Для ном=0 по Данные.Количество()-1 Цикл
		Данные[Ном].КлючСтроки = Ном;
	КонецЦикла;
	
	Возврат Данные;
	
КонецФункции

// Функция получает имя реквизита в котором содержится дата документа.
// 
// Параметры:
// 	ИмяОбъекта - Строка - полное имя объекта из справочника бит_ОбъектыСистемы.
// 
// Возвращаемое значение:
// 	ИмяРеквизита - Строка.
// 
Функция ПолучитьИмяРеквизитаДатаДокумента(ИмяОбъекта)
	
	СоответствиеИмен = Новый Соответствие;
	СоответствиеИмен.Вставить("Документ.бит_ЗаявкаНаРасходованиеСредствОбщая"		, "ДатаРасхода");
	СоответствиеИмен.Вставить("Документ.бит_ЗаявкаНаРасходованиеСредств"			, "ДатаРасхода");
	СоответствиеИмен.Вставить("Документ.бит_ПлатежнаяПозиция"						, "ДатаРасхода");
	СоответствиеИмен.Вставить("Документ.бит_ЗаявкаНаЗатраты"						, "ДатаРасхода");
	СоответствиеИмен.Вставить("Документ.бит_РасходнаяПозиция"						, "ДатаРасхода");
	СоответствиеИмен.Вставить("Документ.бит_ПланируемоеПоступлениеДенежныхСредств"	, "ДатаПоступления");
	
	ИмяРеквизита = СоответствиеИмен[ИмяОбъекта];
	
	Если ИмяРеквизита = Неопределено Тогда
		ИмяРеквизита = "Дата";
	КонецЕсли;
	
	Возврат ИмяРеквизита;
	
КонецФункции

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-01-06 (#3558)
// Выполняет поиск последней даты запрета по параметрам
// 
// Параметры:
// 	МетаДокОбъект - ОбъектМетаданных: Документ - метаданные документа по которому производится проверка.
// 	ДокОбъект - ДокументОбъект, ДанныеФормыСтруктура - документ, Структура(Организация, Дата).
// 
// Возвращаемое значение:
// 	Дата, если дата запрета не найдена, то возвращается пустая дата.
// 
Функция ПолучитьДатуЗапретаРедактирования(МетаДокОбъект, ДокОбъект) Экспорт 
	
	// Флаг отказа редактирования документа в текущем периоде.
	Отказ 				= Ложь;
	ДатаЗапрета 		= Дата(1,1,1);
	ТекущийПользователь = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
	
	Если НЕ ЗначениеЗаполнено(ТекущийПользователь) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ОбъектСистемы = бит_ПраваДоступа.ПолучитьОбъектДоступаПоМетаданным(МетаДокОбъект);
	
	Если НЕ ЗначениеЗаполнено(ОбъектСистемы) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат ДатаЗапрета;
	КонецЕсли;	
	
	// Получим данные документа для проверки
	Если ТипЗнч(ДокОбъект) = Тип("Структура") Тогда
		ДанныеДокумента = Новый ТаблицаЗначений();
		ДанныеДокумента.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
		ДанныеДокумента.Колонки.Добавить("Дата", 		Новый ОписаниеТипов("Дата"));
		ДанныеДокумента.Колонки.Добавить("КлючСтроки", 	Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(10)));
		
		НоваяСтрока = ДанныеДокумента.Добавить();
		НоваяСтрока.Организация = ДокОбъект.Организация;
		НоваяСтрока.Дата 		= ДокОбъект.Дата;
		НоваяСтрока.КлючСтроки 	= 1;
	Иначе
		ДанныеДокумента = ПолучитьТаблицуДанныхПоДокументу(МетаДокОбъект, ДокОбъект, ОбъектСистемы);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Данные"		   , ДанныеДокумента);
	Запрос.УстановитьПараметр("Пользователь"   , ТекущийПользователь);
	Запрос.УстановитьПараметр("ОбъектСистемы"  , ОбъектСистемы);
	Запрос.УстановитьПараметр("ВсеПользователи", Справочники.ГруппыПользователей.ВсеПользователи);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Данные.Организация,
	|	Данные.Дата,
	|	Данные.КлючСтроки
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	&Данные КАК Данные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_ДатыЗапретаРедактирования.Организация,
	|	бит_ДатыЗапретаРедактирования.Пользователь,
	|	бит_ДатыЗапретаРедактирования.ОбъектСистемы,
	|	бит_ДатыЗапретаРедактирования.ДатаЗапрета,
	|	ВЫБОР
	|		КОГДА бит_ДатыЗапретаРедактирования.Организация В (Данные.Организация)
	|			ТОГДА 9
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА бит_ДатыЗапретаРедактирования.Пользователь = &Пользователь
	|			ТОГДА 99
	|		КОГДА ТИПЗНАЧЕНИЯ(бит_ДатыЗапретаРедактирования.Пользователь) = ТИП(Справочник.ГруппыПользователей)
	|			ТОГДА 11
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА бит_ДатыЗапретаРедактирования.ОбъектСистемы = &ОбъектСистемы
	|			ТОГДА 999
	|		КОГДА ТИПЗНАЧЕНИЯ(бит_ДатыЗапретаРедактирования.ОбъектСистемы) = ТИП(Справочник.бит_ГруппыОбъектовСистемы)
	|			ТОГДА 100
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Приоритет,
	|	Данные.КлючСтроки,
	|	Данные.Дата
	|ПОМЕСТИТЬ ДатыЗапрета
	|ИЗ
	|	Данные КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДатыЗапретаРедактирования КАК бит_ДатыЗапретаРедактирования
	|		ПО (бит_ДатыЗапретаРедактирования.Организация В (Данные.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)))
	|ГДЕ
	|	бит_ДатыЗапретаРедактирования.Пользователь В
	// Изменение кода. Начало. 03.06.2013{{
	|"
		+ ?(Метаданные.РегистрыСведений.Найти("СоставыГруппПользователей") <> Неопределено, "
		|			(ВЫБРАТЬ СоставыГруппПользователей.ГруппаПользователей КАК Пользователь
		|			 ИЗ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
		|			 ГДЕ СоставыГруппПользователей.Пользователь = &Пользователь
		|", "
		|			(ВЫБРАТЬ СоставыГруппПользователей.Ссылка КАК Пользователь
		|			 ИЗ Справочник.ГруппыПользователей.ПользователиГруппы КАК СоставыГруппПользователей
		|			 ГДЕ СоставыГруппПользователей.Пользователь = &Пользователь
		|
		// Дата запрета редактирования для группы ВсеПользователи.
		|			ОБЪЕДИНИТЬ ВСЕ		
		|			ВЫБРАТЬ
		|				&ВсеПользователи
		|
		|			ОБЪЕДИНИТЬ ВСЕ		
		|			ВЫБРАТЬ
		|				&Пользователь
		|")
	+ "
	// Изменение кода. Конец. 03.06.2013}}
	|		
	|			ОБЪЕДИНИТЬ ВСЕ		
	|			ВЫБРАТЬ
	|				НЕОПРЕДЕЛЕНО
	|		
	|			ОБЪЕДИНИТЬ ВСЕ		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|		
	|			ОБЪЕДИНИТЬ ВСЕ		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.ГруппыПользователей.ПустаяСсылка))
	|	И бит_ДатыЗапретаРедактирования.ОбъектСистемы В
	|			(ВЫБРАТЬ
	|				бит_ГруппыОбъектовСистемыОбъектыСистемы.Ссылка КАК ОбъектСистемы
	|			ИЗ
	|				Справочник.бит_ГруппыОбъектовСистемы.ОбъектыСистемы КАК бит_ГруппыОбъектовСистемыОбъектыСистемы
	|			ГДЕ
	|				бит_ГруппыОбъектовСистемыОбъектыСистемы.ОбъектСистемы = &ОбъектСистемы
	|			СГРУППИРОВАТЬ ПО
	|						бит_ГруппыОбъектовСистемыОбъектыСистемы.Ссылка
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				НЕОПРЕДЕЛЕНО
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				&ОбъектСистемы
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.бит_ОбъектыСистемы.ПустаяСсылка)
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ЗНАЧЕНИЕ(Справочник.бит_ГруппыОбъектовСистемы.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыЗапрета.КлючСтроки,
	|	МАКСИМУМ(ДатыЗапрета.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ МаксимальныеПриоритеты
	|ИЗ
	|	ДатыЗапрета КАК ДатыЗапрета
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыЗапрета.КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ДатыЗапрета.ДатаЗапрета) КАК ДатаЗапрета,
	|	МаксимальныеПриоритеты.КлючСтроки,
	|	МаксимальныеПриоритеты.Приоритет
	|ПОМЕСТИТЬ МинимальныеДатыЗапрета
	|ИЗ
	|	МаксимальныеПриоритеты КАК МаксимальныеПриоритеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыЗапрета КАК ДатыЗапрета
	|		ПО МаксимальныеПриоритеты.КлючСтроки = ДатыЗапрета.КлючСтроки
	|			И МаксимальныеПриоритеты.Приоритет = ДатыЗапрета.Приоритет
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеПриоритеты.КлючСтроки,
	|	МаксимальныеПриоритеты.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МинимальныеДатыЗапрета.КлючСтроки,
	|	ДатыЗапрета.Организация,
	|	ДатыЗапрета.Пользователь,
	|	ДатыЗапрета.ОбъектСистемы,
	|	МинимальныеДатыЗапрета.ДатаЗапрета,
	|	МинимальныеДатыЗапрета.Приоритет,
	|	ДатыЗапрета.Дата
	|ИЗ
	|	МинимальныеДатыЗапрета КАК МинимальныеДатыЗапрета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыЗапрета КАК ДатыЗапрета
	|		ПО МинимальныеДатыЗапрета.КлючСтроки = ДатыЗапрета.КлючСтроки
	|			И МинимальныеДатыЗапрета.Приоритет = ДатыЗапрета.Приоритет
	|			И МинимальныеДатыЗапрета.ДатаЗапрета = ДатыЗапрета.ДатаЗапрета";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Отказ Тогда
			Прервать;
		КонецЕсли;
		
		Если Выборка.Дата <= КонецДня(Выборка.ДатаЗапрета) Тогда
			
			Отказ = Истина;
			ДатаЗапрета = Выборка.ДатаЗапрета;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДатаЗапрета;
	
КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-01-06 (#3558)

#КонецОбласти

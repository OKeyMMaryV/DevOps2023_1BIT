#Область СлужебныйПрограммныйИнтерфейс

// Формирует краткое представление из полного имени физического лица.
//
// Параметры:
//  ФамилияИмяОтчество - Строка - полное имя в виде "Фамилия Имя Отчество";
//                     - Структура - части полного имени:
//                        * Фамилия  - Строка - фамилия;
//                        * Имя      - Строка - имя;
//                        * Отчество - Строка - отчество.
//
// Возвращаемое значение:
//  Строка - фамилия и инициалы. Например, "Пупкин В. И.".
//
// Пример:
//  ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалыФизЛица("Пупкин Василий Иванович") -> "Пупкин В. И."; 
//
Функция ФамилияИнициалы(Знач ФамилияИмяОтчество) Экспорт
	
	Если ТипЗнч(ФамилияИмяОтчество) = Тип("Структура")
		Или ТипЗнч(ФамилияИмяОтчество) = Тип("ФиксированнаяСтруктура") Тогда
		
		Фамилия = ФамилияИмяОтчество.Фамилия;
		Если Не ПустаяСтрока(Фамилия) Тогда
			
			Имя = ФамилияИмяОтчество.Имя;
			
			Имена = СоставныеЧастиИмени(Имя);
			Если Имена.Количество() > 1 Тогда
				
				ФамилияИО = Фамилия + " "
					+ Лев(Имена[0], 1) + ".-"
					+ Лев(Имена[1], 1) + ".";
				
				Отчество = ФамилияИмяОтчество.Отчество;
				Если Не ПустаяСтрока(Отчество) Тогда
					ФамилияИО = ФамилияИО + " " + Лев(Отчество, 1) + ".";
				КонецЕсли; 
				
				Возврат ФамилияИО;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФамилияИмяОтчество);
	
КонецФункции

// Формирует краткое представление имени физического лица.
//
// Параметры:
//  Имя - Строка - имя;
//
// Возвращаемое значение:
//  Строка - инициал имени. 
//
// Пример:
//  ФизическиеЛицаЗарплатаКадрыКлиентСервер.ИнициалыИмени("Василий") -> "В.".
//  ФизическиеЛицаЗарплатаКадрыКлиентСервер.ИнициалыИмени("Анна-Мария") -> "А.-М.".
//  ФизическиеЛицаЗарплатаКадрыКлиентСервер.ИнициалыИмени("Иоганн Себастьян") -> "И.-С."
//
Функция ИнициалыИмени(Знач Имя) Экспорт
	
	Инициалы = "";
	
	Если Не ПустаяСтрока(Имя) Тогда
		
		Имена = СоставныеЧастиИмени(Имя);
		Если Имена.Количество() > 1 Тогда
			
			Инициалы = Лев(Имена[0], 1) + ".-"
				+ Лев(Имена[1], 1) + ".";
			
		Иначе
			Инициалы = Лев(Имя, 1) + ".";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Инициалы;
	
КонецФункции

// Рассчитывает количество полных лет человека по дате его рождения.
//
// Параметры:
//  ДатаРождения - Дата - дата рождения человека, возраст которого нужно рассчитать,
//  ДатаВозраста - Дата - необязательный, дата, на которую нужно рассчитать возраст,
//						если не указано, рассчитывается на текущую дату сеанса.
// 
// Возвращаемое значение:
//  Число, Неопределено - количество полных лет на указанную дату,
//						Неопределено, если дата рождения не заполнена.
//
Функция Возраст(ДатаРождения, ДатаВозраста = Неопределено) Экспорт
	
	Если ДатаВозраста = Неопределено Тогда
	#Если Клиент Тогда
		ДатаВозраста = ОбщегоНазначенияКлиент.ДатаСеанса();
	#Иначе
		ДатаВозраста = ТекущаяДатаСеанса();
	#КонецЕсли
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаРождения) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возраст = Год(ДатаВозраста) - Год(ДатаРождения);
	Если Месяц(ДатаРождения) > Месяц(ДатаВозраста) Тогда
		Возраст = Возраст - 1;
	Иначе
		Если Месяц(ДатаРождения) = Месяц(ДатаВозраста) Тогда
			Если День(ДатаРождения) > День(ДатаВозраста) Тогда
				Возраст = Возраст - 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат Макс(Возраст, 0);
	
КонецФункции

// Формирует представление возраста человека.
//
// Параметры:
//  ДатаРождения - Дата - дата рождения человека, возраст которого нужно рассчитать,
//  ДатаВозраста - Дата - необязательный, дата, на которую нужно рассчитать возраст,
//						если не указано, рассчитывается на текущую дату сеанса.
// 
// Возвращаемое значение:
//  Строка - количество полных лет (или месяцев, если возраст меньше года) на указанную дату с уточнением единицы времени.
//
// Пример:
//  "31 год", "28 лет", "42 года", "3 месяца" и т.д.
//
Функция ПредставлениеВозраста(ДатаРождения, ДатаВозраста = Неопределено) Экспорт
	
	Возраст = Возраст(ДатаРождения, ДатаВозраста);
	
	Если Возраст = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Если Возраст >= 1 Тогда
		Возврат СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru = ';%1 год;;%1 года;%1 лет;'"), Возраст);
	КонецЕсли;
	
	Возраст = ВозрастВМесяцах(ДатаРождения, ДатаВозраста);
	
	Если Возраст = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Если Возраст = 0 Тогда
		Возврат НСтр("ru = 'Меньше месяца'");
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru = ';%1 месяц;;%1 месяца;%1 месяцев;'"), Возраст);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоставныеЧастиИмени(Знач Имя)
	
	Имена = Новый Массив;
	
	Если Не ПустаяСтрока(Имя) Тогда
		
		РазделительИмен = "-";
		ПозицияРазделителя = СтрНайти(Имя, РазделительИмен);
		Если ПозицияРазделителя = 0 Тогда
			РазделительИмен = " ";
			ПозицияРазделителя = СтрНайти(Имя, РазделительИмен);
		КонецЕсли;
		
		Имена = СтрРазделить(Имя, РазделительИмен, Ложь);
		
	КонецЕсли;
	
	Возврат Имена;
	
КонецФункции

// Рассчитывает количество полных месяцев человека по дате его рождения.
//
// Параметры:
//  ДатаРождения - Дата - дата рождения человека, возраст которого нужно рассчитать,
//  ДатаВозраста - Дата - необязательный, дата, на которую нужно рассчитать возраст,
//						если не указано, рассчитывается на текущую дату сеанса.
// 
// Возвращаемое значение:
//  Число - количество полных месяцев на указанную дату.
//
Функция ВозрастВМесяцах(ДатаРождения, ДатаВозраста = Неопределено)
	
	Если ДатаВозраста = Неопределено Тогда
	#Если Клиент Тогда
		ДатаВозраста = ОбщегоНазначенияКлиент.ДатаСеанса();
	#Иначе
		ДатаВозраста = ТекущаяДатаСеанса();
	#КонецЕсли
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаРождения) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Лет = Год(ДатаВозраста) - Год(ДатаРождения);
	Месяцев = Месяц(ДатаВозраста) - Месяц(ДатаРождения);
	Если Месяц(ДатаРождения) > Месяц(ДатаВозраста) Тогда
		Лет = Лет - 1;
		Месяцев = Месяцев + 12;
	КонецЕсли;
	
	Если Месяц(ДатаРождения) = Месяц(ДатаВозраста) Тогда
		Если День(ДатаРождения) > День(ДатаВозраста) Тогда
			Месяцев = Месяцев - 1;
		КонецЕсли;
	КонецЕсли;

	Возврат Лет * 12 + Месяцев;
	
КонецФункции

#КонецОбласти

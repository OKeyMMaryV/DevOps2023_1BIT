
#Область ПрограммныйИнтерфейс

// Возвращает дату до которой необходимо отправить уведомление о ввозе/вывозе в налоговую инспекцию
// Параметры:
// Дата - тип дата, в данном параметре передается
//        дата поступления прослеживаемых товаров
// Возвращаемое значение:
// СрокУведомления - тип дата, день до которого нужно отправить уведомление о ввозе
Функция СрокПодачиУведомления(Дата) Экспорт
	
	КоличествоРабочихДнейОтсрочки = 5;
	День = 24 * 60 * 60; // количество секунд в одном дне

	ПроизводственныйКалендарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
	
	Если НЕ ЗначениеЗаполнено(ПроизводственныйКалендарь) Тогда
		Возврат Дата + КоличествоРабочихДнейОтсрочки * День;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Год",                       Год(Дата));
	Отбор.Вставить("Дата",                      Дата);
	Отбор.Вставить("ПроизводственныйКалендарь", ПроизводственныйКалендарь);
	
	ДанныеДня = РегистрыСведений.ДанныеПроизводственногоКалендаря.Получить(Отбор);
	
	ДатаДокументаЭтоВыходной = (ДанныеДня.ВидДня <> Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий И 
								ДанныеДня.ВидДня <> Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
	
	Если ДатаДокументаЭтоВыходной Тогда
		// Отсрочка меньше на один день
		СрокУведомления = КалендарныеГрафики.ДатаПоКалендарю(
			ПроизводственныйКалендарь, Дата, КоличествоРабочихДнейОтсрочки - 1, Ложь);
	Иначе
		СрокУведомления = КалендарныеГрафики.ДатаПоКалендарю(
			ПроизводственныйКалендарь, Дата, КоличествоРабочихДнейОтсрочки, Ложь);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СрокУведомления) Тогда
		Возврат Дата + КоличествоРабочихДнейОтсрочки * День;
	Иначе
		Возврат СрокУведомления;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПодобратьРНПТ(ДокументОбъект, Отказ, ИмяТабличнойЧасти = "Товары") Экспорт
	
	ТаблицаТоваров = ДокументОбъект[ИмяТабличнойЧасти].Выгрузить();
	
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	ПринятиеКУчетуОС = Ложь;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	
	ТаблицаРНПТИсходныйДокумент = ТаблицаРНПТИсходныйДокумент(ДокументОбъект, ТаблицаТоваров);
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ДоговорКонтрагента, "ВидДоговора");
		Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
			ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, Истина);
		ИначеЕсли ТипЗнч(ДокументОбъект.Сделка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ТаблицаРНПТОстатки = ТаблицаРНПТОстаткиВозвратОпт(ДокументОбъект, ТаблицаТоваров, ДокументОбъект.Сделка);
		ИначеЕсли ТипЗнч(ДокументОбъект.Сделка) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров") Тогда
			ДокументРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Сделка, "ДокументОтгрузки");
			ТаблицаРНПТОстатки = ТаблицаРНПТОстаткиВозвратОпт(ДокументОбъект, ТаблицаТоваров, ДокументРеализации);
		ИначеЕсли ТипЗнч(ДокументОбъект.Сделка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
			ТаблицаРНПТОстатки = ТаблицаРНПТОстаткиВозвратРозница(ДокументОбъект, ТаблицаТоваров);
		КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПринятиеКУчетуОС") Тогда
		ТаблицаРНПТОстатки = ПолучитьОстаткиДляПринятияКУчетуОС(ДокументОбъект, ТаблицаТоваров);
		ПринятиеКУчетуОС = Истина;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	Иначе
		ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, Ложь);
	КонецЕсли;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетПроизводстваЗаСмену") И
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ВыпускПродукции Тогда
		ЭтоВыпускПродукции = Истина;
	Иначе
		ЭтоВыпускПродукции = Ложь;
	КонецЕсли;
	ЭтоВозвратКомитенту = Ложь;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ДоговорКонтрагента, "ВидДоговора");
		Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			ЭтоВозвратКомитенту = Истина;
		КонецЕсли;
	КонецЕсли;
	КонтролироватьОстаток = НЕ БухгалтерскийУчетПереопределяемый.ОтключитьКонтрольОтрицательныхОстатков();
	Для Каждого СтрокаТабличнойЧасти ИЗ ДокументОбъект[ИмяТабличнойЧасти] Цикл
		
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-11-02 (#4405)
		//ОсталосьПодобрать = СтрокаТабличнойЧасти.Количество;
		ОсталосьПодобрать = ?(ПринятиеКУчетуОС, 1, СтрокаТабличнойЧасти.Количество);
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-11-02 (#4405)
		
		СтруктураОтбора = Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки);
		
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(СтруктураОтбора);
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		Если КоличествоРНПТ = 0 Тогда
			
			// Для корректировочного документа сначала подберем РНПТ из исходного документа.
			ПодобратьРНПТИзИсходногоДокумента(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент);
			
			Если ОсталосьПодобрать <> 0 Тогда
				// Добавляем РНПТ из остатков.
				ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки);
			КонецЕсли;
			
			Если ОсталосьПодобрать <> 0 Тогда
				Если ЭтоВыпускПродукции Тогда
					ИмяТабличнойЧасти = "Продукция"; 
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Для целей учета прослеживаемости не списано %1 материала %2 (%3)'"),
					Формат(ОсталосьПодобрать, "ЧЦ=15; ЧДЦ=3"),
					СтрокаТабличнойЧасти.Номенклатура,
					СтрокаТабличнойЧасти.СтранаПроисхождения);
					СтрокаПродукции = ДокументОбъект.Продукция.Найти(СтрокаТабличнойЧасти.КлючСтроки, "КлючСтроки");
					НомерСтроки = ?(СтрокаПродукции = Неопределено, 0,СтрокаПродукции.НомерСтроки-1);
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(НомерСтроки,"ЧГ=") + "].Материалы";
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, , Отказ);
					
				//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
				ИначеЕсли ПринятиеКУчетуОС Тогда
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Для целей учета прослеживаемости не подобрано %1 для %2 '"),
					Формат(ОсталосьПодобрать, "ЧЦ=15; ЧДЦ=3"),
					СтрокаТабличнойЧасти.ОсновноеСредство);
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
					
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
				
				Иначе
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Для целей учета прослеживаемости не списано %1 товара %2 (%3)'"),
					Формат(ОсталосьПодобрать, "ЧЦ=15; ЧДЦ=3"),
					СтрокаТабличнойЧасти.Номенклатура,
					СтрокаТабличнойЧасти.СтранаПроисхождения);
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].Количество";
					
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли КонтролироватьОстаток Тогда
			
			// Проверяем наличие указанных РНПТ на остатках
			Для Каждого СтрокаСРНПТ ИЗ СтрокиСРНПТ Цикл
				ТребуемоеКоличество = СтрокаСРНПТ.Количество;
				ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
				
				// Сверка РНПТ с исходным документом реализации.
				СверитьОстаткиСИсходнымДокументомРеализации(СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент, ТребуемоеКоличество, ТребуемоеКоличествоПрослеживаемости);
				
				Если ТребуемоеКоличество = 0
					И ТребуемоеКоличествоПрослеживаемости = 0 Тогда
					// Значит в строке корректировочного документа только РНПТ из исходного документа реализации.
					Продолжить;
				КонецЕсли;
				
				// По новым РНПТ контролируем остатки в регистре.
				//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
				//СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ИмяТабличнойЧасти, ЭтоВыпускПродукции,,ЭтоВозвратКомитенту);
				СтруктураСтроки = Новый Структура("Количество, КоличествоПрослеживаемости, РНПТ");
				СтруктураСтроки.Количество                 = ТребуемоеКоличество;
				СтруктураСтроки.КоличествоПрослеживаемости = ТребуемоеКоличествоПрослеживаемости;
				СтруктураСтроки.РНПТ                       = СтрокаСРНПТ.РНПТ;
				Если ПринятиеКУчетуОС Тогда
					СтруктураСтроки.Вставить("СтранаПроисхождения", СтрокаСРНПТ.СтранаПроисхождения);
				КонецЕсли;
				СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтруктураСтроки, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ИмяТабличнойЧасти, ЭтоВыпускПродукции,,ЭтоВозвратКомитенту);
				//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	КолонкиГруппировки = "РНПТ, ИдентификаторСтроки";
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	Если ПринятиеКУчетуОС Тогда
		КолонкиГруппировки = КолонкиГруппировки + ",СтранаПроисхождения";
	КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	
	ДокументОбъект.СведенияПрослеживаемости.Свернуть(КолонкиГруппировки, "Количество, КоличествоПрослеживаемости");
	
КонецПроцедуры

Процедура СформироватьДвиженияРеализацияТоваров(ТаблицаТовары, ТаблицаОперации, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТовары, Реквизиты, Движения, Истина);
		
	Если Реквизиты.Владелец().Колонки.Найти("Контрагент") <> Неопределено И Реквизиты.Контрагент <> Неопределено Тогда
		СтранаРегистрацииКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Контрагент, "СтранаРегистрации");
		Если Справочники.СтраныМира.ГосударствоЧленТаможенногоСоюза(СтранаРегистрацииКонтрагента) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения);
	
КонецПроцедуры

Процедура СформироватьДвиженияКорректировкаРеализацииТоваров(ТаблицаТоварыУвеличение, ТаблицаТоварыУменьшение, ТаблицаОперации, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУвеличение, Реквизиты, Движения, Истина);
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУменьшение, Реквизиты, Движения, Ложь);
	
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения);
	
КонецПроцедуры

Процедура СформироватьДвиженияКорректировкаПоступленияТоваров(ТаблицаТоварыУвеличение, ТаблицаТоварыУменьшение, ТаблицаОперации, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУвеличение, Реквизиты, Движения, Ложь);
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУменьшение, Реквизиты, Движения, Истина);
	
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоступлениеТоваров(ТаблицаТовары, ТаблицаОперации, ТаблицаРНПТ, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТовары, Реквизиты, Движения);
	
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения);
	
	Если Реквизиты.Владелец().Колонки.Найти("СтранаРегистрации") <> Неопределено Тогда 
		
		ЭтоПоступлениеИзЕАЭС = Справочники.СтраныМира.ГосударствоЧленТаможенногоСоюза(Реквизиты.СтранаРегистрации);
		
		Если ЭтоПоступлениеИзЕАЭС Тогда
			
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405) 
			//РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
			ПередачаНаКомиссию = Ложь;
			Если Реквизиты.Владелец().Колонки.Найти("ВидДоговора") <> Неопределено 
				И Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
				ПередачаНаКомиссию = Истина;
			КонецЕсли;
			Если Не ПередачаНаКомиссию 
				И ТипЗнч(Реквизиты.Регистратор) <> Тип("ДокументСсылка.РеализацияТоваровУслуг")
				И ТипЗнч(Реквизиты.Регистратор) <> Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
			
				РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
				
			КонецЕсли;
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
			
		КонецЕсли;
	КонецЕсли;
	
	УстановитьСвойстваРНПТ(ТаблицаРНПТ, Реквизиты);
	
КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
//Процедура СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения) Экспорт
Процедура СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения, ОС = Ложь) Экспорт
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405) 
	Если Не ЗначениеЗаполнено(ТаблицаОперации) Тогда
		Возврат;
	КонецЕсли;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	//Параметры = ПодготовитьПараметрыОперацииСПрослеживаемымиТоварами(ТаблицаОперации);
	Параметры = ПодготовитьПараметрыОперацииСПрослеживаемымиТоварами(ТаблицаОперации, ОС);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	
	Для Каждого СтрокаТаблицы Из Параметры.Операции Цикл
		Запись = Движения.ОперацииСПрослеживаемымиТоварами.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
		Если СтрокаТаблицы.ОтражениеВОтчетности <> Перечисления.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях Тогда
			Запись.СуммаБезНДС = Окр(Запись.СуммаБезНДС, 0);
		КонецЕсли;
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	КонецЦикла;
	
	Движения.ОперацииСПрослеживаемымиТоварами.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьОбщиеПараметры(ТаблицаРеквизиты) Экспорт
	
	Параметры = Новый Структура("Реквизиты", Неопределено);
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат Параметры;
	КонецЕсли;
	
	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Регистратор," // <ДокументСсылка>
	+ "Организация";// <СправочникСсылка.Организации>
	
	// Реквизиты "Страна регистрации" и "Контрагент" будут только в случаях, если движения формируются к документам:
	// - Поступление товаров и услуг
	// - Реализация товаров и услуг
	// в остальных случаях эти реквизиты отсутствуют. 
	Если ТаблицаРеквизиты.Колонки.Найти("СтранаРегистрации") <> Неопределено Тогда 
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ", СтранаРегистрации";// <СправочникСсылка.СтраныМира>
	КонецЕсли;
	Если ТаблицаРеквизиты.Колонки.Найти("Контрагент") <> Неопределено Тогда
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ", Контрагент"; // <СправочникСсылка.Контрагенты>
	КонецЕсли;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	Если ТаблицаРеквизиты.Колонки.Найти("ВидДоговора") <> Неопределено Тогда
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ", ВидДоговора"; // <ПеречислениеСсылка.ВидыДоговоровКонтрагентов>
	КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура ДополнительныеСведенияДляОтчетаОбОперациях(МенеджерВременныхТаблиц) Экспорт
	
	// Дополнительные сведения о контрагенте
	УчетНДС.РегистрационныеСведенияНаДаты(МенеджерВременныхТаблиц);
	
	// Дополнительные сведения о номенклатуре
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияПрослеживаемости
	|ПОМЕСТИТЬ СведенияОНоменклатуре
	|ИЗ
	|	НоменклатураОпераций КАК НоменклатураОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО НоменклатураОпераций.НоменклатураСсылка = Номенклатура.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура.Ссылка";
	
	Запрос.Выполнить();

КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
//Функция ПодготовитьТаблицуПоПрослеживаемымОперациям(ПрослеживаемыеОперации, ТаблицаСписанныеТовары) Экспорт
Функция ПодготовитьТаблицуПоПрослеживаемымОперациям(ПрослеживаемыеОперации, ТаблицаСписанныеТовары, ЕстьИдСтроки = Истина ) Экспорт
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	
	Если ПрослеживаемыеОперации = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	//ТаблицаСумм = ТаблицаСписанныеТовары.Скопировать(, "ИдентификаторСтроки, СуммаСписания");
	//ТаблицаСумм.Свернуть("ИдентификаторСтроки", "СуммаСписания");
	//Для каждого Строка Из ПрослеживаемыеОперации Цикл
	//	СтрокаССуммой = ТаблицаСумм.Найти(Строка.ИдентификаторСтроки, "ИдентификаторСтроки");
	//	Если СтрокаССуммой <> Неопределено Тогда
	//		Строка.СуммаБезНДС = СтрокаССуммой.СуммаСписания;
	//	КонецЕсли;
	//КонецЦикла;
	Если ЕстьИдСтроки Тогда 
		ТаблицаСумм = ТаблицаСписанныеТовары.Скопировать(, "ИдентификаторСтроки, СуммаСписания");
		ТаблицаСумм.Свернуть("ИдентификаторСтроки", "СуммаСписания");
		Для Каждого Строка Из ПрослеживаемыеОперации Цикл
			СтрокаССуммой = ТаблицаСумм.Найти(Строка.ИдентификаторСтроки, "ИдентификаторСтроки");
			Если СтрокаССуммой <> Неопределено Тогда
				Строка.СуммаБезНДС = СтрокаССуммой.СуммаСписания;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТаблицаСумм = ТаблицаСписанныеТовары.Скопировать(, "Номенклатура, Количество, Сумма");
		ТаблицаСумм.Свернуть("Номенклатура", "Количество, Сумма");
		Для Каждого Строка Из ПрослеживаемыеОперации Цикл
			СтрокаССуммой = ТаблицаСумм.Найти(Строка.Номенклатура, "Номенклатура");
			Если СтрокаССуммой <> Неопределено Тогда
				Если Строка.Количество <=  СтрокаССуммой.Количество Тогда
					Строка.СуммаБезНДС = СтрокаССуммой.Сумма;
				Иначе
					Строка.СуммаБезНДС = СтрокаССуммой.Сумма / СтрокаССуммой.Количество * Строка.Количество;
					СтрокаССуммой.Количество = СтрокаССуммой.Количество - Строка.Количество;
					СтрокаССуммой.Сумма= СтрокаССуммой - Строка.СуммаБезНДС;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	
	ПрослеживаемыеОперации.Свернуть("ДатаДокумента, ДокументОперации, КодОперации, Контрагент,
		|Номенклатура, НомерДокумента, ОтражениеВОтчетности, ПериодОперации, РНПТ, ТипДокументаВПрослеживаемости",
		"СуммаБезНДС, Количество, КоличествоПрослеживаемости");
	
	Возврат ПрослеживаемыеОперации;
		
КонецФункции

Процедура УстановитьСвойстваРНПТ(ТаблицаРНПТ, Реквизиты) Экспорт
	
	Если ТаблицаРНПТ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыСвойстваРНПТ(ТаблицаРНПТ);
	
	Для Каждого СтрокаТаблицы Из Параметры.ТаблицаРНПТ Цикл
		
		МенеджерЗаписи = РегистрыСведений.СвойстваРНПТ.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Организация = Реквизиты.Организация;
		МенеджерЗаписи.РНПТ = СтрокаТаблицы.РНПТ;
		МенеджерЗаписи.ДатаПоступления = Реквизиты.Период;
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
Функция ПодготовитьТаблицыПоПрослеживаемости(Реквизиты, ПрослеживаемыеТовары, ПрослеживаемыеОперации) Экспорт
	
	ТаблицаПрослеживаемыеТоварыКомиссия = Неопределено;
	ТаблицаПрослеживаемыеОперации       = ПрослеживаемыеОперации;
	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ПрослеживаемыеТоварыКомиссия", ТаблицаПрослеживаемыеТоварыКомиссия);
	СтруктураТаблиц.Вставить("ПрослеживаемыеОперации",       ТаблицаПрослеживаемыеОперации);
	
	Если ПрослеживаемыеТовары = Неопределено Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	Если Реквизиты.Колонки.Найти("СтранаРегистрации") <> Неопределено Тогда 
		
		КонтрагентИзЕАЭС = Справочники.СтраныМира.ГосударствоЧленТаможенногоСоюза(Реквизиты[0].СтранаРегистрации);
		Если КонтрагентИзЕАЭС Тогда
			ТаблицаПрослеживаемыеОперации = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ДоговорСКомиссионером = Реквизиты[0].ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером;
	ДоговорСКомитентом = Реквизиты[0].ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом;

	Если ДоговорСКомиссионером Тогда
		ТаблицаПрослеживаемыеТоварыКомиссия = ПрослеживаемыеТовары.Скопировать();
		ТаблицаПрослеживаемыеТоварыКомиссия.ЗаполнитьЗначения(Реквизиты[0].Контрагент, "Комиссионер");
		ТаблицаПрослеживаемыеОперации = Неопределено;
	КонецЕсли;
	
	Если ДоговорСКомитентом Тогда
		ТаблицаПрослеживаемыеТоварыКомиссия = ПрослеживаемыеТовары;
		ТаблицаПрослеживаемыеОперации = Неопределено;
	КонецЕсли;
	
	СтруктураТаблиц.ПрослеживаемыеТоварыКомиссия = ТаблицаПрослеживаемыеТоварыКомиссия;
	СтруктураТаблиц.ПрослеживаемыеОперации       = ТаблицаПрослеживаемыеОперации;
	
	Возврат СтруктураТаблиц;
	
КонецФункции
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)

#Область ПроведениеИнвентаризации

Процедура ЗарегистрироватьПрослеживаемыйТовар(ТаблицаРеквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
		
	Параметры = ПодготовитьПараметрыРегистрацииПрослеживаемогоТовара(ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
	
КонецПроцедуры

Функция ЭтоПерваяИнвентаризацияПоПрослеживаемости(ДокументОснование, Реквизиты) Экспорт
	
	Организация = Реквизиты.Организация;
	Период = Реквизиты.Дата;
	Склад = Реквизиты.Склад;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("Склад",          Склад);
	Запрос.УстановитьПараметр("ДатаНачала",     ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	Запрос.УстановитьПараметр("ДатаОкончания",  Период);
	Запрос.УстановитьПараметр("Ссылка",  ДокументОснование);
	
	//По текущему товару нужно найти инвентаризации
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладеТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК ИнвентаризацияТоваровНаСкладеТовары
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладеТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияТоваровНаСкладеТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК ИнвентаризацияТоваровНаСкладеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|		ПО ИнвентаризацияТоваровНаСкладеТовары.Ссылка = ИнвентаризацияТоваровНаСкладе.Ссылка
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ИнвентаризацияТоваровНаСкладе.Организация = &Организация
	|	И ИнвентаризацияТоваровНаСкладе.Склад = &Склад
	|	И ИнвентаризацияТоваровНаСкладе.Проведен = ИСТИНА
	|	И ИнвентаризацияТоваровНаСкладе.Ссылка <> &Ссылка
	|	И ИнвентаризацияТоваровНаСкладеТовары.Номенклатура В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура
	|			ИЗ
	|				ТаблицаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияТоваровНаСкладе.Ссылка";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	// Если есть инвентаризации ранее, то по прослеживаемому товару движения не делаем
	Если Выборка.Следующий() Тогда
		
		Возврат Ложь;
		
	КонецЕсли;

	
	Возврат Истина;
	
КонецФункции

Функция КоличествоРНПТКСтроке(МассивСтрокСведенияПрослеживаемости) Экспорт
	
	КоличествоРНПТКСтроке = 0;
	Для Каждого ЭлементМассива Из МассивСтрокСведенияПрослеживаемости Цикл
		КоличествоРНПТКСтроке = КоличествоРНПТКСтроке + ЭлементМассива.Количество;
	КонецЦикла;
	
	Возврат КоличествоРНПТКСтроке;
	
КонецФункции

#КонецОбласти

// Переопределяемая процедура обработки проведения документов 
// "Уведомление об остатках прослеживаемых товаров" и "Уведомление о ввозе прослеживаемых товаров"
// 
// Параметры:
//  ПараметрыПроведения - Структура таблиц см. Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПодготовитьПараметрыПроведения и 
//                        Документы.УведомлениеОВвозеПрослеживаемыхТоваров.ПодготовитьПараметрыПроведения
//  Движения - ссылка на движения документа
//  Отказ - Булево - признак отказа от записи
//
Процедура ОбработкаПроведенияУведомления(ПараметрыПроведения, Движения, Отказ) Экспорт
	
	// Формируем таблицу для движений по регистру накопления ПрослеживаемыеТовары
	ТаблицаДвиженийРНПТ = ПодготовитьТаблицуРНПТ(ПараметрыПроведения.ТаблицаТоваров,
		ПараметрыПроведения.Реквизиты, Отказ);
		
	СформироватьДвиженияПрослеживаемостьТоваров(
		ТаблицаДвиженийРНПТ,
		Движения,
		Отказ);
		
	// Формируем движения по свойствам РНПТ для корректного списания товаров по ФИФО.
	Если ЗначениеЗаполнено(ТаблицаДвиженийРНПТ)
		И ЗначениеЗаполнено(ПараметрыПроведения.Реквизиты) Тогда
		РазличныеРНПТ = ТаблицаДвиженийРНПТ.Скопировать();
		РазличныеРНПТ.Свернуть("РНПТ");
		ПрослеживаемостьБП.УстановитьСвойстваРНПТ(РазличныеРНПТ, ПараметрыПроведения.Реквизиты[0]);
	КонецЕсли;
	
	
	// Формируем таблицу для движений по счету ГТД
	ТаблицаОстатковГТД = ПодготовитьТаблицуОстатковГТД(ПараметрыПроведения.ТаблицаТоваров,
		ПараметрыПроведения.Реквизиты, Отказ);
		
	СформироватьДвиженияГТД(
		ТаблицаОстатковГТД,
		Движения,
		Отказ);
		
КонецПроцедуры

#Область УдалениеПроведения

// Процедура удаления проведения первичных документов
// 
// Параметры:
// Регистратор - ДокументСсылка - Документ регистратор
// 
Процедура УдалениеПроведенияПервичногоДокумента(Регистратор) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров") Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояниеУдалениеПроведенияПервичногоДокумента(Регистратор);
	
КонецПроцедуры

#КонецОбласти

#Область ПомощникПолученияРНПТ

Функция ПолучитьНачальныеДанные(Период, Организация) Экспорт
	
	ВестиСкладскойУчетБУ = БухгалтерскийУчет.ВедетсяУчетПоСкладам(ПланыСчетов.Хозрасчетный.Товары);
	
	ПорядокСубконтоКоличество = Новый Массив();
	ПорядокСубконтоКоличество.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВестиСкладскойУчетБУ Тогда
		ПорядокСубконтоКоличество.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	
	МассивИсклСчетов = Новый Массив();
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ); // 41.12
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяНаценка);                            // 42
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ГТД);                                        // ГТД
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.МатериальныеЦенностиВЭксплуатации);          // МЦ
	МассивИсклСчетов = БухгалтерскийУчет.СформироватьМассивСубсчетов(МассивИсклСчетов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("НачалоПериода", ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	Запрос.УстановитьПараметр("ИсклСчета",                 МассивИсклСчетов);
	Запрос.УстановитьПараметр("ПорядокСубконтоКоличество", ПорядокСубконтоКоличество);
	Запрос.УстановитьПараметр("ВестиСкладскойУчетБУ", ВестиСкладскойУчетБУ);
	
	МассивДополнительныхСчетов = Новый Массив();
	Если ВестиСкладскойУчетБУ Тогда
		МассивДополнительныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные);
		МассивДополнительныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная);
		МассивДополнительныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеТоварыОтгруженные);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивДополнительныхСчетов", МассивДополнительныхСчетов);
	Запрос.УстановитьПараметр("СубконтоНомеклатура", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	ТекстАналитикаПоСкладу = ?(ВестиСкладскойУчетБУ, "ХозрасчетныйОстатки.Субконто2","ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	0 КАК Сумма,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстатокДт) КАК Количество,
	|	ХозрасчетныйОстатки.Субконто2 КАК Склад
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, НЕ Счет В (&ИсклСчета), &ПорядокСубконтоКоличество, Организация = &Организация) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ХозрасчетныйОстатки.Субконто1 = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.ПрослеживаемыйТовар
	|	И ХозрасчетныйОстатки.КоличествоОстатокДт > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1,
	|	0,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстатокДт),
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&МассивДополнительныхСчетов), &СубконтоНомеклатура, Организация = &Организация) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ХозрасчетныйОстатки.Субконто1 = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.ПрослеживаемыйТовар
	|	И ХозрасчетныйОстатки.КоличествоОстатокДт > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура КАК Номенклатура,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Количество) КАК Количество,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Сумма) КАК Сумма,
	|	РегистрацияПрослеживаемыхТоваров.Основание КАК ДокументРегистрации,
	|	ВЫБОР
	|		КОГДА &ВестиСкладскойУчетБУ
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Основание.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ КАК Склад,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД КАК ТНВЭД
	|ПОМЕСТИТЬ ЗарегистрированныеОстаткиПоОснованию
	|ИЗ
	|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.Организация = &Организация
	|	И РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ИнвентаризацияТоваров)
	|	И РегистрацияПрослеживаемыхТоваров.ПериодСобытия <= КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура,
	|	РегистрацияПрослеживаемыхТоваров.Основание,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД,
	|	ВЫБОР
	|		КОГДА &ВестиСкладскойУчетБУ
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Основание.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ПрослеживаемыеТоварыОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(ПрослеживаемыеТоварыОбороты.КоличествоРасход) КАК КоличествоРасход,
	|	ВЫБОР
	|		КОГДА &ВестиСкладскойУчетБУ
	|			ТОГДА ПрослеживаемыеТоварыОбороты.Регистратор.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ КАК Склад,
	|	ПрослеживаемыеТоварыОбороты.РНПТ КАК РНПТ,
	|	ВЫБОР
	|		КОГДА НЕ ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРНПТОтПоставщика
	|ПОМЕСТИТЬ ПрослеживаемыеТоварыСРНПТ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Обороты(&НачалоПериода, &Период, Регистратор, Организация = &Организация) КАК ПрослеживаемыеТоварыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыОбороты.Номенклатура,
	|	ПрослеживаемыеТоварыОбороты.РНПТ,
	|	ВЫБОР
	|		КОГДА НЕ ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВестиСкладскойУчетБУ
	|			ТОГДА ПрослеживаемыеТоварыОбороты.Регистратор.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыСРНПТ.РНПТ КАК РНПТ
	|ПОМЕСТИТЬ СписокРНПТОтПоставщика
	|ИЗ
	|	ПрослеживаемыеТоварыСРНПТ КАК ПрослеживаемыеТоварыСРНПТ
	|ГДЕ
	|	ПрослеживаемыеТоварыСРНПТ.ЭтоРНПТОтПоставщика = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыСРНПТ.РНПТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыСРНПТ.Номенклатура КАК Номенклатура,
	|	СУММА(ПрослеживаемыеТоварыСРНПТ.КоличествоПриход - ПрослеживаемыеТоварыСРНПТ.КоличествоРасход) КАК Остаток,
	|	ПрослеживаемыеТоварыСРНПТ.Склад КАК Склад
	|ПОМЕСТИТЬ ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика
	|ИЗ
	|	ПрослеживаемыеТоварыСРНПТ КАК ПрослеживаемыеТоварыСРНПТ
	|ГДЕ
	|	ПрослеживаемыеТоварыСРНПТ.РНПТ В
	|			(ВЫБРАТЬ
	|				СписокРНПТОтПоставщика.РНПТ
	|			ИЗ
	|				СписокРНПТОтПоставщика КАК СписокРНПТОтПоставщика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыСРНПТ.Номенклатура,
	|	ПрослеживаемыеТоварыСРНПТ.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснования.Номенклатура КАК Номенклатура,
	|	СУММА(ЕСТЬNULL(ТаблицаОстатковБезОснования.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Остаток, 0)) КАК Количество,
	|	СУММА(ЕСТЬNULL(ТаблицаОстатковБезОснования.Сумма, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Сумма, 0)) КАК Сумма,
	|	ТаблицаОстатковБезОснования.Склад КАК Склад
	|ПОМЕСТИТЬ ТаблицаОстатковБезОснования
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатковБезОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеОстаткиПоОснованию КАК ТаблицаОстатковПоОснованию
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ТаблицаОстатковПоОснованию.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ТаблицаОстатковПоОснованию.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика КАК ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Склад
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаОстатковБезОснования.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Количество, 0) > 0
	|	И ТаблицаОстатковПоОснованию.Количество ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатковБезОснования.Номенклатура,
	|	ТаблицаОстатковБезОснования.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗарегистрированныеОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ЗарегистрированныеОстатки.Количество) КАК Количество,
	|	СУММА(ЗарегистрированныеОстатки.Сумма) КАК Сумма,
	|	ЗарегистрированныеОстатки.ДокументРегистрации КАК ДокументРегистрации,
	|	НоменклатураСправочник.КодОКПД2 КАК КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗарегистрированныеОстатки.ТНВЭД КАК КодТНВЭД,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения КАК ЕдиницаПрослеживаемости,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА ЗарегистрированныеОстатки.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ ЗарегистрированныеОстатки.Количество
	|	КОНЕЦ КАК КоличествоПрослеживаеомсти,
	|	ЗарегистрированныеОстатки.Склад КАК Склад,
	|	НоменклатураСправочник.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаОстатковПоОснованию
	|ИЗ
	|	ЗарегистрированныеОстаткиПоОснованию КАК ЗарегистрированныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО НоменклатураСправочник.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|		ПО ЗарегистрированныеОстатки.Номенклатура = НоменклатураСправочник.Ссылка
	|ГДЕ
	|	ЗарегистрированныеОстатки.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарегистрированныеОстатки.Номенклатура,
	|	ЗарегистрированныеОстатки.ДокументРегистрации,
	|	НоменклатураСправочник.КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА ЗарегистрированныеОстатки.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ ЗарегистрированныеОстатки.Количество
	|	КОНЕЦ,
	|	ЗарегистрированныеОстатки.Склад,
	|	ЗарегистрированныеОстатки.ТНВЭД,
	|	НоменклатураСправочник.СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснования.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатковБезОснования.Количество КАК Количество,
	|	ТаблицаОстатковБезОснования.Сумма КАК Сумма,
	|	ТаблицаОстатковБезОснования.Склад КАК Склад
	|ПОМЕСТИТЬ ТаблицаОстатковБезОснованияБезИнвентаризации
	|ИЗ
	|	ТаблицаОстатковБезОснования КАК ТаблицаОстатковБезОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеОстаткиПоОснованию КАК ЗарегистрированныеОстаткиПоОснованию
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ЗарегистрированныеОстаткиПоОснованию.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ЗарегистрированныеОстаткиПоОснованию.Склад
	|ГДЕ
	|	ЗарегистрированныеОстаткиПоОснованию.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Количество КАК Количество,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Сумма КАК Сумма,
	|	"""" КАК Основание,
	|	ЛОЖЬ КАК ЕстьПервичныйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК КодОКПД2,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
	|	НЕОПРЕДЕЛЕНО КАК КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаПрослеживаемости,
	|	НЕОПРЕДЕЛЕНО КАК КоличествоПрослеживаемости,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Склад КАК Склад,
	|	ЛОЖЬ КАК ИмпортИзЕАЭС,
	|	NULL КАК СтранаПроисхождения
	|ИЗ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации КАК ТаблицаОстатковБезОснованияБезИнвентаризации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатковПоРегистрации.Номенклатура,
	|	ТаблицаОстатковПоРегистрации.Количество,
	|	ТаблицаОстатковПоРегистрации.Сумма,
	|	ТаблицаОстатковПоРегистрации.ДокументРегистрации,
	|	ИСТИНА,
	|	ТаблицаОстатковПоРегистрации.КодОКПД2,
	|	ТаблицаОстатковПоРегистрации.ЕдиницаИзмерения,
	|	ТаблицаОстатковПоРегистрации.КодТНВЭД,
	|	ТаблицаОстатковПоРегистрации.ЕдиницаПрослеживаемости,
	|	ТаблицаОстатковПоРегистрации.КоличествоПрослеживаеомсти,
	|	ТаблицаОстатковПоРегистрации.Склад,
	|	ЛОЖЬ,
	|	ТаблицаОстатковПоРегистрации.СтранаПроисхождения
	|ИЗ
	|	ТаблицаОстатковПоОснованию КАК ТаблицаОстатковПоРегистрации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура,
	|	РегистрацияПрослеживаемыхТоваров.Количество,
	|	РегистрацияПрослеживаемыхТоваров.Сумма,
	|	РегистрацияПрослеживаемыхТоваров.Основание,
	|	ИСТИНА,
	|	НоменклатураСправочник.КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ РегистрацияПрослеживаемыхТоваров.Количество
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА,
	|	РегистрацияПрослеживаемыхТоваров.СтранаПроисхождения
	|ИЗ
	|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО РегистрацияПрослеживаемыхТоваров.Номенклатура = НоменклатураСправочник.Ссылка
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.Количество > 0
	|	И РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ВвозТоваровИзЕАЭС)
	|	И РегистрацияПрослеживаемыхТоваров.Организация = &Организация";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ХозрасчетныйОстатки.Субконто2", ТекстАналитикаПоСкладу);
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции

#КонецОбласти

Процедура СверитьОстаткиРНПТ(ДокументОбъект, Отказ, ИмяТабличнойЧасти, ДокументОснованиеВТЧ = Ложь) Экспорт
	
	ТаблицаТоваров = ДокументОбъект[ИмяТабличнойЧасти].Выгрузить();
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	ЭтоСписаниеОС = Ложь;
	ЭтоПродажаОС = Ложь;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	Если ТаблицаТоваров.Количество() = 0 
		ИЛИ БухгалтерскийУчетПереопределяемый.ОтключитьКонтрольОтрицательныхОстатков() Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетКомиссионераОПродажах") Тогда
		Если ИмяТабличнойЧасти = "Товары" Тогда
			ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, Истина);
		Иначе
			ТаблицаРНПТОстатки =ТаблицаРНПТОстаткиВозвратКомиссия(ДокументОбъект, ТаблицаТоваров);
		КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СписаниеОС") Тогда
		ТаблицаРНПТОстатки = ПолучитьОстаткиПоОС(ДокументОбъект, ТаблицаТоваров);
		ЭтоСписаниеОС = Истина;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаОС") Тогда
		ТаблицаРНПТОстатки = ПолучитьОстаткиПоОС(ДокументОбъект, ТаблицаТоваров);
		ЭтоПродажаОС = Истина;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	Иначе
		ТаблицаРНПТОстатки = ТаблицаРНПТОстаткиВозвратПоставщику(ДокументОбъект, ТаблицаТоваров, ДокументОснованиеВТЧ);
	КонецЕсли;
	
	Для Каждого СтрокаТабличнойЧасти ИЗ ДокументОбъект[ИмяТабличнойЧасти] Цикл
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		Если ДокументОснованиеВТЧ Тогда
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Сделка) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
		//СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(
		//Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
		Если ЭтоСписаниеОС Тогда
			СтрокиСРНПТ = ДокументОбъект.ЦенностиОтВыбытия.НайтиСтроки(
			Новый Структура("КлючСтроки", СтрокаТабличнойЧасти.КлючСтроки));
		Иначе
			Отбор = Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки);
			СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.Выгрузить(Отбор);
		КонецЕсли;
		Если ЭтоПродажаОС Тогда
			Если СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Или СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
				ТребуетсяСуммаНДС = Ложь;
			Иначе 
				ТребуетсяСуммаНДС = Истина;
			КонецЕсли;
			
			Если СтрокаТабличнойЧасти.СуммаНДС < СтрокиСРНПТ.Итог("СуммаНДС") Тогда
				ТекстСообщения = НСтр("ru = 'Сумма НДС по прослеживаемым комплектующим больше суммы НДС по основному средству'");
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
			КонецЕсли;
			СуммаБезНДС = ?(ДокументОбъект.СуммаВключаетНДС, СтрокаТабличнойЧасти.Сумма - СтрокаТабличнойЧасти.СуммаНДС, СтрокаТабличнойЧасти.Сумма);
			Если СуммаБезНДС < СтрокиСРНПТ.Итог("Сумма") Тогда 
				ТекстСообщения = НСтр("ru = 'Сумма без НДС по прослеживаемым комплектующим больше суммы без НДС по основному средству'");
				
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
		Для Каждого СтрокаСРНПТ ИЗ СтрокиСРНПТ Цикл
			ТребуемоеКоличество = СтрокаСРНПТ.Количество;
			ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
			СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ,
			СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ИмяТабличнойЧасти, ,ДокументОснованиеВТЧ);
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
			Если ЭтоПродажаОС Тогда
				Если Не ЗначениеЗаполнено(СтрокаСРНПТ.Сумма) И ЗначениеЗаполнено(СтрокаСРНПТ.Номенклатура) Тогда
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Сумма без НДС для прослеживаемых комплектующих по основному средству'"),
					СтрокаТабличнойЧасти.НомерСтроки, ИмяТабличнойЧасти);
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СтрокаСРНПТ.СуммаНДС) И ЗначениеЗаполнено(СтрокаСРНПТ.Номенклатура) И ТребуетсяСуммаНДС Тогда
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Сумма НДС для прослеживаемых комплектующих по основному средству'"),
					СтрокаТабличнойЧасти.НомерСтроки, ИмяТабличнойЧасти);
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				КонецЕсли;

			КонецЕсли;
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
		КонецЦикла;
	КонецЦикла;
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	Если ЭтоПродажаОС И ТаблицаРНПТОстатки.Количество() <> 0 Тогда
		Для Каждого Строка Из ТаблицаРНПТОстатки Цикл
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для основного средства %1 подобраны не все РНПТ'"),
			Строка.ОС);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка,, "Объект", Отказ);
		КонецЦикла;
	КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
Процедура ПодобратьРНПТОССоставное(ДокументОбъект, Отказ) Экспорт
	
	ИмяТабличнойЧасти = "ОС";
	ТаблицаОС = ДокументОбъект.ОС.Выгрузить();
	КоличествоОС = ТаблицаОС.Количество();
	Если КоличествоОС = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПрослеживаемыеОС = ТаблицаОС.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));
	ЕстьПрослеживаемыеОС = ПрослеживаемыеОС.Количество() > 0;
	Если Не ЕстьПрослеживаемыеОС Тогда
		Возврат;
	КонецЕсли;
		
	МассивТаблиц = ПолучитьОстаткиПоСоставномуОС(ДокументОбъект);
	ТаблицаОстаткиПоРНПТ = МассивТаблиц[1].Выгрузить();
	ОстаткиПоОбъектуСтроительства = МассивТаблиц[2].Выгрузить();
	ТолькоПроверка = Ложь;
	Если ОстаткиПоОбъектуСтроительства.Количество() > 0  Тогда
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.МодернизацияОС") Тогда
			СуммаПоДокументу = ДокументОбъект.СтоимостьБУ;
		Иначе 
			СуммаПоДокументу = ДокументОбъект.СтоимостьБУ * КоличествоОС;
		КонецЕсли;
		Если СуммаПоДокументу <> ОстаткиПоОбъектуСтроительства[0].СуммаОстаток Тогда
			ТолькоПроверка = Истина;
			СообщениеОбОшибке = НСтр("ru='Не удается распределить РНПТ на остатках по таблице ""Основные средства"", заполните РНПТ вручную'");
		КонецЕсли;
	Иначе
		ТолькоПроверка = Истина;
		СообщениеОбОшибке = НСтр("ru='Не удается распределить РНПТ на остатках по таблице ""Основные средства"", заполните РНПТ вручную'");
	КонецЕсли;
	
	Если Не ТолькоПроверка Тогда
		ТаблицаОстатковПоНоменклатуре = ТаблицаОстаткиПоРНПТ.Скопировать(, "Номенклатура, Количество");
		ТаблицаОстатковПоНоменклатуре.Свернуть("Номенклатура", "Количество");
		ТаблицаОстатковПоНоменклатуре.Колонки.Добавить("КоличествоНаЕдиницуОС", Новый ОписаниеТипов("Число"));
		Для Каждого Строка Из ТаблицаОстатковПоНоменклатуре Цикл
			КоличествоНаЕдиницуОС = Цел(Строка.Количество / КоличествоОС);
			
			Если Строка.Количество - КоличествоНаЕдиницуОС * КоличествоОС = 0 Тогда
				Строка.КоличествоНаЕдиницуОС = КоличествоНаЕдиницуОС;
			Иначе
				ТолькоПроверка = Истина;
				СообщениеОбОшибке = НСтр("ru='Не удается распределить РНПТ на остатках по таблице ""Основные средства"", заполните РНПТ вручную'");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если (ТаблицаОстатковПоНоменклатуре = Неопределено Или ТаблицаОстатковПоНоменклатуре.Количество() = 0) И Не ТолькоПроверка Тогда
		СообщениеОбОшибке = НСтр("ru='Не найдены остатки по РНПТ для распределения по таблице ""Основные средства""'");
		ТолькоПроверка = Истина;
	КонецЕсли;
		
	КонтролироватьОстаток = НЕ БухгалтерскийУчетПереопределяемый.ОтключитьКонтрольОтрицательныхОстатков();
	УжеВсеРНПТЗаполнены = Истина;
	Если КонтролироватьОстаток Или Не ТолькоПроверка Тогда
		
		Для Каждого СтрокаТабличнойЧасти Из ТаблицаОС Цикл
			
			Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
			КоличествоРНПТ = СтрокиСРНПТ.Количество();
			
			Если КоличествоРНПТ = 0 И Не ТолькоПроверка Тогда
				
				Для Каждого СтрокаКомплектующего Из ТаблицаОстатковПоНоменклатуре Цикл
					
					ОсталосьПодобрать = СтрокаКомплектующего.КоличествоНаЕдиницуОС;
					ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаОстаткиПоРНПТ, СтрокаКомплектующего.Номенклатура);
					Если КонтролироватьОстаток И
						ОсталосьПодобрать <> 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для целей учета прослеживаемости не подобраны РНПТ для %1 '"),
						Формат(СтрокаТабличнойЧасти.ОсновноеСредство));
						Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
						
						ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
					КонецЕсли;
					
				КонецЦикла;
				
			ИначеЕсли КонтролироватьОстаток И КоличествоРНПТ <> 0 Тогда
				
				Для Каждого СтрокаСРНПТ ИЗ СтрокиСРНПТ Цикл
					ТребуемоеКоличество = СтрокаСРНПТ.Количество;
					ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
					
					// По заполненным РНПТ контролируем остатки в регистре.
					СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ, СтрокаТабличнойЧасти, ТаблицаОстаткиПоРНПТ, "ОС");
				КонецЦикла;
			ИначеЕсли КоличествоРНПТ = 0 И ТолькоПроверка Тогда
				УжеВсеРНПТЗаполнены = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТолькоПроверка И НЕ УжеВсеРНПТЗаполнены Тогда
		ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, ДокументОбъект.Ссылка, ,"Объект", Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьНеобходимостьВводаПрослеживаемыхОС(ДокументОбъект, Отказ) Экспорт

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОС) КАК ПрослеживаемыеОСОстатки";
	Запрос.УстановитьПараметр("Период",      ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ОС",          ДокументОбъект.ОбъектСтроительства);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Для Каждого СтрокаТаблицы Из ДокументОбъект.ОС Цикл
			Префикс = "ОС[%1].";
			Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Префикс, Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ="));
			
			ИмяСписка = НСтр("ru = 'Основные средства'");
			
			Если Не СтрокаТаблицы.ПрослеживаемыйТовар Тогда
				ТекстСообщенияРасшифровка = НСтр("ru = 'По объекту строительства имеются РНПТ. Установите для основного средства признак прослеживаемости.'");
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка","Корректность", НСтр("ru = 'Основное средство'"),
				СтрокаТаблицы.НомерСтроки, ИмяСписка, ТекстСообщенияРасшифровка);
				Поле = Префикс + "ОсновноеСредство";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьПараметрыРегистрацииПрослеживаемогоТовара(ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Основание,"   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"        // <Дата> - период движений - дата документа
	+ "Организация,"   // <СправочникСсылка.Организации>
	+ "Склад";    // <СправочникСсылка.Склады>
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТовары, Реквизиты, Движения, Списание = Ложь)
	
	Если Не ЗначениеЗаполнено(ТаблицаТовары) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыДвиженияТоваров(ТаблицаТовары);
	
	Для Каждого СтрокаТаблицы Из Параметры.Товары Цикл
		Если Списание Тогда
			Запись = Движения.ПрослеживаемыеТовары.ДобавитьРасход();
		Иначе
			Запись = Движения.ПрослеживаемыеТовары.ДобавитьПриход();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
	КонецЦикла;
	
	Движения.ПрослеживаемыеТовары.Записывать = Истина;

КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
//Процедура ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки)
//	
//	Отбор = Новый Структура("Номенклатура, СтранаПроисхождения",
//	СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения);
Процедура ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, Комплектующий = Неопределено)
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПринятиеКУчетуОС")
		Или ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.МодернизацияОС")Тогда
		Отбор = Новый Структура("Номенклатура", ?(Комплектующий = Неопределено, ДокументОбъект.Номенклатура, Комплектующий));
	Иначе
		Отбор = Новый Структура("Номенклатура, СтранаПроисхождения",
		СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения);
	КонецЕсли;
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)

	ОстаткиРНПТ = ТаблицаРНПТОстатки.НайтиСтроки(Отбор);
	Для Каждого ПодобранныйРНПТ Из ОстаткиРНПТ Цикл
		Если ОсталосьПодобрать = 0 Тогда
			Прервать;
		КонецЕсли;
		// Возможные "нулевые" остатки пропускаем.
		Если ПодобранныйРНПТ.Количество <= 0
			ИЛИ ПодобранныйРНПТ.КоличествоПрослеживаемости <= 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		Если ОсталосьПодобрать >= ПодобранныйРНПТ.Количество Тогда
			// Добавляем все количество из подобранного РНПТ
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодобранныйРНПТ);
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			ОсталосьПодобрать = ОсталосьПодобрать - ПодобранныйРНПТ.Количество;
			ТаблицаРНПТОстатки.Удалить(ПодобранныйРНПТ);
		Иначе
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодобранныйРНПТ);
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			НоваяСтрока.Количество = ОсталосьПодобрать;
			
			МассивКоэффициентов = Новый Массив;
			МассивКоэффициентов.Добавить(ПодобранныйРНПТ.Количество - ОсталосьПодобрать);
			МассивКоэффициентов.Добавить(ОсталосьПодобрать);
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			ПодобранныйРНПТ.КоличествоПрослеживаемости, МассивКоэффициентов, 11);
			
			Если МассивСумм <> Неопределено Тогда
				ПодобранноеКоличествоРНПТ = МассивСумм[1];
				НоваяСтрока.КоличествоПрослеживаемости = ПодобранноеКоличествоРНПТ;
			Иначе
				ПодобранноеКоличествоРНПТ = 0;
			КонецЕсли;
			
			ПодобранныйРНПТ.Количество = ПодобранныйРНПТ.Количество - ОсталосьПодобрать;
			ПодобранныйРНПТ.КоличествоПрослеживаемости = ПодобранныйРНПТ.КоличествоПрослеживаемости - ПодобранноеКоличествоРНПТ;
			
			ОсталосьПодобрать = 0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, ЭтоКомиссия)
	
	ТаблицаТоваров.Свернуть("Номенклатура,СтранаПроисхождения");
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтранаПроисхождения", "СтранаПроисхождения");
	// Установим дополнительные ограничения по комиссионным товарам
	Комиссионер = ?(ЭтоКомиссия, ДокументОбъект.Контрагент, Справочники.Контрагенты.ПустаяСсылка());
	Комитент    = Справочники.Контрагенты.ПустаяСсылка();
	ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка();
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваров")
		И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту Тогда
		Комитент    = ДокументОбъект.Контрагент;
		ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		Комитент    = ДокументОбъект.Контрагент;
		ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию;
	КонецЕсли;
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", Комиссионер);
	ЭлементБлокировки.УстановитьЗначение("Комитент",    Комитент);
	ЭлементБлокировки.УстановитьЗначение("ВидЗапасов", ВидЗапасов);
	
	Блокировка.Заблокировать();
	
	// При изменении даты проведенного документа в большую сторону при получении остатков не учитываем движения текущего
	// документа. 
	ИсключитьДвиженияДокументаИзОстатков = ДокументОбъект.Проведен
		И ДокументОбъект.Дата > ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "Дата");
	
	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментСписания", МоментСписания);
	Запрос.УстановитьПараметр("Организация",    ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Комиссионер",    Комиссионер);
	Запрос.УстановитьПараметр("Комитент",       Комитент);
	Запрос.УстановитьПараметр("ВидЗапасов",     ВидЗапасов);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ИсключитьДвиженияДокументаИзОстатков", ИсключитьДвиженияДокументаИзОстатков);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиРНПТСИсключеннымиДвижениями.Номенклатура КАК Номенклатура,
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ КАК РНПТ,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.Количество) КАК Количество,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости
	|ПОМЕСТИТЬ ОстаткиРНПТ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура,
	|		ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|		ПрослеживаемыеТоварыОстатки.КоличествоОстаток КАК Количество,
	|		ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|				&МоментСписания,
	|				Организация = &Организация
	|					И (Номенклатура, СтранаПроисхождения) В
	|						(ВЫБРАТЬ
	|							ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|							ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения
	|						ИЗ
	|							ТаблицаТоваров КАК ТаблицаТоваров)
	|					И Комиссионер = &Комиссионер
	|					И Комитент = &Комитент
	|					И ВидЗапасов = &ВидЗапасов) КАК ПрослеживаемыеТоварыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрослеживаемыеТовары.Номенклатура,
	|		ПрослеживаемыеТовары.СтранаПроисхождения,
	|		ПрослеживаемыеТовары.РНПТ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеТовары.Количество
	|			ИНАЧЕ ПрослеживаемыеТовары.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|			ИНАЧЕ ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|	ГДЕ
	|		&ИсключитьДвиженияДокументаИзОстатков
	|		И ПрослеживаемыеТовары.Регистратор = &ТекущийДокумент) КАК ОстаткиРНПТСИсключеннымиДвижениями
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРНПТСИсключеннымиДвижениями.Номенклатура,
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ОстаткиРНПТ.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ОстаткиРНПТ.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	ЕСТЬNULL(ОстаткиРНПТ.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК РНПТ,
	|	ЕСТЬNULL(СвойстваРНПТ.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРНПТ КАК ОстаткиРНПТ
	|		ПО ТаблицаТоваров.Номенклатура = ОстаткиРНПТ.Номенклатура
	|			И ТаблицаТоваров.СтранаПроисхождения = ОстаткиРНПТ.СтранаПроисхождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваРНПТ КАК СвойстваРНПТ
	|		ПО (СвойстваРНПТ.Организация = &Организация)
	|			И (ОстаткиРНПТ.РНПТ = СвойстваРНПТ.РНПТ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПоступления";
	
	ТаблицаРНПТОстатки = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРНПТОстатки.Индексы.Добавить("Номенклатура");
	ТаблицаРНПТОстатки.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРНПТОстатки;
	
КонецФункции

Функция ТаблицаРНПТОстаткиВозвратОпт(ДокументОбъект, ТаблицаТоваров, ДокументРеализации)
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтранаПроисхождения", "СтранаПроисхождения");
	
	// Установим дополнительные ограничения по комиссионным товарам
	Комиссионер = Справочники.Контрагенты.ПустаяСсылка();
	Комитент    = Справочники.Контрагенты.ПустаяСсылка();
	ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка();
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", Комиссионер);
	ЭлементБлокировки.УстановитьЗначение("Комитент",    Комитент);
	ЭлементБлокировки.УстановитьЗначение("ВидЗапасов", ВидЗапасов);
	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",           ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТаблицаТовары",         ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТекущийДокумент",       ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента", ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("Комитент",              Комитент);
	Запрос.УстановитьПараметр("Комиссионер",           Комиссионер);
	Запрос.УстановитьПараметр("ВидЗапасов",            ВидЗапасов);
	Запрос.УстановитьПараметр("ОснованиеДляВозврата",  ДокументРеализации);
	Запрос.УстановитьПараметр("Ссылка",                ДокументОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.Цена КАК Цена
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения,
	|	Цена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияТоваровУслугТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Количество КАК Количество,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация
	|ПОМЕСТИТЬ ИсходнаяРеализация
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
	|			ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка
	|				И РеализацияТоваровУслугТовары.ИдентификаторСтроки = РеализацияТоваровУслугСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ТаблицаТовары.Номенклатура = РеализацияТоваровУслугТовары.Номенклатура
	|			И ТаблицаТовары.СтранаПроисхождения = РеализацияТоваровУслугТовары.СтранаПроисхождения
	|			И ТаблицаТовары.Цена = РеализацияТоваровУслугТовары.Цена
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &ОснованиеДляВозврата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТовары.Регистратор КАК Регистратор,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.Цена КАК Цена
	|ПОМЕСТИТЬ ДвиженияПоВозвратам
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ПО (ПрослеживаемыеТовары.Организация = &Организация)
	|			И ТаблицаТовары.Номенклатура = ПрослеживаемыеТовары.Номенклатура
	|			И ТаблицаТовары.СтранаПроисхождения = ПрослеживаемыеТовары.СтранаПроисхождения
	|			И (ПрослеживаемыеТовары.Комиссионер = &Комиссионер)
	|			И (ПрослеживаемыеТовары.Комитент = &Комитент)
	|			И (ПрослеживаемыеТовары.ВидЗапасов = &ВидЗапасов)
	|			И (ПрослеживаемыеТовары.Период < &ДатаТекущегоДокумента)
	|			И (ПрослеживаемыеТовары.ОснованиеДляВозврата = &ОснованиеДляВозврата)
	|			И (ПрослеживаемыеТовары.Регистратор <> &Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТовары.Регистратор,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СтранаПроисхождения,
	|	ТаблицаТовары.Цена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	-ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Количество КАК Количество,
	|	-ВозвратТоваровОтПокупателяСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ВозвратТоваровОтПокупателяТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВозвратТоваровОтПокупателяТовары.Ссылка.Организация КАК Организация
	|ПОМЕСТИТЬ РеализацияМинусВозврат
	|ИЗ
	|	ДвиженияПоВозвратам КАК ДвиженияПоВозвратам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.СведенияПрослеживаемости КАК ВозвратТоваровОтПокупателяСведенияПрослеживаемости
	|			ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Ссылка
	|				И ВозвратТоваровОтПокупателяТовары.ИдентификаторСтроки = ВозвратТоваровОтПокупателяСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ДвиженияПоВозвратам.Регистратор = ВозвратТоваровОтПокупателяТовары.Ссылка
	|			И ДвиженияПоВозвратам.Номенклатура = ВозвратТоваровОтПокупателяТовары.Номенклатура
	|			И ДвиженияПоВозвратам.СтранаПроисхождения = ВозвратТоваровОтПокупателяТовары.СтранаПроисхождения
	|			И ДвиженияПоВозвратам.Цена = ВозвратТоваровОтПокупателяТовары.Цена
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.РНПТ,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) - ЕСТЬNULL(ИсходнаяРеализация.Количество, 0),
	|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ИсходнаяРеализация.КоличествоПрослеживаемости, 0),
	|	ИсходнаяРеализация.СтранаПроисхождения,
	|	ИсходнаяРеализация.Организация
	|ИЗ
	|	ИсходнаяРеализация КАК ИсходнаяРеализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			КорректировкаРеализацииТовары.Номенклатура КАК Номенклатура,
	|			КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|			КорректировкаРеализацииСведенияПрослеживаемости.Количество КАК Количество,
	|			КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|			КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|			КорректировкаРеализацииТовары.СтранаПроисхожденияДоИзменения КАК СтранаПроисхожденияДоИзменения
	|		ИЗ
	|			ДвиженияПоВозвратам КАК ДвиженияПоВозвратам
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|					ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|					ПО КорректировкаРеализацииТовары.Ссылка = КорректировкаРеализацииСведенияПрослеживаемости.Ссылка
	|						И КорректировкаРеализацииТовары.ИдентификаторСтроки = КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки
	|				ПО ДвиженияПоВозвратам.Регистратор = КорректировкаРеализацииТовары.Ссылка
	|					И ДвиженияПоВозвратам.Номенклатура = КорректировкаРеализацииТовары.Номенклатура
	|					И ДвиженияПоВозвратам.СтранаПроисхождения = КорректировкаРеализацииТовары.СтранаПроисхожденияДоИзменения) КАК ВложенныйЗапрос
	|		ПО ИсходнаяРеализация.ИдентификаторСтроки = ВложенныйЗапрос.ИдентификаторСтроки
	|			И ИсходнаяРеализация.РНПТ = ВложенныйЗапрос.РНПТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсходнаяРеализация.Номенклатура,
	|	ИсходнаяРеализация.РНПТ,
	|	ИсходнаяРеализация.Количество,
	|	ИсходнаяРеализация.КоличествоПрослеживаемости,
	|	ИсходнаяРеализация.СтранаПроисхождения,
	|	ИсходнаяРеализация.Организация
	|ИЗ
	|	ИсходнаяРеализация КАК ИсходнаяРеализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозврат.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозврат.РНПТ КАК РНПТ,
	|	СУММА(РеализацияМинусВозврат.Количество) КАК Количество,
	|	СУММА(РеализацияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	РеализацияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозврат.Организация КАК Организация
	|ПОМЕСТИТЬ РеализацияМинусВозвратСводно
	|ИЗ
	|	РеализацияМинусВозврат КАК РеализацияМинусВозврат
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияМинусВозврат.РНПТ,
	|	РеализацияМинусВозврат.Номенклатура,
	|	РеализацияМинусВозврат.СтранаПроисхождения,
	|	РеализацияМинусВозврат.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозвратСводно.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозвратСводно.РНПТ КАК РНПТ,
	|	РеализацияМинусВозвратСводно.Количество КАК Количество,
	|	РеализацияМинусВозвратСводно.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализацияМинусВозвратСводно.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозвратСводно.Организация КАК Организация
	|ИЗ
	|	РеализацияМинусВозвратСводно КАК РеализацияМинусВозвратСводно
	|ГДЕ
	|	РеализацияМинусВозвратСводно.Количество > 0";
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");
	ТаблицаРезультат.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРезультат;

КонецФункции

Функция ТаблицаРНПТОстаткиВозвратРозница(ДокументОбъект, ТаблицаТоваров)
		
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтранаПроисхождения", "СтранаПроисхождения");
	
	// Установим дополнительные ограничения по комиссионным товарам
	Комиссионер = Справочники.Контрагенты.ПустаяСсылка();
	Комитент    = Справочники.Контрагенты.ПустаяСсылка();
	ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка();
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", Комиссионер);
	ЭлементБлокировки.УстановитьЗначение("Комитент",    Комитент);
	ЭлементБлокировки.УстановитьЗначение("ВидЗапасов", ВидЗапасов);
	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",           ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТаблицаТоваров",        ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТекущийДокумент",       ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента", КонецДня(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("Комитент",              Комитент);
	Запрос.УстановитьПараметр("Комиссионер",           Комиссионер);
	Запрос.УстановитьПараметр("ВидЗапасов",            ВидЗапасов);
	Запрос.УстановитьПараметр("ДатаРеализации", 
		НачалоДня(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Сделка, "Дата")));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	&ДатаРеализации КАК ДатаРеализации
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения,
	|	ДатаРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозврат.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозврат.ДатаРеализации КАК ДатаРеализации,
	|	РеализацияМинусВозврат.РНПТ КАК РНПТ,
	|	СУММА(РеализацияМинусВозврат.Количество) КАК Количество,
	|	СУММА(РеализацияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|		ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ТаблицаТоваров.ДатаРеализации КАК ДатаРеализации,
	|		ЕСТЬNULL(РеализованныеТовары.Количество, 0) КАК Количество,
	|		ЕСТЬNULL(РеализованныеТовары.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|		ЕСТЬNULL(РеализованныеТовары.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК РНПТ
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК РеализованныеТовары
	|			ПО (&Организация = РеализованныеТовары.Организация)
	|				И ТаблицаТоваров.Номенклатура = РеализованныеТовары.Номенклатура
	|				И ТаблицаТоваров.СтранаПроисхождения = РеализованныеТовары.СтранаПроисхождения
	|				И (РеализованныеТовары.Комиссионер = &Комиссионер)
	|				И (РеализованныеТовары.Комитент = &Комитент)
	|				И (РеализованныеТовары.ВидЗапасов = &ВидЗапасов)
	|				И (РеализованныеТовары.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах)
	|				И (РеализованныеТовары.Регистратор <> &ТекущийДокумент)
	|				И (РеализованныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|				И (ТаблицаТоваров.ДатаРеализации = НАЧАЛОПЕРИОДА(РеализованныеТовары.Период, ДЕНЬ))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура,
	|		ТаблицаТоваров.СтранаПроисхождения,
	|		ТаблицаТоваров.ДатаРеализации,
	|		ЕСТЬNULL(-ВозвращенныеТовары.Количество, 0),
	|		ЕСТЬNULL(-ВозвращенныеТовары.КоличествоПрослеживаемости, 0),
	|		ЕСТЬNULL(ВозвращенныеТовары.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
	|			ПО (&Организация = ВозвращенныеТовары.Организация)
	|				И (ВозвращенныеТовары.Номенклатура = ТаблицаТоваров.Номенклатура)
	|				И (ВозвращенныеТовары.СтранаПроисхождения = ТаблицаТоваров.СтранаПроисхождения)
	|				И (ВозвращенныеТовары.Комиссионер = &Комиссионер)
	|				И (ВозвращенныеТовары.Комитент = &Комитент)
	|				И (ВозвращенныеТовары.ВидЗапасов = &ВидЗапасов)
	|				И (ВозвращенныеТовары.Период <= &ДатаТекущегоДокумента)
	|				И (ВозвращенныеТовары.Регистратор <> &ТекущийДокумент)
	|				И (ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|				И (ВозвращенныеТовары.ДатаРеализации = ТаблицаТоваров.ДатаРеализации)) КАК РеализацияМинусВозврат
	|ГДЕ
	|	РеализацияМинусВозврат.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияМинусВозврат.РНПТ,
	|	РеализацияМинусВозврат.СтранаПроисхождения,
	|	РеализацияМинусВозврат.ДатаРеализации,
	|	РеализацияМинусВозврат.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	РНПТ";
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");
	ТаблицаРезультат.Индексы.Добавить("СтранаПроисхождения");
	ТаблицаРезультат.Индексы.Добавить("ДатаРеализации");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ТаблицаРНПТИсходныйДокумент(ДокументОбъект, ТаблицаТоваров)
	
	Если ТипЗнч(ДокументОбъект) <> Тип("ДокументОбъект.КорректировкаРеализации") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДокументРеализации = ДокументОбъект.ДокументРеализации;
	Если ТипЗнч(ДокументРеализации) <> Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		И ТипЗнч(ДокументРеализации) <> Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяВидаДокумента = ДокументРеализации.Метаданные().Имя;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Количество КАК Количество,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияТоваровУслугТовары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ."+ИмяВидаДокумента+".Товары КАК РеализацияТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ."+ИмяВидаДокумента+".СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
	|		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка
	|			И РеализацияТоваровУслугТовары.ИдентификаторСтроки = РеализацияТоваровУслугСведенияПрослеживаемости.ИдентификаторСтроки
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &ДокументРеализации
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-11-11 (#4405)
	//|	И &УсловиеДляКорректировки
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-11-11 (#4405)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваровУслугСведенияПрослеживаемости.НомерСтроки";
	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-11-11 (#4405)
	//Если ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеДляКорректировки", "НЕ РеализацияТоваровУслугСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ");
	//Иначе
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеДляКорректировки", "Истина");
	//КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-11-11 (#4405)
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДокументРеализации", ДокументРеализации);
	ТаблицаРНПТИсходныйДокумент = Запрос.Выполнить().Выгрузить();
	ТаблицаРНПТИсходныйДокумент.Индексы.Добавить("ИдентификаторСтроки");
	ТаблицаРНПТИсходныйДокумент.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРНПТИсходныйДокумент;
	
КонецФункции

Процедура СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ИмяТабличнойЧасти,
											ЭтоВыпускПродукции = Ложь, ДокументОснованиеВТЧ = Ложь, ЭтоВозвратКомитенту = Ложь)
	
	ТребуемоеКоличество = СтрокаСРНПТ.Количество;
	ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	ЭтоСписаниеОС = Ложь;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") И ИмяТабличнойЧасти = "ТоварыВозвращенные" Тогда
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ, ДокументРеализации, ПоТекущемуДокументу",
		СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения, СтрокаСРНПТ.РНПТ,
		СтрокаТабличнойЧасти.ДокументРеализации, СтрокаТабличнойЧасти.ПоТекущемуДокументу);
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И Не ЭтоВозвратКомитенту Тогда
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ, Сделка, Комитент, ВидЗапасов",
		СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения, СтрокаСРНПТ.РНПТ,
		?(ДокументОснованиеВТЧ, СтрокаТабличнойЧасти.Сделка, ДокументОбъект.Сделка),
		СтрокаТабличнойЧасти.Контрагент, 
		?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Контрагент), Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента,
		Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка()));
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ",
		?(ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование,
		ДокументОбъект.Номенклатура, СтрокаСРНПТ.Номенклатура),
		СтрокаСРНПТ.СтранаПроисхождения, СтрокаСРНПТ.РНПТ);
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.МодернизацияОС") Тогда
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ",
		СтрокаСРНПТ.Номенклатура, СтрокаСРНПТ.СтранаПроисхождения, СтрокаСРНПТ.РНПТ);
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.СписаниеОС") 
		Или ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ПередачаОС") Тогда
		ОтборОстатки = Новый Структура("ОС, Комплектующие, СтранаПроисхождения, РНПТ",
		СтрокаТабличнойЧасти.ОсновноеСредство, СтрокаСРНПТ.Номенклатура, СтрокаСРНПТ.СтранаПроисхождения, СтрокаСРНПТ.РНПТ);
		ЭтоСписаниеОС = Истина;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
	Иначе
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ",
		СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения, СтрокаСРНПТ.РНПТ);
	КонецЕсли;
	ОстаткиРНПТ = ТаблицаРНПТОстатки.НайтиСтроки(ОтборОстатки);
	
	Если ОстаткиРНПТ.Количество() = 0 
		ИЛИ ОстаткиРНПТ[0].Количество < ТребуемоеКоличество
		ИЛИ ОстаткиРНПТ[0].КоличествоПрослеживаемости < ТребуемоеКоличествоПрослеживаемости Тогда
		Если ЭтоВыпускПродукции Тогда
			ИмяТабличнойЧасти = "Продукция"; 
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для целей учета прослеживаемости не списано %1 РНПТ %2 по материалу %3'"),
			Формат(ТребуемоеКоличество, "ЧЦ=15; ЧДЦ=3"),
			СтрокаСРНПТ.РНПТ,
			СтрокаТабличнойЧасти.Номенклатура);
			СтрокаПродукции = ДокументОбъект.Продукция.Найти(СтрокаТабличнойЧасти.КлючСтроки, "КлючСтроки");
			НомерСтроки = ?(СтрокаПродукции = Неопределено, 0,СтрокаПродукции.НомерСтроки-1);
			Поле = "" + ИмяТабличнойЧасти + "["+ Формат(НомерСтроки,"ЧГ=") + "].Материалы";
			
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, , Отказ);
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-20 (#4405)
		ИначеЕсли ЭтоСписаниеОС Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для целей учета прослеживаемости не списано %1 РНПТ %2 по основному средству %3'"),
			Формат(ТребуемоеКоличество, "ЧЦ=15; ЧДЦ=3"),
			СтрокаСРНПТ.РНПТ, СтрокаТабличнойЧасти.ОсновноеСредство);
			Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].ОсновноеСредство";
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
			Если ОстаткиРНПТ.Количество() <> 0 Тогда
				ТаблицаРНПТОстатки.Удалить(ОстаткиРНПТ[0]);
			КонецЕсли;
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-20 (#4405)
		Иначе
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для целей учета прослеживаемости не списано %1 РНПТ %2'"),
			Формат(ТребуемоеКоличество, "ЧЦ=15; ЧДЦ=3"),
			СтрокаСРНПТ.РНПТ);
			Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
		КонецЕсли;
		
	Иначе
		Если ОстаткиРНПТ[0].Количество > ТребуемоеКоличество
			И ОстаткиРНПТ[0].КоличествоПрослеживаемости > ТребуемоеКоличествоПрослеживаемости Тогда
			ОстаткиРНПТ[0].Количество = ОстаткиРНПТ[0].Количество - ТребуемоеКоличество;
			ОстаткиРНПТ[0].КоличествоПрослеживаемости = ОстаткиРНПТ[0].КоличествоПрослеживаемости - ТребуемоеКоличествоПрослеживаемости;
		Иначе
			ТаблицаРНПТОстатки.Удалить(ОстаткиРНПТ[0]);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура СверитьОстаткиСИсходнымДокументомРеализации(СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент, ТребуемоеКоличество, ТребуемоеКоличествоПрослеживаемости)
	
	Если ТаблицаРНПТИсходныйДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтборИсходныйДокумент = Новый Структура("ИдентификаторСтроки, СтранаПроисхождения", 
	СтрокаТабличнойЧасти.ИдентификаторСтроки, СтрокаТабличнойЧасти.СтранаПроисхождения);
	ИсходныеРНПТ = ТаблицаРНПТИсходныйДокумент.НайтиСтроки(ОтборИсходныйДокумент);
	Для Каждого ИсходныйРНПТ ИЗ ИсходныеРНПТ Цикл
		Если ТребуемоеКоличество = 0 И ТребуемоеКоличествоПрослеживаемости = 0 Тогда
			Прервать;
		КонецЕсли;
		Если ИсходныйРНПТ.Количество <= ТребуемоеКоличество
			И ИсходныйРНПТ.КоличествоПрослеживаемости <= ТребуемоеКоличествоПрослеживаемости Тогда
			ТребуемоеКоличество = ТребуемоеКоличество - ИсходныйРНПТ.Количество;
			ТребуемоеКоличествоПрослеживаемости = ТребуемоеКоличествоПрослеживаемости - ИсходныйРНПТ.КоличествоПрослеживаемости;
			ТаблицаРНПТИсходныйДокумент.Удалить(ИсходныйРНПТ);
		Иначе
			Если ИсходныйРНПТ.Количество > ТребуемоеКоличество Тогда
				ИсходныйРНПТ.Количество = ИсходныйРНПТ.Количество - ТребуемоеКоличество;
				ТребуемоеКоличество = 0;
			Иначе
				ТребуемоеКоличество = ТребуемоеКоличество - ИсходныйРНПТ.Количество;
			КонецЕсли;
			Если ИсходныйРНПТ.КоличествоПрослеживаемости > ТребуемоеКоличествоПрослеживаемости Тогда
				ИсходныйРНПТ.КоличествоПрослеживаемости = ИсходныйРНПТ.КоличествоПрослеживаемости - ТребуемоеКоличествоПрослеживаемости;
				ТребуемоеКоличествоПрослеживаемости = 0;
			Иначе
				ТребуемоеКоличествоПрослеживаемости = ТребуемоеКоличествоПрослеживаемости - ИсходныйРНПТ.КоличествоПрослеживаемости;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПодобратьРНПТИзИсходногоДокумента(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент)
	
	Если ТаблицаРНПТИсходныйДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИсходныеРНПТ = ТаблицаРНПТИсходныйДокумент.НайтиСтроки(Новый Структура("ИдентификаторСтроки, СтранаПроисхождения", 
	СтрокаТабличнойЧасти.ИдентификаторСтроки, СтрокаТабличнойЧасти.СтранаПроисхождения));
	
	Для Каждого ИсходныйРНПТ ИЗ ИсходныеРНПТ Цикл
		Если ОсталосьПодобрать = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если ОсталосьПодобрать >= ИсходныйРНПТ.Количество Тогда
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходныйРНПТ);
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			ОсталосьПодобрать = ОсталосьПодобрать - ИсходныйРНПТ.Количество;
			ТаблицаРНПТИсходныйДокумент.Удалить(ИсходныйРНПТ);
		Иначе
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходныйРНПТ);
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			НоваяСтрока.Количество = ОсталосьПодобрать;
			
			МассивКоэффициентов = Новый Массив;
			МассивКоэффициентов.Добавить(ИсходныйРНПТ.Количество - ОсталосьПодобрать);
			МассивКоэффициентов.Добавить(ОсталосьПодобрать);
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			ИсходныйРНПТ.КоличествоПрослеживаемости, МассивКоэффициентов, 11);
			
			НоваяСтрока.КоличествоПрослеживаемости = МассивСумм[1];
			
			ИсходныйРНПТ.Количество = ИсходныйРНПТ.Количество - ОсталосьПодобрать;
			ИсходныйРНПТ.КоличествоПрослеживаемости = ИсходныйРНПТ.КоличествоПрослеживаемости - МассивСумм[1];
			
			ОсталосьПодобрать = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьПараметрыСвойстваРНПТ(ТаблицаРНПТ)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы реализованных товаров:
	СписокОбязательныхКолонок = ""
	+ "РНПТ"; // <СправочникСсылка.НомераГТД>
	
	Параметры.Вставить("ТаблицаРНПТ", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРНПТ, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьПараметрыДвиженияТоваров(ТаблицаТовары)
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Номенклатура,"                // <СправочникСсылка.Номенклатура>
	+ "СтранаПроисхождения,"         // <СправочникСсылка.СтраныМира>
	+ "Комитент,"                    // <СправочникСсылка.Контрагенты>
	+ "ВидЗапасов,"                  // <ПеречислениеСсылка.ВидыЗапасовПрослеживаемыхТоваров>
	+ "Комиссионер,"                 // <СправочникСсылка.Контрагенты>
	+ "РНПТ,"                        // <СправочникСсылка.НомераГТД>
	+ "Количество,"                  // <Число,15,3> - количество
	+ "КоличествоПрослеживаемости,"  // <Число,26,11> - количество в единицах прослеживаемости
	+ "ДатаРеализации,"              // <Дата>
	+ "ОснованиеДляВозврата";        // <ДокументСсылка.РеализацияТоваровИУслуг>,<ДокументСсылка.ПоступлениеТоваровУслуг> 
	
	Параметры.Вставить("Товары", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТовары, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
//Функция ПодготовитьПараметрыОперацииСПрослеживаемымиТоварами(ТаблицаОперации)
Функция ПодготовитьПараметрыОперацииСПрослеживаемымиТоварами(ТаблицаОперации, ОС)
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы операций с прослеживаемыми товарами:
	СписокОбязательныхКолонок = ""
	+ "ОтражениеВОтчетности,"          // <ПеречислениеСсылка.ПорядокОтраженияВОтчетностиПоПрослеживаемости> - отчетная форма операции
	+ "ПериодОперации,"                // <Дата> - начало квартала в котором отражается операция
	+ "РНПТ,"                          // <СправочникСсылка.НомераГТД>
	+ "ДокументОперации,"              // <ДокументСсылка>
	+ "Контрагент,"                    // <СправочникСсылка.Контрагенты>
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура>
	+ "Количество,"                    // <Число,15,3> - количество
	+ "КоличествоПрослеживаемости,"    // <Число,26,11> - количество в единицах прослеживаемости
	+ "СуммаБезНДС,"                   // <Число,15,2>
	+ "ТипДокументаВПрослеживаемости," // <СправочникСсылка.ТипыДокументов>
	+ "НомерДокумента,"                // <Строка, 11>
	+ "ДатаДокумента,"                 // <Дата>
	+ "КодОперации";                   // <СправочникСсылка.КодыОперацийПрослеживаемости>
	
	ПодготовленнаяТаблица = ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаОперации, СписокОбязательныхКолонок);
		
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
	Если Не ОС Тогда
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
	ПоляОтбораУникальныхЗаписей = "ОтражениеВОтчетности,ДокументОперации,Контрагент,Номенклатура,СуммаБезНДС";
	ТаблицаОперацийСНесколькимиРНПТ = ПодготовленнаяТаблица.Скопировать(, ПоляОтбораУникальныхЗаписей);
	ТаблицаОперацийСНесколькимиРНПТ.Колонки.Добавить("КоличествоУникальных", Новый ОписаниеТипов("Число"));
	ТаблицаОперацийСНесколькимиРНПТ.ЗаполнитьЗначения(1, "КоличествоУникальных");
	ТаблицаОперацийСНесколькимиРНПТ.Свернуть(ПоляОтбораУникальныхЗаписей, "КоличествоУникальных");
	Отбор = Новый Структура("КоличествоУникальных", 1);
	СтрокиКУдалению = ТаблицаОперацийСНесколькимиРНПТ.НайтиСтроки(Отбор);
	Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ТаблицаОперацийСНесколькимиРНПТ.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
	// Для товаров с несколькими РНПТ необходимо распределить сумму операции пропорционально количеству различных РНПТ.
	Если ТаблицаОперацийСНесколькимиРНПТ.Количество() > 0 Тогда
		
		// Отсортируем таблицу для последующего одинакого распределения суммы по количеству РНПТ.
		ПодготовленнаяТаблица.Сортировать("Номенклатура Возр, РНПТ Возр");
		ПодготовленнаяТаблица.Индексы.Добавить(ПоляОтбораУникальныхЗаписей);
		ТаблицаОперацийСНесколькимиРНПТ.Индексы.Добавить(ПоляОтбораУникальныхЗаписей);
		
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
		ТочностьОкругления = 2;
		Если ПодготовленнаяТаблица[0].ОтражениеВОтчетности <> Перечисления.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях Тогда
			ТочностьОкругления = 0;
		КонецЕсли;
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
		
		Отбор = Новый Структура(ПоляОтбораУникальныхЗаписей);
		Для Каждого СтрокаТаблицы Из ПодготовленнаяТаблица Цикл
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.СуммаБезНДС) Тогда
				Продолжить;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
			
			СтрокиССуммамиКРаспределению = ТаблицаОперацийСНесколькимиРНПТ.НайтиСтроки(Отбор);
			Если СтрокиССуммамиКРаспределению.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			// Удалим строки с суммами к распределению, чтобы больше не пытаться их распределить.
			Для Каждого СтрокаКУдалению Из СтрокиССуммамиКРаспределению Цикл
				ТаблицаОперацийСНесколькимиРНПТ.Удалить(СтрокаКУдалению);
			КонецЦикла;
			
			СтрокиТребующиеРаспределенияСумм = ПодготовленнаяТаблица.НайтиСтроки(Отбор);
			КоличествоСтрокКРаспределению = СтрокиТребующиеРаспределенияСумм.Количество();
			МассивКоэффициентов = Новый Массив;
			Для Каждого СтрокаКРаспределению Из СтрокиТребующиеРаспределенияСумм Цикл
				МассивКоэффициентов.Добавить(СтрокаКРаспределению.Количество);
			КонецЦикла;
			
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			СтрокаТаблицы.СуммаБезНДС, МассивКоэффициентов, 2);
			
			Для ИндексЗаписи = 0 По КоличествоСтрокКРаспределению - 1 Цикл
				СтрокиТребующиеРаспределенияСумм[ИндексЗаписи].СуммаБезНДС = МассивСумм[ИндексЗаписи];
			КонецЦикла
		КонецЦикла;
	КонецЕсли;
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
	КонецЕсли;
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405) 
	Параметры.Вставить("Операции", ПодготовленнаяТаблица);
	
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьТаблицуРНПТ(ТаблицаТоваров, ТаблицаРеквизитов, Отказ)
	
	Если Не ЗначениеЗаполнено(ТаблицаТоваров)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыРНПТ(ТаблицаТоваров, ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаРНПТ = ПодготовитьТаблицуРНПТпоТовару(Реквизиты, Параметры.ТаблицаТоваров, Отказ);
	
	Возврат ТаблицаРНПТ;
	
КонецФункции

Процедура СформироватьДвиженияПрослеживаемостьТоваров(ТаблицаДвиженийРНПТ, Движения, Отказ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ТаблицаДвиженийРНПТ) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДвиженийРНПТ Цикл
		Запись = Движения.ПрослеживаемыеТовары.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
	КонецЦикла;
	
	Движения.ПрослеживаемыеТовары.Записывать = Истина;

КонецПроцедуры

Процедура СформироватьДвиженияГТД(ТаблицаДвиженийГТД, Движения, Отказ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ТаблицаДвиженийГТД) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаГТД Из ТаблицаДвиженийГТД Цикл
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период = СтрокаГТД.Период;
		Проводка.Организация = СтрокаГТД.Организация;
		Проводка.Содержание  = "Списание ГТД";
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.ГТД;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", СтрокаГТД.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НомераГТД", СтрокаГТД.НомерГТД);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтраныПроисхождения", СтрокаГТД.СтранаПроисхождения);
		Проводка.КоличествоДт = -СтрокаГТД.Количество;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьТаблицуОстатковГТД(ТаблицаТоваров, ТаблицаРеквизитов, Отказ)
	
	Если Не ЗначениеЗаполнено(ТаблицаТоваров)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыГТД(ТаблицаТоваров, ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	Если Не ЗначениеЗаполнено(Реквизиты.РНПТ)
		ИЛИ ТипЗнч(Реквизиты.Регистратор) <> Тип("ДокументСсылка.УведомлениеОбОстаткахПрослеживаемыхТоваров") Тогда

		Возврат Неопределено;
	КонецЕсли;
	
	ТаблицаГТД = ПодготовитьТаблицуОстатковГТДПоТовару(Реквизиты, Параметры.ТаблицаТоваров, Отказ);
	
	Возврат ТаблицаГТД;
	
КонецФункции

Функция ПодготовитьТаблицуРНПТпоТовару(Реквизиты, ТаблицаТоваров, Отказ)

	ТаблицаТоваровСРНПТ = ТаблицаТоваров.СкопироватьКолонки();
	ТаблицаТоваровСРНПТ.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаТоваровСРНПТ.Колонки.Добавить("РНПТ", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТаблицаТоваровСРНПТ.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	Если Не ЗначениеЗаполнено(Реквизиты.РНПТ) Тогда
		Возврат ТаблицаТоваровСРНПТ;
	КонецЕсли;
	
	Для каждого ТекущаяСтрока Из ТаблицаТоваров Цикл
		
		НоваяСтрока = ТаблицаТоваровСРНПТ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		
	КонецЦикла;
	
	Возврат ТаблицаТоваровСРНПТ;
	
КонецФункции

Функция ПодготовитьТаблицуОстатковГТДПоТовару(Реквизиты, ТаблицаТоваров, Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ВТ_ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ВТ_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ХозрасчетныйОстатки.Субконто2 КАК НомерГТД,
	|	ВТ_ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстатки.Валюта КАК Валюта,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	ВТ_ТаблицаТоваров КАК ВТ_ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&МоментСписания, Счет = &СчетГТД, , Организация = &Организация) КАК ХозрасчетныйОстатки
	|		ПО ВТ_ТаблицаТоваров.Номенклатура = ХозрасчетныйОстатки.Субконто1
	|			И ВТ_ТаблицаТоваров.СтранаПроисхождения = ХозрасчетныйОстатки.Субконто3";
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	МоментСписания = Новый Граница(Реквизиты.Регистратор.МоментВремени(), ВидГраницы.Исключая);
	Запрос.УстановитьПараметр("МоментСписания", МоментСписания);
	Запрос.УстановитьПараметр("СчетГТД", ПланыСчетов.Хозрасчетный.ГТД);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров); 
	
	ТаблицаОстатковГТД = Запрос.Выполнить().Выгрузить();
	ТаблицаОстатковГТД.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ТаблицаОстатковГТД.ЗаполнитьЗначения(Реквизиты.Период, "Период");
	
	Возврат ТаблицаОстатковГТД;
	
КонецФункции

Функция ПодготовитьПараметрыТаблицыГТД(ТаблицаТоваров, ТаблицаРеквизитов)

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаТоваров
	
	СписокОбязательныхКолонок = ""
		+ "Номенклатура,"				// <СправочникСсылка.*> - списываемая номенклатура
		+ "СтранаПроисхождения,";		// <СправочникСсылка.СтраныМира> - страна происхождения
		
	Параметры.Вставить("ТаблицаТоваров", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТоваров, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"				// <Дата> - период движений - дата документа
		+ "Регистратор,"		// <ДокументСсылка.*> - документ-регистратор движений
		+ "РНПТ,"				// <СправочникСсылка.НомераГТД> - номер гтд
		+ "Организация,";		// <СправочникСсылка.Организации> - организация
		
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыТаблицыРНПТ(ТаблицаТоваров, ТаблицаРеквизитов)

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаТоваров
		
	СписокОбязательныхКолонок = ""
		+ "НомерСтроки,"                              // <Число> - номер строки в таблице товаров
		+ "Номенклатура,"                             // <СправочникСсылка.Номенклатура> - номенклатура
		+ "Количество,"		                          // <Число ,15,3> - количество
		+ "КоличествоПрослеживаемости,"               // <Число, 15,3> - количество по прослеживаемости
		+ "Сумма,"		                              // <Число, 15,3> - сумма
		+ "СтранаПроисхождения";                      // <СправочникСсылка.СтраныМира> - страна происхождения товара
		
	Параметры.Вставить("ТаблицаТоваров", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТоваров, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"							// <Дата> - период движений - дата документа
		+ "Регистратор,"					// <ДокументСсылка.*> - документ-регистратор движений
		+ "Организация,"					// <СправочникСсылка.Организации> - организация
		+ "РНПТ";							// <ОпределяемыеТипы.РНПТ> - РНПТ
		
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Функция ТаблицаРНПТОстаткиВозвратПоставщику(ДокументОбъект, ТаблицаТоваров, УказыватьСделкуВСтроке)
		
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтранаПроисхождения", "СтранаПроисхождения");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Комитент", "Контрагент");
	
	// Установим дополнительные ограничения по комиссионным товарам
	Комиссионер = Справочники.Контрагенты.ПустаяСсылка();
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", Комиссионер);

	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТаблицаТоваров",         ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТекущийДокумент",        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента",  КонецДня(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("Комиссионер",            Комиссионер);
	Запрос.УстановитьПараметр("УказыватьСделкуВСтроке", УказыватьСделкуВСтроке);
	Запрос.УстановитьПараметр("Сделка",                 ДокументОбъект.Сделка);
		Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА &УказыватьСделкуВСтроке
	|			ТОГДА ТаблицаТоваров.Сделка
	|		ИНАЧЕ &Сделка
	|	КОНЕЦ КАК Сделка,
	|	ТаблицаТоваров.Контрагент КАК Комитент,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента)
	|	КОНЕЦ КАК ВидЗапасов
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.ПрослеживаемыйТовар = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступленияМинусВозврат.Номенклатура КАК Номенклатура,
	|	ПоступленияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПоступленияМинусВозврат.РНПТ КАК РНПТ,
	|	СУММА(ПоступленияМинусВозврат.Количество) КАК Количество,
	|	СУММА(ПоступленияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ПоступленияМинусВозврат.Сделка КАК Сделка,
	|	ПоступленияМинусВозврат.Комитент КАК Комитент,
	|	ПоступленияМинусВозврат.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ПоступленияМинусВозвратСводно
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|		ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ЕСТЬNULL(ПоступившиеТовары.Количество, 0) КАК Количество,
	|		ЕСТЬNULL(ПоступившиеТовары.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|		ЕСТЬNULL(ПоступившиеТовары.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК РНПТ,
	|		ТаблицаТоваров.Сделка КАК Сделка,
	|		ТаблицаТоваров.Комитент КАК Комитент,
	|		ТаблицаТоваров.ВидЗапасов КАК ВидЗапасов
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ПоступившиеТовары
	|			ПО (&Организация = ПоступившиеТовары.Организация)
	|				И ТаблицаТоваров.Номенклатура = ПоступившиеТовары.Номенклатура
	|				И ТаблицаТоваров.СтранаПроисхождения = ПоступившиеТовары.СтранаПроисхождения
	|				И (ПоступившиеТовары.Комиссионер = &Комиссионер)
	|				И ТаблицаТоваров.Комитент = ПоступившиеТовары.Комитент
	|				И ТаблицаТоваров.ВидЗапасов = ПоступившиеТовары.ВидЗапасов
	|				И ТаблицаТоваров.Сделка = ПоступившиеТовары.Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура,
	|		ТаблицаТоваров.СтранаПроисхождения,
	|		ВЫБОР
	|			КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ЕСТЬNULL(ВозвращенныеТовары.Количество, 0)
	|			ИНАЧЕ ЕСТЬNULL(-ВозвращенныеТовары.Количество, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ЕСТЬNULL(ВозвращенныеТовары.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ ЕСТЬNULL(-ВозвращенныеТовары.КоличествоПрослеживаемости, 0)
	|		КОНЕЦ,
	|		ЕСТЬNULL(ВозвращенныеТовары.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)),
	|		ТаблицаТоваров.Сделка,
	|		ТаблицаТоваров.Комитент,
	|		ТаблицаТоваров.ВидЗапасов
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
	|			ПО (&Организация = ВозвращенныеТовары.Организация)
	|				И ТаблицаТоваров.Номенклатура = ВозвращенныеТовары.Номенклатура
	|				И ТаблицаТоваров.СтранаПроисхождения = ВозвращенныеТовары.СтранаПроисхождения
	|				И (ВозвращенныеТовары.Комиссионер = &Комиссионер)
	|				И ТаблицаТоваров.Комитент = ВозвращенныеТовары.Комитент
	|				И ТаблицаТоваров.ВидЗапасов = ВозвращенныеТовары.ВидЗапасов
	|				И (ВозвращенныеТовары.Период <= &ДатаТекущегоДокумента)
	|				И (ВозвращенныеТовары.Регистратор <> &ТекущийДокумент)
	|				И ТаблицаТоваров.Сделка = ВозвращенныеТовары.ОснованиеДляВозврата) КАК ПоступленияМинусВозврат
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступленияМинусВозврат.РНПТ,
	|	ПоступленияМинусВозврат.СтранаПроисхождения,
	|	ПоступленияМинусВозврат.Номенклатура,
	|	ПоступленияМинусВозврат.Сделка,
	|	ПоступленияМинусВозврат.Комитент,
	|	ПоступленияМинусВозврат.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступленияМинусВозвратСводно.Номенклатура КАК Номенклатура,
	|	ПоступленияМинусВозвратСводно.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПоступленияМинусВозвратСводно.РНПТ КАК РНПТ,
	|	ПоступленияМинусВозвратСводно.Количество КАК Количество,
	|	ПоступленияМинусВозвратСводно.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ПоступленияМинусВозвратСводно.Сделка КАК Сделка,
	|	ПоступленияМинусВозвратСводно.Комитент КАК Комитент,
	|	ПоступленияМинусВозвратСводно.ВидЗапасов КАК ВидЗапасов
	|ИЗ
	|	ПоступленияМинусВозвратСводно КАК ПоступленияМинусВозвратСводно
	|ГДЕ
	|	ПоступленияМинусВозвратСводно.Количество > 0";
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");
	ТаблицаРезультат.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ТаблицаРНПТОстаткиВозвратКомиссия(ДокументОбъект, ТаблицаТоваров)
		
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтранаПроисхождения", "СтранаПроисхождения");

	// Установим дополнительные ограничения по комиссионным товарам
	Комитент = Справочники.Контрагенты.ПустаяСсылка();
	ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка();
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", ДокументОбъект.Контрагент);
	ЭлементБлокировки.УстановитьЗначение("Комитент",    Комитент);
	ЭлементБлокировки.УстановитьЗначение("ВидЗапасов",  ВидЗапасов);

	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",           ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Товары",                ДокументОбъект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("ТоварыВозврат",         ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТаблицаПокупатели",     ДокументОбъект.Покупатели.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаРНПТ",           ДокументОбъект.СведенияПрослеживаемости.Выгрузить());
	Запрос.УстановитьПараметр("Комиссионер",           ДокументОбъект.Контрагент);
	Запрос.УстановитьПараметр("Комитент",              Комитент);
	Запрос.УстановитьПараметр("ВидЗапасов",            ВидЗапасов);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента", ДокументОбъект.Дата);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Товары.КлючСтроки КАК КлючСтроки,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&Товары КАК Товары
	|ГДЕ
	|	Товары.ПрослеживаемыйТовар = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыВозврат.Номенклатура КАК Номенклатура,
	|	ТоварыВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТоварыВозврат.ДокументРеализации КАК ДокументРеализации,
	|	ТоварыВозврат.ПоТекущемуДокументу КАК ПоТекущемуДокументу
	|ПОМЕСТИТЬ ТаблицаТоваровВозврат
	|ИЗ
	|	&ТоварыВозврат КАК ТоварыВозврат
	|ГДЕ
	|	ТоварыВозврат.ПрослеживаемыйТовар = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРНПТ.РНПТ КАК РНПТ,
	|	ТаблицаРНПТ.Количество КАК Количество,
	|	ТаблицаРНПТ.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ТаблицаРНПТ.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ТаблицаСведений
	|ИЗ
	|	&ТаблицаРНПТ КАК ТаблицаРНПТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПокупатели.Покупатель КАК Покупатель,
	|	ТаблицаПокупатели.ВыставленСФ КАК ВыставленСФ,
	|	ТаблицаПокупатели.ДатаСФ КАК ДатаСФ,
	|	ТаблицаПокупатели.СчетФактура КАК СчетФактура,
	|	ТаблицаПокупатели.КлючСтроки КАК КлючСтроки,
	|	ТаблицаПокупатели.НомерСФ КАК НомерСФ
	|ПОМЕСТИТЬ ТаблицаПокупателей
	|ИЗ
	|	&ТаблицаПокупатели КАК ТаблицаПокупатели
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТовары.Регистратор КАК Регистратор,
	|	ТаблицаТоваровВозврат.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровВозврат.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ДокументыВозврата
	|ИЗ
	|	ТаблицаТоваровВозврат КАК ТаблицаТоваровВозврат
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ПО (ПрослеживаемыеТовары.Организация = &Организация)
	|			И ТаблицаТоваровВозврат.Номенклатура = ПрослеживаемыеТовары.Номенклатура
	|			И ТаблицаТоваровВозврат.СтранаПроисхождения = ПрослеживаемыеТовары.СтранаПроисхождения
	|			И (ПрослеживаемыеТовары.Комиссионер = &Комиссионер)
	|			И (ПрослеживаемыеТовары.Комитент = &Комитент)
	|			И (ПрослеживаемыеТовары.ВидЗапасов = &ВидЗапасов)
	|			И ТаблицаТоваровВозврат.ДокументРеализации = ПрослеживаемыеТовары.ОснованиеДляВозврата
	|ГДЕ
	|	ПрослеживаемыеТовары.Период = &ДатаТекущегоДокумента
	|	И ТаблицаТоваровВозврат.ПоТекущемуДокументу = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаСведений.РНПТ КАК РНПТ,
	|	ТаблицаСведений.Количество КАК Количество,
	|	ТаблицаСведений.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости
	|ПОМЕСТИТЬ РеализацияПоТекущемуДокументу
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСведений КАК ТаблицаСведений
	|		ПО ТаблицаТовары.ИдентификаторСтроки = ТаблицаСведений.ИдентификаторСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПокупателей КАК ТаблицаПокупателей
	|		ПО ТаблицаТовары.КлючСтроки = ТаблицаПокупателей.КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Количество КАК Количество,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ТаблицаТоваровВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТоваровВозврат.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровВозврат.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваровВозврат.ПоТекущемуДокументу КАК ПоТекущемуДокументу
	|ПОМЕСТИТЬ РеализацияМинусВозврат
	|ИЗ
	|	ТаблицаТоваровВозврат КАК ТаблицаТоваровВозврат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.СведенияПрослеживаемости КАК ОтчетКомиссионераОПродажахСведенияПрослеживаемости
	|			ПО ОтчетКомиссионераОПродажахТовары.Ссылка = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Ссылка
	|				И ОтчетКомиссионераОПродажахТовары.ИдентификаторСтроки = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ТаблицаТоваровВозврат.ДокументРеализации = ОтчетКомиссионераОПродажахТовары.Ссылка
	|			И ТаблицаТоваровВозврат.Номенклатура = ОтчетКомиссионераОПродажахТовары.Номенклатура
	|			И ТаблицаТоваровВозврат.СтранаПроисхождения = ОтчетКомиссионераОПродажахТовары.СтранаПроисхождения
	|ГДЕ
	|	ТаблицаТоваровВозврат.ПоТекущемуДокументу = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.РНПТ,
	|	-ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Количество,
	|	-ОтчетКомиссионераОПродажахСведенияПрослеживаемости.КоличествоПрослеживаемости,
	|	ДокументыВозврата.СтранаПроисхождения,
	|	ДокументыВозврата.Номенклатура,
	|	ДокументыВозврата.Регистратор,
	|	ЛОЖЬ
	|ИЗ
	|	ДокументыВозврата КАК ДокументыВозврата
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ОтчетКомиссионераОПродажахТоварыВозвращенные
	|			ПОЛНОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.СведенияПрослеживаемости КАК ОтчетКомиссионераОПродажахСведенияПрослеживаемости
	|			ПО ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Ссылка
	|				И ОтчетКомиссионераОПродажахТоварыВозвращенные.ИдентификаторСтроки = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ДокументыВозврата.Регистратор = ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка
	|			И ДокументыВозврата.Номенклатура = ОтчетКомиссионераОПродажахТоварыВозвращенные.Номенклатура
	|			И ДокументыВозврата.СтранаПроисхождения = ОтчетКомиссионераОПродажахТоварыВозвращенные.СтранаПроисхождения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияПоТекущемуДокументу.РНПТ,
	|	РеализацияПоТекущемуДокументу.Количество,
	|	РеализацияПоТекущемуДокументу.КоличествоПрослеживаемости,
	|	РеализацияПоТекущемуДокументу.СтранаПроисхождения,
	|	РеализацияПоТекущемуДокументу.Номенклатура,
	|	ЗНАЧЕНИЕ(Документ.ОтчетКомиссионераОПродажах.ПустаяСсылка),
	|	ТаблицаТоваровВозврат.ПоТекущемуДокументу
	|ИЗ
	|	ТаблицаТоваровВозврат КАК ТаблицаТоваровВозврат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацияПоТекущемуДокументу КАК РеализацияПоТекущемуДокументу
	|		ПО ТаблицаТоваровВозврат.Номенклатура = РеализацияПоТекущемуДокументу.Номенклатура
	|			И ТаблицаТоваровВозврат.СтранаПроисхождения = РеализацияПоТекущемуДокументу.СтранаПроисхождения
	|ГДЕ
	|	ТаблицаТоваровВозврат.ПоТекущемуДокументу = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозврат.РНПТ КАК РНПТ,
	|	СУММА(РеализацияМинусВозврат.Количество) КАК Количество,
	|	СУММА(РеализацияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	РеализацияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозврат.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозврат.ДокументРеализации КАК ДокументРеализации,
	|	РеализацияМинусВозврат.ПоТекущемуДокументу КАК ПоТекущемуДокументу
	|ПОМЕСТИТЬ РеализацияМинусВозвратСводно
	|ИЗ
	|	РеализацияМинусВозврат КАК РеализацияМинусВозврат
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияМинусВозврат.РНПТ,
	|	РеализацияМинусВозврат.СтранаПроисхождения,
	|	РеализацияМинусВозврат.Номенклатура,
	|	РеализацияМинусВозврат.ДокументРеализации,
	|	РеализацияМинусВозврат.ПоТекущемуДокументу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозвратСводно.РНПТ КАК РНПТ,
	|	РеализацияМинусВозвратСводно.Количество КАК Количество,
	|	РеализацияМинусВозвратСводно.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализацияМинусВозвратСводно.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозвратСводно.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозвратСводно.ДокументРеализации КАК ДокументРеализации,
	|	РеализацияМинусВозвратСводно.ПоТекущемуДокументу КАК ПоТекущемуДокументу
	|ИЗ
	|	РеализацияМинусВозвратСводно КАК РеализацияМинусВозвратСводно
	|ГДЕ
	|	РеализацияМинусВозвратСводно.Количество > 0";
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");
	ТаблицаРезультат.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
Функция ПолучитьОстаткиДляПринятияКУчетуОС(ДокументОбъект, ТаблицаТоваров)
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.УстановитьЗначение("Номенклатура", ДокументОбъект.Номенклатура);
	// Установим дополнительные ограничения по комиссионным товарам
	Комиссионер = Справочники.Контрагенты.ПустаяСсылка();
	Комитент    = Справочники.Контрагенты.ПустаяСсылка();
	ВидЗапасов  = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка();
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", Комиссионер);
	ЭлементБлокировки.УстановитьЗначение("Комитент",    Комитент);
	ЭлементБлокировки.УстановитьЗначение("ВидЗапасов",  ВидЗапасов);
	
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментСписания", МоментСписания);
	Запрос.УстановитьПараметр("Организация",    ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Комиссионер",    Комиссионер);
	Запрос.УстановитьПараметр("Комитент",       Комитент);
	Запрос.УстановитьПараметр("ВидЗапасов",     ВидЗапасов);
	Запрос.УстановитьПараметр("Номенклатура",   ДокументОбъект.Номенклатура);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОстатки.Организация КАК Организация,
	|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости,
	|	СвойстваРНПТ.ДатаПоступления КАК ДатаПоступления
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|			&МоментСписания,
	|			Организация = &Организация
	|				И Номенклатура = &Номенклатура
	|				И ВидЗапасов = &ВидЗапасов
	|				И Комитент = &Комитент
	|				И Комиссионер = &Комиссионер) КАК ПрослеживаемыеТоварыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваРНПТ КАК СвойстваРНПТ
	|		ПО ПрослеживаемыеТоварыОстатки.Организация = СвойстваРНПТ.Организация
	|			И ПрослеживаемыеТоварыОстатки.РНПТ = СвойстваРНПТ.РНПТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.Организация,
	|	ПрослеживаемыеТоварыОстатки.РНПТ,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура,
	|	СвойстваРНПТ.ДатаПоступления
	|
	|УПОРЯДОЧИТЬ ПО
	|	СвойстваРНПТ.ДатаПоступления";
	
	ТаблицаРНПТОстатки = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаРНПТОстатки;
	
КонецФункции

Функция ПолучитьОстаткиПоСоставномуОС(ДокументОбъект)
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеОсновныеСредства");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("ОсновноеСредство", ДокументОбъект.ОбъектСтроительства);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	Блокировка.Заблокировать();
	
	// При изменении даты проведенного документа в большую сторону при получении остатков не учитываем движения текущего
	// документа. 
	ИсключитьДвиженияДокументаИзОстатков = ДокументОбъект.Проведен
		И ДокументОбъект.Дата > ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "Дата");

	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Период",               МоментСписания);
	Запрос.УстановитьПараметр("Организация",          ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ОбъектСтроительства",  ДокументОбъект.ОбъектСтроительства);
	Запрос.УстановитьПараметр("Приход",               ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Счет",                 ДокументОбъект.СчетУчетаВнеоборотногоАктива);
	Запрос.УстановитьПараметр("Регистратор",          ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Подразделение",        ДокументОбъект.ПодразделениеОрганизации);
	ВидыСубконто = Новый Массив();
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	Запрос.УстановитьПараметр("ВидыСубконто",        ВидыСубконто);
	Запрос.УстановитьПараметр("ИсключитьДвиженияДокументаИзОстатков", ИсключитьДвиженияДокументаИзОстатков);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеОСОстатки.Организация КАК Организация,
	|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.ОсновноеСредство КАК ОС,
	|	ПрослеживаемыеОСОстатки.Комплектующие КАК Номенклатура,
	|	СУММА(ПрослеживаемыеОСОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости
	|ПОМЕСТИТЬ СоставКомплекта
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОбъектСтроительства) КАК ПрослеживаемыеОСОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.Организация,
	|	ПрослеживаемыеОСОстатки.РНПТ,
	|	ПрослеживаемыеОСОстатки.Комплектующие,
	|	ПрослеживаемыеОСОстатки.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрослеживаемыеОсновныеСредства.Организация,
	|	ПрослеживаемыеОсновныеСредства.РНПТ,
	|	ПрослеживаемыеОсновныеСредства.СтранаПроисхождения,
	|	ПрослеживаемыеОсновныеСредства.ОсновноеСредство,
	|	ПрослеживаемыеОсновныеСредства.Комплектующие,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеОсновныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрослеживаемыеОсновныеСредства.Количество
	|		ИНАЧЕ ПрослеживаемыеОсновныеСредства.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеОсновныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрослеживаемыеОсновныеСредства.КоличествоПрослеживаемости
	|		ИНАЧЕ ПрослеживаемыеОсновныеСредства.КоличествоПрослеживаемости
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства КАК ПрослеживаемыеОсновныеСредства
	|ГДЕ
	|	ПрослеживаемыеОсновныеСредства.Регистратор = &Регистратор
	|	И &ИсключитьДвиженияДокументаИзОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставКомплекта.Организация КАК Организация,
	|	СоставКомплекта.РНПТ КАК РНПТ,
	|	СоставКомплекта.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СоставКомплекта.ОС КАК ОС,
	|	СоставКомплекта.Номенклатура КАК Номенклатура,
	|	СоставКомплекта.Количество КАК Количество,
	|	СоставКомплекта.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости
	|ИЗ
	|	СоставКомплекта КАК СоставКомплекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = &Счет,
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И Субконто1 = &ОбъектСтроительства) КАК ХозрасчетныйОстатки";
	
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьОстаткиПоОС(ДокументОбъект, ТаблицаОС)
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеОсновныеСредства");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаОС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
	Блокировка.Заблокировать();
	
	// При изменении даты проведенного документа в большую сторону при получении остатков не учитываем движения текущего
	// документа. 
	ИсключитьДвиженияДокументаИзОстатков = ДокументОбъект.Проведен
		И ДокументОбъект.Дата > ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "Дата");

	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментСписания",                       МоментСписания);
	Запрос.УстановитьПараметр("Организация",                          ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС",                            ТаблицаОС);
	Запрос.УстановитьПараметр("ИсключитьДвиженияДокументаИзОстатков", ИсключитьДвиженияДокументаИзОстатков);
	Запрос.УстановитьПараметр("ТекущийДокумент",                      ДокументОбъект.Ссылка);
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОС.ОсновноеСредство КАК ОС
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.ПрослеживаемыйТовар = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ КАК РНПТ,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.Количество) КАК Количество,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ОстаткиРНПТСИсключеннымиДвижениями.ОсновноеСредство КАК ОсновноеСредство,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ ОстаткиРНПТ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрослеживаемыеОсновныеСредстваОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ПрослеживаемыеОсновныеСредстваОстатки.РНПТ КАК РНПТ,
	|		ПрослеживаемыеОсновныеСредстваОстатки.КоличествоОстаток КАК Количество,
	|		ПрослеживаемыеОсновныеСредстваОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
	|		ПрослеживаемыеОсновныеСредстваОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|		ПрослеживаемыеОсновныеСредстваОстатки.Комплектующие КАК Комплектующие
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|				&МоментСписания,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							ТаблицаОС.ОС КАК ОсновноеСредство
	|						ИЗ
	|							ТаблицаОС КАК ТаблицаОС)) КАК ПрослеживаемыеОсновныеСредстваОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрослеживаемыеОсновныеСредства.СтранаПроисхождения,
	|		ПрослеживаемыеОсновныеСредства.РНПТ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеОсновныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеОсновныеСредства.Количество
	|			ИНАЧЕ ПрослеживаемыеОсновныеСредства.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеОсновныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеОсновныеСредства.КоличествоПрослеживаемости
	|			ИНАЧЕ ПрослеживаемыеОсновныеСредства.КоличествоПрослеживаемости
	|		КОНЕЦ,
	|		ПрослеживаемыеОсновныеСредства.ОсновноеСредство,
	|		ПрослеживаемыеОсновныеСредства.Комплектующие
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеОсновныеСредства КАК ПрослеживаемыеОсновныеСредства
	|	ГДЕ
	|		&ИсключитьДвиженияДокументаИзОстатков
	|		И ПрослеживаемыеОсновныеСредства.Регистратор = &ТекущийДокумент) КАК ОстаткиРНПТСИсключеннымиДвижениями
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ,
	|	ОстаткиРНПТСИсключеннымиДвижениями.ОсновноеСредство,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комплектующие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ОстаткиРНПТ.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ОстаткиРНПТ.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	ЕСТЬNULL(ОстаткиРНПТ.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК РНПТ,
	|	ЕСТЬNULL(ОстаткиРНПТ.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ОстаткиРНПТ.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Комплектующие,
	|	ТаблицаОС.ОС КАК ОС
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРНПТ КАК ОстаткиРНПТ
	|		ПО ТаблицаОС.ОС = ОстаткиРНПТ.ОсновноеСредство";

	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ПодготовитьПараметрыДвиженияОС(ТаблицаОС)
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Комплектующие,"               // <СправочникСсылка.Номенклатура>
	+ "СтранаПроисхождения,"         // <СправочникСсылка.СтраныМира>
	+ "РНПТ,"                        // <СправочникСсылка.НомераГТД>
	+ "Количество,"                  // <Число,15,3> - количество
	+ "КоличествоПрослеживаемости,"  // <Число,26,11> - количество в единицах прослеживаемости
	+ "ОсновноеСредство";            // <СправочникСсылка.ОсновныеСредства>, <СправочникСсылка.ОбъектыСтроительства>
	
	Параметры.Вставить("ОС", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаОС, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияПрослеживаемыхОС(ТаблицаОС, Реквизиты, Движения, Списание = Ложь)
	
	Если Не ЗначениеЗаполнено(ТаблицаОС) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыДвиженияОС(ТаблицаОС);
	
	Для Каждого СтрокаТаблицы Из Параметры.ОС Цикл
		Если Списание Тогда
			Запись = Движения.ПрослеживаемыеОсновныеСредства.ДобавитьРасход();
		Иначе
			Запись = Движения.ПрослеживаемыеОсновныеСредства.ДобавитьПриход();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
	КонецЦикла;
	
	Движения.ПрослеживаемыеОсновныеСредства.Записывать = Истина;

КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРегиструПрослеживаемыеОС

Процедура СформироватьДвиженияСписанияОС(ТаблицаОС, ТаблицаОперации, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
		
	СформироватьДвиженияПрослеживаемыхОС(ТаблицаОС, Реквизиты, Движения, Истина);
		
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения, Истина);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоступлениеОС(ТаблицаОС, ТаблицаОперации, ТаблицаРНПТ, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	СформироватьДвиженияПрослеживаемыхОС(ТаблицаОС, Реквизиты, Движения);
	
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения);
		
	УстановитьСвойстваРНПТ(ТаблицаРНПТ, Реквизиты);
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
#КонецОбласти


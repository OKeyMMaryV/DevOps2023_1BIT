
#Область СлужебныйПрограммныйИнтерфейс

// Функция генерирует код заполнения по таблице ПоляПриемника.
// 
Функция ГенерироватьКод(ПоляПриемника) Экспорт
	
	КодЗаполнения = ""+Символы.ПС;
	
	Для каждого СтрокаТаблицы Из ПоляПриемника Цикл
		
		КодПоСтроке = ГенерироватьКодПоСтроке(СтрокаТаблицы);
		Если НЕ ПустаяСтрока(КодПоСтроке) Тогда
			
			КодЗаполнения = КодЗаполнения+КодПоСтроке+Символы.ПС;
			
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат КодЗаполнения;
	
КонецФункции // ГенерироватьКод()

// Процедура генерирует код по строке таблицы ПоляПриемника.
// 
// Параметры:
//  СтрокаТаблицы  - СтрокаТабличнойЧасти.
// 
Функция ГенерироватьКодПоСтроке(СтрокаТаблицы) Экспорт
	
	СтрокаКод = "";
	Если СтрокаТаблицы <> Неопределено И НЕ ПустаяСтрока(СтрокаТаблицы.ПравилоЗаполнения) Тогда
		
		ПозицияСубконтоПриемник = Найти(СтрокаТаблицы.ИмяПоля,"Субконто");
		флПриемникСубконто      = ПозицияСубконтоПриемник>0;
		
		ПозицияСубконто = Найти(СтрокаТаблицы.ПравилоЗаполнения,"#И.Субконто");
		флЗначениеСубконто = ПозицияСубконто>0;
		
		флЗначениеАналитика = Найти(СтрокаТаблицы.ПравилоЗаполнения,"#А")>0;
		
		Если флПриемникСубконто Тогда
			
			ДтКтПриемник = Сред(СтрокаТаблицы.ИмяПоля,ПозицияСубконтоПриемник+8,2); 
			НомерСубконтоПриемник = Сред(СтрокаТаблицы.ИмяПоля,ПозицияСубконтоПриемник+10,1);			
			КодПриемник = "УстановитьСубконто(ЗаписьПриемник.Счет"
			                +ДтКтПриемник
							+",ЗаписьПриемник.Субконто"
							+ДтКтПриемник
							+","
							+НомерСубконтоПриемник
							+","
							+"%ЗначениеЗаполнения%"
							+");";
							
		Иначе
							
			КодПриемник = "ЗаписьПриемник."+СтрокаТаблицы.ИмяПоля+" = "+"%ЗначениеЗаполнения%;";
			Если СтрокаТаблицы.ИмяПоля = "Период" Тогда
			
				КодПриемник = КодПриемник + ?(ПустаяСтрока(КодПриемник),"",Символы.ПС)+"СкорректироватьПериод(ЗаписьПриемник, СтруктураПараметров, ДополнительныеАналитики);";
			
			КонецЕсли; 
		
		КонецЕсли; 
		
		Если флЗначениеСубконто Тогда
			
			// Заполнение субконто
			ДтКт = Сред(СтрокаТаблицы.ПравилоЗаполнения,ПозицияСубконто+11,2); 
			НомерСубконто = Сред(СтрокаТаблицы.ПравилоЗаполнения,ПозицияСубконто+13,1);			
			КодЗначениеЗаполнения = "ЗначениеСубконто(ЗаписьИсточник,"""
									+ДтКт
									+""","
									+НомерСубконто
									+")";
			
		ИначеЕсли флЗначениеАналитика Тогда
			
			// Заполнение аналитикой
			КодЗначениеЗаполнения = "ИзвлечьЗначениеАналитики("""
					               +Сред(СтрокаТаблицы.ПравилоЗаполнения,4)
								   +""",ДополнительныеАналитики)";
			
		Иначе	
			
			// Обычное заполнение
			КодЗначениеЗаполнения = СтрокаТаблицы.ПравилоЗаполнения;
			
		КонецЕсли; 
		
		// Если СтрокаТаблицы.ПроверятьЗаполнениеПередУстановкой Тогда.
		// 	
		// 	СтрУсловие = "Если НЕ ЗначениеЗаполнено(ЗаписьПриемник.%1%) Тогда"+Символы.ПС+Символы.Таб;
		// 	СтрУсловие = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(СтрУсловие, СтрокаТаблицы.ИмяПоля);
		// 	СтрокаКод = СтрокаКод + СтрУсловие; 
		// 
		// КонецЕсли; 
		
		СтрокаКод = СтрокаКод+КодПриемник;
		СтрокаКод = СтрЗаменить(СтрокаКод,"%ЗначениеЗаполнения%",КодЗначениеЗаполнения);
			
		
		СтрокаКод = СтрЗаменить(СтрокаКод,"#И","ЗаписьИсточник");
		СтрокаКод = СтрЗаменить(СтрокаКод,"#Р","СтруктураШапкиДокумента");
		
		ПозицияФункции = Найти(СтрокаКод,"#П.");
		
		Пока ПозицияФункции >0  Цикл
			
			СтрокаВрем = Сред(СтрокаКод,ПозицияФункции+3);
			ПозицияСкобки = Найти(СтрокаВрем,"(");
			СтрокаВрем = Лев(СтрокаВрем,ПозицияСкобки-1)+"""],"+Сред(СтрокаВрем,ПозицияСкобки+1);
			СтрокаВрем = "ВыполнитьПользовательскуюФункцию(ПользовательскиеФункции["""+СтрокаВрем;
			СтрокаКод  = Лев(СтрокаКод,ПозицияФункции-1)+СтрокаВрем;
			ПозицияФункции = Найти(СтрокаКод,"#П.");
			
		КонецЦикла;	
		
		// Если СтрокаТаблицы.ПроверятьЗаполнениеПередУстановкой Тогда.
		// 	
		// 	СтрокаКод = СтрокаКод +Символы.ПС+ "КонецЕсли;";
		// 	
		// КонецЕсли; 
		
	КонецЕсли; 
	
	Возврат СтрокаКод;
	
КонецФункции // ГенерироватьКодПоСтроке()

#КонецОбласти

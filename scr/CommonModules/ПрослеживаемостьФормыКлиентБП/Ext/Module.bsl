
#Область СлужебныйПрограммныйИнтерфейс

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-25 (#4405)
//Процедура ОткрытьФормуПодбораРНПТ(Форма, ИмяТаблицы, ЭтоПоступление = Истина, ЭтоКомиссия = Ложь) Экспорт
Процедура ОткрытьФормуПодбораРНПТ(Форма, ИмяТаблицы, ЭтоПоступление = Истина, ЭтоКомиссия = Ложь, ЭтоИсходныеРНПТ = Ложь) Экспорт
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-25 (#4405)
	
	Объект         = Форма.Объект;
	ДокументСсылка = Объект.Ссылка;
	Элементы       = Форма.Элементы;
	ТекущиеДанные  = Элементы[ИмяТаблицы].ТекущиеДанные;
		
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоПоступлениеТоваровИУслуг = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг");
	ЭтоКорректировкаПоступления = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаПоступления");
	ЭтоВводОстатков             = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВводНачальныхОстатков");
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
	ЭтоПринятиеКУчетуОС         = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПринятиеКУчетуОС");
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
	// Предопределенные значения
	ДатаРеализации        = '00010101';
	ДатаТекущегоДокумента = '00010101';
	ЭтоВозвратРозница     = Ложь;
	ЭтоВозвратПоставщику  = Ложь;
	ЭтоВозвратКомиссия    = Ложь;
	ВыставленСФ           = Ложь;
	СчетФактура           = Новый СписокЗначений;
	ДокументРеализации    = Неопределено;
	Покупатель            = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	Цена                  = 0;
	Комитент              = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	ВидЗапасов            = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка");
	Комиссионер           = ?(ЭтоКомиссия, Объект.Контрагент, ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка"));
	ВозвратКомиссияПоТекДокументу = Ложь;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
	ЭтоОС                         = Ложь;
	ЭтоСоставноеОС                = Ложь;
	ОбъектСтроительства           = ПредопределенноеЗначение("Справочник.ОбъектыСтроительства.ПустаяСсылка");
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
	ЕстьРасхождения = ЭтоПоступлениеТоваровИУслуг И Объект.ЕстьРасхождения;
	ЭтоВвозИзЕАЭС   = (ЭтоПоступлениеТоваровИУслуг ИЛИ ЭтоКорректировкаПоступления)
		И Форма.ПоставщикРезидентТаможенногоСоюза;
		
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
	ВедетсяУчетОС = Ложь;
	Если ЭтоПринятиеКУчетуОС Тогда
		ВедетсяУчетОС = Истина;
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование") Тогда
			ЭтоОС = Истина;
			Номенклатура = Объект.Номенклатура;
		ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.ОбъектыСтроительства") Тогда
			ЭтоСоставноеОС = Истина;
			ОбъектСтроительства = Объект.ОбъектСтроительства;
			Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.МодернизацияОС") Тогда
		ВедетсяУчетОС = Истина;
		ЭтоСоставноеОС = Истина;
		ОбъектСтроительства = Объект.ОбъектСтроительства;
		Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	КонецЕсли;
	Если Не ВедетсяУчетОС Тогда
		Номенклатура = ТекущиеДанные.Номенклатура;
	КонецЕсли;
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация",           Объект.Организация);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
	//СтруктураПараметров.Вставить("Номенклатура",          ТекущиеДанные.Номенклатура);
	СтруктураПараметров.Вставить("Номенклатура",          Номенклатура);
	СтруктураПараметров.Вставить("ЭтоОС",                 ЭтоОС);
	СтруктураПараметров.Вставить("ЭтоСоставноеОС",        ЭтоСоставноеОС);
	СтруктураПараметров.Вставить("ОбъектСтроительства",   ОбъектСтроительства);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
	СтруктураПараметров.Вставить("Период",                Объект.Дата);
	СтруктураПараметров.Вставить("ИмяТаблицы",            ИмяТаблицы);
	СтруктураПараметров.Вставить("ВыборПоОстаткам",       НЕ ЭтоПоступление);
		
	Если ТекущиеДанные.ПрослеживаемыйТовар
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
		И НЕ ВедетсяУчетОС
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
		И НЕ ЭтоВвозИзЕАЭС Тогда
		ЕстьОшибкиЗаполнения = Ложь;
		
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
		//Если Не ЗначениеЗаполнено(ТекущиеДанные.Количество) Тогда
		Если Не ВедетсяУчетОС И Не ЗначениеЗаполнено(ТекущиеДанные.Количество) Тогда
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Количество'"));
			Поле = ИмяТаблицы + "["+ Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].Количество";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
		//Если ЕстьРасхождения И Не ЗначениеЗаполнено(ТекущиеДанные.КоличествоПоДокументу) Тогда
		Если Не ВедетсяУчетОС И ЕстьРасхождения И Не ЗначениеЗаполнено(ТекущиеДанные.КоличествоПоДокументу) Тогда
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Количество по документу'"));
			Поле = ИмяТаблицы + "["+ Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].КоличествоПоДокументу";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
		//Если Не ЗначениеЗаполнено(ТекущиеДанные.СтранаПроисхождения) Тогда
		Если Не ВедетсяУчетОС И  Не ЗначениеЗаполнено(ТекущиеДанные.СтранаПроисхождения) Тогда
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Страна происхождения'"));
			Поле = ИмяТаблицы + "[" +Формат(Элементы[ИмяТаблицы].ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].СтранаПроисхождения";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") И ИмяТаблицы = "ТоварыВозвращенные" Тогда
			Если Не ЗначениеЗаполнено(ТекущиеДанные.ДокументРеализации) И НЕ ТекущиеДанные.ПоТекущемуДокументу Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Документ реализации'"));
				Поле = ИмяТаблицы + "[" +Формат(Элементы[ИмяТаблицы].ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].ДокументРеализации";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
			КонецЕсли;
			ЭтоВозвратКомиссия = Истина;
			ДокументРеализации = ТекущиеДанные.ДокументРеализации;
			ДатаТекущегоДокумента = КонецДня(Объект.Дата);
			КлючСтроки = ТекущиеДанные.КлючСтроки;
			СтрокаСПокупателем = Объект.Возвраты.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
			ВозвратКомиссияПоТекДокументу = ТекущиеДанные.ПоТекущемуДокументу;
			Если СтрокаСПокупателем.Количество() > 0 Тогда
				ВыставленСФ = СтрокаСПокупателем[0].ВыставленСФ;
				Покупатель  = СтрокаСПокупателем[0].Покупатель;
			КонецЕсли;
			Если ВыставленСФ Тогда
				МассивСФ = Объект.ВозвратыИсходныеДокументы.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
				Если МассивСФ.Количество() = 0 Тогда
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Поле", "Заполнение", НСтр("ru = 'Счет - фактура'"));
					Поле = "Возвраты" + "[" +Формат(СтрокаСПокупателем[0].НомерСтроки-1,"ЧГ=") + "].КСчетуФактуреКомиссионераНомер";
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
				КонецЕсли;
				Для Каждого Строка Из МассивСФ Цикл
					Если ЗначениеЗаполнено(Строка.ИсходныйДокумент) И Не ТекущиеДанные.ПоТекущемуДокументу Тогда
						СчетФактура.Добавить(Строка.ИсходныйДокумент);
					ИначеЕсли Не ТекущиеДанные.ПоТекущемуДокументу Тогда
						ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
						"Поле", "Заполнение", НСтр("ru = 'Счет-фактура"));
						Поле = "Возвраты" + "[" +Формат(СтрокаСПокупателем[0].НомерСтроки-1,"ЧГ=") + "].КСчетуФактуреКомиссионераНомер";
						ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьОшибкиЗаполнения Тогда
			Возврат;
		КонецЕсли;
		
		Если ЕстьРасхождения Тогда
			КоличествоРНПТ = Мин(ТекущиеДанные.Количество, ТекущиеДанные.КоличествоПоДокументу);
		Иначе
			КоличествоРНПТ = ТекущиеДанные.Количество;
		КонецЕсли;
		
		СтруктураПараметров.Вставить("Количество",          КоличествоРНПТ);
		СтруктураПараметров.Вставить("СтранаПроисхождения", ТекущиеДанные.СтранаПроисхождения);
		
		// Установим дополнительные ограничения по комиссионным товарам
		
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПередачаТоваров") 
			И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту") Тогда
			Комитент    = Объект.Контрагент;
			ВидЗапасов = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента");
		КонецЕсли;
		
		// Установим параметры по возвратам
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") И НЕ ЭтоКомиссия Тогда
			ЭтоВозвратРозница = ТипЗнч(Объект.Сделка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах");
			ДокументРеализации    = Форма.ДокументРеализации;
			ДатаТекущегоДокумента = КонецДня(Объект.Дата);
			ДатаРеализации        = Форма.ДатаРеализации;
			Цена                  = ТекущиеДанные.Цена;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") И ИмяТаблицы = "Возвраты" Тогда
			ЭтоВозвратРозница     = Истина;
			ДатаТекущегоДокумента = КонецДня(Объект.Дата);
			ДатаРеализации        = ТекущиеДанные.ДатаРеализации;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И НЕ ЭтоПоступление Тогда
			Если ЭтоКомиссия Тогда 
				Комитент    = Объект.Контрагент;
				ВидЗапасов  = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию");
				Комиссионер = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
			Иначе
				ЭтоВозвратПоставщику  = Истина;
				ДокументРеализации    = ?(Форма.УказыватьСделкуПоСтрокам, ТекущиеДанные.Сделка, Объект.Сделка);
				ДатаТекущегоДокумента = КонецДня(Объект.Дата);
				Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент) Тогда
					Комитент   = ТекущиеДанные.Контрагент;
					ВидЗапасов = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтруктураПараметров.Вставить("ЭтоВозвратРозница",             ЭтоВозвратРозница);
		СтруктураПараметров.Вставить("ЭтоВозвратПоставщику",          ЭтоВозвратПоставщику);
		СтруктураПараметров.Вставить("ДатаРеализации",                ДатаРеализации);
		СтруктураПараметров.Вставить("ДатаТекущегоДокумента",         ДатаТекущегоДокумента);
		СтруктураПараметров.Вставить("ТекущийДокумент",               ДокументСсылка);
		СтруктураПараметров.Вставить("ДокументРеализации",            ДокументРеализации);
		СтруктураПараметров.Вставить("Цена",                          Цена);
		СтруктураПараметров.Вставить("Комитент",                      Комитент);
		СтруктураПараметров.Вставить("Комиссионер",                   Комиссионер);
		СтруктураПараметров.Вставить("ВидЗапасов",                    ВидЗапасов);
		СтруктураПараметров.Вставить("ВыставленСФ",                   ВыставленСФ);
		СтруктураПараметров.Вставить("ЭтоВозвратКомиссия",            ЭтоВозвратКомиссия);
		СтруктураПараметров.Вставить("Покупатель",                    Покупатель);
		СтруктураПараметров.Вставить("СчетФактура",                   СчетФактура);
		СтруктураПараметров.Вставить("ВозвратКомиссияПоТекДокументу", ВозвратКомиссияПоТекДокументу);
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
		СтруктураПараметров.Вставить("ЭтоИсходныеРНПТ",               ЭтоИсходныеРНПТ);
		СтруктураПараметров.Вставить("ОткрыватьДляПросмотра",         ЭтоИсходныеРНПТ);
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
		АдресТаблицыРНПТВХранилище = ОбщегоНазначенияБПВызовСервера.ПоместитьРНПТВХранилище(
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
			//Объект, ?(ЭтоВводОстатков, ТекущиеДанные.Ключ, ТекущиеДанные.ИдентификаторСтроки), Форма.УникальныйИдентификатор);
			Объект, ?(ЭтоВводОстатков, ТекущиеДанные.Ключ, ТекущиеДанные.ИдентификаторСтроки), Форма.УникальныйИдентификатор, ЭтоИсходныеРНПТ);
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
		
		СтруктураПараметров.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
		СтруктураПараметров.Вставить("ЭтоПоступление", ЭтоПоступление);
		
		ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаПодбораРНПТ", 
			СтруктураПараметров, Форма);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
	ИначеЕсли ВедетсяУчетОС И ТекущиеДанные.ПрослеживаемыйТовар Тогда
		ЕстьОшибкиЗаполнения = Ложь;
		Если ЭтоОС И Не ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Оборудование'"));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, "Номенклатура", "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если ЭтоСоставноеОС И Не ЗначениеЗаполнено(Объект.ОбъектСтроительства) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Объект строительства'"));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, "ОбъектСтроительства", "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		СтруктураПараметров.Вставить("Количество",                    1);
		СтруктураПараметров.Вставить("ТекущийДокумент",               ДокументСсылка);
		АдресТаблицыРНПТВХранилище = ОбщегоНазначенияБПВызовСервера.ПоместитьРНПТВХранилище(
		Объект, ТекущиеДанные.ИдентификаторСтроки, Форма.УникальныйИдентификатор, Ложь);
		
		СтруктураПараметров.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
		ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаПодбораРНПТДляОС", 
		СтруктураПараметров, Форма);
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
	Иначе
		ОткрытьФорму("Справочник.НомераГТД.ФормаВыбора", СтруктураПараметров, Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуПросмотраРНПТДоКорректировки(Форма, ИмяТаблицы) Экспорт
	
	Объект        = Форма.Объект;
	Элементы      = Форма.Элементы;
	ТекущиеДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ИсходныйДокумент = Объект.ДокументРеализации;
		Если ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.РеализацияТоваровУслуг") 
			И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			Возврат;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		ИсходныйДокумент = Объект.ДокументПоступления;
		Если ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
			И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаПоступления") Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ПрослеживаемыйТовар Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.РНПТДо) Тогда
			АдресТаблицыРНПТВХранилище = ОбщегоНазначенияБПВызовСервера.ПоместитьРНПТВХранилище(
				ИсходныйДокумент, ТекущиеДанные.ИдентификаторСтроки, Форма.УникальныйИдентификатор);
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Номенклатура",    ТекущиеДанные.Номенклатура);
			СтруктураПараметров.Вставить("ИмяТаблицы",      ИмяТаблицы);	
			СтруктураПараметров.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
			СтруктураПараметров.Вставить("ОткрыватьДляПросмотра", Истина);
			
			ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаПодбораРНПТ",СтруктураПараметров, Форма);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.НомерГТДДоИзменения) Тогда
		ПоказатьЗначение(,ТекущиеДанные.НомерГТДДоИзменения);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьПоказатьУведомления(Форма, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Объект = Форма.Объект;
	
	Если ЭтоФормаПоступлениеТоваровИУслуг(Форма) Тогда
		
		Если Форма.СписокУведомлений.Количество() = 0 Тогда
			ДополнительныеПараметры = Новый Структура("ДокументОбъект, Форма", Объект, Форма);
			Если Не Объект.Проведен Или Форма.Модифицированность Тогда 
				ТекстВопроса = НСтр("ru = 'Для создания уведомления необходимо предварительно провести документ.'");
				Оповещение = Новый ОписаниеОповещения("ОткрытьПомощникПолученияРНПТ", ЭтотОбъект, ДополнительныеПараметры);
				Кнопки = Новый СписокЗначений;
				Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Провести и продолжить'"));
				Кнопки.Добавить(КодВозвратаДиалога.Отмена);
				ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки);
			Иначе
				ОткрытьПомощникПолученияРНПТ(КодВозвратаДиалога.Да, ДополнительныеПараметры);
			КонецЕсли;
			
		ИначеЕсли Форма.СписокУведомлений.Количество() = 1 Тогда
			ПоказатьЗначение(, Форма.СписокУведомлений[0].Значение)
		Иначе
			Оповещение = Новый ОписаниеОповещения("СоздатьПоказатьУведомленияОповещение", ЭтотОбъект, Форма);
			Форма.ПоказатьВыборИзМеню(Оповещение, Форма.СписокУведомлений, Элемент);
		КонецЕсли;
		
	// Это форма РеализацияТоваровУслуг
	Иначе
		
		ПараметрыДокумента = Новый Структура("Ключ", Форма.УведомлениеОПеремещении);
		
		Если ЗначениеЗаполнено(Форма.УведомлениеОПеремещении) Тогда
			
			
			ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.ФормаОбъекта",
				ПараметрыДокумента, Форма.ЭтотОбъект);
			
		Иначе
			
			ЗначенияЗаполнения = Новый Структура();
			ЗначенияЗаполнения.Вставить("Основание", Форма.Объект.Ссылка);
			
			ПараметрыДокумента.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
			
			ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.ФормаОбъекта",
				ПараметрыДокумента, Форма.ЭтотОбъект);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоФормаПоступлениеТоваровИУслуг(Форма)
	
	Возврат СтрНайти(Форма.ИмяФормы, "ПоступлениеТоваровУслуг") > 0;
	
КонецФункции

Процедура СоздатьПоказатьУведомленияОповещение(ВыбранныйЭлемент, Форма) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ПоказатьЗначение(, ВыбранныйЭлемент.Значение)
	КонецЕсли	
КонецПроцедуры

Процедура ОткрытьПомощникПолученияРНПТ(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект = ДополнительныеПараметры.ДокументОбъект;
	Форма = ДополнительныеПараметры.Форма;
	Если Не Объект.Проведен Или Форма.Модифицированность Тогда
		Если Не Форма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	ПараметрыФормы.Вставить("ПериодСобытия", Объект.Дата);
	ПараметрыФормы.Вставить("КонтекстныйВызов", Истина);
	
	ОткрытьФорму("Обработка.ПомощникПолученияРНПТ.Форма.Форма", ПараметрыФормы, Форма);
	
КонецПроцедуры

Процедура ПоказатьПредупреждениеПрослеживаемыйТовар() Экспорт
	
	Подстроки = Новый Массив;
	Подстроки.Добавить(
		НСтр("ru = 'Товар из перечня, утвержденного постановлением правительства РФ от 25.06.2019 № 807'"));
	Подстроки.Добавить(Символы.ПС);
	Подстроки.Добавить(Новый ФорматированнаяСтрока(
		НСтр("ru = 'Подробнее об учете прослеживаемых товаров'"),,,,"https://its.1c.ru/db/accnds#content:1080:hdoc"));
	ПодсказкаВДокументе = Новый ФорматированнаяСтрока(Подстроки);
	ПоказатьПредупреждение(,ПодсказкаВДокументе, , НСтр("ru = 'Прослеживаемый товар'"));
	
КонецПроцедуры

Процедура ОткрытьФормуПодбораСопроводительногоДокумента(Форма, ТекущиеДанные) Экспорт
	
	Объект = Форма.Объект;
	
	ПараметрыФормы = Новый Структура("Организация, Контрагент", Объект.Организация, ТекущиеДанные.Контрагент);
	
	ОткрытьФорму(ПрослеживаемостьФормыКлиентПереопределяемый.ФормаВыбораСопроводительногоДокументаВУведомленииОПеремещении(),
		ПараметрыФормы, Форма);
	
КонецПроцедуры

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-10-21 (#4405)
Функция ПодготовитьПараметрыДляЗаполненияРНПТПоОС(ТекущийДокумент) Экспорт
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("АдресВременногоХранилища",  "");
	СтруктураПараметров.Вставить("ИдентификаторСтроки",       "");
	СтруктураПараметров.Вставить("Сумма",                     0);
	СтруктураПараметров.Вставить("ЭтоПродажа",                Ложь);
	СтруктураПараметров.Вставить("СуммаНДС",                  0);
	СтруктураПараметров.Вставить("СтавкаНДС",                 ПредопределенноеЗначение("Перечисление.СтавкиНДС.ПустаяСсылка"));
	СтруктураПараметров.Вставить("ОсновноеСредство",          ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка"));
	СтруктураПараметров.Вставить("ВалютаДокумента",           ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	СтруктураПараметров.Вставить("ТолькоПросмотр",            Не ПрослеживаемостьВызовСервераПереопределяемый.ДоступноРедактированиеФормыДанныхРНПТПоОС(ТекущийДокумент));
	
	Возврат СтруктураПараметров;

КонецФункции
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-10-21 (#4405)
#КонецОбласти
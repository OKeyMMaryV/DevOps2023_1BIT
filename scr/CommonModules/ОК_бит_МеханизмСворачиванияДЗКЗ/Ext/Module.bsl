Функция ПроверкаКодаМСФОПоМаске(КодМСФО) Экспорт
	Если СтрДлина(КодМСФО) <> 11 ИЛИ НЕ СтрНайти(КодМСФО, "-") = 5 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		Номер = Число(Сред(КодМСФО, 6));
		НомерПрефикса = Число(Сред(КодМСФО, 3, 2));
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
КонецФункции

Функция ПолучитьНовыйКодМСФО(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ДоговорыКонтрагентов.ОК_КодМСФО КАК ОК_КодМСФО
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Организация = &Организация
		|	И ДоговорыКонтрагентов.ОК_КодМСФО <> """"
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОК_КодМСФО УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "" + Организация.Префикс + "00-000001";
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КодМСФО = ВыборкаДетальныеЗаписи.ОК_КодМСФО;
		Попытка
			Номер = Число(Сред(КодМСФО, 6));
		Исключение
			Номер = 000000;
		КонецПопытки;
		Если Номер = 999999 Тогда
			Номер = 000000;
			Префикс = Лев(КодМСФО, 2) + Число(Сред(КодМСФО, 3, 2)) + 1;
		Иначе
			Префикс = Лев(КодМСФО, 4);
		КонецЕсли;
		Возврат "" + Префикс + "-" + Формат(Номер + 1, "ЧЦ=6; ЧВН=; ЧГ=");
	КонецЦикла;
	
КонецФункции

Функция ГенерироватьНовыеКодаМСФО() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_му_Настройки.ИмяНастройки КАК ИмяНастройки
	|ИЗ
	|	РегистрСведений.бит_му_Настройки КАК бит_му_Настройки
	|ГДЕ
	|	бит_му_Настройки.Группа = ""СворачиваниеДЗиКЗ""
	|	И бит_му_Настройки.ИмяНастройки = ""ГенерацияКодовМСФО""
	|	И бит_му_Настройки.Значение = ИСТИНА";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда		
		Возврат Ложь
	Иначе
		Возврат Истина
	КонецЕсли;
	
КонецФункции

Функция ПолучитьТаблицуСвертки(Реквизиты) Экспорт
	Если Реквизиты.ВидОперации = Перечисления.бит_му_ВидыОперацийСворачиваниеЗадолженности.ок_ПереносСальдоНаОдинДоговорСУчетомКодовМСФОВВалюте 
		ИЛИ Реквизиты.ВидОперации = Перечисления.бит_му_ВидыОперацийСворачиваниеЗадолженности.ок_ПереносСальдоНаОдинДоговорСУчетомКодовМСФОВРублях Тогда   	
		Возврат ПолучитьТаблицуПервогоВторогоЭтапа(Реквизиты);	
	Иначе
		Возврат ПолучитьТаблицуТретьегоЧетвертогоЭтапа(Реквизиты);
	КонецЕсли;
КонецФункции

Функция ПолучитьТаблицуПервогоВторогоЭтапа(Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_Дополнительный_2Остатки.Счет КАК Счет,
	|	бит_Дополнительный_2Остатки.Субконто1 КАК Контрагент,
	|	бит_Дополнительный_2Остатки.Субконто2 КАК Договор,
	|	бит_Дополнительный_2Остатки.СуммаМУОстаток КАК СуммаМУОстаток,
	|	ДоговорыКонтрагентов.Код КАК ок_КодДоговора,
	|	ДоговорыКонтрагентов.ОК_КодМСФО КАК ок_КодМСФО,
	|	Контрагенты.Код КАК КодКонтрагента,
	|	ЛОЖЬ КАК РучнаяКорректировка,
	|	ИСТИНА КАК ок_Провести,
	|	ИСТИНА КАК ок_Сторнировать,
	|	ИСТИНА КАК ВсеОтметки,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(ВложенныйЗапрос.Значение, ЛОЖЬ) КАК НеИспользуется,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос1.ИмяНастройки = ""СписокСчетовДляОтбораДЗ""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоДЗ
	|ПОМЕСТИТЬ ТаблицаДанных
	|ИЗ
	|	РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
	|			&Дата,
	|			Счет В (&Счета),
	|			&Субконто,
	|			Организация = &Организация
	|				И НЕ Субконто1 В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							бит_СобственныеКонтрагенты.Контрагент КАК Контрагент
	|						ИЗ
	|							РегистрСведений.бит_СобственныеКонтрагенты КАК бит_СобственныеКонтрагенты)) КАК бит_Дополнительный_2Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ((ВЫРАЗИТЬ(бит_Дополнительный_2Остатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов)) = ДоговорыКонтрагентов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ((ВЫРАЗИТЬ(бит_Дополнительный_2Остатки.Субконто1 КАК Справочник.Контрагенты)) = Контрагенты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КонтрагентыДополнительныеРеквизиты.Значение КАК Значение,
	|			КонтрагентыДополнительныеРеквизиты.Ссылка КАК Ссылка
	|		ИЗ
	|			Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
	|		ГДЕ
	|			КонтрагентыДополнительныеРеквизиты.Свойство = &Свойство) КАК ВложенныйЗапрос
	|		ПО ((ВЫРАЗИТЬ(бит_Дополнительный_2Остатки.Субконто1 КАК Справочник.Контрагенты)) = ВложенныйЗапрос.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			бит_му_Настройки.Значение КАК Значение,
	|			бит_му_Настройки.ИмяНастройки КАК ИмяНастройки
	|		ИЗ
	|			РегистрСведений.бит_му_Настройки КАК бит_му_Настройки
	|		ГДЕ
	|			бит_му_Настройки.Группа = ""СворачиваниеДЗиКЗ""
	|			И (бит_му_Настройки.ИмяНастройки = ""СписокСчетовДляОтбораДЗ""
	|					ИЛИ бит_му_Настройки.ИмяНастройки = ""СписокСчетовДляОтбораКЗ"")) КАК ВложенныйЗапрос1
	|		ПО бит_Дополнительный_2Остатки.Счет = ВложенныйЗапрос1.Значение
	|ГДЕ
	|	бит_Дополнительный_2Остатки.СуммаМУОстаток <> 0
	|	И ДоговорыКонтрагентов.ОК_КодМСФО <> """"
	|	И ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаДанных.ЭтоДЗ
	|			ТОГДА ТаблицаДанных.Счет
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ок_СчетУчетаДЗ,
	|	ТаблицаДанных.Контрагент КАК Контрагент,
	|	ТаблицаДанных.Договор КАК Договор,
	|	ТаблицаДанных.ок_КодДоговора КАК ок_КодДоговора,
	|	ТаблицаДанных.ок_КодМСФО КАК ок_КодМСФО,
	|	ТаблицаДанных.КодКонтрагента КАК КодКонтрагента,
	|	ТаблицаДанных.РучнаяКорректировка КАК РучнаяКорректировка,
	|	ТаблицаДанных.ок_Провести КАК ок_Провести,
	|	ТаблицаДанных.ок_Сторнировать КАК ок_Сторнировать,
	|	ТаблицаДанных.ВсеОтметки КАК ВсеОтметки,
	|	ТаблицаДанных.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаДанных.НеИспользуется КАК НеИспользуется,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДанных.ЭтоДЗ
	|			ТОГДА ТаблицаДанных.Счет
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетУчетаКЗ,
	|	ВЫБОР
	|		КОГДА ТаблицаДанных.ЭтоДЗ
	|			ТОГДА ТаблицаДанных.СуммаМУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ок_СальдоПоСчетуУчетаДЗ,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаДанных.ЭтоДЗ
	|			ТОГДА ТаблицаДанных.СуммаМУОстаток * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СальдоПоСчетуУчетаКЗ,
	|	ТаблицаДанных.ЭтоДЗ КАК ЭтоДЗ,
	|	0 КАК СуммаСворачивания,
	|	0 КАК СальдоПоСчетуРасчетаПоПретензиям,
	|	ЗНАЧЕНИЕ(ПланСчетов.бит_Дополнительный_2.ПустаяСсылка) КАК СчетРасчетаПоПретензиям,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ок_ПереносНаДоговор,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК ок_ПереносНаКонтрагента,
	|	""О"" КАК ДоговорАксапты
	|ИЗ
	|	ТаблицаДанных КАК ТаблицаДанных
	|
	|УПОРЯДОЧИТЬ ПО
	|	ок_КодМСФО,
	|	ТаблицаДанных.ЭтоДЗ УБЫВ,
	|	НеИспользуется УБЫВ,
	|	ок_СальдоПоСчетуУчетаДЗ,
	|	СальдоПоСчетуУчетаКЗ
	|ИТОГИ
	|	КОЛИЧЕСТВО(Контрагент),
	|	СУММА(ок_СальдоПоСчетуУчетаДЗ),
	|	СУММА(СальдоПоСчетуУчетаКЗ)
	|ПО
	|	ВалютаВзаиморасчетов,
	|	ок_КодМСФО,
	|	ЭтоДЗ";
	
	мПараметры = Новый Массив(2);
	мПараметры[0] = КонецДня(Реквизиты.Дата);
	мПараметры[1] = ВидГраницы.Включая;
	Граница = Новый(Тип("Граница"),мПараметры);
	
	Запрос.УстановитьПараметр("Дата", Граница);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	
	МассивСубконто = Новый Массив;
	МассивСубконто.Добавить(ПланыВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.Контрагенты);
	МассивСубконто.Добавить(ПланыВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ДоговорыКонтрагентов);
	
	Запрос.УстановитьПараметр("Субконто", МассивСубконто);
	Запрос.УстановитьПараметр("Счета", ПолучитьСчетаМСФО().МассивСчетовДЗКЗ);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "НеИспользуется"));
	
	Если Реквизиты.ВидОперации = Перечисления.бит_му_ВидыОперацийСворачиваниеЗадолженности.ок_ПереносСальдоНаОдинДоговорСУчетомКодовМСФОВВалюте Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов", "И ДоговорыКонтрагентов.ВалютаВзаиморасчетов <> &ВалютаВзаиморасчетов"); 
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	СчетаПереносаМСФО = Новый Соответствие;
	КАПереноса = Новый Соответствие;
	ДоговорПереноса = Новый Соответствие;
	ПоследняяСтрокаДЗ = Неопределено;
	ПоследняяСтрокаКЗ = Неопределено;
	
	ТаблицаДанных = Результат.Выгрузить().СкопироватьКолонки();
	
	ИтогиВалюта = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	
	Пока ИтогиВалюта.Следующий() Цикл
		
		Итоги = ИтогиВалюта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока Итоги.Следующий() Цикл
			
			Если Итоги.Контрагент < 2 Тогда
				Продолжить;
			КонецЕсли;
			
			ВыборкаДЗКЗ = Итоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ВыборкаДЗКЗКоличество = ВыборкаДЗКЗ.Количество();
			ОдинСчет = Ложь;
			СуммаДЗ = Итоги.ок_СальдоПоСчетуУчетаДЗ;
			СуммаКЗ = Итоги.СальдоПоСчетуУчетаКЗ;
			СуммаСворачивания = 0;
			
			Пока ВыборкаДЗКЗ.Следующий() Цикл
				
				ВыборкаСчета = ВыборкаДЗКЗ.Выбрать();
				
				Пока ВыборкаСчета.Следующий() Цикл
					
					НовСтр = ТаблицаДанных.Добавить();		
					ЗаполнитьЗначенияСвойств(НовСтр, ВыборкаСчета);
					
					НовСтр.СуммаСворачивания = ?(ВыборкаСчета.ЭтоДЗ, ВыборкаСчета.ок_СальдоПоСчетуУчетаДЗ * -1, ВыборкаСчета.СальдоПоСчетуУчетаКЗ);
					
					Если ВыборкаДЗКЗКоличество = 1 Тогда
						ОдинСчет = Истина;
						ТолькоДЗ = ?(ВыборкаСчета.ЭтоДЗ, Истина, Ложь);
					КонецЕсли;
					
					СуммаСворачивания = СуммаСворачивания - ВыборкаСчета.ок_СальдоПоСчетуУчетаДЗ;
					СуммаСворачивания = СуммаСворачивания + ВыборкаСчета.СальдоПоСчетуУчетаКЗ;
					
				КонецЦикла;	
				
				Если НовСтр.ЭтоДЗ Тогда
					ПоследняяСтрокаДЗ = НовСтр;
				Иначе
					ПоследняяСтрокаКЗ = НовСтр;
				КонецЕсли;			
			КонецЦикла;	
			
			УстановитьСуммуСворачивания(ОдинСчет, ТолькоДЗ, СуммаСворачивания, ПоследняяСтрокаДЗ, ПоследняяСтрокаКЗ, СуммаКЗ >= СуммаДЗ,
			СчетаПереносаМСФО, КАПереноса, ДоговорПереноса); 
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаДанных Цикл
		Строка.СчетРасчетаПоПретензиям = СчетаПереносаМСФО[Строка.ок_КодМСФО];
		Строка.ок_ПереносНаКонтрагента = КАПереноса[Строка.ок_КодМСФО];
		Строка.ок_ПереносНаДоговор = ДоговорПереноса[Строка.ок_КодМСФО];
	КонецЦикла;
	
	Возврат ТаблицаДанных
		
КонецФункции

Процедура УстановитьСуммуСворачивания(ОдинСчет, ТолькоДЗ, СуммаСворачивания, ПоследняяСтрокаДЗ, ПоследняяСтрокаКЗ, СравнениеКЗДЗ,
	СчетаПереносаМСФО, КАПереноса, ДоговорПереноса)
	
	Если ОдинСчет Тогда
		Если ТолькоДЗ Тогда
			СуммаСворачивания = (СуммаСворачивания - ПоследняяСтрокаДЗ.СуммаСворачивания) * -1;
			ПоследняяСтрокаДЗ.СуммаСворачивания = СуммаСворачивания; 
			ПоследняяСтрокаДЗ.СальдоПоСчетуРасчетаПоПретензиям = ПоследняяСтрокаДЗ.ок_СальдоПоСчетуУчетаДЗ  + СуммаСворачивания;
			СчетаПереносаМСФО.Вставить(ПоследняяСтрокаДЗ.ок_КодМСФО, ПоследняяСтрокаДЗ.ок_СчетУчетаДЗ);
			КАПереноса.Вставить(ПоследняяСтрокаДЗ.ок_КодМСФО, ПоследняяСтрокаДЗ.Контрагент);
			ДоговорПереноса.Вставить(ПоследняяСтрокаДЗ.ок_КодМСФО, ПоследняяСтрокаДЗ.Договор);
			ПоследняяСтрокаДЗ.ДоговорАксапты = "Х";
		Иначе
			СуммаСворачивания = (СуммаСворачивания - ПоследняяСтрокаКЗ.СуммаСворачивания) * -1;
			ПоследняяСтрокаКЗ.СуммаСворачивания = СуммаСворачивания; 
			ПоследняяСтрокаКЗ.СальдоПоСчетуРасчетаПоПретензиям = ПоследняяСтрокаКЗ.СальдоПоСчетуУчетаКЗ + СуммаСворачивания * -1;
			СчетаПереносаМСФО.Вставить(ПоследняяСтрокаКЗ.ок_КодМСФО, ПоследняяСтрокаКЗ.СчетУчетаКЗ);
			КАПереноса.Вставить(ПоследняяСтрокаКЗ.ок_КодМСФО, ПоследняяСтрокаКЗ.Контрагент);
			ДоговорПереноса.Вставить(ПоследняяСтрокаКЗ.ок_КодМСФО, ПоследняяСтрокаКЗ.Договор);
			ПоследняяСтрокаКЗ.ДоговорАксапты = "Х";
		КонецЕсли;
	Иначе
		Если СравнениеКЗДЗ Тогда			
			СуммаСворачивания = (СуммаСворачивания - ПоследняяСтрокаКЗ.СуммаСворачивания) * -1;
			ПоследняяСтрокаКЗ.СуммаСворачивания = СуммаСворачивания; 
			ПоследняяСтрокаКЗ.СальдоПоСчетуРасчетаПоПретензиям = ПоследняяСтрокаКЗ.СальдоПоСчетуУчетаКЗ + СуммаСворачивания * -1;
			СчетаПереносаМСФО.Вставить(ПоследняяСтрокаКЗ.ок_КодМСФО, ПоследняяСтрокаКЗ.СчетУчетаКЗ);
			КАПереноса.Вставить(ПоследняяСтрокаКЗ.ок_КодМСФО, ПоследняяСтрокаКЗ.Контрагент);
			ДоговорПереноса.Вставить(ПоследняяСтрокаКЗ.ок_КодМСФО, ПоследняяСтрокаКЗ.Договор);
			ПоследняяСтрокаКЗ.ДоговорАксапты = "Х";
		Иначе
			СуммаСворачивания = (СуммаСворачивания - ПоследняяСтрокаДЗ.СуммаСворачивания) * -1;
			ПоследняяСтрокаДЗ.СуммаСворачивания = СуммаСворачивания; 
			ПоследняяСтрокаДЗ.СальдоПоСчетуРасчетаПоПретензиям = ПоследняяСтрокаДЗ.ок_СальдоПоСчетуУчетаДЗ + СуммаСворачивания;
			СчетаПереносаМСФО.Вставить(ПоследняяСтрокаДЗ.ок_КодМСФО, ПоследняяСтрокаДЗ.ок_СчетУчетаДЗ);
			КАПереноса.Вставить(ПоследняяСтрокаДЗ.ок_КодМСФО, ПоследняяСтрокаДЗ.Контрагент);
			ДоговорПереноса.Вставить(ПоследняяСтрокаДЗ.ок_КодМСФО, ПоследняяСтрокаДЗ.Договор);
			ПоследняяСтрокаДЗ.ДоговорАксапты = "Х";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьТаблицуТретьегоЧетвертогоЭтапа(Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СоответствияМСФО.СчетКЗ КАК ПланСчетов.бит_Дополнительный_2) КАК СчетКЗ,
	|	СоответствияМСФО.СчетДЗ КАК СчетДЗ
	|ПОМЕСТИТЬ СоответствияМСФО
	|ИЗ
	|	&СоответствияМСФО КАК СоответствияМСФО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетКЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	бит_Дополнительный_2Остатки.Счет КАК ок_СчетУчетаДЗ,
	|	бит_Дополнительный_2Остатки.Субконто1 КАК Контрагент,
	|	бит_Дополнительный_2Остатки.Субконто2 КАК Договор,
	|	ВЫБОР
	|		КОГДА бит_Дополнительный_2Остатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА бит_Дополнительный_2Остатки.СуммаМУОстаток
	|		ИНАЧЕ бит_Дополнительный_2Остатки.СуммаМУОстаток * -1
	|	КОНЕЦ КАК СуммаСворачивания,
	|	СоответствияМСФО.СчетДЗ КАК СчетУчетаКЗ,
	|	Контрагенты.Код КАК КодКонтрагента,
	|	ЛОЖЬ КАК РучнаяКорректировка,
	|	ИСТИНА КАК ок_Провести,
	|	ИСТИНА КАК ок_Сторнировать,
	|	ДоговорыКонтрагентов.ОК_КодМСФО КАК ок_КодМСФО,
	|	ДоговорыКонтрагентов.Код КАК ок_КодДоговора,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов КАК Валюта,
	|	ВЫБОР
	|		КОГДА бит_Дополнительный_2Остатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА бит_Дополнительный_2Остатки.СуммаМУОстаток
	|		ИНАЧЕ бит_Дополнительный_2Остатки.СуммаМУОстаток * -1
	|	КОНЕЦ КАК ок_СальдоПоСчетуУчетаДЗ,
	|	ИСТИНА КАК ВсеОтметки,
	|	СоответствияМСФО.СчетДЗ КАК СчетРасчетаПоПретензиям,
	|	бит_Дополнительный_2Остатки.Счет.Вид КАК СчетВид
	|ИЗ
	|	РегистрБухгалтерии.бит_Дополнительный_2.Остатки(
	|			&Дата,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СоответствияМСФО.СчетКЗ КАК СчетКЗ
	|				ИЗ
	|					СоответствияМСФО КАК СоответствияМСФО),
	|			&Субконто,
	|			Организация = &Организация
	|				И НЕ Субконто1 В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							бит_СобственныеКонтрагенты.Контрагент КАК Контрагент
	|						ИЗ
	|							РегистрСведений.бит_СобственныеКонтрагенты КАК бит_СобственныеКонтрагенты)) КАК бит_Дополнительный_2Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоответствияМСФО КАК СоответствияМСФО
	|		ПО бит_Дополнительный_2Остатки.Счет = СоответствияМСФО.СчетКЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ((ВЫРАЗИТЬ(бит_Дополнительный_2Остатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов)) = ДоговорыКонтрагентов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ((ВЫРАЗИТЬ(бит_Дополнительный_2Остатки.Субконто1 КАК Справочник.Контрагенты)) = Контрагенты.Ссылка)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА бит_Дополнительный_2Остатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|				ТОГДА бит_Дополнительный_2Остатки.СуммаМУОстаток < 0
	|			ИНАЧЕ бит_Дополнительный_2Остатки.СуммаМУОстаток > 0
	|		КОНЕЦ
	|	И ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов";
	
	мПараметры = Новый Массив(2);	
	мПараметры[0] = КонецДня(Реквизиты.Дата);
	мПараметры[1] = ВидГраницы.Включая;
	Граница = Новый(Тип("Граница"),мПараметры);
	
	Запрос.УстановитьПараметр("Дата", Граница);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	
	МассивСубконто = Новый Массив;
	МассивСубконто.Добавить(ПланыВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.Контрагенты);
	МассивСубконто.Добавить(ПланыВидовХарактеристик.бит_ВидыСубконтоДополнительные_2.ДоговорыКонтрагентов);
	
	Запрос.УстановитьПараметр("Субконто", МассивСубконто);
	
	СчетаМСФОСоответствия = ПолучитьСчетаМСФОСоответствия();
	
	Запрос.УстановитьПараметр("СоответствияМСФО", СчетаМСФОСоответствия);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Если Реквизиты.ВидОперации = Перечисления.бит_му_ВидыОперацийСворачиваниеЗадолженности.ок_ПереносОтрицательногоСальдоПоЗадолженностиВВалюте Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов", "И ДоговорыКонтрагентов.ВалютаВзаиморасчетов <> &ВалютаВзаиморасчетов"); 
	КонецЕсли;
		
	Возврат  Запрос.Выполнить().Выгрузить() 
	
КонецФункции

Функция ПроверкаПриЗаписиКодаМСФОПоИНН(КодМСФО, ИНН) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ДоговорыКонтрагентов.Владелец.ИНН КАК ВладелецИНН
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.ОК_КодМСФО = &ОК_КодМСФО
		|	И ДоговорыКонтрагентов.Владелец.ИНН <> &ИНН
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.Владелец.ИНН";
	
	Запрос.УстановитьПараметр("ОК_КодМСФО", КодМСФО);
	Запрос.УстановитьПараметр("ИНН", ИНН);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат ?(РезультатЗапроса.Пустой(), Истина, Ложь);
	
КонецФункции

Функция ПолучитьСчетаМСФОСоответствия() 
	  		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	бит_СоответствияАналитик.ЛеваяАналитика_1 КАК СчетКЗ,
		|	бит_СоответствияАналитик.ПраваяАналитика_1 КАК СчетДЗ
		|ИЗ
		|	РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
		|ГДЕ
		|	бит_СоответствияАналитик.ВидСоответствия = ЗНАЧЕНИЕ(Справочник.бит_ВидыСоответствийАналитик.ок_СоответствиеСчетовМСФОДляПереносаЗадолженности)";
		
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьСчетаМСФО() Экспорт
	
	СчетаМСФО = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_му_Настройки.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.бит_му_Настройки КАК бит_му_Настройки
	|ГДЕ
	|	бит_му_Настройки.Группа = ""СворачиваниеДЗиКЗ""
	|	И бит_му_Настройки.ИмяНастройки = ""СписокСчетовДляОтбораДЗ""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	бит_му_Настройки.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.бит_му_Настройки КАК бит_му_Настройки
	|ГДЕ
	|	бит_му_Настройки.Группа = ""СворачиваниеДЗиКЗ""
	|	И бит_му_Настройки.ИмяНастройки = ""СписокСчетовДляОтбораКЗ""";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	СчетаМСФО.Вставить("МассивСчетовДЗ", РезультатыЗапроса[0].Выгрузить().ВыгрузитьКолонку("Значение"));
	СчетаМСФО.Вставить("МассивСчетовКЗ", РезультатыЗапроса[1].Выгрузить().ВыгрузитьКолонку("Значение"));
	МассивСчетовДЗКЗ = РезультатыЗапроса[0].Выгрузить().ВыгрузитьКолонку("Значение");
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление (
	//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивСчетовДЗКЗ, СчетаМСФО.МассивСчетовКЗ);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСчетовДЗКЗ, СчетаМСФО.МассивСчетовКЗ, Истина);
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление )
	СчетаМСФО.Вставить("МассивСчетовДЗКЗ", МассивСчетовДЗКЗ);
	
	Возврат СчетаМСФО
	
КонецФункции
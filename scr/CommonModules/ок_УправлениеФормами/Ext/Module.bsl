//ОК(СофтЛаб) Вдовиченко Г.В. 20181101

#Область ПрограммныйИнтерфейс

Функция ДобавитьЭлементНаФорму(Форма, Параметры, Прототип = "") Экспорт
	
	СтруктураЭлемента = Новый Структура("Имя,Заголовок,ПоследующийЭлемент,ТипЭлемента,Родитель", "", "", Неопределено, Тип("ПолеФормы"), Форма);
	
	Если Прототип = "Группа" Тогда
		СтруктураЭлемента.ТипЭлемента = Тип("ГруппаФормы");
	ИначеЕсли Прототип = "Команда" Тогда
		СтруктураЭлемента.ТипЭлемента = Тип("КнопкаФормы");
	ИначеЕсли Прототип = "Таблица" Тогда
		СтруктураЭлемента.ТипЭлемента = Тип("ТаблицаФормы");
	ИначеЕсли Прототип = "Декорация" Тогда
		СтруктураЭлемента.ТипЭлемента = Тип("ДекорацияФормы");
	КонецЕсли;	
	
	Если ТипЗнч(Параметры) = Тип("Строка") Тогда
		
		СтруктураЭлемента.Имя = Параметры;
		СтруктураЭлемента.Заголовок = Параметры;
		
	ИначеЕсли ТипЗнч(Параметры) = Тип("Структура") Тогда
		
		Для каждого Элемент из Параметры Цикл
			
			ИмяСвойстваПоля = Элемент.Ключ;
			ЗначениеСвойстваПоля = Элемент.Значение;
			
			Если Элемент.Ключ = "Представление" Тогда
				
				ИмяСвойстваПоля = "Заголовок";
				
			ИначеЕсли Элемент.Ключ = "Родитель" Тогда
				
				Если ТипЗнч(ЗначениеСвойстваПоля) = Тип("Строка") Тогда
					ЗначениеСвойстваПоля = Форма.Элементы.Найти(ЗначениеСвойстваПоля);
					Если ЗначениеСвойстваПоля = Неопределено Тогда
						ЗначениеСвойстваПоля = Форма;
					КонецЕсли;	
				ИначеЕсли ТипЗнч(ЗначениеСвойстваПоля) = Тип("Структура") Тогда
					ЗначениеСвойстваПоля = ДобавитьЭлементНаФорму(Форма, ЗначениеСвойстваПоля, "Группа");
				КонецЕсли;	
				
			ИначеЕсли Элемент.Ключ = "ПоследующийЭлемент" Тогда
				
				Если ТипЗнч(ЗначениеСвойстваПоля) = Тип("Строка") Тогда
					ЗначениеСвойстваПоля = Форма.Элементы.Найти(ЗначениеСвойстваПоля);
				КонецЕсли;	
				
			КонецЕсли;
			
			СтруктураЭлемента.Вставить(ИмяСвойстваПоля, ЗначениеСвойстваПоля);
			
		КонецЦикла;	
		
	КонецЕсли;	
	
	Поле = Форма.Элементы.Найти(СтруктураЭлемента.Имя);
	Если Поле <> Неопределено Тогда
		Возврат Поле;
	КонецЕсли;	
	
	Если Не СтруктураЭлемента.Свойство("Вид") Тогда
		Вид = Неопределено;
		Если СтруктураЭлемента.ТипЭлемента = Тип("ПолеФормы") Тогда
			Вид = ВидПоляФормы.ПолеВвода;
		ИначеЕсли СтруктураЭлемента.ТипЭлемента = Тип("ГруппаФормы") Тогда
			Вид = ВидГруппыФормы.ОбычнаяГруппа;
			Если ТипЗнч(СтруктураЭлемента.Родитель) = Тип("ГруппаФормы") И СтруктураЭлемента.Родитель.Вид = ВидГруппыФормы.Страницы Тогда //добавляем новую страницу
				Вид = ВидГруппыФормы.Страница;
			КонецЕсли;
		ИначеЕсли СтруктураЭлемента.ТипЭлемента = Тип("КнопкаФормы") Тогда
			Вид = ВидКнопкиФормы.ОбычнаяКнопка;
			Если ТипЗнч(СтруктураЭлемента.Родитель) = Тип("ТаблицаФормы") Тогда 
				Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
			КонецЕсли;
		КонецЕсли;	
		Если Вид <> Неопределено Тогда
			СтруктураЭлемента.Вставить("Вид", Вид);
		КонецЕсли;	
	КонецЕсли;	
	
	Если Не СтруктураЭлемента.Свойство("Отображение") И СтруктураЭлемента.Свойство("Вид") И СтруктураЭлемента.Вид = ВидГруппыФормы.ОбычнаяГруппа Тогда
		СтруктураЭлемента.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
	КонецЕсли;
	
	Если Не СтруктураЭлемента.Свойство("ПутьКДанным") И (СтруктураЭлемента.ТипЭлемента = Тип("ПолеФормы") ИЛИ СтруктураЭлемента.ТипЭлемента = Тип("ТаблицаФормы")) Тогда
		Если Не СтруктураЭлемента.Свойство("ПрефиксПутьКДанным") Тогда
			СтруктураЭлемента.Вставить("ПрефиксПутьКДанным", "Объект");
		КонецЕсли;	
		СтруктураЭлемента.Вставить("ПутьКДанным", СтруктураЭлемента.ПрефиксПутьКДанным + ?(ПустаяСтрока(СтруктураЭлемента.ПрефиксПутьКДанным), "", ".") + СтруктураЭлемента.Имя);
	КонецЕсли;	
	
	Если СтруктураЭлемента.ТипЭлемента = Тип("КнопкаФормы") И ТипЗнч(СтруктураЭлемента.Родитель) = Тип("ТаблицаФормы") Тогда
		СтруктураЭлемента.Родитель = СтруктураЭлемента.Родитель.КоманднаяПанель;
	КонецЕсли;	
	
	Если СтруктураЭлемента.ПоследующийЭлемент = Неопределено Тогда
		Поле = Форма.Элементы.Добавить(СтруктураЭлемента.Имя, СтруктураЭлемента.ТипЭлемента, СтруктураЭлемента.Родитель);
	Иначе
		Поле = Форма.Элементы.Вставить(СтруктураЭлемента.Имя, СтруктураЭлемента.ТипЭлемента, СтруктураЭлемента.Родитель, СтруктураЭлемента.ПоследующийЭлемент);
	КонецЕсли;
	
	Если СтруктураЭлемента.Свойство("Вид") Тогда
		Поле.Вид = СтруктураЭлемента.Вид;
	КонецЕсли;
	
	Для каждого Элемент из СтруктураЭлемента Цикл
		
		Если СтрНайти(",ПоследующийЭлемент,Родитель,Имя,ПрефиксПутьКДанным,ТипЭлемента,Обработчики,СписокВыбора,Вид", "," + Элемент.Ключ + ",") > 0 Тогда
			
			Продолжить;		
			
		ИначеЕсли Элемент.Ключ = "Заголовок" и ПустаяСтрока(Элемент.Значение) Тогда
			
			Продолжить;		
			
		КонецЕсли;
		
		Поле[Элемент.Ключ] = Элемент.Значение;	
		
	КонецЦикла;
	
	Если СтруктураЭлемента.Свойство("Обработчики") Тогда
		Для каждого Обработчик из СтруктураЭлемента.Обработчики Цикл
			Поле.УстановитьДействие(Обработчик.Ключ, Обработчик.Значение);
		КонецЦикла;
	КонецЕсли;	
	
	Если СтруктураЭлемента.Свойство("СписокВыбора") Тогда
		Поле.СписокВыбора.Очистить();
		Для каждого ЭлементСписка Из СтруктураЭлемента.СписокВыбора Цикл
			Поле.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление, ЭлементСписка.Пометка, ЭлементСписка.Картинка);
		КонецЦикла;	
	КонецЕсли;	
	
	Возврат Поле;
		
КонецФункции	

Процедура ДобавитьЭлементыВГруппуНаФорму(Форма, Элементы, Родитель) Экспорт
	
	Для каждого Элемент из Элементы Цикл
		Параметры = Новый Структура("Имя, Заголовок", Элемент.Ключ, "");
		Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
			Параметры.Заголовок = Элемент.Значение;
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			Для каждого Значение из Элемент.Значение Цикл
				Параметры.Вставить(Значение.Ключ, Значение.Значение);	
			КонецЦикла;
		КонецЕсли;	
		Если не Параметры.Свойство("Родитель") Тогда
			Параметры.Вставить("Родитель", Родитель);
		КонецЕсли;	
		ДобавитьЭлементНаФорму(Форма, Параметры);
	КонецЦикла;	
	
КонецПроцедуры	

Функция РеквизитДобавлен(Форма, ИмяРеквизита) Экспорт
	
	Результат = Ложь;
	
	РеквизитыФормы = Форма.ПолучитьРеквизиты();
	
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = ИмяРеквизита Тогда
			Результат = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
		
	Возврат Результат
	
КонецФункции

Процедура ДобавитьРеквизиты(Форма, Реквизиты) Экспорт
	
	ДобавляемыеРеквизиты = Новый Массив;
	Для каждого Данные из Реквизиты Цикл
		
		Имя = Данные.Ключ;
			
		Параметры = Новый Структура("Имя, Тип, Путь, Заголовок, СохраняемыеДанные", Имя, Новый ОписаниеТипов("Булево"), "", "", Ложь);
		Если ТипЗнч(Данные.Значение) = Тип("ОписаниеТипов") Тогда
			Параметры.Тип = Данные.Значение;
		ИначеЕсли ТипЗнч(Данные.Значение) = Тип("Структура") Тогда
			Для каждого Элемент из Данные.Значение Цикл
				Параметры.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;	
		КонецЕсли;
		
		Если РеквизитДобавлен(Форма, Параметры.Имя) Тогда
			Продолжить;
		КонецЕсли;	
		
	    ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Параметры.Имя, Параметры.Тип, Параметры.Путь, Параметры.Заголовок, Параметры.СохраняемыеДанные));
		
	КонецЦикла;	
	
	Если ДобавляемыеРеквизиты.Количество() > 0 Тогда
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКоманды(Форма, Команды) Экспорт
	
	Для каждого Данные из Команды Цикл
		
		Имя = Данные.Ключ;
		Если Форма.Команды.Найти(Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;	
			
		Параметры = Новый Структура("Имя, Действие, Заголовок, ИзменяетСохраняемыеДанные, Картинка, Отображение, Подсказка, СочетаниеКлавиш", Имя, Имя);
		Если ТипЗнч(Данные.Значение) = Тип("Строка") Тогда
			
			Параметры.Заголовок = Данные.Значение;
			
		ИначеЕсли ТипЗнч(Данные.Значение) = Тип("Структура") Тогда
			
			Для каждого Элемент из Данные.Значение Цикл
				Если Параметры.Свойство(Элемент.Ключ) Тогда
					Параметры.Вставить(Элемент.Ключ, Элемент.Значение);
				КонецЕсли;	
			КонецЦикла;	
			
		КонецЕсли;	
		
		Команда = Форма.Команды.Добавить(Параметры.Имя);
		Для каждого Элемент из Параметры Цикл
			
			Если Элемент.Значение = Неопределено Тогда
				Продолжить;
			ИначеЕсли Элемент.Ключ = "Имя" Тогда
				Продолжить;
			КонецЕсли;	
			Команда[Элемент.Ключ] = Элемент.Значение;
			
		КонецЦикла;	
		
		//создадим элемент управления для команды
		Если ТипЗнч(Данные.Значение) <> Тип("Структура") ИЛИ (Не Данные.Значение.Свойство("ЭлементУправления")) Тогда
			Продолжить;
		КонецЕсли;	
		
		ДанныеЭлемента = Данные.Значение.ЭлементУправления;
		ПараметрыЭлемента = Новый Структура("Имя, ИмяКоманды", Параметры.Имя, Параметры.Имя);
		Если ТипЗнч(ДанныеЭлемента) = Тип("Строка") Тогда
			Параметры.Заголовок = ДанныеЭлемента;
		ИначеЕсли ТипЗнч(ДанныеЭлемента) = Тип("Структура") Тогда
			Для каждого Значение из ДанныеЭлемента Цикл
				ПараметрыЭлемента.Вставить(Значение.Ключ, Значение.Значение);	
			КонецЦикла;
		КонецЕсли;
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыЭлемента, "Команда");
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ДобавитьДействия(Форма, Действия) Экспорт
	
	Для каждого Действие из Действия Цикл
		
		Параметры = Новый Структура("ИмяДействия, ИмяПроцедуры, Элемент", "", "", "");
		
		Если ТипЗнч(Действие) = Тип("Строка") Тогда
			Параметры.ИмяДействия = Действие;
			Параметры.ИмяПроцедуры = Действие;
		ИначеЕсли ТипЗнч(Действие) = Тип("Структура") Тогда
			Для каждого Элемент из Действие Цикл
				Если Параметры.Свойство(Элемент.Ключ) Тогда
					Параметры.Вставить(Элемент.Ключ, Элемент.Значение);
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
		
		Если Параметры.ИмяДействия = "" Или Параметры.ИмяПроцедуры = "" Тогда
			Продолжить;
		КонецЕсли;	
		
		Если не ЗначениеЗаполнено(Параметры.Элемент) Тогда
			ЭлементФормы = Форма;
		ИначеЕсли ТипЗнч(Параметры.Элемент) = Тип("Строка") Тогда
			ЭлементФормы = Форма.Элементы.Найти(Параметры.Элемент);
			Если ЭлементФормы = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		Иначе	
			ЭлементФормы = Параметры.Элемент;
		КонецЕсли;	
		
		Если ЭлементФормы.ПолучитьДействие(Параметры.ИмяДействия) = "" Тогда
			ЭлементФормы.УстановитьДействие(Параметры.ИмяДействия, Параметры.ИмяПроцедуры);
		КонецЕсли;	
		
	КонецЦикла;	
		
КонецПроцедуры

#Область ЗаполнениеОбработчиковФормы

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - форма, из обработчика события которой происходит вызов процедуры.
//	см. справочную информацию по событиям управляемой формы.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление (
	//Если Форма.ИмяФормы = "Справочник.ПрофилиНастроекЭДО.Форма.ФормаСписка" Тогда
	//	
	//	ЕстьПравоИзменения = Истина;
	//	Если Не РольДоступна("ДобавлениеИзменениеНастроекОбменаСКонтрагентами")
	//		И Не РольДоступна("ПолныеПрава") 
	//										Тогда
	//									
	//		ЕстьПравоИзменения = Ложь;
	//		
	//	КонецЕсли;	
	//	
	//	Имена = Новый Структура;
	//	Имена.Вставить("ок_ОткрытьПомощникПодключенияКСервисуСбис", Новый Структура("Заголовок, Действие, ЭлементУправления", 
	//																"подключения к сервису Сбис", 
	//																"ок_ВыполнитьКоманду",
	//																Новый Структура("Родитель", "ФормаГруппаПодключиться")));
	//	//Имена.Вставить("ок_ОткрытьПомощникПодключенияКСервисуДиадок", Новый Структура("Заголовок, Действие, ЭлементУправления", 
	//	//															"подключения к сервису Диадок", 
	//	//															"ок_ВыполнитьКоманду",
	//	//															Новый Структура("Родитель", "ФормаГруппаПодключиться")));
	//	ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);
	//
	//	ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель, ПоследующийЭлемент, ПутьКДанным", 
	//															"ок_СпособОбменаЭД", 
	//															"Список", 
	//															"ИдентификаторОрганизации", 
	//															"Список.Ссылка.ок_СпособОбменаЭД"));
	//	
	//	Если Не ЕстьПравоИзменения Тогда
	//		
	//		Элемент = Форма.Элементы.Найти("ФормаГруппаПодключиться");
	//		Если Элемент <> Неопределено Тогда
	//			Элемент.Доступность = Ложь;
	//		КонецЕсли;
	//		
	//	КонецЕсли;		
	//ИначеЕсли Форма.ИмяФормы = "Справочник.ПрофилиНастроекЭДО.Форма.ФормаЭлемента" Тогда
	//	
	//	ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель, ТолькоПросмотр, ПоследующийЭлемент", 
	//															"ок_СпособОбменаЭД", 
	//															"ГруппаШапкаПравая", 
	//															Истина,
	//															"ГруппаУведомления"));
	//	
	//	ГруппаНастройки = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель", "ок_ГруппаОбменЧерезОператора", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная, Ложь, "ГруппаНастройкиУчастника"), "Группа");
	//	Имена = Новый Структура;
	//	Имена.Вставить("ок_Логин", Новый Структура("ПутьКДанным", "Объект.Логин"));
	//	Имена.Вставить("ок_Пароль", Новый Структура("ПутьКДанным, РежимПароля", "Объект.Пароль", Истина));
	//	Имена.Вставить("ок_АдресСервера", Новый Структура("ПутьКДанным", "Объект.АдресСервера"));
	//	ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, ГруппаНастройки);
	//	
	//	ЭтоДополнительныйСервисЭДО = ЗначениеЗаполнено(Форма.Объект.ок_СпособОбменаЭД);
	//	ГруппаНастройки.Видимость = ЭтоДополнительныйСервисЭДО;
	//	Элемент = Форма.Элементы.Найти("ИдентификаторОрганизации");
	//	Если Элемент <> Неопределено Тогда
	//		Элемент.ТолькоПросмотр = Не ЭтоДополнительныйСервисЭДО;
	//	КонецЕсли;	
	//	
	//	Имена = Новый Структура;
	//	Имена.Вставить("ок_ПроверитьИдентификаторУчастникаОбмена", Новый Структура("Заголовок, ИзменяетСохраняемыеДанные,ЭлементУправления", 
	//																"Заполнить идентификатор участника обмена", 
	//																Истина,
	//																Новый Структура("Родитель, Видимость", "ФормаКоманднаяПанель", ЭтоДополнительныйСервисЭДО)));
	//	ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);
	//	
	//	ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Видимость, Родитель, ПоследующийЭлемент", 
	//															"ок_ИдентификаторУчастникаОбмена",
	//															ЭтоДополнительныйСервисЭДО,
	//															"ГруппаШапкаПравая", 
	//															"ГруппаУведомления"));
	//															
	//	
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-05 (#3364)
	//	ДобавитьНаФормуЭлементыЗагружаемыхДокументовЭД(Форма);
	//	
	//	ЗаполнитьНаФормеТаблицуЗагружаемыхДокументовЭД(Форма);
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-05 (#3364)

	Если Форма.ИмяФормы = "РегистрСведений.УчетныеЗаписиЭДО.Форма.ФормаСписка" Тогда
		
		ЕстьПравоИзменения = Истина;
		Если Не РольДоступна("ДобавлениеИзменениеНастроекОбменаСКонтрагентами")
			И Не РольДоступна("ПолныеПрава") 
											Тогда
										
			ЕстьПравоИзменения = Ложь;
			
		КонецЕсли;	
		
		Имена = Новый Структура;
		Имена.Вставить("ок_ОткрытьПомощникПодключенияКСервисуСбис", Новый Структура("Заголовок, Действие, ЭлементУправления", 
																	"Подключение к сервису Сбис", 
																	"ок_ВыполнитьКоманду",
																	Новый Структура("Родитель", "ГруппаСоздать")));
		ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);
	
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель, ПоследующийЭлемент, ПутьКДанным", 
																"ок_СпособОбменаЭД", 
																"Список", 
																"ИдентификаторОрганизации", 
																"Список.ок_СпособОбменаЭД"));
		
		Если Не ЕстьПравоИзменения Тогда
			
			Элемент = Форма.Элементы.Найти("ГруппаСоздать");
			Если Элемент <> Неопределено Тогда
				Элемент.Доступность = Ложь;
			КонецЕсли;
			
		КонецЕсли;		
			
	ИначеЕсли Форма.ИмяФормы = "РегистрСведений.УчетныеЗаписиЭДО.Форма.УчетнаяЗапись" Тогда
																				
		ДобавитьНаФормуЭлементыЗагружаемыхДокументовЭД(Форма, "СтраницыФормы");		
		Форма.ок_ЗагружаемыеДокументы.Очистить();	
		ДоступныеЗначения = Неопределено;
		ок_ЗагружаемыеДокументыЗапись = Форма.РеквизитФормыВЗначение("Запись").ок_ЗагружаемыеДокументы.Получить();
				
		Отбор = Новый Структура("ВидЗагружаемогоДокумента");
		Для каждого Значение из Перечисления.ок_ВидЗагружаемыхДокументовЭД Цикл
			
			Если ДоступныеЗначения <> Неопределено Тогда
				Если ДоступныеЗначения.Найти(Значение) = Неопределено Тогда
					Продолжить;
				КонецЕсли;	
			КонецЕсли;	
			
			НоваяСтрока = Форма.ок_ЗагружаемыеДокументы.Добавить();
			НоваяСтрока.ВидЗагружаемогоДокумента = Значение;
			
			Отбор.ВидЗагружаемогоДокумента = Значение;
			Если ТипЗНЧ(ок_ЗагружаемыеДокументыЗапись) = Тип("ТаблицаЗначений") Тогда
				НоваяСтрока.Формировать = (ок_ЗагружаемыеДокументыЗапись.НайтиСтроки(Отбор).Количество() > 0);
			Иначе	
				НоваяСтрока.Формировать = Ложь;
			КонецЕсли;	
			
		КонецЦикла;	
		
		НовыеРеквизиты = Новый Массив;

		НовыйРеквизит = Новый РеквизитФормы("ок_Логин", Новый ОписаниеТипов("Строка"), , "Логин");
		НовыйРеквизит2 = Новый РеквизитФормы("ок_Пароль", Новый ОписаниеТипов("Строка"), , "Пароль");

		НовыеРеквизиты.Добавить(НовыйРеквизит);
		НовыеРеквизиты.Добавить(НовыйРеквизит2);
		Форма.ИзменитьРеквизиты(НовыеРеквизиты);
		
		ГруппаНастройки = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель, ПоследующийЭлемент", "ГруппаДополнительно", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Ложь, "ок_СтраницаЗагружаемыеДокументы", "ок_ЗагружаемыеДокументы"), "Группа");
				
		Форма["ок_Логин"] = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Форма.Запись.ИдентификаторЭДО, "ЛогинFTP");
		Форма["ок_Пароль"] = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Форма.Запись.ИдентификаторЭДО, "ПарольFTP");
		
		Имена = Новый Структура;
		Имена.Вставить("ок_ИдентификаторУчастникаОбмена", Новый Структура("ПутьКДанным", "Запись.ок_ИдентификаторУчастникаОбмена"));
		Имена.Вставить("ок_СпособОбменаЭД", Новый Структура("ПутьКДанным", "Запись.ок_СпособОбменаЭД"));
		Имена.Вставить("ок_Логин", Новый Структура("ПутьКДанным", "ок_Логин"));
		Имена.Вставить("ок_Пароль", Новый Структура("ПутьКДанным, РежимПароля", "ок_Пароль", Истина));
		Имена.Вставить("ПутьFTP", Новый Структура("ПутьКДанным, Представление", "Запись.ПутьFTP", "Адрес сервера"));
		ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, ГруппаНастройки);
		
		ЭтоДополнительныйСервисЭДО = ЗначениеЗаполнено(Форма.Запись.ок_СпособОбменаЭД);
		ГруппаНастройки.Видимость = ЭтоДополнительныйСервисЭДО;
		Элемент = Форма.Элементы.Найти("ИдентификаторЭДО");
		Если Элемент <> Неопределено Тогда
			Элемент.ТолькоПросмотр = Не ЭтоДополнительныйСервисЭДО;
		КонецЕсли;	
		
		Имена = Новый Структура;
		Имена.Вставить("ок_ПроверитьИдентификаторУчастникаОбмена", Новый Структура("Заголовок, ИзменяетСохраняемыеДанные,ЭлементУправления", 
																	"Заполнить идентификатор участника обмена", 
																	Ложь,
																	Новый Структура("Родитель, Видимость", "ФормаКоманднаяПанель", ЭтоДополнительныйСервисЭДО)));
		ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);
			
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление )
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление (
	//ИначеЕсли Форма.ИмяФормы = "Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаСписка" Тогда
	//	
	//	Форма.СписокСоглашенийСКонтрагентами.ТекстЗапроса = СтрЗаменить(Форма.СписокСоглашенийСКонтрагентами.ТекстЗапроса, "ЗНАЧЕНИЕ(Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО),", "ЗНАЧЕНИЕ(Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО), ЗНАЧЕНИЕ(Перечисление.СпособыОбменаЭД.БыстрыйОбмен),");
	//	Форма.СписокСоглашенийСКонтрагентами.ТекстЗапроса = СтрЗаменить(Форма.СписокСоглашенийСКонтрагентами.ТекстЗапроса, "И СоглашениеПереопределяемый.СпособОбменаЭД <> ЗНАЧЕНИЕ(Перечисление.СпособыОбменаЭД.БыстрыйОбмен)", "И ИСТИНА");
	//	Форма.СписокСоглашенийСКонтрагентами.ТекстЗапроса = СтрЗаменить(Форма.СписокСоглашенийСКонтрагентами.ТекстЗапроса, "СоглашениеПереопределяемый.Контрагент,", "СоглашениеПереопределяемый.Контрагент, 
	//																																	|ВЫБОР
	//																																	|	КОГДА СоглашениеПереопределяемый.ПрофильНастроекЭДО.ок_СпособОбменаЭД = ЗНАЧЕНИЕ(Перечисление.ок_СпособыОбменаЭД.ПустаяСсылка)
	//																																	|		ТОГДА СоглашениеПереопределяемый.ПрофильНастроекЭДО.СпособОбменаЭД
	//																																	|	ИНАЧЕ СоглашениеПереопределяемый.ПрофильНастроекЭДО.ок_СпособОбменаЭД
	//																																	|КОНЕЦ КАК ок_ОператорЭДО,
	//																																	|");
	//	ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Заголовок, Родитель, ПоследующийЭлемент, ПутьКДанным", 
	//															"ок_ОператорЭДО", 
	//															"Оператор ЭДО", 
	//															"СписокСоглашенийСКонтрагентами", 
	//															"ИдентификаторОрганизации", 
	//															"СписокСоглашенийСКонтрагентами.ок_ОператорЭДО"));
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-10-02 (#3337)
	//	Имена = Новый Структура;
	//	Имена.Вставить("ок_КонтрагентыПодключенныеКЭДО", Новый Структура("Заголовок, ЭлементУправления", 
	//																"Контрагенты, подключенные к ЭДО", 
	//																Новый Структура("Родитель", "СписокСоглашенийСКонтрагентамиКоманднаяПанель")));
	//	ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-12 (#3337)
	//ИначеЕсли Форма.ИмяФормы = "Справочник.СоглашенияОбИспользованииЭД.Форма.ФормаЭлемента" Тогда
	//	
	//	Имена = Новый Структура;
	//	Имена.Вставить("ок_ПроверитьИдентификаторУчастникаОбмена", Новый Структура("Заголовок, ИзменяетСохраняемыеДанные,ЭлементУправления", 
	//																"Заполнить идентификатор УО контрагента", 
	//																Истина,
	//																Новый Структура("Родитель", "ФормаКоманднаяПанель")));
	//	ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);
	//	
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-10-02 (#3337)
	//	//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель", 
	//	//														"ок_ДатаНачала",
	//	//														"ГруппаШапкаЛево"));
	//	////ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-12 (#3337)
	//	//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель", 
	//	//														"ок_ДатаНачалаВходящий",
	//	//														"ГруппаШапкаЛево"));
	//	//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель", 
	//	//														"ок_ДатаНачалаИсходящий",
	//	//														"ГруппаШапкаЛево"));
	//	////ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-12 (#3337)
	//	
	//	//Входящий ЭДО: с <дата> по <дата>
	//	Реквизиты = Новый Структура;
	//	Реквизиты.Вставить("ок_ТекстПериодыДействияВходящие", Новый Структура("Тип, СохраняемыеДанные", Новый ОписаниеТипов("Строка"), Истина));
	//	Реквизиты.Вставить("ок_ТекстПериодыДействияИсходящие", Новый Структура("Тип, СохраняемыеДанные", Новый ОписаниеТипов("Строка"), Истина));
	//	ДобавитьРеквизиты(Форма, Реквизиты);
	//	ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Вид, Обработчики, ПоложениеЗаголовка, Гиперссылка, Родитель", 
	//																"ок_ТекстПериодыДействияВходящие", 
	//																"ок_ТекстПериодыДействияВходящие", 
	//																ВидПоляФормы.ПолеНадписи,
	//																Новый Структура("Нажатие", "ок_ТекстПериодыДействияВходящиеНажатие"),
	//																ПоложениеЗаголовкаЭлементаФормы.Нет,
	//																Истина,
	//																"ГруппаШапкаЛево"));
	//	ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Вид, Обработчики, ПоложениеЗаголовка, Гиперссылка, Родитель", 
	//																"ок_ТекстПериодыДействияИсходящие", 
	//																"ок_ТекстПериодыДействияИсходящие", 
	//																ВидПоляФормы.ПолеНадписи,
	//																Новый Структура("Нажатие", "ок_ТекстПериодыДействияИсходящиеНажатие"),
	//																ПоложениеЗаголовкаЭлементаФормы.Нет,
	//																Истина,
	//																"ГруппаШапкаПраво"));
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-10-02 (#3337)
	//														
	//	ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ТолькоПросмотр, Родитель", 
	//															"ок_ИдентификаторУчастникаОбмена",
	//															Ложь,
	//															"ГруппаШапкаЛево"));
	//															
	//	//пока попросили не включать														
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-07-03 (#3337)
	//	//СписокВыбораОграничение = Новый СписокЗначений;
	//	//СписокВыбораОграничение.Добавить(Перечисления.НаправленияЭД.ПустаяСсылка(), "Входящий и исходящий");
	//	//СписокВыбораОграничение.Добавить(Перечисления.НаправленияЭД.Входящий, "Входящий");
	//	//СписокВыбораОграничение.Добавить(Перечисления.НаправленияЭД.Исходящий, "Исходящий");
	//	//
	//	//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, РежимВыбораИзСписка, СписокВыбора, Обработчики, Родитель", 
	//	//														"ок_ОграничениеПотока",
	//	//														Истина,
	//	//														СписокВыбораОграничение,
	//	//														Новый Структура("ПриИзменении", "ок_ОграничениеПотокаПриИзменении"),
	//	//														"ГруппаШапкаПраво"));
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-07-03 (#3337)
	//	
	//	ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Вид, ПоложениеЗаголовка, Родитель", 
	//															"ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования",
	//															ВидПоляФормы.ПолеФлажка,
	//															ПоложениеЗаголовкаЭлементаФормы.Право,
	//															"СтраницаВходящиеЭлектронныеДокументы"));
	//															
	//															
	//	Если Форма.Объект.Ссылка.Пустая() Тогда
	//		Форма.Объект.ок_ДатаНачала = НачалоДня(ТекущаяДатаСеанса());
	//		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-12 (#3337)
	//		//Форма.Объект.ок_ДатаНачалаВходящий = Форма.Объект.ок_ДатаНачала;
	//		//Форма.Объект.ок_ДатаНачалаИсходящий = Форма.Объект.ок_ДатаНачала;
	//		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-12 (#3337)
	//	КонецЕсли;
	//	
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-06-17 (#3377)
	//	Элемент = Форма.Элементы.Найти("ИдентификаторОрганизации");
	//	Если Элемент <> Неопределено Тогда
	//		Элемент.УстановитьДействие("ПриИзменении", "ок_ИдентификаторОрганизацииПриИзменении");
	//	КонецЕсли;	
	//	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-06-17 (#3377)
	//	
	//	
	//	Форма.ок_УправлениеФормой();
	
	ИначеЕсли Форма.ИмяФормы = "РегистрСведений.НастройкиОтправкиЭлектронныхДокументов.Форма.НастройкиЭДО" Тогда
		
		Форма.НастройкиОтправки.ТекстЗапроса = СтрЗаменить(Форма.НастройкиОтправки.ТекстЗапроса, "ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам КАК НастройкиОтправкиПоВидам", 
											"ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам КАК НастройкиОтправкиПоВидам
											|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
											|	ПО НастройкиОтправкиПоВидам.ИдентификаторОтправителя = УчетныеЗаписиЭДО.ИдентификаторЭДО");

		Форма.НастройкиОтправки.ТекстЗапроса = СтрЗаменить(Форма.НастройкиОтправки.ТекстЗапроса, "НастройкиОтправки.Получатель КАК Контрагент,", "НастройкиОтправки.Получатель КАК Контрагент, 
											|МАКСИМУМ(ВЫБОР
											|	КОГДА УчетныеЗаписиЭДО.ок_СпособОбменаЭД = ЗНАЧЕНИЕ(Перечисление.ок_СпособыОбменаЭД.ПустаяСсылка)
											|		ТОГДА УчетныеЗаписиЭДО.СпособОбменаЭД
											|	ИНАЧЕ УчетныеЗаписиЭДО.ок_СпособОбменаЭД
											|КОНЕЦ) КАК ок_ОператорЭДО,
											|");
		
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Заголовок, Родитель, ПоследующийЭлемент, ПутьКДанным", 
																"ок_ОператорЭДО", 
																"Оператор ЭДО", 
																"НастройкиОтправки", 
																"НастройкиОтправкиГруппаОрганизация", 
																"НастройкиОтправки.ок_ОператорЭДО"));
		Имена = Новый Структура;
		Имена.Вставить("ок_КонтрагентыПодключенныеКЭДО", Новый Структура("Заголовок, ЭлементУправления", 
																	"Контрагенты, подключенные к ЭДО", 
																	Новый Структура("Родитель", "НастройкиОтправкиКоманднаяПанель")));
		ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);
		
		Элемент = Форма.Элементы.Найти("ИдентификаторОрганизации");
		Если Элемент <> Неопределено Тогда
			Элемент.УстановитьДействие("ПриИзменении", "ок_ИдентификаторОрганизацииПриИзменении");
		КонецЕсли;	
		
	ИначеЕсли Форма.ИмяФормы = "РегистрСведений.НастройкиПолученияЭлектронныхДокументов.Форма.НастройкиОтраженияДокументовВУчете" Тогда
		
		//Входящий ЭДО: с <дата> по <дата>
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ок_ТекстПериодыДействияВходящие", Новый Структура("Тип, СохраняемыеДанные", Новый ОписаниеТипов("Строка"), Истина));
		Реквизиты.Вставить("ок_ПериодыДействияВходящие", Новый Структура("Тип", Новый ОписаниеТипов("ТаблицаЗначений")));
		Реквизиты.Вставить("ДатаНачала", Новый Структура("Тип, Путь", Новый ОписаниеТипов("Дата"), "ок_ПериодыДействияВходящие"));
		Реквизиты.Вставить("ДатаОкончания", Новый Структура("Тип, Путь", Новый ОписаниеТипов("Дата"), "ок_ПериодыДействияВходящие"));
		Реквизиты.Вставить("ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования", Новый Структура("Тип", Новый ОписаниеТипов("Булево")));
		//Реквизиты.Вставить("ок_ТекстПериодыДействияИсходящие", Новый Структура("Тип, СохраняемыеДанные", Новый ОписаниеТипов("Строка"), Истина));
		ДобавитьРеквизиты(Форма, Реквизиты);
		
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Вид, Обработчики, ПоложениеЗаголовка, Гиперссылка, Родитель", 
																	"ок_ТекстПериодыДействияВходящие", 
																	"ок_ТекстПериодыДействияВходящие", 
																	ВидПоляФормы.ПолеНадписи,
																	Новый Структура("Нажатие", "ок_ТекстПериодыДействияВходящиеНажатие"),
																	ПоложениеЗаголовкаЭлементаФормы.Нет,
																	Истина,
																	"ГруппаЛево"));

		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Вид, ПоложениеЗаголовка, Родитель, ПутьКДанным, Заголовок", 
																"ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования",
																ВидПоляФормы.ПолеФлажка,
																ПоложениеЗаголовкаЭлементаФормы.Право,
																"ГруппаПраво", "ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования",
																"Автоматически создавать документ поступления после согласования"));
																
		//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-08-05 (#3821)
		Имена = Новый Структура;
		Имена.Вставить("ок_КомандаПолучениеЭДПоКонтрагенту", Новый Структура("Заголовок, ЭлементУправления", 
																	"Получение ЭД по контрагенту",
																	Новый Структура("Родитель", "ФормаКоманднаяПанель")));
		
		ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);															
		//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-08-05 (#3821)
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ок_ПериодыДействияСоглашений.ДатаНачала КАК ДатаНачала,
		                      |	ок_ПериодыДействияСоглашений.ДатаОкончания КАК ДатаОкончания
		                      |ИЗ
		                      |	РегистрСведений.ок_ПериодыДействияСоглашений КАК ок_ПериодыДействияСоглашений
		                      |ГДЕ
		                      |	ок_ПериодыДействияСоглашений.Входящий
		                      |	И ок_ПериодыДействияСоглашений.Отправитель = &Организация
		                      |	И ок_ПериодыДействияСоглашений.Получатель = &Контрагент
							  //ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-28 (#3879)
							  |	И ок_ПериодыДействияСоглашений.ИдентификаторОтправителя = &ИдентификаторОрганизации
		                      |	И ок_ПериодыДействияСоглашений.ИдентификаторПолучателя = &ИдентификаторКонтрагента
							  //ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-28 (#3879)
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	НастройкиПолученияЭлектронныхДокументов.ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования КАК ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования
		                      |ИЗ
		                      |	РегистрСведений.НастройкиПолученияЭлектронныхДокументов КАК НастройкиПолученияЭлектронныхДокументов
		                      |ГДЕ
		                      |	НастройкиПолученияЭлектронныхДокументов.Получатель = &Организация
		                      |	И НастройкиПолученияЭлектронныхДокументов.Отправитель = &Контрагент
							  //ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-28 (#3879)
							  |	И НастройкиПолученияЭлектронныхДокументов.ИдентификаторПолучателя = &ИдентификаторОрганизации
		                      |	И НастройкиПолученияЭлектронныхДокументов.ИдентификаторОтправителя = &ИдентификаторКонтрагента
							  //ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-28 (#3879) 
							  |");	
		Запрос.УстановитьПараметр("Организация", Форма.Организация);
		Запрос.УстановитьПараметр("Контрагент", Форма.Контрагент);
		//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-28 (#3879)
		Запрос.УстановитьПараметр("ИдентификаторОрганизации", Форма.ИдентификаторОрганизации);
		Запрос.УстановитьПараметр("ИдентификаторКонтрагента", Форма.ИдентификаторКонтрагента);
		//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-28 (#3879)
		ПакетЗапросов = Запрос.ВыполнитьПакет();
		Форма["ок_ПериодыДействияВходящие"].Загрузить(ПакетЗапросов[0].Выгрузить());
		Выборка = ПакетЗапросов[1].Выбрать();
		Если Выборка.Следующий() Тогда
			Форма["ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования"] = Выборка.ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования;
		КонецЕсли;	
		
		Форма.ок_УправлениеФормой();
																		
	ИначеЕсли Форма.ИмяФормы = "РегистрСведений.НастройкиОтправкиЭлектронныхДокументовПоВидам.Форма.НастройкиОтправкиДокументов" Тогда
		
		Имена = Новый Структура;
		Имена.Вставить("ок_ПроверитьИдентификаторУчастникаОбмена", Новый Структура("Заголовок, ИзменяетСохраняемыеДанные,ЭлементУправления", 
																	"Заполнить идентификатор УО контрагента", 
																	Истина,
																	Новый Структура("Родитель", "ФормаКоманднаяПанель")));
																	
		
		ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);
				
		//Входящий ЭДО: с <дата> по <дата>
		Реквизиты = Новый Структура;
		//Реквизиты.Вставить("ок_ТекстПериодыДействияВходящие", Новый Структура("Тип, СохраняемыеДанные", Новый ОписаниеТипов("Строка"), Истина));
		Реквизиты.Вставить("ок_ТекстПериодыДействияИсходящие", Новый Структура("Тип, СохраняемыеДанные", Новый ОписаниеТипов("Строка"), Истина));
		Реквизиты.Вставить("ок_ПериодыДействияИсходящие", Новый Структура("Тип", Новый ОписаниеТипов("ТаблицаЗначений")));
		Реквизиты.Вставить("ДатаНачала", Новый Структура("Тип, Путь", Новый ОписаниеТипов("Дата"), "ок_ПериодыДействияИсходящие"));
		Реквизиты.Вставить("ДатаОкончания", Новый Структура("Тип, Путь", Новый ОписаниеТипов("Дата"), "ок_ПериодыДействияИсходящие"));
		Реквизиты.Вставить("ок_ИдентификаторУчастникаОбмена", Новый Структура("Тип", Новый ОписаниеТипов("Строка")));
		Реквизиты.Вставить("ПризнакИзмененияКонтрагента", Новый Структура("Тип", Новый ОписаниеТипов("Булево")));
		
		ДобавитьРеквизиты(Форма, Реквизиты);
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Вид, Обработчики, ПоложениеЗаголовка, Гиперссылка, Родитель", 
																	"ок_ТекстПериодыДействияИсходящие", 
																	"ок_ТекстПериодыДействияИсходящие", 
																	ВидПоляФормы.ПолеНадписи,
																	Новый Структура("Нажатие", "ок_ТекстПериодыДействияИсходящиеНажатие"),
																	ПоложениеЗаголовкаЭлементаФормы.Нет,
																	Истина,
																	"ШапкаЛево"));
															
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, ТолькоПросмотр, Родитель, Заголовок", 
																"ок_ИдентификаторУчастникаОбмена",
																"ок_ИдентификаторУчастникаОбмена",	
																Ложь,
																"ШапкаПраво",
																"Идентификатор участника обмена"));																
																	
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ок_ПериодыДействияСоглашений.ДатаНачала КАК ДатаНачала,
		                      |	ок_ПериодыДействияСоглашений.ДатаОкончания КАК ДатаОкончания
		                      |ИЗ
		                      |	РегистрСведений.ок_ПериодыДействияСоглашений КАК ок_ПериодыДействияСоглашений
		                      |ГДЕ
		                      |	НЕ ок_ПериодыДействияСоглашений.Входящий
							  //ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-28 (#3879)
		                      //|	И ок_ПериодыДействияСоглашений.Отправитель = &ИдентификаторОтправителя
		                      //|	И ок_ПериодыДействияСоглашений.Получатель = &ИдентификаторПолучателя
							  |	И ок_ПериодыДействияСоглашений.Отправитель = &Организация
		                      |	И ок_ПериодыДействияСоглашений.Получатель = &Контрагент
							  |	И ок_ПериодыДействияСоглашений.ИдентификаторОтправителя = &ИдентификаторОрганизации
		                      |	И ок_ПериодыДействияСоглашений.ИдентификаторПолучателя = &ИдентификаторКонтрагента
							  //ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-28 (#3879)
							  |	И ок_ПериодыДействияСоглашений.Договор = &Договор
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ ПЕРВЫЕ 1
		                      |	НастройкиОтправкиЭлектронныхДокументов.ок_ИдентификаторУчастникаОбмена КАК ок_ИдентификаторУчастникаОбмена
		                      |ИЗ
		                      |	РегистрСведений.НастройкиОтправкиЭлектронныхДокументов КАК НастройкиОтправкиЭлектронныхДокументов
		                      |ГДЕ
							  //ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-28 (#3879)
		                      //|	НастройкиОтправкиЭлектронныхДокументов.Отправитель = &ИдентификаторОтправителя
		                      //|	И НастройкиОтправкиЭлектронныхДокументов.Получатель = &ИдентификаторПолучателя
							  |	НастройкиОтправкиЭлектронныхДокументов.Отправитель = &Организация
		                      |	И НастройкиОтправкиЭлектронныхДокументов.Получатель = &Контрагент
							  //ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-28 (#3879)
							  |	И НастройкиОтправкиЭлектронныхДокументов.Договор = &Договор");	
							  
		//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-28 (#3879 
		//Запрос.УстановитьПараметр("ИдентификаторОтправителя", Форма.Организация);
		//Запрос.УстановитьПараметр("ИдентификаторПолучателя", Форма.Контрагент);
		Запрос.УстановитьПараметр("Организация", Форма.Организация);
		Запрос.УстановитьПараметр("Контрагент", Форма.Контрагент);
		Запрос.УстановитьПараметр("ИдентификаторОрганизации", Форма.ИдентификаторОтправителя);
		Запрос.УстановитьПараметр("ИдентификаторКонтрагента", Форма.ИдентификаторПолучателя);
		//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-28 (#3879)
		Запрос.УстановитьПараметр("Договор", Форма.ДоговорКонтрагента);
		ПакетЗапросов = Запрос.ВыполнитьПакет();
		Форма["ок_ПериодыДействияИсходящие"].Загрузить(ПакетЗапросов[0].Выгрузить());
		Выборка = ПакетЗапросов[1].Выбрать();
		Если Выборка.Следующий() Тогда
			Форма["ок_ИдентификаторУчастникаОбмена"] = Выборка.ок_ИдентификаторУчастникаОбмена;
		КонецЕсли;	
		
		Запрос = Новый Запрос();
																	
		Форма.ок_УправлениеФормой();
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление )		
	ИначеЕсли Форма.ИмяФормы = "Документ.ПакетЭД.Форма.ФормаДокумента" Тогда
		
		ГруппаНастройки = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель", "ок_ГруппаОбменЧерезОператора", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная, Ложь, "ГруппаПодробностиПакета"), "Группа");
		Имена = Новый Структура;
		Имена.Вставить("ок_ДатаТранзакции", Новый Структура("ПутьКДанным, ТолькоПросмотр", "Объект.ок_ДатаТранзакции", Истина));
		Имена.Вставить("ок_КодТранзакции", Новый Структура("ПутьКДанным, ТолькоПросмотр", "Объект.ок_КодТранзакции", Истина));
		Имена.Вставить("ок_Удален", Новый Структура("ПутьКДанным, ТолькоПросмотр, Вид", "Объект.ок_Удален", Истина, ВидПоляФормы.ПолеФлажка));
		ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, ГруппаНастройки);
		
		ГруппаНастройки = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель", "ок_ГруппаОбменЧерезОператора2", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная, Ложь, "ГруппаПодробностиПакета"), "Группа");
		Имена = Новый Структура;
		Имена.Вставить("ок_Наименование", Новый Структура("ПутьКДанным, ТолькоПросмотр", "Объект.ок_Наименование", Истина));
		Имена.Вставить("ок_Сумма", Новый Структура("ПутьКДанным, ТолькоПросмотр", "Объект.ок_Сумма", Истина));
		ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, ГруппаНастройки);
		
		Имена = Новый Структура;
		Имена.Вставить("ок_Дата", Новый Структура("ПутьКДанным, ТолькоПросмотр", "Объект.ок_Дата", Истина));
		//Имена.Вставить("ок_ДатаВремяСоздания", Новый Структура("ПутьКДанным, ТолькоПросмотр", "Объект.ок_ДатаВремяСоздания", Истина));
		Имена.Вставить("ок_ДатаРедакции", Новый Структура("ПутьКДанным, ТолькоПросмотр", "Объект.ок_ДатаРедакции", Истина));
		ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, ГруппаНастройки);
		
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-14 (#4324)
		Имена = Новый Структура;
		Имена.Вставить("ок_КорреспонденцияВходящая", Новый Структура("ПутьКДанным, ТолькоПросмотр, Вид", "Объект.ок_КорреспонденцияВходящая", Истина, ВидПоляФормы.ПолеФлажка));
		ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, Форма.Элементы.ГруппаПодробностиПакета);
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-14 (#4324)
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЭлектронныйДокументВходящий.Форма.ФормаДокумента" Тогда
				
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО (
		//ЭтоДополнительныйСервисЭДО = ЗначениеЗаполнено(Форма.Объект.ПрофильНастроекЭДО.ок_СпособОбменаЭД);
		ЭтоДополнительныйСервисЭДО = ЗначениеЗаполнено(РегистрыСведений.УчетныеЗаписиЭДО.ЗначениеРеквизитаРегистра(Форма.Объект.ИдентификаторОрганизации, "ок_СпособОбменаЭД"));
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО )
	
		Если ЭтоДополнительныйСервисЭДО Тогда
			
			Форма.ТолькоПросмотр = Ложь;
			
			// скроем типовой реквизит стадии ЭД
			Элемент = Форма.Элементы.Найти("СостояниеЭДО");
			Если Элемент <> Неопределено Тогда
				Элемент.Видимость = Ложь;
			КонецЕсли;
			
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-11 №3997
						
			ГруппаВертикальнаяОсновнойСтаницы = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель", "ок_ГруппаВертикальнаяОсновнойСтаницы", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Ложь, "ГруппаОсновное"), "Группа");
			ПодгруппаГоризонтальнаяОсновнойСтаницы = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель", "ок_ПодгруппаГоризонтальнаяОсновнойСтаницы", ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда, Ложь, "ок_ГруппаВертикальнаяОсновнойСтаницы"), "Группа");
			Форма.Элементы.Переместить(Форма.Элементы.ГруппаЛеваяКолонка, ПодгруппаГоризонтальнаяОсновнойСтаницы);
			Форма.Элементы.Переместить(Форма.Элементы.ГруппаПраваяКолонка, ПодгруппаГоризонтальнаяОсновнойСтаницы);
			
			//Группа = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель", "ок_ГруппаДополнительныеДанные", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Ложь, "ГруппаЛеваяКолонка"), "Группа");
			Группа = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель", "ок_ГруппаДополнительныеДанные", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Ложь, "ок_ГруппаВертикальнаяОсновнойСтаницы"), "Группа");
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-11 №3997
			
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-03-10 (#4054)
			Форма.Элементы.Комментарий.ТолькоПросмотр = Ложь;
			Форма.Элементы.Комментарий.МногострочныйРежим = Истина;
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-03-10 (#4054) 
			
			//Группа = Форма.Элементы.Найти("ГруппаЛеваяКолонка");
			Имена = Новый Структура;
			Имена.Вставить("ок_НомерЗаявки", Новый Структура("Обработчики", Новый Структура("ПриИзменении", "ок_НомерЗаявкиПриИзменении")));
			      
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-11 №3997
	        // Имена.Вставить("ок_Инициатор", "");
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-11 №3997
			
			
			//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-16 (#3862)
			//Имена.Вставить("ок_Статус", "");
			СтатусТолькоПросмотр = ?(Форма.Объект.ок_Статус = Перечисления.ок_СтатусыВходящегоЭлектронногоДокументооборота.Отправлен
										Или Форма.Объект.ок_Статус = Перечисления.ок_СтатусыВходящегоЭлектронногоДокументооборота.Завершен,
										Истина,
										Ложь);
			Имена.Вставить("ок_Статус", Новый Структура("ТолькоПросмотр, Обработчики", 
														СтатусТолькоПросмотр, //ТолькоПросмотр
														Новый Структура("НачалоВыбора, АвтоПодбор, ОкончаниеВводаТекста, ПриИзменении", "ок_СтатусНачалоВыбора", "ок_СтатусАвтоПодбор", "ок_СтатусОкончаниеВводаТекста", "ок_СтатусПриИзменении"))); //Обработчики
			//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-16 (#3862)
						
			ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, Группа);
			
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-11 №3997			
			РазместитьЭлементыПоЭД(Форма);				
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-11 №3997
			
			Группа = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Заголовок, Группировка, ОтображатьЗаголовок, Поведение, ТолькоПросмотр, Родитель", 
																				"ок_ГруппаДанныеОператора", 
																				"Данные оператора ЭДО", 
																				ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, 
																				Истина, 
																				ПоведениеОбычнойГруппы.Свертываемая,
																				Истина,
																				//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-11 №3997
																				//"ГруппаЛеваяКолонка"), "Группа");
																				"ок_ГруппаВертикальнаяОсновнойСтаницы"), "Группа");
																				//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-11 №3997
			Имена.Вставить("ок_Наименование", Новый Структура("ТолькоПросмотр", Истина));
			Имена.Вставить("ок_Сумма", Новый Структура("ТолькоПросмотр", Истина));
			Имена.Вставить("ок_ДатаРедакции", "");
			Имена.Вставить("НомерВерсииЭД", "");
			Имена.Вставить("ок_Удален", "");
			ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, Группа);
			
			//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель", 
			//														"ок_Статус", 
			//														"ГруппаЛеваяКолонка"));
			//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель, Обработчики", 
			//														"ок_НомерЗаявки", 
			//														"ГруппаЛеваяКолонка", 
			//														Новый Структура("ПриИзменении", "ок_НомерЗаявкиПриИзменении")));

			//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель", 
			//														"ок_Инициатор", 
			//														"ГруппаЛеваяКолонка"));
			//
			//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ТолькоПросмотр, Родитель", 
			//														"ок_Наименование", 
			//														Истина,
			//														"ГруппаЛеваяКолонка"));
			//														
			//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ТолькоПросмотр, Родитель", 
			//														"ок_Сумма", 
			//														Истина,
			//														"ГруппаЛеваяКолонка"));
																	
			ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель, МногострочныйРежим, АвтоМаксимальнаяШирина", 
																	"ок_ПричинаОтклоненияСогласования", 
																	"ГруппаПричинаОтклонения",
																	Истина,
																	Ложь));
																	
			ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель, МногострочныйРежим, АвтоМаксимальнаяШирина", 
																	"ок_КомментарийДляСогласующего", 
																	"ГруппаПеренаправление",
																	Истина,
																	Ложь));
																	
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-05-13 (#3340)
			Действия = Новый Массив;
			Действия.Добавить(Новый Структура("ИмяДействия, ИмяПроцедуры", "ПослеЗаписи", "ок_ПослеЗаписи"));
			
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-05 (#3364)
			Действия.Добавить(Новый Структура("ИмяДействия, ИмяПроцедуры", "ПередЗаписьюНаСервере", "ок_ПередЗаписьюНаСервере"));
			//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-08-21 (#3816) - 1С добавила свой обработчик ПриОткрыии.
			//Действия.Добавить(Новый Структура("ИмяДействия, ИмяПроцедуры", "ПриОткрытии", "ок_ПриОткрытии"));
			//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-08-21 (#3816)
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-05 (#3364) 
			
			ДобавитьДействия(Форма, Действия);
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-05-13 (#3340)
			
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-05 (#3364)
			ДобавитьНаФормуЭлементыЗагружаемыхДокументовЭД(Форма, "ГруппаСтраницы");
			
			ЗаполнитьНаФормеТаблицуЗагружаемыхДокументовЭД(Форма);
			Элемент = Форма.Элементы.Найти("ДоговорКонтрагента");
			Если Элемент <> Неопределено Тогда
				Элемент.ТолькоПросмотр = Ложь;
			КонецЕсли;	
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-05 (#3364)
			
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-06-08 (#4207)
			ПараметрыЭлементаФормы = Новый Структура;
			ПараметрыЭлементаФормы.Вставить("Имя", "ок_Прослеживаемость");
			ПараметрыЭлементаФормы.Вставить("Родитель", "ГруппаПраваяКолонка");
			ПараметрыЭлементаФормы.Вставить("Доступность", Ложь);
			ПараметрыЭлементаФормы.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
			ПараметрыЭлементаФормы.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Право);
					
			ДобавитьЭлементНаФорму(Форма, ПараметрыЭлементаФормы);			
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-06-08 (#4207)
			
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-03-12 (#4054)
			Если Форма.Объект.ок_Статус <> ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Новый")
				И Форма.Объект.ок_Статус <> ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.НаСогласование") Тогда
				СкрытьЭлементыВходящийДокументов(Форма, Ложь);
			КонецЕсли;
			//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-03-12 (#4054) 
			 
		КонецЕсли;	
		
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-27 (#4227)
		КомандаЗаписатьИЗакрыть = Форма.Команды.Добавить("ок_ЗаписатьИЗакрыть");
		КомандаЗаписатьИЗакрыть.Действие = "ок_ЗаписатьИЗакрыть";
		
		Если Форма.Элементы.Найти("ФормаГруппаСтандартныеКоманды") <> Неопределено Тогда // группа кнопок добавлена интерактивно, при обновлении может быть затерта, нужно проверить
			КнопкаЗаписатьИЗакрыть = Форма.Элементы.Вставить("ок_ЗаписатьИЗакрыть", Тип("КнопкаФормы"), Форма.Элементы.ФормаКоманднаяПанель, Форма.Элементы.ФормаГруппаСтандартныеКоманды);
		Иначе
			КнопкаЗаписатьИЗакрыть = Форма.Элементы.Добавить("ок_ЗаписатьИЗакрыть", Тип("КнопкаФормы"), Форма.Элементы.ФормаКоманднаяПанель);
		КонецЕсли;
		
		КнопкаЗаписатьИЗакрыть.Заголовок  = "Записать и закрыть";
		КнопкаЗаписатьИЗакрыть.ИмяКоманды = "ок_ЗаписатьИЗакрыть";
		КнопкаЗаписатьИЗакрыть.КнопкаПоУмолчанию = Истина;
		
		бит_ОбщегоНазначения.УстановитьНастройкиДоступностиЭлементовДляФормы(Форма, Форма.Объект, Форма.Объект.ок_Статус);
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-27 (#4227)
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЭлектронныйДокументВходящий.Форма.ФормаПросмотраЭД" Тогда
		
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО (
		//ОсобоеОтображение = ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.Объект.ПрофильНастроекЭДО, "ок_СпособОбменаЭД"));
		ОсобоеОтображение = ЗначениеЗаполнено(РегистрыСведений.УчетныеЗаписиЭДО.ЗначениеРеквизитаРегистра(Форма.Объект.ИдентификаторОрганизации, "ок_СпособОбменаЭД"));
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО )
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ок_ПоказатьДополнительныеДокументы", Новый Структура("Заголовок", "Показать служебные документы"));
		Реквизиты.Вставить("ок_ОсобоеОтображение", Новый Структура);
		Реквизиты.Вставить("ок_Представление", Новый Структура("Тип", Новый ОписаниеТипов("Строка")));
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-04-22 (#3332)
		//Реквизиты.Вставить("ок_ПредставлениеСервер", Новый Структура("Тип", Новый ОписаниеТипов("Строка")));
		Реквизиты.Вставить("ок_ИмяВременногоФайла", Новый Структура("Тип", Новый ОписаниеТипов("Строка")));
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-04-22 (#3332)
		Реквизиты.Вставить("ок_УстановленаПрограммаОтображенияПредставленияHTML", Новый Структура);
		ДобавитьРеквизиты(Форма, Реквизиты);
		Форма.ок_ОсобоеОтображение = ОсобоеОтображение;
		
		ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Вид, ПоложениеЗаголовка, Родитель", 
																"ок_Представление",
																"ок_Представление",
																ВидПоляФормы.ПолеHTMLДокумента,
																ПоложениеЗаголовкаЭлементаФормы.Нет,
																"ТабличныйДокументВходящийПроизвольныйПервичныйЭД"));
			//НовыйЭлемент = Форма.Элементы.Добавить(СтрокаТаблицы.ИмяРеквизита, Тип("ПолеФормы"), Страница);
			//НовыйЭлемент.Вид = ВидПоляФормы.ПолеHTMLДокумента;
			//НовыйЭлемент.ПутьКДанным = СтрокаТаблицы.ИмяРеквизита + "Представление";
			//НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			//НовыйЭлемент.Видимость = Истина;
			////НовыйЭлемент.ТолькоПросмотр = Истина;
		Если ОсобоеОтображение Тогда
			ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Вид, ПоложениеЗаголовка, Обработчики, ПутьКДанным", 
																	"ок_ПоказатьДополнительныеДокументы", 
																	ВидПоляФормы.ПолеФлажка,
																	ПоложениеЗаголовкаЭлементаФормы.Право,
																	Новый Структура("ПриИзменении", "ок_ПоказатьДополнительныеДокументыПриИзменении"), 
																	"ок_ПоказатьДополнительныеДокументы"));
			СкрываемыеЭлементы = Новый Массив;
			СкрываемыеЭлементы.Добавить("ДополнительныеКоманды");
			СкрываемыеЭлементы.Добавить("ГруппаКомандАннулирование");
			СкрываемыеЭлементы.Добавить("КомандаПодписатьОтправить");
			СкрываемыеЭлементы.Добавить("КомандаПодписать");
			СкрываемыеЭлементы.Добавить("КомандаУтвердить");
			СкрываемыеЭлементы.Добавить("КомандаПеренаправить");
			СкрываемыеЭлементы.Добавить("КомандаОтправитьПовторно");
			СкрываемыеЭлементы.Добавить("СостояниеЭД");
			СкрываемыеЭлементы.Добавить("ГруппаСтатус");
			СкрываемыеЭлементы.Добавить("СтраницаПодписиИСтатусы");
			
			Для каждого ИмяЭлемента из СкрываемыеЭлементы Цикл
				Элемент = Форма.Элементы.Найти(ИмяЭлемента);
				Если Элемент <> Неопределено Тогда
					Элемент.Видимость = Ложь;
				КонецЕсли;	
			КонецЦикла;
			//Форма.Элементы.КомандаПодписать.Видимость = Истина;
			//Форма.Элементы.КомандаПодписать.Доступность = Истина;
			ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Вид, Родитель", 
																	"ок_Статус", 
																	ВидПоляФормы.ПолеНадписи,
																	"ГруппаШапки"));
			Если ЗначениеЗаполнено(Форма.Объект.ок_НомерЗаявки) Тогда																	
				ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Вид, Родитель", 
																	"ок_НомерЗаявки", 
																	ВидПоляФормы.ПолеНадписи,
																	"ГруппаШапки"));
																КонецЕсли;
																
			Если ЗначениеЗаполнено(Форма.Объект.ок_Инициатор) Тогда																	
				ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Вид, Родитель", 
																	"ок_Инициатор", 
																	ВидПоляФормы.ПолеНадписи,
																	"ГруппаШапки"));
			КонецЕсли;	

		КонецЕсли;
	ИначеЕсли Форма.ИмяФормы = "РегистрСведений.ЖурналСобытийЭД.Форма.ФормаСписка" Тогда
		
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель, ПутьКДанным", "ок_ДатаТранзакции", "Список", "Список.ок_ДатаТранзакции"));
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель, ПутьКДанным", "ок_КодТранзакции", "Список", "Список.ок_КодТранзакции"));
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаУслуги" Тогда
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-05 (#3364)
		//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель", 
		//														"ок_НомерЗаявки", 
		//														"ГруппаШапкаЛевая"));
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Обработчики, Родитель", 
																"ок_НомерЗаявки", 
																Новый Структура("ПриИзменении", "ок_НомерЗаявкиПриИзменении"),
																"ГруппаШапкаЛевая"));
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ок_ПредыдущийНомерЗаявки", Новый Структура("Тип", Новый ОписаниеТипов("ДокументСсылка.бит_ФормаВводаБюджета")));
		ДобавитьРеквизиты(Форма, Реквизиты);
		Форма.ок_ПредыдущийНомерЗаявки = Форма.Объект.ок_НомерЗаявки;
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-05 (#3364)
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		ЗаполнитьНаФормеДанныеДляРегистрацииСчетаФактуры(Форма);
		ДобавитьНаФормуЭлементУправленияБумажныйДокумент(Форма);
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
			СкрываемыеЭлементы = Новый Массив;
			СкрываемыеЭлементы.Добавить("ДополнительныеКоманды");
			СкрываемыеЭлементы.Добавить("ГруппаКомандАннулирование");
			СкрываемыеЭлементы.Добавить("КомандаПодписатьОтправить");
			СкрываемыеЭлементы.Добавить("КомандаПодписать");
			СкрываемыеЭлементы.Добавить("КомандаУтвердить");
			СкрываемыеЭлементы.Добавить("КомандаПеренаправить");
			СкрываемыеЭлементы.Добавить("КомандаОтправитьПовторно");
			СкрываемыеЭлементы.Добавить("СостояниеЭД");
			СкрываемыеЭлементы.Добавить("ГруппаСтатус");
			СкрываемыеЭлементы.Добавить("СтраницаПодписиИСтатусы");
			
			Для каждого ИмяЭлемента из СкрываемыеЭлементы Цикл
				Элемент = Форма.Элементы.Найти(ИмяЭлемента);
				Если Элемент <> Неопределено Тогда
					Элемент.Видимость = Ложь;
				КонецЕсли;	
			КонецЦикла;
			
			// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-09-08 (#4338)
			ИменаКоманд = Новый Структура;
			
			//Команда "ок_ЗаполнитьКолонку_Услуги"
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("Заголовок", 			"Заполнить колонку");
			СтруктураПараметров.Вставить("Действие", 			"ок_ЗаполнитьКолонку_Услуги");
			СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "УслугиКоманднаяПанель"));
			СтруктураПараметров.Вставить("Картинка", 			БиблиотекаКартинок.СкопироватьЭлементСписка);
			СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.КартинкаИТекст);
			СтруктураПараметров.Вставить("Подсказка", 			"Заполнить значение, указанное в текущей ячейке, во всех строках по выбранному столбцу");
			
			ИменаКоманд.Вставить("ок_ЗаполнитьКолонку_Услуги", СтруктураПараметров);
			
			ДобавитьКоманды(Форма, ИменаКоманд);
			// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-09-08 (#4338)
			
	//ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаТовары" Тогда
	//		
	//	ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель", 
	//															"ок_НомерЗаявки", 
	//															"ГруппаШапкаЛевая"));
	//	
	
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-09-08 (#4338)
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаТовары" Тогда
		
		ИменаКоманд = Новый Структура;
		
		//Команда "ок_ЗаполнитьКолонку_Товары"
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Заполнить колонку");
		СтруктураПараметров.Вставить("Действие", 			"ок_ЗаполнитьКолонку_Товары");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "ТоварыКоманднаяПанель"));
		СтруктураПараметров.Вставить("Картинка", 			БиблиотекаКартинок.СкопироватьЭлементСписка);
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.КартинкаИТекст);
		СтруктураПараметров.Вставить("Подсказка", 			"Заполнить значение, указанное в текущей ячейке, во всех строках по выбранному столбцу");
		
		ИменаКоманд.Вставить("ок_ЗаполнитьКолонку_Товары", СтруктураПараметров);

		ДобавитьКоманды(Форма, ИменаКоманд);
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-09-08 (#4338)
	
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаОбщая" Тогда
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-05 (#3364)
		//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель", 
		//														"ок_НомерЗаявки", 
		//														"ГруппаДополнительно"));
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-08-13 (#4289)
		//ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Обработчики, Родитель", 
		//														"ок_НомерЗаявки", 
		//														Новый Структура("ПриИзменении", "ок_НомерЗаявкиПриИзменении"),
		//														"ГруппаДополнительно"));
		ОбработчикиПоляНомерЗаявки = Новый Структура;
		ОбработчикиПоляНомерЗаявки.Вставить("ПриИзменении", "ок_НомерЗаявкиПриИзменении");
		
		ПараметрыНомераЗаявки = Новый Структура;
		ПараметрыНомераЗаявки.Вставить("Имя"			, "ок_НомерЗаявки");
		ПараметрыНомераЗаявки.Вставить("Обработчики"	, ОбработчикиПоляНомерЗаявки);
		ПараметрыНомераЗаявки.Вставить("Родитель"		, "ГруппаДополнительно");
		ПараметрыНомераЗаявки.Вставить("ТолькоПросмотр"	, Истина);
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыНомераЗаявки);
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-08-13 (#4289)
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ок_ПредыдущийНомерЗаявки", Новый Структура("Тип", Новый ОписаниеТипов("ДокументСсылка.бит_ФормаВводаБюджета")));
		
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-27 (#4382)
		Реквизиты.Вставить("СчетаВидимостиКомандыСоздатьРБП", Новый Структура("Тип", Новый ОписаниеТипов("СписокЗначений")));
		Реквизиты.Вставить("НесоответствиеРБП", Новый Структура("Тип,Путь", Новый ОписаниеТипов("Булево"),"Объект.Услуги"));
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-27 (#4382)
		
		ДобавитьРеквизиты(Форма, Реквизиты);
		Форма.ок_ПредыдущийНомерЗаявки = Форма.Объект.ок_НомерЗаявки;
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-05 (#3364)
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		ЗаполнитьНаФормеДанныеДляРегистрацииСчетаФактуры(Форма);
		ДобавитьНаФормуЭлементУправленияБумажныйДокумент(Форма);
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
		//ОКЕЙ Рычаков А.С.(СофтЛаб) 2021-01-19 Начало (#3790)
		Имена = Новый Структура;
		
		Имена.Вставить("ВыполнитьЗагрузкуИзExcelТовары", Новый Структура("Заголовок, ЭлементУправления, Картинка, Отображение", 
																	"Загрузить из Excel", 
																	Новый Структура("Родитель", "ТоварыКоманднаяПанель"),
																	БиблиотекаКартинок.бит_од_Excel,
																	ОтображениеКнопки.КартинкаИТекст));
																	
		Имена.Вставить("ВыполнитьЗагрузкуИзExcelУслуги", Новый Структура("Заголовок, ЭлементУправления, Картинка, Отображение", 
																	"Загрузить из Excel", 
																	Новый Структура("Родитель", "УслугиКоманднаяПанель"),
																	БиблиотекаКартинок.бит_од_Excel,
																	ОтображениеКнопки.КартинкаИТекст));
																	
		Имена.Вставить("ВыполнитьЗагрузкуИзExcelОборудование", Новый Структура("Заголовок, ЭлементУправления, Картинка, Отображение", 
																	"Загрузить из Excel", 
																	Новый Структура("Родитель", "ОборудованиеКоманднаяПанель"),
																	БиблиотекаКартинок.бит_од_Excel,
																	ОтображениеКнопки.КартинкаИТекст));
																	
		Имена.Вставить("ВыполнитьЗагрузкуИзExcelОбъектыСтроительства", Новый Структура("Заголовок, ЭлементУправления, Картинка, Отображение", 
																	"Загрузить из Excel", 
																	Новый Структура("Родитель", "ОбъектыСтроительстваКоманднаяПанель"),
																	БиблиотекаКартинок.бит_од_Excel,
																	ОтображениеКнопки.КартинкаИТекст));
																	
																	
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-09-08 (#4338)
		
		//Команда "ок_ЗаполнитьКолонку_Товары"
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Заполнить колонку");
		СтруктураПараметров.Вставить("Действие", 			"ок_ЗаполнитьКолонку_Товары");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "ТоварыКоманднаяПанель"));
		СтруктураПараметров.Вставить("Картинка", 			БиблиотекаКартинок.СкопироватьЭлементСписка);
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.КартинкаИТекст);
		СтруктураПараметров.Вставить("Подсказка", 			"Заполнить значение, указанное в текущей ячейке, во всех строках по выбранному столбцу");
		
		Имена.Вставить("ок_ЗаполнитьКолонку_Товары", СтруктураПараметров);
		
		//Команда "ок_ЗаполнитьКолонку_Услуги"
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Заполнить колонку");
		СтруктураПараметров.Вставить("Действие", 			"ок_ЗаполнитьКолонку_Услуги");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "УслугиКоманднаяПанель"));
		СтруктураПараметров.Вставить("Картинка", 			БиблиотекаКартинок.СкопироватьЭлементСписка);
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.КартинкаИТекст);
		СтруктураПараметров.Вставить("Подсказка", 			"Заполнить значение, указанное в текущей ячейке, во всех строках по выбранному столбцу");
		
		Имена.Вставить("ок_ЗаполнитьКолонку_Услуги", СтруктураПараметров);
		
		//Команда "ок_ЗаполнитьКолонку_АгентскиеУслуги"
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Заполнить колонку");
		СтруктураПараметров.Вставить("Действие", 			"ок_ЗаполнитьКолонку_АгентскиеУслуги");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "АгентскиеУслугиКоманднаяПанель"));
		СтруктураПараметров.Вставить("Картинка", 			БиблиотекаКартинок.СкопироватьЭлементСписка);
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.КартинкаИТекст);
		СтруктураПараметров.Вставить("Подсказка", 			"Заполнить значение, указанное в текущей ячейке, во всех строках по выбранному столбцу");
		
		Имена.Вставить("ок_ЗаполнитьКолонку_АгентскиеУслуги", СтруктураПараметров);
		
		//Команда "ок_ЗаполнитьКолонку_Оборудование"
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Заполнить колонку");
		СтруктураПараметров.Вставить("Действие", 			"ок_ЗаполнитьКолонку_Оборудование");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "ОборудованиеКоманднаяПанель"));
		СтруктураПараметров.Вставить("Картинка", 			БиблиотекаКартинок.СкопироватьЭлементСписка);
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.КартинкаИТекст);
		СтруктураПараметров.Вставить("Подсказка", 			"Заполнить значение, указанное в текущей ячейке, во всех строках по выбранному столбцу");
		
		Имена.Вставить("ок_ЗаполнитьКолонку_Оборудование", СтруктураПараметров);
		
		//Команда "ок_ЗаполнитьКолонку_ОбъектыСтроительства"
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Заполнить колонку");
		СтруктураПараметров.Вставить("Действие", 			"ок_ЗаполнитьКолонку_ОбъектыСтроительства");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "ОбъектыСтроительстваКоманднаяПанель"));
		СтруктураПараметров.Вставить("Картинка", 			БиблиотекаКартинок.СкопироватьЭлементСписка);
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.КартинкаИТекст);
		СтруктураПараметров.Вставить("Подсказка", 			"Заполнить значение, указанное в текущей ячейке, во всех строках по выбранному столбцу");
		
		Имена.Вставить("ок_ЗаполнитьКолонку_ОбъектыСтроительства", СтруктураПараметров);
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-09-08 (#4338)

		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-27 (#4382)
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Создать РБП");
		СтруктураПараметров.Вставить("Действие", 			"ок_СоздатьРБП");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "УслугиКоманднаяПанель"));
		СтруктураПараметров.Вставить("Подсказка", 			"Создать РБП");
		
		Имена.Вставить("ок_СоздатьРБП", СтруктураПараметров);

		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Перезаполнить РБП");
		СтруктураПараметров.Вставить("Действие", 			"ок_ПерезаполнитьРБП");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "УслугиКоманднаяПанель"));
		СтруктураПараметров.Вставить("Подсказка", 			"Перезаполнить РБП");
		
		Имена.Вставить("ок_ПерезаполнитьРБП", СтруктураПараметров);
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-27 (#4382)
																			
		ДобавитьКоманды(Форма, Имена);
		//ОКЕЙ Рычаков А.С.(СофтЛаб) 2021-01-19 Конец (#3790)
		
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-27 (#4382)
		Форма.СчетаВидимостиКомандыСоздатьРБП.ЗагрузитьЗначения(ОК_ОбщегоНазначения.ПолучитьСчетаВидимостиКомандыСоздатьРБП()); 
		
		Форма.Элементы.Услуги.УстановитьДействие("ПриАктивизацииСтроки", "ок_УслугиПриАктивизацииСтроки");
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-27 (#4382)
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЭлектронныйДокументИсходящий.Форма.ФормаДокумента" Тогда
		
		Форма.ТолькоПросмотр = Ложь;
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Родитель", 
																"ок_Статус", 
																"ГруппаЛеваяКолонка"));
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Вид, Родитель", 
																"ок_Отклонен",
																ВидПоляФормы.ПолеФлажка,
																"ГруппаЛеваяКолонка"));
		
		Элемент = Форма.Элементы.Найти("ФормаОбработкаОбменСКонтрагентамиок_СохранитьАрхивИсходящегоДокументаНаДиск");
		Если Элемент <> Неопределено Тогда
			Если Не ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
				Элемент.Видимость = Ложь;
			ИначеЕсли Не ок_ОбменСКонтрагентамиВнутренний.ЕстьАрхивИсходящегоДокумента(Форма.Объект.Ссылка) Тогда
				Элемент.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.АрхивЭлектронныхДокументов" Тогда
		
		Форма.НераспакованныеПакеты.ТекстЗапроса = СтрЗаменить(Форма.НераспакованныеПакеты.ТекстЗапроса, 
														"ПакетЭД.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Входящий)", 
															   "ВЫБОР
															    //1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО (
																//|	КОГДА ПакетЭД.ПрофильНастроекЭДО.ок_СпособОбменаЭД <> ЗНАЧЕНИЕ(Перечисление.ок_СпособыОбменаЭД.ПустаяСсылка)
																|	КОГДА УчетныеЗаписиЭДО.ок_СпособОбменаЭД <> ЗНАЧЕНИЕ(Перечисление.ок_СпособыОбменаЭД.ПустаяСсылка)
																//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО )
																|		ТОГДА ИСТИНА
																|	ИНАЧЕ ПакетЭД.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Входящий)
																|КОНЕЦ
																|");
																
	 //1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО (
		Форма.НераспакованныеПакеты.ТекстЗапроса = СтрЗаменить(Форма.НераспакованныеПакеты.ТекстЗапроса, 
														"Документ.ПакетЭД КАК ПакетЭД", 
															   "Документ.ПакетЭД КАК ПакетЭД 
															    |	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
																|		УчетныеЗаписиЭДО.Организация КАК Организация,
																|			МАКСИМУМ(УчетныеЗаписиЭДО.ок_СпособОбменаЭД) КАК ок_СпособОбменаЭД
																|		ИЗ
																|			РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
																|	
																|		СГРУППИРОВАТЬ ПО
																|			УчетныеЗаписиЭДО.Организация) КАК УчетныеЗаписиЭДО
																|		ПО ПакетЭД.Организация = УчетныеЗаписиЭДО.Организация");																
	 //1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО )
	 
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-14 (#4324)
	 	ПараметрыСозданияКорреспонденцияВходящая = Новый Структура;
		ПараметрыСозданияКорреспонденцияВходящая.Вставить("Имя",			"ВсеПакетыок_КорреспонденцияВходящая"); 
		ПараметрыСозданияКорреспонденцияВходящая.Вставить("Вид",			ВидПоляФормы.ПолеФлажка);
		ПараметрыСозданияКорреспонденцияВходящая.Вставить("ПутьКДанным",	"ВсеПакеты.ок_КорреспонденцияВходящая");
		ПараметрыСозданияКорреспонденцияВходящая.Вставить("Заголовок",		"Корреспонденция входящая");
		ПараметрыСозданияКорреспонденцияВходящая.Вставить("Родитель",		"ВсеПакеты");
		ПараметрыСозданияКорреспонденцияВходящая.Вставить("Видимость",		Истина);
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияКорреспонденцияВходящая); 
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-14 (#4324)
		
	ИначеЕсли Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокументаОбщая"
		ИЛИ Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокументаТовары" 
		ИЛИ Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокументаУслуги" Тогда
		
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Вид, Родитель", 
																"ок_ВключитьСчетВПакетЭДО",
																ВидПоляФормы.ПолеФлажка,
																"ГруппаШапкаЛевая"));
																
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-05-12 (#4139)	
		Если Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокументаУслуги" Тогда
			Имена = Новый Структура;
			Имена.Вставить("ЗаполнитьСодержаниеУслуг", Новый Структура("Заголовок, Действие, ЭлементУправления", 
																			"Заполнить содержание услуг", 
																			"ЗаполнитьСодержаниеУслуг",
																			Новый Структура("Родитель", "УслугиДействия")));
			ок_УправлениеФормами.ДобавитьКоманды(Форма, Имена);
		КонецЕсли;		
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-05-12 (#4139) 
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-07-10 (#3395)
	ИначеЕсли Форма.ИмяФормы = "Справочник.Контрагенты.Форма.ФормаСписка" Тогда
		
		Элемент = Форма.Элементы.Найти("ЭДО");
		Если Элемент <> Неопределено Тогда
			
			//СтрокаПоиска = "ВЫБОР
			//	|	КОГДА СостоянияКонтрагентовБЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаБЭД.Подключен)
			//	|		ТОГДА 0
			//	|	ИНАЧЕ 1
			//	|КОНЕЦ КАК ЭДО";
			
			СтрокаПоиска = "КОГДА СостоянияКонтрагентовБЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаБЭД.Подключен)";
			
			//1С-ИжТиСи, Кондратьев, 03.2020, Обновление ЭДО (			
			//СтрокаЗамены = "КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока ЕСТЬ NULL
			//	|		ТОГДА 0
			//	|	КОГДА НЕ СостоянияКонтрагентовБЭД.ок_ОбрабатыватьОграничение
			//	|		ТОГДА 0
			//	|	КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.ПустаяСсылка)
			//	|		ТОГДА 3
			//	|	КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.ПустаяСсылка)
			//	|		ТОГДА 3
			//	|	КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Входящий)
			//	|		ТОГДА 2
			//	|	КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Исходящий)
			//	|		ТОГДА 1
			//	|	КОГДА ИСТИНА
			//	|		ТОГДА 0
			//	|	КОГДА СостоянияКонтрагентовБЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаБЭД.Подключен)";
			//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-10-01 (#3879)
			//СтрокаЗамены = "КОГДА СостоянияКонтрагентовБЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаБЭД.НастроенЭДО)";
			//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-10-01 (#3879)
			//1С-ИжТиСи, Кондратьев, 03.2020, Обновление ЭДО )
			
			//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-10-01 (#3879)
			//Если СтрНайти(Форма.Список.ТекстЗапроса, СтрокаПоиска) > 0 Тогда
			//	Форма.Список.ТекстЗапроса = СтрЗаменить(Форма.Список.ТекстЗапроса, СтрокаПоиска, СтрокаЗамены);
			//	Элемент.КартинкаЗначений = БиблиотекаКартинок.ок_НаправлениеОбменаЭД;
			//КонецЕсли;
			Элемент.КартинкаЗначений = БиблиотекаКартинок.ок_НаправлениеОбменаЭД;
			//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-10-01 (#3879)
			
		КонецЕсли;	
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-13 (#4262)
		КомандаЗагрузитьРейтингИЛимит = Форма.Команды.Добавить("ок_ЗагрузитьРейтингИКредитныйЛимитИзExcel");
		КомандаЗагрузитьРейтингИЛимит.Действие = "ЗагрузитьРейтингИКредитныйЛимитИзExcel";
		
		КнопкаЗагрузитьРейтингИЛимит = Форма.Элементы.Добавить("ок_ЗагрузитьРейтингИКредитныйЛимитИзExcel", Тип("КнопкаФормы"), Форма.Элементы.ФормаКоманднаяПанель);
		КнопкаЗагрузитьРейтингИЛимит.Заголовок  = "Загрузить рейтинг и кредитный лимит из Excel";
		КнопкаЗагрузитьРейтингИЛимит.ИмяКоманды = "ок_ЗагрузитьРейтингИКредитныйЛимитИзExcel";
		
		бит_ОбщегоНазначения.УстановитьНастройкиДоступностиЭлементовДляФормы(Форма, Справочники.Контрагенты.ПустаяСсылка());
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-13 (#4262)
	ИначеЕсли Форма.ИмяФормы = "Справочник.Контрагенты.Форма.ФормаВыбора" Тогда
		
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ок_Организация", Новый Структура("Тип", Новый ОписаниеТипов("СправочникСсылка.Организации")));
		ДобавитьРеквизиты(Форма, Реквизиты);
		Если Форма.Параметры.Свойство("ок_Организация") Тогда
			Форма.ок_Организация = Форма.Параметры.ок_Организация;
		КонецЕсли;
		
		ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Заголовок, Вид, Видимость, ПоследующийЭлемент", 
																"ок_Организация",
																"ок_Организация",
		                                                        "Организация",
																ВидПоляФормы.ПолеНадписи,
																Ложь,
																"Список"));
		
		Элемент = Форма.Элементы.Найти("ЭДО");
		Если Элемент <> Неопределено Тогда
			
			СтрокаПоиска = "КОГДА СостоянияКонтрагентовБЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаБЭД.Подключен)";
				
			Если СтрНайти(Форма.Список.ТекстЗапроса, СтрокаПоиска) > 0 Тогда
				
				//1С-ИжТиСи, Кондратьев, 03.2020, Обновление ЭДО (
				//СтрокаЗамены = "КОГДА &ок_ИспользоватьОтборПоОрганизации
				//				|		ТОГДА ЕСТЬNULL(ок_СостоянияКонтрагентовЭДО.НаправлениеЭД, 0)
				//				|	КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока ЕСТЬ NULL
				//				|		ТОГДА 0
				//				|	КОГДА НЕ СостоянияКонтрагентовБЭД.ок_ОбрабатыватьОграничение
				//				|		ТОГДА 0
				//				|	КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.ПустаяСсылка)
				//				|		ТОГДА 3
				//				|	КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.ПустаяСсылка)
				//				|		ТОГДА 3
				//				|	КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Входящий)
				//				|		ТОГДА 2
				//				|	КОГДА СостоянияКонтрагентовБЭД.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Исходящий)
				//				|		ТОГДА 1
				//				|	КОГДА ИСТИНА
				//				|		ТОГДА 0
				//				|	КОГДА СостоянияКонтрагентовБЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаБЭД.Подключен)";
				СтрокаЗамены = "КОГДА СостоянияКонтрагентовБЭД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрагентаБЭД.НастроенЭДО)";
				//1С-ИжТиСи, Кондратьев, 03.2020, Обновление ЭДО )
				
				Форма.Список.ТекстЗапроса = СтрЗаменить(Форма.Список.ТекстЗапроса, СтрокаПоиска, СтрокаЗамены);
				
				//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО реквизит нигде не заполнен(
				//Форма.Список.ТекстЗапроса = Форма.Список.ТекстЗапроса + "
				//	|{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				//	|ВЫБОР
				//	|	КОГДА МАКСИМУМ(ВЫБОР
				//	|				КОГДА Данные.ок_ОграничениеПотока <> ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Входящий)
				//	|						И Данные.ок_ОграничениеПотока <> ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Исходящий)
				//	|					ТОГДА ИСТИНА
				//	|				ИНАЧЕ ЛОЖЬ
				//	|			КОНЕЦ)
				//	|		ТОГДА 3
				//	|	КОГДА МАКСИМУМ(ВЫБОР
				//	|					КОГДА Данные.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Исходящий)
				//	|						ТОГДА ИСТИНА
				//	|					ИНАЧЕ ЛОЖЬ
				//	|				КОНЕЦ)
				//	|			И МАКСИМУМ(ВЫБОР
				//	|					КОГДА Данные.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Входящий)
				//	|						ТОГДА ИСТИНА
				//	|					ИНАЧЕ ЛОЖЬ
				//	|				КОНЕЦ)
				//	|		ТОГДА 3
				//	|	КОГДА МАКСИМУМ(ВЫБОР
				//	|				КОГДА Данные.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Исходящий)
				//	|					ТОГДА ИСТИНА
				//	|				ИНАЧЕ ЛОЖЬ
				//	|			КОНЕЦ)
				//	|		ТОГДА 1
				//	|	КОГДА МАКСИМУМ(ВЫБОР
				//	|				КОГДА Данные.ок_ОграничениеПотока = ЗНАЧЕНИЕ(Перечисление.НаправленияЭД.Входящий)
				//	|					ТОГДА ИСТИНА
				//	|				ИНАЧЕ ЛОЖЬ
				//	|			КОНЕЦ)
				//	|		ТОГДА 2
				//	|	ИНАЧЕ 3
				//	|КОНЕЦ КАК НаправлениеЭД,
				//	|Данные.Контрагент КАК Контрагент
				//	|ИЗ
				//	|	Справочник.СоглашенияОбИспользованииЭД КАК Данные
				//	|ГДЕ
				//	|	Данные.СтатусПодключения = ЗНАЧЕНИЕ(Перечисление.СтатусыУчастниковОбменаЭД.Присоединен)
				//	|	И НЕ Данные.ПометкаУдаления
				//	|	И Данные.Организация = &ок_Организация
				//	|	И Данные.ПрофильНастроекЭДО.ок_СпособОбменаЭД <> ЗНАЧЕНИЕ(Перечисление.ок_СпособыОбменаЭД.ПустаяСсылка)
				//	|
				//	|СГРУППИРОВАТЬ ПО
				//	|	Данные.Контрагент) КАК ок_СостоянияКонтрагентовЭДО
				//	|ПО СправочникКонтрагенты.Ссылка = ок_СостоянияКонтрагентовЭДО.Контрагент}";
				//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО )
				
				Элемент.КартинкаЗначений = БиблиотекаКартинок.ок_НаправлениеОбменаЭД;
				
				Форма.ок_УстановитьПараметрОрганизация();
				
			КонецЕсли;
			
		КонецЕсли;	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-07-10 (#3395)
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
	ИначеЕсли Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_ФормаВходящегоБумажногоДокумента" Тогда

		ДобавитьНаФормуЭлементыЗагружаемыхДокументовЭД(Форма, "СтраницыДанные");
		ЗаполнитьНаФормеТаблицуЗагружаемыхДокументовЭД(Форма);
		
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-11 №3997	
		РазместитьЭлементыПоЭД(Форма);				
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-11 №3997
		
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-03-12 (#4054)
		Если Форма.Документ.ок_Статус <> ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Новый")
			И Форма.Документ.ок_Статус <> ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.НаСогласование") Тогда
			СкрытьЭлементыВходящийДокументов(Форма, Истина);
		КонецЕсли;			
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-03-12 (#4054)
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеНМА.Форма.ФормаДокумента" Тогда
		
		ЗаполнитьНаФормеДанныеДляРегистрацииСчетаФактуры(Форма);
		ДобавитьНаФормуЭлементУправленияБумажныйДокумент(Форма);
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-14 (#3758)
		//кнопка "Заполнить ID из заявки на договор"
		
		ГруппаIDРазноска = Форма.Элементы.Вставить("IDРазноска", Тип("ГруппаФормы"), Форма.Элементы.ГруппаШапкаПравая);
		ГруппаIDРазноска.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаIDРазноска.Группировка 			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаIDРазноска.ОтображатьЗаголовок 	= Ложь;
		ГруппаIDРазноска.Отображение 			= ОтображениеОбычнойГруппы.Нет;
		
		Форма.Элементы.Переместить(Форма.Элементы.ОК_ID_Разноска, ГруппаIDРазноска);
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-05 (#4145)
		Форма.Элементы.ОК_ID_Разноска.ТолькоПросмотр = Истина;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-05 (#4145)
		
		КомандаЗаполнитьIDИзЗаявкиНаДоговор = Форма.Команды.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор");
		КомандаЗаполнитьIDИзЗаявкиНаДоговор.Действие = "ЗаполнитьIDИзЗаявкиНаДоговор";
		
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор = Форма.Элементы.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор", Тип("КнопкаФормы"), ГруппаIDРазноска);
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.Заголовок  = "Заполнить ID из заявки на договор";
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.ИмяКоманды = "ок_ЗаполнитьIDИзЗаявкиНаДоговор";
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-14 (#3758)
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеДопРасходов.Форма.ФормаДокумента" Тогда
		
		ЗаполнитьНаФормеДанныеДляРегистрацииСчетаФактуры(Форма);
		ДобавитьНаФормуЭлементУправленияБумажныйДокумент(Форма);
		
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-05 (#4145)
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеДенежныхДокументов.Форма.ФормаДокумента" Тогда
	
		ГруппаIDРазноска = Форма.Элементы.Вставить("IDРазноска", Тип("ГруппаФормы"), Форма.Элементы.ГруппаШапкаПравая);
		ГруппаIDРазноска.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаIDРазноска.Группировка 			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаIDРазноска.ОтображатьЗаголовок 	= Ложь;
		ГруппаIDРазноска.Отображение 			= ОтображениеОбычнойГруппы.Нет;
		
		СтруктураПараметровЭлементаФормы_ID_Разноска = Новый Структура();		
		СтруктураПараметровЭлементаФормы_ID_Разноска.Вставить("Вид",			ВидПоляФормы.ПолеВвода);
		СтруктураПараметровЭлементаФормы_ID_Разноска.Вставить("Имя", 			"ОК_ID_Разноска");
		СтруктураПараметровЭлементаФормы_ID_Разноска.Вставить("Заголовок", 		НСтр("ru = 'ID разноска'"));
		СтруктураПараметровЭлементаФормы_ID_Разноска.Вставить("ПутьКДанным", 	"Объект.ОК_ID_Разноска");
		СтруктураПараметровЭлементаФормы_ID_Разноска.Вставить("Родитель", 		"IDРазноска");
		СтруктураПараметровЭлементаФормы_ID_Разноска.Вставить("Маска", 			"NNNN-NNNN");
		СтруктураПараметровЭлементаФормы_ID_Разноска.Вставить("Видимость", 		Истина);
		СтруктураПараметровЭлементаФормы_ID_Разноска.Вставить("ТолькоПросмотр", Истина);
		
		ДобавитьЭлементНаФорму(Форма, СтруктураПараметровЭлементаФормы_ID_Разноска);
														
		КомандаЗаполнитьIDИзЗаявкиНаДоговор = Форма.Команды.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор");
		КомандаЗаполнитьIDИзЗаявкиНаДоговор.Действие = "ЗаполнитьIDИзЗаявкиНаДоговор";
		
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор = Форма.Элементы.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор", Тип("КнопкаФормы"), ГруппаIDРазноска);
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.Заголовок  = "Заполнить ID из заявки на договор";
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.ИмяКоманды = "ок_ЗаполнитьIDИзЗаявкиНаДоговор";
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-05 (#4145)
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-02 (#3436)
	ИначеЕсли Форма.ИмяФормы = "Документ.ПлатежноеПоручение.Форма.ФормаСписка" Тогда
		Имена = Новый Структура;
		Имена.Вставить("ок_ОбновитьСостояние", Новый Структура("Заголовок, ЭлементУправления", 
																	"Запросить состояние (ОК)", 
																	Новый Структура("Родитель", "ГруппаОбменСБанком")));
		ДобавитьКоманды(Форма, Имена);
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-02 (#3436)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-11-08 (#3393)
	ИначеЕсли Форма.ИмяФормы = "Справочник.Проекты.Форма.ФормаЭлемента" Тогда 
		   
		ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Заголовок, Вид, Видимость, ПоследующийЭлемент", 
																"ок_ВозможнаКорректировкаБюджета",
																"Объект.ок_ВозможнаКорректировкаБюджета",
		                                                        НСтр("ru = 'Возможна корректировка бюджета'"),
																ВидПоляФормы.ПолеФлажка,
																Истина,
																"Комментарий"));	
																
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-27 (#3714)
		
		ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Заголовок, Вид, Видимость, ПоследующийЭлемент", 
																"ок_Используется",
																"Объект.ок_Используется",
		                                                        НСтр("ru = 'Используется'"),
																ВидПоляФормы.ПолеФлажка,
																Истина,
																"Комментарий"));
																
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-19 (#4390)
		ГруппаПроектПоУмолчанию = Форма.Элементы.Вставить("ок_ГруппаПроектПоУмолчанию", Тип("ГруппаФормы"), ,Форма.Элементы.Комментарий);
		ГруппаПроектПоУмолчанию.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаПроектПоУмолчанию.Группировка 			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаПроектПоУмолчанию.ОтображатьЗаголовок 	= Ложь;
		ГруппаПроектПоУмолчанию.Отображение 			= ОтображениеОбычнойГруппы.Нет;
		
		// Добавление элемента на форму "ок_ПроектПоУмолчанию"
		СтруктураПараметровЭлементаФормы = Новый Структура();
		СтруктураПараметровЭлементаФормы.Вставить("Имя", 			"ок_ПроектПоУмолчанию");
		СтруктураПараметровЭлементаФормы.Вставить("ПутьКДанным", 	"Объект.ок_ПроектПоУмолчанию");
		СтруктураПараметровЭлементаФормы.Вставить("Заголовок", 		НСтр("ru = 'Проект по умолчанию'"));
		СтруктураПараметровЭлементаФормы.Вставить("Вид", 			ВидПоляФормы.ПолеФлажка);
		СтруктураПараметровЭлементаФормы.Вставить("Видимость", 		Истина);
		СтруктураПараметровЭлементаФормы.Вставить("Родитель", 		"ок_ГруппаПроектПоУмолчанию");
		СтруктураПараметровЭлементаФормы.Вставить("Обработчики", 	Новый Структура("ПриИзменении","ок_ПроектПоУмолчаниюПриИзменении"));
		
		ДобавитьЭлементНаФорму(Форма, СтруктураПараметровЭлементаФормы);
		
		// Добавление элемента на форму "ок_Период"
		СтруктураПараметровЭлементаФормы = Новый Структура();
		СтруктураПараметровЭлементаФормы.Вставить("Имя", 			"ок_Период");
		СтруктураПараметровЭлементаФормы.Вставить("ПутьКДанным", 	"Объект.ок_Период");
		СтруктураПараметровЭлементаФормы.Вставить("Заголовок", 		НСтр("ru = 'Период'"));
		СтруктураПараметровЭлементаФормы.Вставить("Вид", 			ВидПоляФормы.ПолеВвода);
		СтруктураПараметровЭлементаФормы.Вставить("Видимость", 		Истина);
		СтруктураПараметровЭлементаФормы.Вставить("Родитель", 		"ок_ГруппаПроектПоУмолчанию");
		СтруктураПараметровЭлементаФормы.Вставить("Обработчики", 	Новый Структура("ПриИзменении","ок_ПериодПриИзменении"));
		
		ДобавитьЭлементНаФорму(Форма, СтруктураПараметровЭлементаФормы);
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-19 (#4390)
		
																
	ИначеЕсли Форма.ИмяФормы = "Справочник.Подразделения.Форма.ФормаЭлемента" Тогда 
																
		ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Заголовок, Вид, Видимость, Родитель", 
																"ок_Используется",
																"Объект.ок_Используется",
		                                                        НСтр("ru = 'Используется'"),
																ВидПоляФормы.ПолеФлажка,
																Истина,
																"ГруппаДополнительнаяИнформация"));
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-27 (#3714)

	ИначеЕсли Форма.ИмяФормы = "Справочник.бит_СтатьиОборотов.Форма.ФормаЭлемента" Тогда 
		
		ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Заголовок, Вид, Видимость, Родитель", 
																"ок_ВозможнаКорректировкаБюджета",
																"Объект.ок_ВозможнаКорректировкаБюджета",
		                                                        НСтр("ru = 'Возможна корректировка бюджета'"),
																ВидПоляФормы.ПолеФлажка,
																Истина,
																"ПраваяКлассификация"));	
																
	ИначеЕсли Форма.ИмяФормы = "Справочник.ОбъектыСтроительства.Форма.ФормаЭлемента" Тогда 
		
		ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Заголовок, Вид, Видимость, ПоследующийЭлемент", 
																"ок_ВозможнаКорректировкаБюджета",
																"Объект.ок_ВозможнаКорректировкаБюджета",
		                                                        НСтр("ru = 'Возможна корректировка бюджета'"),
																ВидПоляФормы.ПолеФлажка,
																Истина,
																"ГруппаДополнительныеРеквизиты"));	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-11-08 (#3393)
	
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-11-02 (#4407)
	ЭлементКомментарий = Новый Структура;
	ЭлементКомментарий.Вставить("Имя"					, "ок_Комментарий");
	ЭлементКомментарий.Вставить("ПутьКДанным"			, "Объект.ок_Комментарий");
	ЭлементКомментарий.Вставить("Заголовок"				, НСтр("ru = 'Комментарий'"));
	ЭлементКомментарий.Вставить("Вид"					, ВидПоляФормы.ПолеВвода);
	ЭлементКомментарий.Вставить("Видимость"				, Истина);
	ЭлементКомментарий.Вставить("МногострочныйРежим"	, Ложь);
	
	ДобавитьЭлементНаФорму(Форма, ЭлементКомментарий);
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-11-02 (#4407)
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2020-01-21 (#3611)
	ИначеЕсли Форма.ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда
	
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя", "ок_ЗакрепленныйБухгалтер"));
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2020-01-21 (#3611)
	
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-12 (#МДМ)
		Если НЕ Форма.Объект.Ссылка.Пустая() Тогда
		
			Организация_Окей = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация ОКЕЙ"); 

			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("Организация", 	Организация_Окей);
			СтруктураПараметров.Вставить("ПометкаУдаления", Ложь);

			НаличиеДоговора_Окей = бит_Общий.КонтрагентИмеетДоговорПоПараметрам(Форма.Объект.Ссылка, СтруктураПараметров);
			
			Имена = Новый Структура;
			Имена.Вставить("ок_ВыполнитьПравилаРегистрацииДляОбъекта", Новый Структура("Заголовок, ЭлементУправления, Картинка, Отображение", 
																		"Зарегистрировать объект в плане обмена ""Выгрузка в аксапту""", 
																		Новый Структура("Родитель, Видимость, ТолькоВоВсехДействиях", "ФормаКоманднаяПанель", НаличиеДоговора_Окей, Истина),
																		БиблиотекаКартинок.СоздатьЭлементСписка,
																		ОтображениеКнопки.КартинкаИТекст));
			ДобавитьКоманды(Форма, Имена);
			
			Имена = Новый Структура;
			Имена.Вставить("ок_ВыполнитьПравилаРегистрацииДляОбъектаИСвязанныхЭлементов", Новый Структура("Заголовок, ЭлементУправления, Картинка, Отображение", 
																		"Зарегистрировать объект в плане обмена ""Выгрузка в аксапту"" и связанных элементов", 
																		Новый Структура("Родитель, Видимость, ТолькоВоВсехДействиях", "ФормаКоманднаяПанель", НаличиеДоговора_Окей, Истина),
																		БиблиотекаКартинок.СоздатьЭлементСписка,
																		ОтображениеКнопки.КартинкаИТекст));
			ДобавитьКоманды(Форма, Имена);
		
		КонецЕсли; 
		
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-12 (#4262)
		СписокВыбораРейтинг = Новый СписокЗначений;
		СписокВыбораРейтинг.Добавить(0, "	");
		СписокВыбораРейтинг.Добавить(1, "1 (Новый контрагент)");
		СписокВыбораРейтинг.Добавить(2, "2 (Низкий уровень)");
		СписокВыбораРейтинг.Добавить(3, "3 (Средний уровень)");
		СписокВыбораРейтинг.Добавить(4, "4 (Высокий уровень)");
		СписокВыбораРейтинг.Добавить(5, "5 (Специальный)");
		
		ПараметрыСозданияРейтинг = Новый Структура;
		ПараметрыСозданияРейтинг.Вставить("Имя"		    				, "ок_Рейтинг"); 
		ПараметрыСозданияРейтинг.Вставить("ПоследующийЭлемент"			, "КодПоОКПО");
		ПараметрыСозданияРейтинг.Вставить("Вид"		    				, ВидПоляФормы.ПолеВвода);
		ПараметрыСозданияРейтинг.Вставить("ПутьКДанным" 				, "Объект.ок_Рейтинг");
		ПараметрыСозданияРейтинг.Вставить("РежимВыбораИзСписка" 		, Истина);
		ПараметрыСозданияРейтинг.Вставить("СписокВыбора"				, СписокВыбораРейтинг);
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияРейтинг);  
		
		ПараметрыСозданияКредитныйЛимит = Новый Структура;
		ПараметрыСозданияКредитныйЛимит.Вставить("Имя"		    		, "ок_КредитныйЛимит"); 
		ПараметрыСозданияКредитныйЛимит.Вставить("ПоследующийЭлемент"	, "КодПоОКПО");
		ПараметрыСозданияКредитныйЛимит.Вставить("Вид"		    		, ВидПоляФормы.ПолеВвода);
		ПараметрыСозданияКредитныйЛимит.Вставить("ПутьКДанным" 			, "Объект.ок_КредитныйЛимит");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияКредитныйЛимит);
		
		ПараметрыРазмещенияКоманды = Новый Структура;
		ПараметрыРазмещенияКоманды.Вставить("Родитель"					, "ФормаКоманднаяПанель");
		ПараметрыРазмещенияКоманды.Вставить("Видимость"					, Истина);
		ПараметрыРазмещенияКоманды.Вставить("ТолькоВоВсехДействиях"		, Истина);
		
		УстановитьРейтингКредитныйЛимит = Новый Структура; 
		УстановитьРейтингКредитныйЛимит.Вставить("Заголовок"			, "Изменить рейтинг и кредитный лимит");
		УстановитьРейтингКредитныйЛимит.Вставить("ЭлементУправления"	, ПараметрыРазмещенияКоманды);

		Команды = Новый Структура;
		Команды.Вставить("ок_ИзменитьРейтингИКредитныйЛимит"			, УстановитьРейтингКредитныйЛимит);
		
		ДобавитьКоманды(Форма, Команды);
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-12 (#4262)
		
		УстановитьНастройкиДоступностиЭлементов(Форма);
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.ДоговорыКонтрагентов.Форма.ФормаЭлемента" Тогда
	
		Если НЕ Форма.Объект.Ссылка.Пустая() Тогда
			
			Организация_Окей = бит_БК_Общий.ПолучитьЗначениеНастройкиМеханизмаИмпортаДанных("Организации", "Организация ОКЕЙ"); 
			Если Форма.Объект.Организация = Организация_Окей Тогда
				
				Имена = Новый Структура;
				Имена.Вставить("ок_ВыполнитьПравилаРегистрацииДляОбъекта", Новый Структура("Заголовок, ЭлементУправления, Картинка, Отображение", 
																			"Зарегистрировать объект в плане обмена ""Выгрузка в аксапту""", 
																			Новый Структура("Родитель, ТолькоВоВсехДействиях", "ФормаКоманднаяПанель", Истина),
																			БиблиотекаКартинок.СоздатьЭлементСписка,
																			ОтображениеКнопки.КартинкаИТекст));
				ДобавитьКоманды(Форма, Имена);
				
				Имена = Новый Структура;
				Имена.Вставить("ок_ВыполнитьПравилаРегистрацииДляОбъектаИСвязанныхЭлементов", Новый Структура("Заголовок, ЭлементУправления, Картинка, Отображение", 
																			"Зарегистрировать объект в плане обмена ""Выгрузка в аксапту"" и связанных элементов", 
																			Новый Структура("Родитель, ТолькоВоВсехДействиях", "ФормаКоманднаяПанель", Истина),
																			БиблиотекаКартинок.СоздатьЭлементСписка,
																			ОтображениеКнопки.КартинкаИТекст));
				ДобавитьКоманды(Форма, Имена);
			
			КонецЕсли; 
		
		КонецЕсли;
		
		УстановитьНастройкиДоступностиЭлементов(Форма);
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-12 (#МДМ)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2020-03-16 (#3669)
	ИначеЕсли Форма.ИмяФормы = "Обработка.бит_фн_ОбработкаДоставкиОповещенийЭлПочта.Форма.ФормаНастройкиУправляемая" Тогда
	                      
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Заголовок, Вид, Видимость, Родитель", 
																"Настройка_EMAILУчетнаяЗапись",
																"Объект.Настройка_EMAILУчетнаяЗапись",
		                                                        НСтр("ru = 'Учетная запись электронной почты'"),
																ВидПоляФормы.ПолеВвода,
																Истина,
																"ГруппаОбщие"));
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2020-03-16 (#3669)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2020-04-28 (#3630)
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета.Форма.ФормаДокументаПоВидам" Тогда
		
		Имена = Новый Структура;
		Имена.Вставить("ВыполнитьЗагрузкуИзExcel", Новый Структура("Заголовок, ЭлементУправления, Картинка, Отображение", 
																	"Загрузить из Excel", 
																	Новый Структура("Родитель", "СуммыКорректировокПриходКоманднаяПанель"),
																	БиблиотекаКартинок.бит_од_Excel,
																	ОтображениеКнопки.КартинкаИТекст));
		ДобавитьКоманды(Форма, Имена);
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ок_ВыгрузкаДанныхДляШаблонаЗаявкиВExcel.Форма.ФормаНастройки" Тогда
		
		Реквизиты = Новый Структура;
		//ОКЕЙ Морозов А.В. (СофтЛаб) Начало 2020-12-16 (#3790)
		//Реквизиты.Вставить("ЭтоКорректировка", Новый Структура("Тип", Новый ОписаниеТипов("Булево")));
		Реквизиты.Вставить("ЭтоКорректировка", Новый Структура("Тип", Новый ОписаниеТипов("Число")));
		//ОКЕЙ Морозов А.В. (СофтЛаб) Конец 2020-12-16 (#3790)
		ДобавитьРеквизиты(Форма, Реквизиты);
	ИначеЕсли Форма.ИмяФормы = "Обработка.ок_ЗагрузкаИзExcelЗаявки.Форма.ФормаЗагрузки" Тогда
		
		Реквизиты = Новый Структура;                                                                               
		Реквизиты.Вставить("ВидКорректировки"	   , Новый Структура("Тип", Новый ОписаниеТипов("ПеречислениеСсылка.ок_ВидКорректировкиКонтрольныхЗначенийИБюджета")));
		Реквизиты.Вставить("Сценарий"			   , Новый Структура("Тип", Новый ОписаниеТипов("СправочникСсылка.СценарииПланирования")));
		Реквизиты.Вставить("ФункциональныйДиректор", Новый Структура("Тип", Новый ОписаниеТипов("СправочникСсылка.бит_БК_Инициаторы")));
		Реквизиты.Вставить("ДоступныеЦФО"		   , Новый Структура("Тип", Новый ОписаниеТипов("СписокЗначений")));
		ДобавитьРеквизиты(Форма, Реквизиты);  	
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2020-04-28 (#3630)
	
	//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-02 (#3825)
	ИначеЕсли Форма.ИмяФормы = "Справочник.бит_ПравилаТрансляции.Форма.ФормаЭлемента" Тогда
		
		СтруктураЭлемента = Новый Структура;
		СтруктураЭлемента.Вставить("Имя", 	"ПодГруппаКомментарий");
		СтруктураЭлемента.Вставить("Вид", 	ВидГруппыФормы.ОбычнаяГруппа);
		ПодГруппаКомментарий = ДобавитьЭлементНаФорму(Форма, СтруктураЭлемента, "Группа");
		
		СтруктураЭлемента = Новый Структура;
		СтруктураЭлемента.Вставить("Имя", 				"Очередность");
		СтруктураЭлемента.Вставить("ПутьКДанным", 		"Объект.Очередность");
		СтруктураЭлемента.Вставить("Вид", 				ВидПоляФормы.ПолеВвода);
		СтруктураЭлемента.Вставить("Родитель", 			ПодГруппаКомментарий);
		
		ДобавитьЭлементНаФорму(Форма, СтруктураЭлемента);
		
		Форма.Элементы.Переместить(Форма.Элементы.Комментарий, ПодГруппаКомментарий, Форма.Элементы.Очередность);
		
	//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-02 (#3825)
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-06 (#4242)
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_ФормаВводаБюджета.Форма.ФормаЗаявкаНаОперационныеРасходы" Тогда
		
		ВидОперацииДокумента = Форма.Объект.ВидОперации;
		Если ВидОперацииДокумента = Перечисления.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный Тогда 
			
			КомандыФормы = Новый Структура;
			
			ПараметрыЭлементаФормы_ок_СоздатьЗаявкиНаРасходованиеДС = Новый Структура;
			ПараметрыЭлементаФормы_ок_СоздатьЗаявкиНаРасходованиеДС.Вставить("Вид", 		ВидКнопкиФормы.КнопкаКоманднойПанели);
			ПараметрыЭлементаФормы_ок_СоздатьЗаявкиНаРасходованиеДС.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
			ПараметрыЭлементаФормы_ок_СоздатьЗаявкиНаРасходованиеДС.Вставить("Родитель", 	Форма.КоманднаяПанель);
			ПараметрыЭлементаФормы_ок_СоздатьЗаявкиНаРасходованиеДС.Вставить("Доступность", Ложь);
			ПараметрыЭлементаФормы_ок_СоздатьЗаявкиНаРасходованиеДС.Вставить("Видимость", 	Ложь);
			
			ПараметрыКоманды_ок_СоздатьЗаявкиНаРасходованиеДС = Новый Структура;
			ПараметрыКоманды_ок_СоздатьЗаявкиНаРасходованиеДС.Вставить("Заголовок", 		"Создать заявки расходования ДС");
			ПараметрыКоманды_ок_СоздатьЗаявкиНаРасходованиеДС.Вставить("Действие", 			"ок_СоздатьЗаявкиНаРасходованиеДС");
			ПараметрыКоманды_ок_СоздатьЗаявкиНаРасходованиеДС.Вставить("ЭлементУправления", ПараметрыЭлементаФормы_ок_СоздатьЗаявкиНаРасходованиеДС);
			
			КомандыФормы.Вставить("ок_СоздатьЗаявкиНаРасходованиеДС", ПараметрыКоманды_ок_СоздатьЗаявкиНаРасходованиеДС);
			
			ок_УправлениеФормами.ДобавитьКоманды(Форма, КомандыФормы);		 
			
		КонецЕсли;	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-06 (#4242)
	
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-02 (#4206)
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_му_СворачиваниеЗадолженности.Форма.ФормаДокумента" Тогда
		
		ПараметрыСозданияГруппыШапка = Новый Структура;
		ПараметрыСозданияГруппыШапка.Вставить("Имя"					, "ГруппаШапка");
		ПараметрыСозданияГруппыШапка.Вставить("Отображение"			, ОтображениеОбычнойГруппы.Нет);
		ПараметрыСозданияГруппыШапка.Вставить("Группировка"			, ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда);
		ПараметрыСозданияГруппыШапка.Вставить("ПоследующийЭлемент"	, "Организация");
		ПараметрыСозданияГруппыШапка.Вставить("ОтображатьЗаголовок" , Ложь);
		
		ПараметрыСозданияНеФормироватьВнутриСчета = Новый Структура;
		ПараметрыСозданияНеФормироватьВнутриСчета.Вставить("Имя"		, "НеФормироватьОборотыВнутриОдногоСчета"); 
		ПараметрыСозданияНеФормироватьВнутриСчета.Вставить("Родитель"	, ПараметрыСозданияГруппыШапка);
		ПараметрыСозданияНеФормироватьВнутриСчета.Вставить("Вид"		, ВидПоляФормы.ПолеФлажка);
		ПараметрыСозданияНеФормироватьВнутриСчета.Вставить("ПутьКДанным", "Объект.ок_НеФормироватьОборотыВнутриОдногоСчета");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияНеФормироватьВнутриСчета);  
				
		Форма.Элементы.Переместить(Форма.Элементы.Организация, Форма.Элементы.ГруппаШапка, Форма.Элементы.НеФормироватьОборотыВнутриОдногоСчета);
	
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-02 (#4206)
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-06 (#4209)
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_ЗаявкаНаРасходованиеСредств.Форма.ФормаДокумента" Тогда
				
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ФормаПровестиИЗакрыть", "КнопкаПоУмолчанию", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ФормаПровестиИЗакрыть", "Видимость", Ложь);
		
		КомандаЗаписатьИЗакрыть = Форма.Команды.Добавить("ок_ПровестиИЗакрыть");
		КомандаЗаписатьИЗакрыть.Действие = "ПровестиИЗакрытьФорму";
		
		КнопкаЗаписатьИЗакрыть = Форма.Элементы.Вставить("ок_ПровестиИЗакрыть", Тип("КнопкаФормы"), Форма.Элементы.ФормаКоманднаяПанель, Форма.Элементы.ФормаГруппаСтандартныеКоманды);
		КнопкаЗаписатьИЗакрыть.Заголовок  = "Провести и закрыть";
		КнопкаЗаписатьИЗакрыть.ИмяКоманды = "ок_ПровестиИЗакрыть";
		КнопкаЗаписатьИЗакрыть.КнопкаПоУмолчанию = Истина;
		
		Если Форма.ТолькоПросмотр Тогда 
			КнопкаЗаписатьИЗакрыть.Доступность = Ложь;
		КонецЕсли;
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-06 (#4209)
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-09-07 (#4337)
		ТекстПодсказки = "При выборе всех документов, кроме Заявки на договор открывается стандартная форма списка документов. 
						|Для заявки на договор существует особенность. 
						|Если на форме ЗнРДС указан контрагент и договор, открывается форма списка с установленным фильтром по контрагенту, договору, периоду заявки и развернутой табличной частью.
						|Если контрагент и договор не указаны – открывается стандартная форма списка без фильтров.";
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ДокументОснование", "Подсказка", ТекстПодсказки);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ДокументОснование", "ОтображениеПодсказки", ОтображениеПодсказки.Кнопка);
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-09-07 (#4337)
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-27 (#4227)
	ИначеЕсли Форма.ИмяФормы = "Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования.Форма.ФормаЭлемента" Тогда
		
		ПараметрыСозданияУсловиеВыбораСертификата = Новый Структура;
		ПараметрыСозданияУсловиеВыбораСертификата.Вставить("Имя"		, "ок_УсловиеВыбораСертификата"); 
		ПараметрыСозданияУсловиеВыбораСертификата.Вставить("Вид"		, ВидПоляФормы.ПолеВвода);
		ПараметрыСозданияУсловиеВыбораСертификата.Вставить("ПутьКДанным", "Объект.ок_УсловиеВыбораСертификата");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияУсловиеВыбораСертификата); 
		
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-27 (#4227)
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-09-07 (#4346)
	ИначеЕсли Форма.ИмяФормы = "Отчет.РегистрыНалоговогоУчета.Форма.ФормаОтчета" Тогда
		
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ок_НеВыводитьРегистратор", Новый Структура("Тип", Новый ОписаниеТипов("Булево")));
		ДобавитьРеквизиты(Форма, Реквизиты);
		
		ПараметрыСозданияНеВыводитьРегистратор = Новый Структура;
		ПараметрыСозданияНеВыводитьРегистратор.Вставить("Имя"		 , "ок_НеВыводитьРегистратор"); 
		ПараметрыСозданияНеВыводитьРегистратор.Вставить("Вид"		 , ВидПоляФормы.ПолеФлажка);
		ПараметрыСозданияНеВыводитьРегистратор.Вставить("ПутьКДанным", "ок_НеВыводитьРегистратор");
		ПараметрыСозданияНеВыводитьРегистратор.Вставить("Заголовок"  , "Не выводить регистратор");
		ПараметрыСозданияНеВыводитьРегистратор.Вставить("Родитель"	 , "ГруппаБыстрыеОтборы");
		ПараметрыСозданияНеВыводитьРегистратор.Вставить("Видимость"	 , Истина);
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияНеВыводитьРегистратор); 
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-09-07 (#4346)
		
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-09-08 (#4338)
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-10-24 (#4407)
	//ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаУслугиЛизинга" Тогда
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаАренда" Тогда
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-10-24 (#4407)
		
		ИменаКоманд = Новый Структура;
			
		//Команда "ок_ЗаполнитьКолонку_Услуги"
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Заполнить колонку");
		СтруктураПараметров.Вставить("Действие", 			"ок_ЗаполнитьКолонку_Услуги");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "УслугиКоманднаяПанель"));
		СтруктураПараметров.Вставить("Картинка", 			БиблиотекаКартинок.СкопироватьЭлементСписка);
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.КартинкаИТекст);
		СтруктураПараметров.Вставить("Подсказка", 			"Заполнить значение, указанное в текущей ячейке, во всех строках по выбранному столбцу");
		
		ИменаКоманд.Вставить("ок_ЗаполнитьКолонку_Услуги", СтруктураПараметров);
		
		ДобавитьКоманды(Форма, ИменаКоманд);
		
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-10-26 (#4407)
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("фКэшЗначений", Новый ОписаниеТипов));
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
		
		ГруппаСтраницы 						= Форма.Элементы.Вставить("ок_Страницы", Тип("ГруппаФормы"),, Форма.Элементы.ГруппаПодвал);
		ГруппаСтраницы.Вид 					= ВидГруппыФормы.Страницы;
		ГруппаСтраницы.ОтображениеСтраниц 	= ОтображениеСтраницФормы.ЗакладкиСверху;
		
		СтраницаУслуги 				= Форма.Элементы.Добавить("ок_Услуги", Тип("ГруппаФормы"), ГруппаСтраницы);
		СтраницаУслуги.Вид 			= ВидГруппыФормы.Страница;
		СтраницаУслуги.Заголовок 	= "Услуги";
		
		СтраницаДополнительно 			= Форма.Элементы.Добавить("ок_Дополнительно", Тип("ГруппаФормы"), ГруппаСтраницы);
		СтраницаДополнительно.Вид 		= ВидГруппыФормы.Страница;
		СтраницаДополнительно.Заголовок = "Дополнительно";
		
		ГруппаIDРазноска 						= Форма.Элементы.Добавить("ок_ГруппаIDРазноска", Тип("ГруппаФормы"), СтраницаДополнительно);
		ГруппаIDРазноска.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаIDРазноска.ОтображатьЗаголовок 	= Ложь;
		
		ПолеIDРазноска 					= Форма.Элементы.Добавить("ОК_ID_Разноска", Тип("ПолеФормы"), ГруппаIDРазноска);
		ПолеIDРазноска.Вид 				= ВидПоляФормы.ПолеВвода;
		ПолеIDРазноска.Заголовок 		= "ID разноска";
		ПолеIDРазноска.ПутьКДанным 		= "Объект.ОК_ID_Разноска";
		ПолеIDРазноска.Подсказка 		= "ID разноска";
		ПолеIDРазноска.Маска 			= "NNNN-NNNN";
		ПолеIDРазноска.ТолькоПросмотр 	= Истина;
		
		КомандаЗаполнитьIDЗаявкиНаДоговор 			= Форма.Команды.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор");
		КомандаЗаполнитьIDЗаявкиНаДоговор.Действие 	= "Подключаемый_ЗаполнитьIDИзЗаявкиНаДоговор";
		
		КнопкаЗаполнитьПоIDИзЗаявкиНаДоговор 			= Форма.Элементы.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор", Тип("КнопкаФормы"), ГруппаIDРазноска);
		КнопкаЗаполнитьПоIDИзЗаявкиНаДоговор.Заголовок 	= "Заполнить ID из заявки на договор";
		КнопкаЗаполнитьПоIDИзЗаявкиНаДоговор.ИмяКоманды = "ок_ЗаполнитьIDИзЗаявкиНаДоговор";
		
		Если Форма.Элементы.Найти("Услуги") <> Неопределено Тогда
			
			Форма.Элементы.Переместить(Форма.Элементы.Услуги, СтраницаУслуги);
			
			ПолеПериод 											= Форма.Элементы.Добавить("УслугиОк_Период", Тип("ПолеФормы"), Форма.Элементы.Услуги);
			ПолеПериод.Вид 										= ВидПоляФормы.ПолеВвода;
			ПолеПериод.Заголовок 								= "Период";
			ПолеПериод.ПутьКДанным 								= "Объект.Услуги.ок_Период";
			ПолеПериод.Подсказка 								= "Период";
			ПолеПериод.АвтоОтметкаНезаполненного 				= Ложь;
			ПолеПериод.УстановитьДействие("ПриИзменении", "Подключаемый_Услугиок_ПериодПриИзменении");
			
			ПолеЦФО 											= Форма.Элементы.Добавить("УслугиОк_ЦФО", Тип("ПолеФормы"), Форма.Элементы.Услуги);
			ПолеЦФО.Вид 										= ВидПоляФормы.ПолеВвода;
			ПолеЦФО.Заголовок 									= "ЦФО";
			ПолеЦФО.ПутьКДанным 								= "Объект.Услуги.ок_ЦФО";
			ПолеЦФО.Подсказка 									= "ЦФО";
			ПолеЦФО.АвтоОтметкаНезаполненного 					= Ложь;
			ПолеЦФО.УстановитьДействие("ПриИзменении", "Подключаемый_Услугиок_ЦФОПриИзменении");
			
			ПолеСтатьяОборотов 									= Форма.Элементы.Добавить("УслугиОк_СтатьяОборотов", Тип("ПолеФормы"), Форма.Элементы.Услуги);
			ПолеСтатьяОборотов.Вид 								= ВидПоляФормы.ПолеВвода;
			ПолеСтатьяОборотов.Заголовок 						= "Статья оборотов";
			ПолеСтатьяОборотов.ПутьКДанным 						= "Объект.Услуги.Ок_СтатьяОборотов";
			ПолеСтатьяОборотов.Подсказка 						= "Статья оборотов";
			ПолеСтатьяОборотов.АвтоОтметкаНезаполненного 		= Ложь;
			ПолеСтатьяОборотов.УстановитьДействие("ПриИзменении", "Подключаемый_Услугиок_СтатьяОборотовПриИзменении");
			
			ПолеПроект = Форма.Элементы.Добавить("УслугиОк_Проект", Тип("ПолеФормы"), Форма.Элементы.Услуги);
			ПолеПроект.Вид 										= ВидПоляФормы.ПолеВвода;
			ПолеПроект.Заголовок 								= "Проект";
			ПолеПроект.ПутьКДанным 								= "Объект.Услуги.ок_Проект";
			ПолеПроект.Подсказка 								= "Проект";
			ПолеПроект.АвтоОтметкаНезаполненного 				= Ложь;
			ПолеПроект.Видимость 								= Ложь;
			
			ПолеОбъектСтроительства 							= Форма.Элементы.Добавить("УслугиАналитика_2", Тип("ПолеФормы"), Форма.Элементы.Услуги);
			ПолеОбъектСтроительства.Вид 						= ВидПоляФормы.ПолеВвода;
			ПолеОбъектСтроительства.Заголовок 					= "Объект";
			ПолеОбъектСтроительства.ПутьКДанным 				= "Объект.Услуги.ок_Аналитика_2";
			ПолеОбъектСтроительства.Подсказка 					= "Объект";
			ПолеОбъектСтроительства.АвтоОтметкаНезаполненного 	= Ложь;
			ПолеОбъектСтроительства.ОграничениеТипа 			= Новый ОписаниеТипов("СправочникСсылка.ОбъектыСтроительства");
			ПолеОбъектСтроительства.УстановитьДействие("ПриИзменении", "Подключаемый_УслугиАналитика_2ПриИзменении");
			
			ГруппаУслугиЗаполнить 								= Форма.Элементы.Добавить("ок_УслугиЗаполнить", Тип("ГруппаФормы"),Форма.Элементы.Услуги.КоманднаяПанель);
			ГруппаУслугиЗаполнить.Вид 							= ВидГруппыФормы.Подменю;
			ГруппаУслугиЗаполнить.Заголовок 					= "Заполнить";
			
			КомандаЗаполнитьУправленческиеАналитики 			= Форма.Команды.Добавить("ок_ЗаполнитьУправленческиеАналитикиИзЗаявкиНаДоговор");
			КомандаЗаполнитьУправленческиеАналитики.Действие 	= "Подключаемый_ЗаполнитьУправленческиеАналитикиИзЗаявкиНаДоговор";
			
			КнопкаЗаполнитьУправленческиеАналитики = Форма.Элементы.Добавить("ок_ЗаполнитьУправленческиеАналитикиИзЗаявкиНаДоговор", Тип("КнопкаФормы"), ГруппаУслугиЗаполнить);
			КнопкаЗаполнитьУправленческиеАналитики.Заголовок 	= "Управленческие аналитики из заявки на договор";
			КнопкаЗаполнитьУправленческиеАналитики.ИмяКоманды 	= "ок_ЗаполнитьУправленческиеАналитикиИзЗаявкиНаДоговор";
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "УслугиОтступ", "Видимость", Ложь);
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-10-25 (#4407)
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаОсновныеСредства" Тогда
		
		ИменаКоманд = Новый Структура;
			
		//Команда "ок_ЗаполнитьКолонку_ОсновныеСредства"
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Заполнить колонку");
		СтруктураПараметров.Вставить("Действие", 			"ок_ЗаполнитьКолонку_ОсновныеСредства");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "ОсновныеСредстваКоманднаяПанель"));
		СтруктураПараметров.Вставить("Картинка", 			БиблиотекаКартинок.СкопироватьЭлементСписка);
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.КартинкаИТекст);
		СтруктураПараметров.Вставить("Подсказка", 			"Заполнить значение, указанное в текущей ячейке, во всех строках по выбранному столбцу");
		
		ИменаКоманд.Вставить("ок_ЗаполнитьКолонку_ОсновныеСредства", СтруктураПараметров);
		
		ДобавитьКоманды(Форма, ИменаКоманд);
		
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-09-08 (#4338)
	// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-14 (#4324)
	ИначеЕсли Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_РаботаСВходящимиДокументами" Тогда
		
		ТекущийПользователь 							= бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
		ДопПраво_ИзменениеСтатусаЭДВСпискеДокументов 	= ПредопределенноеЗначение("ПланВидовХарактеристик.бит_ДополнительныеПраваПользователей.ок_ИзменениеСтатусаЭДВСпискеДокументов");
		ИзменениеСтатусаЭДВСпискеДокументов 			= бит_ПраваДоступа.ПолучитьЗначениеДопПраваПользователя(ТекущийПользователь, ДопПраво_ИзменениеСтатусаЭДВСпискеДокументов);
		
		Если ИзменениеСтатусаЭДВСпискеДокументов Тогда 
			ИменаКоманд = Новый Структура;
			
			//Команда "ок_ИзменитьСтатусыДокументов"
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("Заголовок", 			"Изменить статус");
			СтруктураПараметров.Вставить("Действие", 			"ок_ИзменитьСтатусыДокументов");
			СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "СписокКоманднаяПанель"));
			СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.Текст);
			СтруктураПараметров.Вставить("Подсказка", 			"Изменить статусы документов");
			СтруктураПараметров.Вставить("ПоследующийЭлемент", 	"СписокНаСогласование");
			
			ИменаКоманд.Вставить("ок_ИзменитьСтатусыДокументов", СтруктураПараметров);
			
			ДобавитьКоманды(Форма, ИменаКоманд);
			
			Форма.Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Множественный;
			
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_РаботаСВходящимиБумажнымиДокументами" Тогда
		
		ТекущийПользователь 							= бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
		ДопПраво_ИзменениеСтатусаЭДВСпискеДокументов 	= ПредопределенноеЗначение("ПланВидовХарактеристик.бит_ДополнительныеПраваПользователей.ок_ИзменениеСтатусаЭДВСпискеДокументов");
		ИзменениеСтатусаЭДВСпискеДокументов 			= бит_ПраваДоступа.ПолучитьЗначениеДопПраваПользователя(ТекущийПользователь, ДопПраво_ИзменениеСтатусаЭДВСпискеДокументов);
		
		Если ИзменениеСтатусаЭДВСпискеДокументов Тогда 
			ИменаКоманд = Новый Структура;
			
			//Команда "ок_ИзменитьСтатусыДокументов"
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("Заголовок", 			"Изменить статус");
			СтруктураПараметров.Вставить("Действие", 			"ок_ИзменитьСтатусыДокументов");
			СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "СписокКоманднаяПанель"));
			СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.Текст);
			СтруктураПараметров.Вставить("Подсказка", 			"Изменить статусы документов");
			СтруктураПараметров.Вставить("ПоследующийЭлемент", 	"СписокНаСогласование");
			
			ИменаКоманд.Вставить("ок_ИзменитьСтатусыДокументов", СтруктураПараметров);
			
			ДобавитьКоманды(Форма, ИменаКоманд);
			
			Форма.Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Множественный;
			
		КонецЕсли;
	// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-14 (#4324)
	
	// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-19 (#4390)
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_ФормаВводаБюджета.Форма.ФормаСписка" Тогда
		
		ПараметрыСозданияПроект = Новый Структура;
		ПараметрыСозданияПроект.Вставить("Имя",			"Проект"); 
		ПараметрыСозданияПроект.Вставить("Вид",			ВидПоляФормы.ПолеВвода);
		ПараметрыСозданияПроект.Вставить("ПутьКДанным",	"Список.Проект");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияПроект); 
		
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_ФормаВводаБюджета.Форма.ФормаВыбора" Тогда
		
		ПараметрыСозданияПроект = Новый Структура;
		ПараметрыСозданияПроект.Вставить("Имя",			"Проект"); 
		ПараметрыСозданияПроект.Вставить("Вид",			ВидПоляФормы.ПолеВвода);
		ПараметрыСозданияПроект.Вставить("ПутьКДанным",	"Список.Проект");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияПроект); 
		
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_БюджетнаяОперация.Форма.ФормаДокумента" Тогда
		
		ПараметрыСозданияПроект = Новый Структура;
		ПараметрыСозданияПроект.Вставить("Заголовок",			"Проект");
		ПараметрыСозданияПроект.Вставить("Имя",					"БДДСПроект"); 
		ПараметрыСозданияПроект.Вставить("Вид",					ВидПоляФормы.ПолеВвода);
		ПараметрыСозданияПроект.Вставить("ПутьКДанным",			"Объект.БДДС.Проект");
		ПараметрыСозданияПроект.Вставить("ПоследующийЭлемент",	"БДДСКоличество");
		ПараметрыСозданияПроект.Вставить("Родитель",			"БДДС");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияПроект); 
	// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-19 (#4390)
	
	// ОКЕЙ Конаков Ю.М. (СофтЛаб) Начало 2021-10-20 (#4297) 
	ИначеЕсли Форма.ИмяФормы = "Справочник.бит_му_КлассыОсновныхСредств.Форма.ФормаЭлементаУправляемая" Тогда 
		
		ПараметрыСозданияАвтоматическийПараллельныйУчет = Новый Структура;
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("Имя",			"ок_АвтоматическийПараллельныйУчет"); 
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("Вид",			ВидПоляФормы.ПолеФлажка);
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("ПутьКДанным",	"Объект.ок_АвтоматическийПараллельныйУчет");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияАвтоматическийПараллельныйУчет);
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.бит_му_КлассыОсновныхСредств.Форма.ФормаСпискаУправляемая" Тогда 
		
		ПараметрыСозданияАвтоматическийПараллельныйУчет = Новый Структура;
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("Имя",			"ок_АвтоматическийПараллельныйУчет"); 
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("Вид",			ВидПоляФормы.ПолеФлажка);
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("ПутьКДанным",	"Список.ок_АвтоматическийПараллельныйУчет");
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("Родитель",	"Список");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияАвтоматическийПараллельныйУчет);
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.бит_му_КлассыОсновныхСредств.Форма.ФормаВыбораУправляемая" Тогда 
		
		ПараметрыСозданияАвтоматическийПараллельныйУчет = Новый Структура;
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("Имя",			"ок_АвтоматическийПараллельныйУчет"); 
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("Вид",			ВидПоляФормы.ПолеФлажка);
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("ПутьКДанным",	"Список.ок_АвтоматическийПараллельныйУчет");
		ПараметрыСозданияАвтоматическийПараллельныйУчет.Вставить("Родитель",	"Список");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияАвтоматическийПараллельныйУчет);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_му_МодернизацияОС.Форма.ФормаДокумента" Тогда
		
		ПараметрыСозданияПодменюПодбор = Новый Структура;
		ПараметрыСозданияПодменюПодбор.Вставить("Имя",			"ок_ПодменюПодборОС"); 
		ПараметрыСозданияПодменюПодбор.Вставить("Заголовок",	"Подбор");
		ПараметрыСозданияПодменюПодбор.Вставить("ТипЭлемента",	Тип("ГруппаФормы"));
		ПараметрыСозданияПодменюПодбор.Вставить("Вид",			ВидГруппыФормы.Подменю);
		ПараметрыСозданияПодменюПодбор.Вставить("Родитель",		"КоманднаяПанельОС");
		
		ДобавитьЭлементНаФорму(Форма, ПараметрыСозданияПодменюПодбор);
		
		Форма.Элементы.Переместить(Форма.Элементы.ОсновныеСредстваПодборОС, Форма.Элементы["ок_ПодменюПодборОС"]);
		
		ИменаКоманд = Новый Структура;
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Подбор оборудования");
		СтруктураПараметров.Вставить("Действие", 			"ок_ПодборОборудования");
		СтруктураПараметров.Вставить("ЭлементУправления", 	Новый Структура("Родитель", "ок_ПодменюПодборОС"));
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.Текст);
		
		ИменаКоманд.Вставить("ок_ПодборОборудования", СтруктураПараметров);
		
		ДобавитьКоманды(Форма, ИменаКоманд);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_му_ИзменениеПараметровУчетаОС.Форма.ФормаСписка" Тогда 
		
		ИменаКоманд = Новый Структура;
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Изменить СПИ");
		СтруктураПараметров.Вставить("Действие", 			"ок_ИзменитьСПИ");
		СтруктураПараметров.Вставить("ЭлементУправления",	Новый Структура("Родитель", "ГруппаКомманднаяПанель"));
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.Текст);
		
		ИменаКоманд.Вставить("ок_ИзменитьСПИ", СтруктураПараметров);
		
		ДобавитьКоманды(Форма, ИменаКоманд);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.бит_му_ПринятиеКУчетуОС.Форма.ФормаДокумента" Тогда 
		
		ИменаКоманд = Новый Структура;
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Заголовок", 			"Подбор оборудования");
		СтруктураПараметров.Вставить("Действие", 			"ок_ПодборОборудования");
		СтруктураПараметров.Вставить("ЭлементУправления",	Новый Структура("Родитель", "Подбор"));
		СтруктураПараметров.Вставить("Отображение", 		ОтображениеКнопки.Текст);
		
		ИменаКоманд.Вставить("ок_ПодборОборудования", СтруктураПараметров);
		
		ДобавитьКоманды(Форма, ИменаКоманд);
		
	// ОКЕЙ Конаков Ю.М. (СофтЛаб) Конец 2021-10-20 (#4297) 
	// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-28 (#4391)
	ИначеЕсли Форма.ИмяФормы = "Справочник.бит_БК_Инициаторы.Форма.УпрФормаЭлемента" Тогда 
		
		// Добавление группы на форму "ок_ГруппаУволен"
		ГруппаУволен = Форма.Элементы.Добавить("ок_ГруппаУволен", Тип("ГруппаФормы"), Форма.Элементы.Группа3);
		ГруппаУволен.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаУволен.Группировка 			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаУволен.ОтображатьЗаголовок 	= Ложь;
		ГруппаУволен.Отображение 			= ОтображениеОбычнойГруппы.Нет;
		
		// Добавление элемента на форму "ок_Уволен"
		СтруктураПараметровЭлементаФормы = Новый Структура();
		СтруктураПараметровЭлементаФормы.Вставить("Имя", 			"ок_Уволен");
		СтруктураПараметровЭлементаФормы.Вставить("ПутьКДанным", 	"Объект.ок_Уволен");
		СтруктураПараметровЭлементаФормы.Вставить("Заголовок", 		НСтр("ru = 'Уволен'"));
		СтруктураПараметровЭлементаФормы.Вставить("Вид", 			ВидПоляФормы.ПолеФлажка);
		СтруктураПараметровЭлементаФормы.Вставить("Видимость", 		Истина);
		СтруктураПараметровЭлементаФормы.Вставить("Родитель", 		"ок_ГруппаУволен");
		СтруктураПараметровЭлементаФормы.Вставить("Обработчики", 	Новый Структура("ПриИзменении","ок_УволенПриИзменении"));
		
		ДобавитьЭлементНаФорму(Форма, СтруктураПараметровЭлементаФормы);
		
		// Добавление элемента на форму "ок_ДатаУвольнения"
		СтруктураПараметровЭлементаФормы = Новый Структура();
		СтруктураПараметровЭлементаФормы.Вставить("Имя", 			"ок_ДатаУвольнения");
		СтруктураПараметровЭлементаФормы.Вставить("ПутьКДанным", 	"Объект.ок_ДатаУвольнения");
		СтруктураПараметровЭлементаФормы.Вставить("Заголовок", 		НСтр("ru = 'Дата увольнения'"));
		СтруктураПараметровЭлементаФормы.Вставить("Вид", 			ВидПоляФормы.ПолеВвода);
		СтруктураПараметровЭлементаФормы.Вставить("Видимость", 		Истина);
		СтруктураПараметровЭлементаФормы.Вставить("Родитель", 		"ок_ГруппаУволен");
		
		ДобавитьЭлементНаФорму(Форма, СтруктураПараметровЭлементаФормы);
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.бит_БК_Инициаторы.Форма.ФормаЭлемента" Тогда 
		
		// Добавление группы на форму "ок_ГруппаУволен"
		ГруппаУволен = Форма.Элементы.Добавить("ок_ГруппаУволен", Тип("ГруппаФормы"), Форма.Элементы.Страница2);
		ГруппаУволен.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаУволен.Группировка 			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаУволен.ОтображатьЗаголовок 	= Ложь;
		ГруппаУволен.Отображение 			= ОтображениеОбычнойГруппы.Нет;
		
		// Добавление элемента на форму "ок_Уволен"
		СтруктураПараметровЭлементаФормы = Новый Структура();
		СтруктураПараметровЭлементаФормы.Вставить("Имя", 			"ок_Уволен");
		СтруктураПараметровЭлементаФормы.Вставить("ПутьКДанным", 	"Объект.ок_Уволен");
		СтруктураПараметровЭлементаФормы.Вставить("Заголовок", 		НСтр("ru = 'Уволен'"));
		СтруктураПараметровЭлементаФормы.Вставить("Вид", 			ВидПоляФормы.ПолеФлажка);
		СтруктураПараметровЭлементаФормы.Вставить("Видимость", 		Истина);
		СтруктураПараметровЭлементаФормы.Вставить("Родитель", 		"ок_ГруппаУволен");
		СтруктураПараметровЭлементаФормы.Вставить("Обработчики", 	Новый Структура("ПриИзменении","ок_УволенПриИзменении"));
		
		ДобавитьЭлементНаФорму(Форма, СтруктураПараметровЭлементаФормы);
		
		// Добавление элемента на форму "ок_ДатаУвольнения"
		СтруктураПараметровЭлементаФормы = Новый Структура();
		СтруктураПараметровЭлементаФормы.Вставить("Имя", 			"ок_ДатаУвольнения");
		СтруктураПараметровЭлементаФормы.Вставить("ПутьКДанным", 	"Объект.ок_ДатаУвольнения");
		СтруктураПараметровЭлементаФормы.Вставить("Заголовок", 		НСтр("ru = 'Дата увольнения'"));
		СтруктураПараметровЭлементаФормы.Вставить("Вид", 			ВидПоляФормы.ПолеВвода);
		СтруктураПараметровЭлементаФормы.Вставить("Видимость", 		Истина);
		СтруктураПараметровЭлементаФормы.Вставить("Родитель", 		"ок_ГруппаУволен");
		
		ДобавитьЭлементНаФорму(Форма, СтруктураПараметровЭлементаФормы);
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.бит_УстановкаВиз.Форма.Форма" Тогда
		
		Форма.Элементы.УстановленныеВизы.УстановитьДействие("ПриОкончанииРедактирования", "ок_УстановленныеВизыПриОкончанииРедактирования"); 
		
	// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-28 (#4391)
	КонецЕсли;
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - форма, из обработчика события которой происходит вызов процедуры.
//	см. справочную информацию по событиям управляемой формы.
//
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	//ОКЕЙ Наумов А.Н. (СофтЛаб) Начало 2019-09-20 (#3493)
	// проверим связку документа с ЗнРДС, если есть, то запретим изменение документа
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2019-11-30 (#3533)
	//Если ОбщегоНазначения.ЭтоДокумент(ТекущийОбъект.Метаданные()) И ЗначениеЗаполнено(ТекущийОбъект.Ссылка) И ТекущийОбъект.Проведен Тогда
	МетаданныеДокумента = ТекущийОбъект.Ссылка.Метаданные();
	Если ОбщегоНазначения.ЭтоДокумент(МетаданныеДокумента) 
		И ЗначениеЗаполнено(ТекущийОбъект.Ссылка) 
		И (ТекущийОбъект.Проведен
			ИЛИ МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Запретить) Тогда
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2019-11-30 (#3533)
		
		МассивДокументовРасчета = Новый Массив();
		МассивДокументовРасчета.Добавить(ТекущийОбъект.Ссылка);
		Если РегистрыБухгалтерии.Хозрасчетный.ПроверитьНаличиеСозданногоДокументаЗнРДСВСтатусе(МассивДокументовРасчета) Тогда
			Форма.ТолькоПросмотр = Истина;
		КонецЕсли;
		
	КонецЕсли;
	//ОКЕЙ Наумов А.Н. (СофтЛаб) Конец 2019-09-20 (#3493)
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - форма, из обработчика события которой происходит вызов процедуры.
//	см. справочную информацию по событиям управляемой формы.
//
Процедура ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-05 (#3364)
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО (
	//Если Форма.ИмяФормы = "Справочник.ПрофилиНастроекЭДО.Форма.ФормаЭлемента" Тогда
	//	
	//	ок_ОбменСКонтрагентамиВнутренний.ЗаполнитьТаблицуЗагружаемыхДокументовЭД(Форма, ТекущийОбъект);
	Если Форма.ИмяФормы = "РегистрСведений.УчетныеЗаписиЭДО.Форма.УчетнаяЗапись" Тогда
		
		ТекТаблица = Форма.ок_ЗагружаемыеДокументы.Выгрузить().СкопироватьКолонки();
		Для каждого Строка из Форма.ок_ЗагружаемыеДокументы Цикл
			
			Если Не Строка.Формировать Тогда
				Продолжить;
			КонецЕсли;	
			
			НоваяСтрока = ТекТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
		КонецЦикла;	
		ТекущийОбъект.ок_ЗагружаемыеДокументы = Новый ХранилищеЗначения(ТекТаблица);	
	//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО )	
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЭлектронныйДокументВходящий.Форма.ФормаДокумента" 
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
			Или Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_ФормаВходящегоБумажногоДокумента" 
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
																							Тогда
		
		ок_ОбменСКонтрагентамиВнутренний.ЗаполнитьТаблицуЗагружаемыхДокументовЭД(Форма, ТекущийОбъект);
			

		//очистка реквизитов, не соответствующих состоянию
		Если Не ТекущийОбъект.ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования 
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
			И Форма.ИмяФормы <> "Обработка.ОбменСКонтрагентами.Форма.ок_ФормаВходящегоБумажногоДокумента" 
			//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
																							Тогда
			
			ТекущийОбъект.ок_ДокументКопирования = Неопределено;
			ТекущийОбъект.ок_СоздаватьУчетныйДокументКопированием = Ложь;	
			ТекущийОбъект.ок_ДокументКопирования = Неопределено;
			ТекущийОбъект.ок_ДокументОснование = Неопределено;
			//ТекущийОбъект.ок_ЗагружаемыеДокументы.Очистить();
			
		Иначе
			
			ВидЗагружаемогоДокументаПоступления = ок_ОбменСКонтрагентамиКлиентСервер.ВидЗагружаемогоДокументаПоступленияПоТабличнойЧасти(ТекущийОбъект.ок_ЗагружаемыеДокументы, Ложь);
			УказанСчетФактура = ок_ОбменСКонтрагентамиКлиентСервер.УказанВидЗагружаемогоДокументаСчетФактураПоТабличнойЧасти(ТекущийОбъект.ок_ЗагружаемыеДокументы, Ложь);
			
			Если Не Форма.ок_ЕстьФайлПоступление И ВидЗагружаемогоДокументаПоступления <> Неопределено Тогда
				ТекстОшибки = "Указан признак загрузки приходного документа, но при этом отсутствует файл с документом поступения.";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ТекущийОбъект.Ссылка);
			КонецЕсли;	
			
			Если Не Форма.ок_ЕстьФайлСчетФактура И УказанСчетФактура Тогда
				ТекстОшибки = "Указан признак загрузки счета-фактуры, но при этом отсутствует файл со счетом-фактурой.";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ТекущийОбъект.Ссылка);
			КонецЕсли;	
			
			ТипДокумента = ок_ОбменСКонтрагентамиВнутренний.ТипДокументаПоступленияПоВидуЗагружаемогоДокументаЭД(ВидЗагружаемогоДокументаПоступления);
			Если ТипДокумента <> ТипЗнч(ТекущийОбъект.ок_ДокументКопирования) Тогда
				ТекущийОбъект.ок_ДокументКопирования = Неопределено;
			КонецЕсли;	
			
			Если ВидЗагружаемогоДокументаПоступления = Неопределено Тогда
				ТекущийОбъект.ок_СоздаватьУчетныйДокументКопированием = Ложь;	
				ТекущийОбъект.ок_ДокументКопирования = Неопределено;
				ТекущийОбъект.ок_ДокументОснование = Неопределено;
			Иначе	
				Если ВидЗагружаемогоДокументаПоступления = ПредопределенноеЗначение("Перечисление.ок_ВидЗагружаемыхДокументовЭД.КорректировкаПоступления") 
					ИЛИ ВидЗагружаемогоДокументаПоступления = ПредопределенноеЗначение("Перечисление.ок_ВидЗагружаемыхДокументовЭД.ПоступлениеДопрасходы") Тогда
						ТекущийОбъект.ок_СоздаватьУчетныйДокументКопированием = Ложь;	
						ТекущийОбъект.ок_ДокументКопирования = Неопределено;
				Иначе		
					ТекущийОбъект.ок_ДокументОснование = Неопределено;
					Если Не ТекущийОбъект.ок_СоздаватьУчетныйДокументКопированием Тогда
						ТекущийОбъект.ок_ДокументКопирования = Неопределено;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	
			
			Если Не УказанСчетФактура 
				ИЛИ ВидЗагружаемогоДокументаПоступления <> Неопределено Тогда
				ТекущийОбъект.ок_ДокументОснованиеСчетФактура = Неопределено;
			ИначеЕсли Не ЗначениеЗаполнено(ТекущийОбъект.ок_ДокументОснованиеСчетФактура) И ТекущийОбъект.ок_ДокументОснованиеСчетФактура <> Неопределено Тогда
				ТекущийОбъект.ок_ДокументОснованиеСчетФактура = Неопределено;
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЕсли;
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-05 (#3364)
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - форма, из обработчика события которой происходит вызов процедуры.
//	см. справочную информацию по событиям управляемой формы.
//
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-12 (#4262)
	Если Форма.ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда
		УстановитьНастройкиДоступностиЭлементов(Форма);
	КонецЕсли;
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-12 (#4262)
	
КонецПроцедуры

#КонецОбласти

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-04-22 (#3332)
//больше не используется
//Процедура ЭлектронныйДокументВходящий_ФормаПросмотраЭД_ДеревоПодчиненныеЭДПослеАктивизацииСтрокиНаСервере(Форма, ПрисоединенныйФайл) Экспорт
//	
//	СвойстваФайлаЭД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПрисоединенныйФайл, "НомерЭД, Наименование, Расширение");
//	Форма.ПрисоединенныйФайлИмяФайла = ?(ПустаяСтрока(СвойстваФайлаЭД.НомерЭД), СвойстваФайлаЭД.Наименование, СвойстваФайлаЭД.НомерЭД);
//	ЭлементПредставление = Форма.Элементы.Найти("ок_Представление");
//	Если ЭлементПредставление <> Неопределено Тогда
//		Форма.ок_ПредставлениеСервер = "";
//		ЭлементПредставление.Видимость = Ложь;
//		Если Форма.ок_УстановленаПрограммаОтображенияПредставленияHTML Тогда
//			Форма.ок_ПредставлениеСервер = ок_ОбменСКонтрагентамиВнутренний.HTMLПредставлениеФайлаЭД(ПрисоединенныйФайл, СвойстваФайлаЭД.Расширение);
//			ЭлементПредставление.Видимость = Не ПустаяСтрока(Форма.ок_ПредставлениеСервер);
//		КонецЕсли;
//	КонецЕсли;
//	
//КонецПроцедуры	
//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-04-22 (#3332)

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-08-05 (#3364)

Процедура ЗаполнитьНаФормеТаблицуЗагружаемыхДокументовЭД(Форма) Экспорт
	
	Форма.ок_ЗагружаемыеДокументы.Очистить();	
	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
	//ДокументФормы = Форма.Объект;
	НеДоступныеЗначения = Неопределено;
	Если Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_ФормаВходящегоБумажногоДокумента" Тогда
		ДокументФормы = Форма.Документ;
		НеДоступныеЗначения = Новый Массив;
		НеДоступныеЗначения.Добавить(Перечисления.ок_ВидЗагружаемыхДокументовЭД.СчетФактура);
	Иначе
		ДокументФормы = Форма.Объект;
	КонецЕсли;	
	//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
	
	ДоступныеЗначения = Неопределено;
	Если Форма.ИмяФормы = "Документ.ЭлектронныйДокументВходящий.Форма.ФормаДокумента"
																					Тогда
		
		ДоступныеЗначения = Новый Массив;          
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО (
		//Если ЗначениеЗаполнено(Форма.Объект.ПрофильНастроекЭДО) Тогда
		Если ЗначениеЗаполнено(Форма.Объект.ИдентификаторОрганизации) Тогда
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО )	
			УстановитьПривилегированныйРежим(Истина);
			Запрос = Новый Запрос;
			Запрос.Текст = 
			//1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО (
			//"ВЫБРАТЬ
			//|	Данные.ВидЗагружаемогоДокумента КАК ВидЗагружаемогоДокумента
			//|ИЗ
			//|	Справочник.ПрофилиНастроекЭДО.ок_ЗагружаемыеДокументы КАК Данные
			//|ГДЕ
			//|	Данные.Ссылка = &ПрофильНастроекЭДО";
			//
			//Запрос.УстановитьПараметр("ПрофильНастроекЭДО", ДокументФормы.ПрофильНастроекЭДО);
			//ДоступныеЗначения = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидЗагружаемогоДокумента");
			"ВЫБРАТЬ
			|	УчетныеЗаписиЭДО.ок_ЗагружаемыеДокументы КАК ок_ЗагружаемыеДокументы
			|ИЗ
			|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
			|ГДЕ
			|	УчетныеЗаписиЭДО.ИдентификаторЭДО = &ИдентификаторЭДО";
			
			Запрос.УстановитьПараметр("ИдентификаторЭДО", ДокументФормы.ИдентификаторОрганизации);
			Выборка = Запрос.Выполнить().Выбрать();
			ДоступныеЗначения = Новый Массив;
			Если Выборка.Следующий() Тогда
				ТаблицаВидыДокументов = Выборка.ок_ЗагружаемыеДокументы.Получить();
				Если ТипЗНЧ(ТаблицаВидыДокументов) = Тип("ТаблицаЗначений") Тогда
					ДоступныеЗначения = ТаблицаВидыДокументов.ВыгрузитьКолонку("ВидЗагружаемогоДокумента");
				КонецЕсли;	
			КонецЕсли;	
	        //1С-ИжТиСи, Кондратьев, 03.2020, обновление ЭДО )
		КонецЕсли;	
		
	КонецЕсли;	
	
	Отбор = Новый Структура("ВидЗагружаемогоДокумента");
	Для каждого Значение из Перечисления.ок_ВидЗагружаемыхДокументовЭД Цикл
		
		Если ДоступныеЗначения <> Неопределено Тогда
			Если ДоступныеЗначения.Найти(Значение) = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
		КонецЕсли;	
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		Если НеДоступныеЗначения <> Неопределено Тогда
			Если НеДоступныеЗначения.Найти(Значение) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;	
		КонецЕсли;	
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
		НоваяСтрока = Форма.ок_ЗагружаемыеДокументы.Добавить();
		НоваяСтрока.ВидЗагружаемогоДокумента = Значение;
		
		Отбор.ВидЗагружаемогоДокумента = Значение;
		НоваяСтрока.Формировать = (ДокументФормы.ок_ЗагружаемыеДокументы.НайтиСтроки(Отбор).Количество() > 0);
		
	КонецЦикла;	
			
КонецПроцедуры	

Процедура ДобавитьНаФормуЭлементыЗагружаемыхДокументовЭД(Форма, ИмяГруппыСтраницы = "СтраницыПрофиляНастроекЭДО") Экспорт
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("ок_ЗагружаемыеДокументы", Новый Структура("Тип, СохраняемыеДанные", Новый ОписаниеТипов("ТаблицаЗначений"), Истина));
	ДобавитьРеквизиты(Форма, Реквизиты);
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Формировать", Новый Структура("Тип, Путь", Новый ОписаниеТипов("Булево"), "ок_ЗагружаемыеДокументы"));
	Реквизиты.Вставить("ВидЗагружаемогоДокумента", Новый Структура("Тип, Путь", Новый ОписаниеТипов("ПеречислениеСсылка.ок_ВидЗагружаемыхДокументовЭД"), "ок_ЗагружаемыеДокументы"));
	ДобавитьРеквизиты(Форма, Реквизиты);
	
	Страницы = Форма.Элементы.Найти(ИмяГруппыСтраницы);
	Если Страницы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Страница = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, 
	|Заголовок, 
	|Вид, 
	|РазрешитьИзменениеСостава,
	|Родитель", 
	"ок_СтраницаЗагружаемыеДокументы", 
	"Формируемые документы", 
	ВидГруппыФормы.Страница, 
	Ложь,
	Страницы), "Группа");
	
	Родитель = Страница;
	Если Форма.ИмяФормы = "Документ.ЭлектронныйДокументВходящий.Форма.ФормаДокумента" 
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		Или Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_ФормаВходящегоБумажногоДокумента" 
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
																					Тогда
		
		ПрефиксПутьКДанным = "Объект";
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		//ДокументФормы = Форма.Объект;
		Если Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_ФормаВходящегоБумажногоДокумента" Тогда
			ДокументФормы = Форма.Документ;
			ПрефиксПутьКДанным = "Документ";
		Иначе
			ДокументФормы = Форма.Объект;
		КонецЕсли;	
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ок_ЕстьФайлПоступление", Новый Структура("Тип", Новый ОписаниеТипов("Булево")));
		Реквизиты.Вставить("ок_ЕстьФайлСчетФактура", Новый Структура("Тип", Новый ОписаниеТипов("Булево")));
		ДобавитьРеквизиты(Форма, Реквизиты);
	
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		АнализироватьНаличиеЭД = Истина;
		Если Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_ФормаВходящегоБумажногоДокумента" Тогда
			
			Форма.ок_ЕстьФайлСчетФактура = Истина;
			Форма.ок_ЕстьФайлПоступление = Истина;
			АнализироватьНаличиеЭД = Ложь;
			
		Иначе
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
		Если Не ДокументФормы.Ссылка.Пустая() Тогда
			
			НаличиеФайлов = ок_ОбменСКонтрагентамиВнутренний.НаличиеУчетныхДокументовПоДаннымПрисоединенныхФайловВходящегоДокументаЭД(ДокументФормы.Ссылка);
			
			Форма.ок_ЕстьФайлСчетФактура = НаличиеФайлов.СчетФактура;
			Форма.ок_ЕстьФайлПоступление = НаличиеФайлов.Поступление;
				
		КонецЕсли;
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		КонецЕсли;	
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
		Группа = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, Заголовок, Родитель", "ок_ГруппаПрисоединенныеФайлы", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, "Наличие данных в прикрепленных файлах", Родитель), "Группа");
		Имена = Новый Структура;
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		//Имена.Вставить("ок_ЕстьФайлПоступление", Новый Структура("ПутьКДанным, Вид, ПоложениеЗаголовка, Заголовок, ТолькоПросмотр", "ок_ЕстьФайлПоступление", ВидПоляФормы.ПолеФлажка, ПоложениеЗаголовкаЭлементаФормы.Право, "Поступление", Истина));
		//Имена.Вставить("ок_ЕстьФайлСчетФактура", Новый Структура("ПутьКДанным, Вид, ПоложениеЗаголовка, Заголовок, ТолькоПросмотр", "ок_ЕстьФайлСчетФактура", ВидПоляФормы.ПолеФлажка, ПоложениеЗаголовкаЭлементаФормы.Право, "Счет-фактура", Истина));
		Имена.Вставить("ок_ЕстьФайлПоступление", Новый Структура("ПутьКДанным, Вид, ПоложениеЗаголовка, Заголовок, ТолькоПросмотр, Видимость", "ок_ЕстьФайлПоступление", ВидПоляФормы.ПолеФлажка, ПоложениеЗаголовкаЭлементаФормы.Право, "Поступление", Истина, АнализироватьНаличиеЭД));
		Имена.Вставить("ок_ЕстьФайлСчетФактура", Новый Структура("ПутьКДанным, Вид, ПоложениеЗаголовка, Заголовок, ТолькоПросмотр, Видимость", "ок_ЕстьФайлСчетФактура", ВидПоляФормы.ПолеФлажка, ПоложениеЗаголовкаЭлементаФормы.Право, "Счет-фактура", Истина, АнализироватьНаличиеЭД));
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		
		ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, Группа);
		
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		Если Не Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_ФормаВходящегоБумажногоДокумента" Тогда
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
		Имена = Новый Структура;
		Имена.Вставить("ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования", 
										Новый Структура("Вид, ПоложениеЗаголовка, ПрефиксПутьКДанным, Обработчики", 
															ВидПоляФормы.ПолеФлажка, 
															ПоложениеЗаголовкаЭлементаФормы.Право, 
															ПрефиксПутьКДанным,
															Новый Структура("ПриИзменении", "ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласованияПриИзменении")));
		ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, Родитель);
		
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
		КонецЕсли;
		//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)
		
		Родитель = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель", "ок_ГруппаЗагружаемыеДокументы", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Ложь, Родитель), "Группа");
		
		Имена = Новый Структура;
		Имена.Вставить("ок_СоздаватьУчетныйДокументКопированием", Новый Структура("Вид, ПоложениеЗаголовка, ПрефиксПутьКДанным, Обработчики", ВидПоляФормы.ПолеФлажка, ПоложениеЗаголовкаЭлементаФормы.Право, ПрефиксПутьКДанным, Новый Структура("ПриИзменении", "ок_СоздаватьУчетныйДокументКопированиемПриИзменении")));
		Имена.Вставить("ок_ДокументКопирования", Новый Структура("Обработчики, ПрефиксПутьКДанным, ИсторияВыбораПриВводе", Новый Структура("НачалоВыбора", "ок_ДокументКопированияНачалоВыбора"), ПрефиксПутьКДанным, ИсторияВыбораПриВводе.НеИспользовать));
		Имена.Вставить("ок_ДокументОснование", Новый Структура("Обработчики, ПрефиксПутьКДанным, ИсторияВыбораПриВводе", Новый Структура("НачалоВыбора", "ок_ДокументОснованиеНачалоВыбора"), ПрефиксПутьКДанным, ИсторияВыбораПриВводе.НеИспользовать));
		Имена.Вставить("ок_ВидОперацииКорректировкаПоступления", Новый Структура("ПрефиксПутьКДанным", ПрефиксПутьКДанным));
		Имена.Вставить("ок_ДокументОснованиеСчетФактура", Новый Структура("ВыбиратьТип, 
																			|КнопкаВыбора, 
																			|ОтображениеКнопкиВыбора, 
																			|КнопкаОткрытия, 
																			|КнопкаОчистки, 
																			|Обработчики, 
																			|ПрефиксПутьКДанным,
																			|ИсторияВыбораПриВводе",
																			Ложь, 
																			Истина, 
																			ОтображениеКнопкиВыбора.ОтображатьВПолеВвода,
																			Истина, 
																			Истина, 
																			Новый Структура("НачалоВыбора", "ок_ДокументОснованиеСчетФактураНачалоВыбора"), 
																			ПрефиксПутьКДанным,
																			ИсторияВыбораПриВводе.НеИспользовать));
		
		ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, Родитель);
		
		Родитель.Видимость = ДокументФормы.ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования;
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-20 (#3780)
		Если Форма.ИмяФормы = "Документ.ЭлектронныйДокументВходящий.Форма.ФормаДокумента" Тогда
			СтруктураПоля_ТребуетсяЗаявка1С = Новый Структура();
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("Имя", 				"ок_ТребуетсяЗаявка1С");
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("ПрефиксПутьКДанным",	ПрефиксПутьКДанным);
			//СтруктураПоля_ТребуетсяЗаявка1С.Вставить("ПутьКДанным", 		"ок_ТребуетсяЗаявка1С");
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("Вид", 				ВидПоляФормы.ПолеФлажка);
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("ПоложениеЗаголовка",	ПоложениеЗаголовкаЭлементаФормы.Право);
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("Видимость", 			Истина);
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("Родитель", 			"ГруппаПраваяКолонка");
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("ПоследующийЭлемент", 	"ГруппаИсторияОбработки");
		Иначе
			СтруктураПоля_ТребуетсяЗаявка1С = Новый Структура();
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("Имя", 				"ок_ТребуетсяЗаявка1С");
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("ПрефиксПутьКДанным",	ПрефиксПутьКДанным);
			//СтруктураПоля_ТребуетсяЗаявка1С.Вставить("ПутьКДанным", 		"ок_ТребуетсяЗаявка1С");
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("Вид", 				ВидПоляФормы.ПолеФлажка);
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("ПоложениеЗаголовка",	ПоложениеЗаголовкаЭлементаФормы.Право);
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("Видимость", 			Истина);
			СтруктураПоля_ТребуетсяЗаявка1С.Вставить("Родитель", 			"ГруппаПраво");
		КонецЕсли;
		ДобавитьЭлементНаФорму(Форма, СтруктураПоля_ТребуетсяЗаявка1С);
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-20 (#3780)
		
	КонецЕсли;
	
	Таблица = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, 
	|ПутьКДанным, 
	|ИзменятьСоставСтрок, 
	|ИзменятьПорядокСтрок, 
	|Шапка, 
	|ПоложениеКоманднойПанели, 
	|Родитель", 
	"ок_ЗагружаемыеДокументы", 
	"ок_ЗагружаемыеДокументы", 
	Ложь,
	Ложь,
	Ложь,
	ПоложениеКоманднойПанелиЭлементаФормы.Нет,
	Родитель), "Таблица");
	
	Группа = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Вид, Группировка, Родитель", "ок_ЗагружаемыеДокументыГруппа", ВидГруппыФормы.ГруппаКолонок, ГруппировкаКолонок.ВЯчейке, Таблица), "Группа");
	
	Имена = Новый Структура;
	Имена.Вставить("Формировать", Новый Структура("ПутьКДанным, Вид, Обработчики", "ок_ЗагружаемыеДокументы.Формировать", ВидПоляФормы.ПолеФлажка, Новый Структура("ПриИзменении","ок_ЗагружаемыеДокументыФормироватьПриИзменении")));
	Имена.Вставить("ВидЗагружаемогоДокумента", Новый Структура("ПутьКДанным, ТолькоПросмотр", "ок_ЗагружаемыеДокументы.ВидЗагружаемогоДокумента", Истина));
	ок_УправлениеФормами.ДобавитьЭлементыВГруппуНаФорму(Форма, Имена, Группа);
	
	//Если Форма.ИмяФормы = "Документ.ЭлектронныйДокументВходящий.Форма.ФормаДокумента" Тогда
	//	Страница.Видимость = ДокументФормы.ок_АвтоматическиСоздаватьДокументПоступленияПослеСогласования;
	//КонецЕсли;
	
	
КонецПроцедуры	

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-08-05 (#3364)

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2019-09-20 (#3414)
Процедура ЗаполнитьНаФормеДанныеДляРегистрацииСчетаФактуры(Форма, ИмяРеквизитаНомер = "НомерСчетаФактурыПолученного", ИмяРеквизитаДата = "ДатаСчетаФактурыПолученного")
	
	Ссылка = Форма.Объект.Ссылка;
	Если Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;	
	
	ЭлектронныйДокумент = ок_ОбменСКонтрагентамиВнутренний.АктуальныйЭлектронныйДокументВладельца(Ссылка);
	Если ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		РеквизитыЭД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлектронныйДокумент, "ок_НомерВходящегоСчетаФактуры,ок_ДатаВходящегоСчетаФактуры");  
		Если РеквизитДобавлен(Форма, ИмяРеквизитаНомер) Тогда
			Форма[ИмяРеквизитаНомер] = РеквизитыЭД.ок_НомерВходящегоСчетаФактуры;
		КонецЕсли;	
		Если РеквизитДобавлен(Форма, ИмяРеквизитаДата) Тогда
			Форма[ИмяРеквизитаДата] = РеквизитыЭД.ок_ДатаВходящегоСчетаФактуры;
		КонецЕсли;	
		//Форма.НомерСчетаФактурыПолученного = РеквизитыЭД.ок_НомерВходящегоСчетаФактуры;
		//Форма.ДатаСчетаФактурыПолученного = РеквизитыЭД.ок_ДатаВходящегоСчетаФактуры;
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ДобавитьНаФормуЭлементУправленияБумажныйДокумент(Форма, Родитель = "ГруппаШапкаПравая") 
	
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ок_ТекстБумажныйДокумент", Новый Структура("Тип", Новый ОписаниеТипов("Строка")));
		Реквизиты.Вставить("ок_БумажныйДокумент", Новый Структура("Тип", Новый ОписаниеТипов("ДокументСсылка.ЭлектронныйДокументВходящий")));
		ДобавитьРеквизиты(Форма, Реквизиты);
		
		Форма.ок_ТекстБумажныйДокумент = "";
		Если Не Форма.Объект.Ссылка.Пустая() Тогда
			
			ЭлектронныйДокумент = Неопределено;
			ок_ОбменСКонтрагентамиВнутренний.ЭтоДокументДополнительногоСервисаЭДО(Форма.Объект.Ссылка, ЭлектронныйДокумент);
			
			Если ЗначениеЗаполнено(ЭлектронныйДокумент) 
				И ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументВходящий") 
				И ок_ОбменСКонтрагентамиВнутренний.ЭтоБумажныйДокумент(ЭлектронныйДокумент) Тогда
				
					Форма.ок_БумажныйДокумент = ЭлектронныйДокумент;
					Форма.ок_ТекстБумажныйДокумент = СтрЗаменить(Строка(ЭлектронныйДокумент), "Входящий", "Бумажный");
					
			КонецЕсли;		
				
		КонецЕсли;	
			
		ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, ПутьКДанным, Вид, Обработчики, ПоложениеЗаголовка, Гиперссылка, Видимость, Родитель", 
																	"ок_ТекстБумажныйДокумент", 
																	"ок_ТекстБумажныйДокумент", 
																	ВидПоляФормы.ПолеНадписи,
																	Новый Структура("Нажатие", "ок_ТекстБумажныйДокументНажатие"),
																	ПоложениеЗаголовкаЭлементаФормы.Нет,
																	Истина,
																	ЗначениеЗаполнено(Форма.ок_БумажныйДокумент),
																	Родитель));
																	
КонецПроцедуры																	

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2019-09-20 (#3414)

//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-10-21 (#3393)
Процедура бит_БК_КорректировкаКонтрольныхЗначенийИБюджетаФормаСпискаПриСозданииНаСервере(Отказ, СтандартнаяОбработка, Форма) Экспорт
	
	Если НЕ ПравоДоступа("ОтменаПроведения",Метаданные.Документы.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета) Тогда
		Возврат;
	КонецЕсли;
	 
	Элементы = Форма.Элементы;
	
	КомандаФормы = Форма.Команды.Добавить("ОК_ОтменитьПроведение");
	КомандаФормы.Заголовок 	= "Отменить проведение";
	КомандаФормы.Действие	= "ОК_ОтменитьПроведение"; 
	КомандаФормы.Картинка	= БиблиотекаКартинок.ОтменаПроведения;  	
	КомандаФормы.Отображение= ОтображениеКнопки.КартинкаИТекст;
	КомандаФормы.Действие	= "ОК_ОтменитьПроведение"; 	
	
	КнопкаФормы = Элементы.Добавить("ОК_ОтменитьПроведениеКоманднаяПанель", 	Тип("КнопкаФормы"), Элементы.ФормаПроведение);
	КнопкаФормы.ИмяКоманды 	= "ОК_ОтменитьПроведение";
	КнопкаФормы.Вид 		= ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаФормы.ТолькоВоВсехДействиях = Истина;  
	
	КнопкаФормы = Элементы.Добавить("ОК_ОтменитьПроведение", 	Тип("КнопкаФормы"), Элементы.СписокКонтекстноеМенюПроведение);
	КнопкаФормы.ИмяКоманды 	= "ОК_ОтменитьПроведение";
	КнопкаФормы.Вид 		= ВидКнопкиФормы.КнопкаКоманднойПанели;

	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2021-04-19 (#4130)
	НесколькоВидовОпераций = Ложь;
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.бит_БК_ТекущийИнициатор) Тогда 
		мДоступныхЦФО = Новый Массив;
		соотФД_ЦФО = Документы.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета.ПолучитьДоступныеИнициаторуЦФОДляКорректировки(,мДоступныхЦФО);
		НесколькоВидовОпераций = соотФД_ЦФО.Количество() > 0;				
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПодменюСоздать", "Видимость", НесколькоВидовОпераций);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Создать"	   , "Видимость", Не НесколькоВидовОпераций);
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2021-04-19 (#4130)
	
КонецПроцедуры
//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-10-21 (#3393)

//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Начало 2020-02-20 (#3591)
Функция ДанныеПереопределеннияОтчета(Имя) Экспорт
		
	Отчет = ок_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("ПереопределяемыеОтчеты", Имя);
	
	Если ЗначениеЗаполнено(Отчет) Тогда
	
		Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Отчет, "Ссылка, Вид, ИмяОбъекта");
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
//ОКЕЙ Вдовиченко Г.В(СофтЛаб) Конец 2020-02-20 (#3591)

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-03-12 (#4054)
Процедура СкрытьЭлементыВходящийДокументов(Форма, Бумажный)
	
	Если Бумажный Тогда
		Форма.Элементы.ДокументДоговорКонтрагента.ТолькоПросмотр = Истина;
		Форма.Элементы.Документок_ДокументРодитель.ТолькоПросмотр = Истина;
		Форма.Элементы.ДокументДата.ТолькоПросмотр = Истина;
		Форма.Элементы.ДокументОрганизация.ТолькоПросмотр = Истина;
		Форма.Элементы.ДокументКонтрагент.ТолькоПросмотр = Истина;
		Форма.Элементы.ДокументДоговорКонтрагента.ТолькоПросмотр = Истина;
		Форма.Элементы.ДокументОтветственный.ТолькоПросмотр = Истина;
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-04-07 (#4121)
		//Форма.Элементы.Документок_Проблемный.ТолькоПросмотр = Истина;
		//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-04-07 (#4121) 		
		Форма.Элементы.Документок_СтавкаНДС.ТолькоПросмотр = Истина;
		Форма.Элементы.Документок_СуммаНДС.ТолькоПросмотр = Истина;
		Форма.Элементы.СуммаБезНДС.ТолькоПросмотр = Истина;
		Форма.Элементы.ДокументСуммаДокумента.ТолькоПросмотр = Истина;
		Форма.Элементы.Документок_ДатаВходящегоСчетаФактуры.ТолькоПросмотр = Истина;
		Форма.Элементы.Документок_НомерВходящегоСчетаФактуры.ТолькоПросмотр = Истина;
		Форма.Элементы.ДатаНомерСчетаФактурыСовпадают.ТолькоПросмотр = Истина;
		Форма.Элементы.ДокументДатаДокументаОтправителя.ТолькоПросмотр = Истина;
		Форма.Элементы.ДокументНомерДокументаОтправителя.ТолькоПросмотр = Истина;		
	Иначе
		Форма.Элементы.ДоговорКонтрагента.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Форма.Элементы.ок_ТребуетсяЗаявка1С.ТолькоПросмотр = Истина;
	Форма.Элементы.ок_ТребуетсяСогласованиеФД.ТолькоПросмотр = Истина;
	Форма.Элементы.ок_ЦФО.ТолькоПросмотр = Истина;

КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-03-12 (#4054) 

//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-01-15 (#3997) 
Процедура РазместитьЭлементыПоЭД(Форма)
	
	Если Форма.ИмяФормы = "Обработка.ОбменСКонтрагентами.Форма.ок_ФормаВходящегоБумажногоДокумента"  Тогда
		НазваниеОбъекта = "Документ";
		НазваниеГруппы = "ГруппаШапка";
	Иначе
		НазваниеГруппы = "ок_ГруппаВертикальнаяОсновнойСтаницы";
		НазваниеОбъекта = "Объект";	
	КонецЕсли; 	
		
	ГруппаЦФО = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Группировка, ОтображатьЗаголовок, Родитель", "ок_ГруппаЦФО", ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда, Ложь, НазваниеГруппы), "Группа");	
	ЭлементПоле = Форма.Элементы.Добавить("ок_ТребуетсяСогласованиеФД", Тип("ПолеФормы"), ГруппаЦФО);
	ЭлементПоле.Вид = ВидПоляФормы.ПолеФлажка;
	ЭлементПоле.ВысотаЗаголовка = 2;
	ЭлементПоле.ПутьКДанным = НазваниеОбъекта + ".ок_ТребуетсяСогласованиеФД";
	ЭлементПоле.УстановитьДействие("ПриИзменении", "ок_ТребуетсяСогласованиеФДПриИзменении");
	
	ЗначениеПоляТребуетсяСогласованиеФД = Форма[НазваниеОбъекта].ок_ТребуетсяСогласованиеФД;
	
	ЭлементПоле = Форма.Элементы.Добавить("ок_ЦФО", Тип("ПолеФормы"), ГруппаЦФО);
	ЭлементПоле.АвтоМаксимальнаяШирина = Ложь;
	ЭлементПоле.РастягиватьПоГоризонтали = Ложь;
	ЭлементПоле.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементПоле.ПутьКДанным = НазваниеОбъекта + ".ок_ЦФО";
	ЭлементПоле.Видимость = ЗначениеПоляТребуетсяСогласованиеФД;
	ЭлементПоле.УстановитьДействие("ПриИзменении", "ок_ЦФОПриИзменении");
	ЭлементПоле.УстановитьДействие("НачалоВыбора", "ок_ЦФОНачалоВыбора");
	
	ЭлементПоле = Форма.Элементы.Добавить("ок_ФункциональныйДиректор", Тип("ПолеФормы"), ГруппаЦФО);
	ЭлементПоле.Вид = ВидПоляФормы.ПолеНадписи;
	ЭлементПоле.ПутьКДанным = НазваниеОбъекта + ".ок_ФункциональныйДиректор";
	ЭлементПоле.Видимость = ЗначениеПоляТребуетсяСогласованиеФД;
	
	ГруппаИнициаторы = ок_УправлениеФормами.ДобавитьЭлементНаФорму(Форма, Новый Структура("Имя, Заголовок, Группировка, ОтображатьЗаголовок, Поведение, Родитель", "ок_ГруппаИнициаторы", "Инициаторы", ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Истина, ПоведениеОбычнойГруппы.Свертываемая, НазваниеГруппы), "Группа");	
	ЭлементТаблица = Форма.Элементы.Добавить("ок_Инициаторы", Тип("ТаблицаФормы"), ГруппаИнициаторы);
	ЭлементТаблица.Ширина = 55;
	ЭлементТаблица.АвтоМаксимальнаяШирина = Ложь;
	ЭлементТаблица.АвтоМаксимальнаяВысотаВСтрокахТаблицы = Ложь;
	ЭлементТаблица.РастягиватьПоГоризонтали = Ложь;
	ЭлементТаблица.ПутьКДанным = НазваниеОбъекта + ".ок_Инициаторы";
	ЭлементТаблица.ВысотаВСтрокахТаблицы = 3;
	ЭлементТаблица.МаксимальнаяВысотаВСтрокахТаблицы = 3;
	ЭлементТаблица.УстановитьДействие("ПередНачаломДобавления", "ок_ИнициаторыПередНачаломДобавления");
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Начало 2021-03-10 (#4054)
	ЭлементТаблица.ТолькоПросмотр = Форма[НазваниеОбъекта].ок_Статус <> ПредопределенноеЗначение("Перечисление.ок_СтатусыВходящегоЭлектронногоДокументооборота.Новый");	
	//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-03-10 (#4054)
	
	ЭлементПоле = Форма.Элементы.Добавить("ОтветственныйЗаНомерЗаявки", Тип("ПолеФормы"), ЭлементТаблица);
	ЭлементПоле.Вид = ВидПоляФормы.ПолеФлажка;	
	ЭлементПоле.ПутьКДанным = НазваниеОбъекта + ".ок_Инициаторы.ОтветственныйЗаНомерЗаявки";

	ЭлементПоле = Форма.Элементы.Добавить("Инициатор", Тип("ПолеФормы"), ЭлементТаблица);
	ЭлементПоле.Вид = ВидПоляФормы.ПолеВвода;	
	ЭлементПоле.ПутьКДанным = НазваниеОбъекта + ".ок_Инициаторы.Инициатор";
	ЭлементПоле.УстановитьДействие("ОбработкаВыбора", "ок_ИнициаторыИнициаторОбработкаВыбора");
	
	 
	
КонецПроцедуры
//ОКЕЙ Назаренко Д.В. (СофтЛаб) Конец 2021-01-15 (#3997)

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-12 (#МДМ)
Процедура УстановитьНастройкиДоступностиЭлементов(Форма)
	
	бит_ОбщегоНазначения.УстановитьНастройкиДоступностиЭлементовДляФормы(Форма, Форма.Объект);
	
КонецПроцедуры
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-12 (#МДМ)

#КонецОбласти

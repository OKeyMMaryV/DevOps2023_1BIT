////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// +СБ. Михайлов Никита. 2014-05-05. Загрузка платежных документов AXAPTA
Процедура ЗагрузитьПлатежныеДокументыAXAPTA(МассивИдентификаторов) Экспорт 
	
	Отказ = Ложь;
	ТекстЗапросаSQL = "
	|USE %1
	|UPDATE %2
	|SET POSTED1C8 = 1
	|WHERE RECID IN(%3)";
	
	Попытка
		
		Соединение = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.СоединениеКИсточникуСредствамиSQL();
		ЗапросSQL = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ОбъектЗапросSQL(Соединение);
	
	Исключение
		
		ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
								 УровеньЖурналаРегистрации.Ошибка,
								 ,
								 ,
								 "Не удалось инициализовать подключение к внешнему источнику для записи данных: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Отказ = Истина;
		
	КонецПопытки;
	
	Если НЕ Отказ Тогда
		
		Результат = ЗагрузитьСоздатьПлатежныеДокументы(МассивИдентификаторов);
		
		СтрокаИдентификаторов = "";
		Для каждого ЗаявкаID Из Результат.ЗаписанныеЗаявки Цикл
			
			Если ПустаяСтрока(СтрокаИдентификаторов) Тогда
				СтрокаИдентификаторов = Формат(ЗаявкаID, "ЧГ=");				
			Иначе
				СтрокаИдентификаторов = СтрокаИдентификаторов + ", " + Формат(ЗаявкаID, "ЧГ=");
			КонецЕсли; 
			
		КонецЦикла; 
		
		Для каждого ЗаявкаID Из Результат.ПроведенныеЗаявки Цикл
			
			Если ПустаяСтрока(СтрокаИдентификаторов) Тогда
				СтрокаИдентификаторов = Формат(ЗаявкаID, "ЧГ=");				
			Иначе
				СтрокаИдентификаторов = СтрокаИдентификаторов + ", " + Формат(ЗаявкаID, "ЧГ=");
			КонецЕсли;
			
		КонецЦикла; 
		
		Если НЕ ПустаяСтрока(СтрокаИдентификаторов) Тогда
			
			ПараметрыСоединения = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ПолучитьПараметрыСоединения();
			ЗапросSQL.CommandText = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ТекстЗапросаSQL,
										ПараметрыСоединения.База,
										"ExportDataTo1cPaymOrder",
										СтрокаИдентификаторов);
			Для Сч = 1 По 10 Цикл
			
				Попытка
				
					ЗапросSQL.Execute();										
					Прервать;
				
				Исключение
		
					//ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
					//						 УровеньЖурналаРегистрации.Ошибка,
					//						 ,
					//						 ,
					//						 "Не удалось выполнить запрос обновления признаков загрузки (POSTED1C8): " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				КонецПопытки; 	
			
			КонецЦикла; 							
										
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры // -СБ. Михайлов Никита

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-01-23 (#3621)
Процедура ЗагрузитьПлатежныеДокументыAXAPTA_Версия2(МассивИдентификаторов) Экспорт 
	
	Отказ = Ложь;
	ТекстЗапросаSQL = "
	|USE %1
	|UPDATE %2
	|SET POSTED1C8 = 1
	|WHERE RECID IN(%3)";
	
	Попытка
		
		Соединение = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.СоединениеКИсточникуСредствамиSQL();
		ЗапросSQL = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ОбъектЗапросSQL(Соединение);
	
	Исключение
		
		ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
								 УровеньЖурналаРегистрации.Ошибка,
								 ,
								 ,
								 "Не удалось инициализовать подключение к внешнему источнику для записи данных: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Отказ = Истина;
		
	КонецПопытки;
	
	Если НЕ Отказ Тогда
		
		Результат = ЗагрузитьСоздатьПлатежныеДокументы_Версия2(МассивИдентификаторов);
		
		СтрокаИдентификаторов = "";
		Для каждого ЗаявкаID Из Результат.ЗаписанныеЗаявки Цикл
			
			Если ПустаяСтрока(СтрокаИдентификаторов) Тогда
				СтрокаИдентификаторов = Формат(ЗаявкаID, "ЧГ=");				
			Иначе
				СтрокаИдентификаторов = СтрокаИдентификаторов + ", " + Формат(ЗаявкаID, "ЧГ=");
			КонецЕсли; 
			
		КонецЦикла; 
		
		Для каждого ЗаявкаID Из Результат.ПроведенныеЗаявки Цикл
			
			Если ПустаяСтрока(СтрокаИдентификаторов) Тогда
				СтрокаИдентификаторов = Формат(ЗаявкаID, "ЧГ=");				
			Иначе
				СтрокаИдентификаторов = СтрокаИдентификаторов + ", " + Формат(ЗаявкаID, "ЧГ=");
			КонецЕсли;
			
		КонецЦикла; 
		
		Если НЕ ПустаяСтрока(СтрокаИдентификаторов) Тогда
			
			ПараметрыСоединения = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ПолучитьПараметрыСоединения();
			ЗапросSQL.CommandText = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ТекстЗапросаSQL,
										ПараметрыСоединения.База,
										"ExportDataTo1cPaymOrder",
										СтрокаИдентификаторов);
			Для Сч = 1 По 10 Цикл
			
				Попытка
				
					ЗапросSQL.Execute();										
					Прервать;
				
				Исключение
		
					//ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
					//						 УровеньЖурналаРегистрации.Ошибка,
					//						 ,
					//						 ,
					//						 "Не удалось выполнить запрос обновления признаков загрузки (POSTED1C8): " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				КонецПопытки; 	
			
			КонецЦикла; 							
										
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры // -СБ. Михайлов Никита
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-01-23 (#3621)

// +СБ. Широков Николай. 2014-11-24. ТЗ 2.2.11.3
Процедура ВыгрузитьПлатежныеПорученияВAXAPTA(РеестрПлатежейСсылка) Экспорт

	ИдентификаторАлгоритма = "Выгрузка номеров платежных поручений";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		
		Соединение = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.СоединениеКИсточникуСредствамиSQL();
		ЗапросSQL = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ОбъектЗапросSQL(Соединение);
	
	Исключение
		
		ЗаписьЖурналаРегистрации(ИдентификаторАлгоритма,
								 УровеньЖурналаРегистрации.Ошибка,
								 ,
								 ,
								 "Не удалось инициализовать подключение к внешнему источнику для записи данных: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
		
	КонецПопытки;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	бит_РеестрПлатежейЗаявки.ПлатежнаяПозиция КАК ПлатежнаяПозиция
	|ПОМЕСТИТЬ ПлатежныеПозиции
	|ИЗ
	|	Документ.бит_РеестрПлатежей.Заявки КАК бит_РеестрПлатежейЗаявки
	|ГДЕ
	|	бит_РеестрПлатежейЗаявки.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПлатежнаяПозиция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(бит_ДополнительныеАналитики.ЗначениеАналитики КАК Документ.бит_ПлатежнаяПозиция) КАК ПлатежнаяПозиция,
	|	ВЫБОР
	|		КОГДА бит_ДополнительныеАналитики.Объект ССЫЛКА Документ.СписаниеСРасчетногоСчета
	|			ТОГДА ВЫРАЗИТЬ(бит_ДополнительныеАналитики.Объект КАК Документ.СписаниеСРасчетногоСчета)
	|	КОНЕЦ КАК ПлатежныйДокумент
	|ПОМЕСТИТЬ ПлатежныеДокументы
	|ИЗ
	|	РегистрСведений.бит_ДополнительныеАналитики КАК бит_ДополнительныеАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПлатежныеПозиции КАК ПлатежныеПозиции
	|		ПО бит_ДополнительныеАналитики.ЗначениеАналитики = ПлатежныеПозиции.ПлатежнаяПозиция
	|ГДЕ
	|	бит_ДополнительныеАналитики.Аналитика = ЗНАЧЕНИЕ(ПланВидовХарактеристик.бит_ВидыДополнительныхАналитик.ПлатежнаяПозиция)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	бит_ДокументыМножественнойОплаты.ПлатежнаяПозиция,
	|	бит_ДокументыМножественнойОплаты.ДокументОплаты
	|ИЗ
	|	РегистрСведений.бит_ДокументыМножественнойОплаты КАК бит_ДокументыМножественнойОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПлатежныеПозиции КАК ПлатежныеПозиции
	|		ПО бит_ДокументыМножественнойОплаты.ПлатежнаяПозиция = ПлатежныеПозиции.ПлатежнаяПозиция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA КАК RECID,
	|	СписаниеСРасчетногоСчета.НомерВходящегоДокумента КАК Номер,
	|	БанковскиеСчета.НомерСчета,
	|	БанковскиеСчета.Банк.Код КАК БИК,
	//1c-izhtc (
	//|	ПОДСТРОКА(ПлатежноеПоручение.Номер, 1, 10) КАК ORDERID,
	|	ПлатежноеПоручение.Номер КАК ORDERID,
	//1c-izhtc )
	|	ЕСТЬNULL(Организации.Префикс, """") КАК ПрефиксОрганизации
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ПлатежнаяПозиция КАК бит_ПлатежнаяПозиция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
	|			ПО бит_ПлатежнаяПозиция.ДокументОснование = бит_ЗаявкаНаРасходованиеСредств.Ссылка
	|				И (бит_ЗаявкаНаРасходованиеСредств.СБ_ИдентификаторЗаписиAXAPTA <> 0)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПлатежныеПозиции КАК ПлатежныеПозиции
	|			ПО (ПлатежныеПозиции.ПлатежнаяПозиция = бит_ПлатежнаяПозиция.Ссылка)
	|		ПО ПлатежныеДокументы.ПлатежнаяПозиция = бит_ПлатежнаяПозиция.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|			ПО СписаниеСРасчетногоСчета.ДокументОснование = ПлатежноеПоручение.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|			ПО СписаниеСРасчетногоСчета.СчетОрганизации = БанковскиеСчета.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО СписаниеСРасчетногоСчета.Организация = Организации.Ссылка
	|		ПО ПлатежныеДокументы.ПлатежныйДокумент = СписаниеСРасчетногоСчета.Ссылка";
	Запрос.УстановитьПараметр("Ссылка",	РеестрПлатежейСсылка);	 //Реестр платежей
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;	
	КонецЕсли; 
	
	ШаблонУсловногоЗначения  = "WHEN RECID = %1 THEN '%2' ";
	
	СтрокаИдентификаторов 					= "";
	СтрокаУсловноеЗначениеORDERID 			= "";
	СтрокаУсловноеЗначениеBankAccountNum 	= "";
	СтрокаУсловноеЗначениеBankBIC 			= "";
	
	КоличествоЗаписей = 0;
	
	ТекстЗапросаSQL = "
	|USE %1
	|UPDATE %2
	|SET POSTED1C8 = 2, ORDERID = (CASE %4 END), BankAccountNum = (CASE %5 END),  BankBIC = (CASE %6 END) 
	|WHERE RECID IN(%3)";
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Истина Цикл
		
		Если Не Выборка.Следующий() Тогда
			Прервать;		
		КонецЕсли; 
		
		КоличествоЗаписей = КоличествоЗаписей + 1;
		
		RECID = Формат(Выборка.RECID, "ЧГ=0");
		
		СтрокаИдентификаторов = СтрокаИдентификаторов 
			+ ?(ПустаяСтрока(СтрокаИдентификаторов), "", ",") 
			+ RECID; 
			
		//1c-izhtc (
		//ORDERID = Выборка.ORDERID;
		ORDERID = СокрЛП(Выборка.ORDERID);
		//1c-izhtc )
		Префикс = Выборка.ПрефиксОрганизации;
		
		Если Лев(ORDERID, СтрДлина(Префикс)) = Префикс Тогда
			ORDERID = Сред(ORDERID, СтрДлина(Префикс) + 1); 	
		КонецЕсли; 
		
		//1c-izhtc (
		//Пока Лев(ORDERID, 1) = "0" Цикл
		Пока Лев(ORDERID, 1) = "0" ИЛИ Лев(ORDERID, 1) = "-" Цикл
		//1c-izhtc )
			ORDERID = Сред(ORDERID, 2); 	
		КонецЦикла; 
			
		СтрокаУсловноеЗначениеORDERID = СтрокаУсловноеЗначениеORDERID
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУсловногоЗначения
				, RECID
				, ORDERID
				);
				
		СтрокаУсловноеЗначениеBankAccountNum = СтрокаУсловноеЗначениеBankAccountNum
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУсловногоЗначения
				, RECID
				, Выборка.НомерСчета
				);
				
		СтрокаУсловноеЗначениеBankBIC = СтрокаУсловноеЗначениеBankBIC
			+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУсловногоЗначения
				, RECID
				, Выборка.БИК
				);
				
		Если КоличествоЗаписей < 100 Тогда
			

					
		Иначе
			
			Если НЕ ПустаяСтрока(СтрокаИдентификаторов) Тогда
					
				ПараметрыСоединения = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ПолучитьПараметрыСоединения();
				ЗапросSQL.CommandText = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапросаSQL
											, ПараметрыСоединения.База
											, "ExportDataTo1cPaymOrder"
											, СтрокаИдентификаторов
											, СтрокаУсловноеЗначениеORDERID
											, СтрокаУсловноеЗначениеBankAccountNum
											, СтрокаУсловноеЗначениеBankBIC
											);
				
				Попытка
				
					ЗапросSQL.Execute();										
				
				Исключение

					ЗаписьЖурналаРегистрации(ИдентификаторАлгоритма,
											 УровеньЖурналаРегистрации.Ошибка,
											 ,
											 ,
											 "Не удалось выполнить запрос обновления " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				КонецПопытки; 	
				
											
			КонецЕсли; 
			
			КоличествоЗаписей = 0;
			
			СтрокаИдентификаторов 					= "";
			СтрокаУсловноеЗначениеORDERID 			= "";
			СтрокаУсловноеЗначениеBankAccountNum 	= "";
			СтрокаУсловноеЗначениеBankBIC 			= "";
			
		КонецЕсли; 
	КонецЦикла; 
	
	Если НЕ ПустаяСтрока(СтрокаИдентификаторов) Тогда
			
		ПараметрыСоединения = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ПолучитьПараметрыСоединения();
		ЗапросSQL.CommandText = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапросаSQL
									, ПараметрыСоединения.База
									, "ExportDataTo1cPaymOrder"
									, СтрокаИдентификаторов
									, СтрокаУсловноеЗначениеORDERID
									, СтрокаУсловноеЗначениеBankAccountNum
									, СтрокаУсловноеЗначениеBankBIC
									);
		
		Попытка
		
			ЗапросSQL.Execute();										
		
		Исключение

			ЗаписьЖурналаРегистрации(ИдентификаторАлгоритма,
									 УровеньЖурналаРегистрации.Ошибка,
									 ,
									 ,
									 "Не удалось выполнить запрос обновления " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки; 	
		
									
	КонецЕсли; 
		
КонецПроцедуры
 
// -СБ. Широков Николай 

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// +СБ. Калинкина Елена. 2014-04-30. Загрузка платежных документов AXAPTA 
Функция ЗагрузитьСоздатьПлатежныеДокументы(ИдентификаторыЗаписей)
	
	//ВремяНачала = СБ_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени();
	
	МассивЗаписанныхЗаявок = Новый Массив;
	МассивПроведенныхЗаявок = Новый Массив;
	МассивНезаписанныхЗаявок = Новый Массив;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ЗаписанныеЗаявки", МассивЗаписанныхЗаявок);
	СтруктураВозврата.Вставить("ПроведенныеЗаявки", МассивПроведенныхЗаявок);
	СтруктураВозврата.Вставить("НезаписанныеЗаявки", МассивНезаписанныхЗаявок);
	
	ТаблицаДанных = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ПолучитьДанныеИсточника(ИдентификаторыЗаписей);

	
	КлючеваяОперация = Справочники.КлючевыеОперации.СБ_ПолучениеСведенийЗагружаемыхОбъектовAXAPTA100;
	//Если ИдентификаторыЗаписей.Количество() % 100 = 0 Тогда
	//	СБ_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(КлючеваяОперация, ВремяНачала);	
	//КонецЕсли; 
	
	ТаблицаДатВалют = ТаблицаДанных.Скопировать(, "ORDERDATE");

	ТаблицаДатВалют.Колонки["ORDERDATE"].Имя = "Период";
	РеквизитыЗаполнения = КонстантныеДанные(ТаблицаДатВалют);
	
// +СБ. Широков Николай. 2014-09-08. ТЗ "Казначейство" 2.2.1.8.
    ВидыОперациЗаявки 					= Перечисления.бит_ВидыОперацийЗаявкаНаРасходование;

	ВидОперации_ПеречислениеНалога 		= ВидыОперациЗаявки.ПеречислениеНалога;
	ВидОперации_ПеречислениеЗП 			= ВидыОперациЗаявки.ПеречислениеЗП;
	ВидОперации_ПрочееСписаниеБезналДС 	= ВидыОперациЗаявки.ПрочееСписаниеБезналичныхДенежныхСредств;
	ВидОперации_ПереводНаДругойСчет 	= ВидыОперациЗаявки.ПереводНаДругойСчет;
// -СБ. Широков Николай 		

// +СБ. Чеплин Денис. 2016-10-28. Факторинг (#2612)
	НаправлениеФакторинг = Справочники.бит_НаправленияДоговоров.НайтиПоНаименованию("факторинг");
// -СБ. Чеплин Денис 

	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-01-27 (#3842)
	//Динамическое обновление от 27.01.2021
	ЗагружатьЗНРДСПоНеБКВСтатусеУтверждено = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("Загрузка из AXAPTA", "Загружать ЗНРДС по не БК в статусе утверждено", Ложь);
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-01-27 (#3842)

	Для Каждого Строка из ТаблицаДанных Цикл
		
		//ВремяНачала = СБ_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени();
		ЭтоЧерновик = Ложь;
		
		Если ЗначениеЗаполнено(Строка.ЗаявкаНаРасходованиеСредств) Тогда
			Заявка = Строка.ЗаявкаНаРасходованиеСредств.ПолучитьОбъект();
		Иначе
			Заявка = Документы.бит_ЗаявкаНаРасходованиеСредств.СоздатьДокумент();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыЗаполнения.ВидОперации[Строка.POSTINGPROFILE]) Тогда
			Заявка.ВидОперации = РеквизитыЗаполнения.ВидОперации[Строка.POSTINGPROFILE];
		Иначе 
			ЭтоЧерновик = Истина;
		КонецЕсли; 
		
		Заявка.СБ_ИдентификаторЗаписиAXAPTA = Строка.RECID;
		Заявка.Дата = Строка.ORDERDATE;
		Заявка.ДатаРасхода = Строка.ORDERDATE;
		Заявка.Организация = РеквизитыЗаполнения.Организация;
		Заявка.Сценарий = РеквизитыЗаполнения.Сценарий;
		Заявка.ТипЗаявки = РеквизитыЗаполнения.ТипЗаявки;
		Заявка.Важность = РеквизитыЗаполнения.Важность;
		Заявка.ФормаОплаты = РеквизитыЗаполнения.ФормаОплаты;
		Заявка.СуммаВключаетНДС	= Истина;
		Заявка.НеВключатьВПлатежныйКалендарь = Истина;
 		Заявка.Важность = РеквизитыЗаполнения.Важность;
		
// +СБ. Широков Николай. 2014-09-03. ТЗ "Казначейство" 2.2.1.2. 
		Если Строка.PRETERM = 1 Тогда
			Заявка.Важность = Перечисления.бит_Важность.Высокая;
		КонецЕсли; 
		
		Заявка.СБ_ПрофильРазноски 					= Строка.POSTINGPROFILE;		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-12-07 (#3842)  //Расскоментировал временно (Динамическое обновление от 27.01.2021)
		//Заявка.СБ_СгенерированАвтоматическиAXAPTA	= ?(Строка.MASTERCREATED = 0, Истина, Ложь);
		Если ЗагружатьЗНРДСПоНеБКВСтатусеУтверждено Тогда
			Заявка.СБ_СгенерированАвтоматическиAXAPTA	= ?(Строка.MASTERCREATED = 0, Истина, Ложь);
		КонецЕсли; 
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-12-07 (#3842)
// +СБ. Широков Николай. 2014-09-09. ТЗ "Казначейство" 2.2.1.8.
		Заявка.ДополнительныеСвойства.Вставить("СчетРСБУ", 		РеквизитыЗаполнения.СчетРСБУ[Строка.POSTINGPROFILE]);
		Заявка.ДополнительныеСвойства.Вставить("ВидПеревода", 	Строка.ВидПеревода);
// -СБ. Широков Николай 		

		Если ЗначениеЗаполнено(Строка.Контрагент) Тогда
			
			Заявка.Контрагент = Строка.Контрагент;
			
// +СБ. Широков Николай. 2014-09-16. ТЗ "Казначейство" 2.2.1.8. 
//		Иначе
		ИначеЕсли Заявка.ВидОперации <> ВидОперации_ПереводНаДругойСчет
			Тогда
// -СБ. Широков Николай 		
			
			Заявка.Контрагент = РеквизитыЗаполнения.КонтрагентНеопределено;
			ЭтоЧерновик = Истина;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ДоговорКонтрагента) Тогда
			
			Заявка.ДоговорКонтрагента = Строка.ДоговорКонтрагента;
			
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-14 (#3629)  //заполняется перед записью документа
//// +СБ. Чеплин Денис. 2016-10-28. Факторинг (#2612)
//			Если Строка.ДоговорКонтрагента.бит_НаправлениеДоговора = НаправлениеФакторинг 
//				И ЗначениеЗаполнено(Строка.БанковскийСчет) Тогда
//				
//				Заявка.СБ_БанковскийСчетКонтрагента = Строка.БанковскийСчет; 		
//			ИначеЕсли ЗначениеЗаполнено(Строка.ОсновнойБанковскийСчет) Тогда
//				Заявка.СБ_БанковскийСчетКонтрагента = Строка.ОсновнойБанковскийСчет;
//			ИначеЕсли ЗначениеЗаполнено(Строка.Контрагент) Тогда
//				Заявка.СБ_БанковскийСчетКонтрагента = Строка.Контрагент.ОсновнойБанковскийСчет;
//			КонецЕсли;  
//// -СБ. Чеплин Денис 
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-14 (#3629)
			
// +СБ. Широков Николай. 2014-09-08. ТЗ "Казначейство" 2.2.1.8.
//		Иначе
		ИначеЕсли Заявка.ВидОперации <> ВидОперации_ПеречислениеНалога
			И Заявка.ВидОперации <> ВидОперации_ПеречислениеЗП
			И Заявка.ВидОперации <> ВидОперации_ПрочееСписаниеБезналДС
			И Заявка.ВидОперации <> ВидОперации_ПереводНаДругойСчет
			Тогда
// -СБ. Широков Николай 			
			
			Заявка.ДоговорКонтрагента = РеквизитыЗаполнения.ДоговорНеопределено;
			ЭтоЧерновик = Истина;
			
		КонецЕсли;	
	
		Если ЗначениеЗаполнено(Строка.ЦФО) Тогда
			
			Заявка.ЦФО = Строка.ЦФО;
			
// +СБ. Широков Николай. 2014-09-08. ТЗ "Казначейство" 2.2.1.6.
//		Иначе
//			
//			Заявка.ЦФО = РеквизитыЗаполнения.ЦФОНеопределено;
//			ЭтоЧерновик = Истина;
//
// -СБ. Широков Николай 		
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.СтатьяОборотов) Тогда
			
			Заявка.СтатьяОборотов = Строка.СтатьяОборотов;
			
		Иначе
			
			Заявка.СтатьяОборотов = РеквизитыЗаполнения.СтатьяОборотовНеопределено;
			ЭтоЧерновик = Истина;
			
		КонецЕсли;
		
		Если Строка.PREPAY = 1 Тогда
			Заявка.ТипПлатежа = РеквизитыЗаполнения.ТипПлатежаАванс;
		ИначеЕсли Строка.PREPAY = 0 Тогда
			Заявка.ТипПлатежа = РеквизитыЗаполнения.ТипПлатежаОплата;
		Иначе
			ЭтоЧерновик = Истина;
		КонецЕсли;	
			
		Заявка.ВалютаДокумента = РеквизитыЗаполнения.Валюта[Строка.CURRENCYCODE];
		СтруктураПоиска = Новый Структура("Валюта, Период", Заявка.ВалютаДокумента, Заявка.Дата); 
		СтрокиКурсКратность = РеквизитыЗаполнения.КурсВалюты.НайтиСтроки(СтруктураПоиска);
		Если СтрокиКурсКратность.Количество() = 0 Тогда
			
			Заявка.КурсДокумента = 1;
			Заявка.КратностьДокумента = 1;
		
		Иначе
			
			Заявка.КурсДокумента = СтрокиКурсКратность[0].Курс;
			Заявка.КратностьДокумента = СтрокиКурсКратность[0].Кратность;
			
		КонецЕсли; 
		
		Заявка.СтавкаНДС = РеквизитыЗаполнения.СтавкаНДС[Строка.TAXTYPE];
		Заявка.НДС = Строка.TAXAMOUNTCUR;
		Заявка.Сумма = Строка.AMOUNTCUR;
		Заявка.СуммаДокумента = Строка.AMOUNTCUR;
		//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-12-21 (#3415)
		Заявка.ок_СпособСоздания = 6;
        //ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-12-21 (#3415)
        Заявка.НазначениеПлатежа = Строка.REQUESTPURPOSE;
		Заявка.НазначениеПлатежаУпр = Строка.REQUESTPURPOSE;
		Заявка.Комментарий = "№" + Строка.ORDERID + ". Загружен из AXAPTA, " + ТекущаяДатаСеанса();
		
		ЗаписатьДокумент(Заявка, ЭтоЧерновик, Строка.RECID, СтруктураВозврата, РеквизитыЗаполнения.ВизаУтверждения, КлючеваяОперация);	
		
		//СБ_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(КлючеваяОперация, ВремяНачала);	
		
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции // -СБ. Калинкина Елена	

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-01-23 (#3621)
Функция ЗагрузитьСоздатьПлатежныеДокументы_Версия2(ИдентификаторыЗаписей)
	
	МассивЗаписанныхЗаявок = Новый Массив;
	МассивПроведенныхЗаявок = Новый Массив;
	МассивНезаписанныхЗаявок = Новый Массив;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ЗаписанныеЗаявки", МассивЗаписанныхЗаявок);
	СтруктураВозврата.Вставить("ПроведенныеЗаявки", МассивПроведенныхЗаявок);
	СтруктураВозврата.Вставить("НезаписанныеЗаявки", МассивНезаписанныхЗаявок);
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-11-30 (#3415)
	//ТаблицаДанных = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ПолучитьДанныеИсточника(ИдентификаторыЗаписей);
	ТаблицаДанныхОбщая = СБ_ЗагрузкаПД_AXAPTA_УправлениеИсточником.ПолучитьДанныеИсточника(ИдентификаторыЗаписей);
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-11-30 (#3415)
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-28 (#3842)
	ТаблицаКонтрагентов = ТаблицаДанныхОбщая.Скопировать(,"Контрагент");
	ТаблицаКонтрагентов.Свернуть("Контрагент");
	ОстаткиПоКонтрагентам = ПолучитьОстаткиПоКонтрагентам(ТаблицаКонтрагентов);
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-28 (#3842)
	
	КлючеваяОперация = Справочники.КлючевыеОперации.СБ_ПолучениеСведенийЗагружаемыхОбъектовAXAPTA100;
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-11-30 (#3415)
	//ТаблицаДатВалют = ТаблицаДанных.Скопировать(, "ORDERDATE");
	ТаблицаДатВалют = ТаблицаДанныхОбщая.Скопировать(, "ORDERDATE");
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-11-30 (#3415)

	ТаблицаДатВалют.Колонки["ORDERDATE"].Имя = "Период";
	РеквизитыЗаполнения = КонстантныеДанные(ТаблицаДатВалют);
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-28 (#3842)
	//ВидыОперациЗаявки 					= Перечисления.бит_ВидыОперацийЗаявкаНаРасходование;
	//ВидОперации_ПеречислениеНалога 		= ВидыОперациЗаявки.ПеречислениеНалога;
	//ВидОперации_ПеречислениеЗП 			= ВидыОперациЗаявки.ПеречислениеЗП;
	//ВидОперации_ПрочееСписаниеБезналДС 	= ВидыОперациЗаявки.ПрочееСписаниеБезналичныхДенежныхСредств;
	//ВидОперации_ПереводНаДругойСчет 	= ВидыОперациЗаявки.ПереводНаДругойСчет;
	ВидОперации_ПеречислениеНалога 		= ПредопределенноеЗначение("Перечисление.бит_ВидыОперацийЗаявкаНаРасходование.ПеречислениеНалога");
	ВидОперации_ПеречислениеЗП 			= ПредопределенноеЗначение("Перечисление.бит_ВидыОперацийЗаявкаНаРасходование.ПеречислениеЗП");
	ВидОперации_ПрочееСписаниеБезналДС 	= ПредопределенноеЗначение("Перечисление.бит_ВидыОперацийЗаявкаНаРасходование.ПрочееСписаниеБезналичныхДенежныхСредств");
	ВидОперации_ПереводНаДругойСчет 	= ПредопределенноеЗначение("Перечисление.бит_ВидыОперацийЗаявкаНаРасходование.ПереводНаДругойСчет");
	
	//Динамическое обновление от 27.01.2021
	ЗагружатьЗНРДСПоНеБКВСтатусеУтверждено = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("Загрузка из AXAPTA", "Загружать ЗНРДС по не БК в статусе утверждено", Ложь);
	
	//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-28 (#3842)

	НаправлениеФакторинг = Справочники.бит_НаправленияДоговоров.НайтиПоНаименованию("факторинг");
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-11-30 (#3415)
    ОтборСтрок  = Новый Структура("IsBudgetControl", 0);
    ОтборСтрокБК = Новый Структура("IsBudgetControl", 1);
    ТаблицаДанных = ТаблицаДанныхОбщая.Скопировать(ОтборСтрок);
    ТаблицаДанныхБК = ТаблицаДанныхОбщая.Скопировать(ОтборСтрокБК);
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если ТаблицаДанных.Количество() <> 0 Тогда
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-11-30 (#3415)
	
		Для Каждого Строка из ТаблицаДанных Цикл
			
			ЭтоЧерновик = Ложь;
			
			Если ЗначениеЗаполнено(Строка.ЗаявкаНаРасходованиеСредств) Тогда
				Заявка = Строка.ЗаявкаНаРасходованиеСредств.ПолучитьОбъект();
			Иначе
				Заявка = Документы.бит_ЗаявкаНаРасходованиеСредств.СоздатьДокумент();
			КонецЕсли;
			
			Если ЗначениеЗаполнено(РеквизитыЗаполнения.ВидОперации[Строка.POSTINGPROFILE]) Тогда
				Заявка.ВидОперации = РеквизитыЗаполнения.ВидОперации[Строка.POSTINGPROFILE];
			Иначе 
				ЭтоЧерновик = Истина;
			КонецЕсли; 
			
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-21 (#4128)
			Заявка.ДополнительныеСвойства.Вставить("ок_ЗагрузкаПД_СинхронизироватьПлатежныеПозиции", Истина);
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-21 (#4128)
			
			Заявка.СБ_ИдентификаторЗаписиAXAPTA = Строка.RECID;
			Заявка.Дата = Строка.ORDERDATE;
			Заявка.ДатаРасхода = Строка.ORDERDATE;
			Заявка.Организация = РеквизитыЗаполнения.Организация;
			Заявка.Сценарий = РеквизитыЗаполнения.Сценарий;
			Заявка.ТипЗаявки = РеквизитыЗаполнения.ТипЗаявки;
			Заявка.Важность = РеквизитыЗаполнения.Важность;
			Заявка.ФормаОплаты = РеквизитыЗаполнения.ФормаОплаты;
			Заявка.СуммаВключаетНДС	= Истина;
			Заявка.НеВключатьВПлатежныйКалендарь = Истина;
	 		Заявка.Важность = РеквизитыЗаполнения.Важность;
			
			Если Строка.PRETERM = 1 Тогда
				Заявка.Важность = Перечисления.бит_Важность.Высокая;
			КонецЕсли; 
			
			Заявка.СБ_ПрофильРазноски 					= Строка.POSTINGPROFILE;		
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-12-07 (#3842)  //Расскоментировал временно (Динамическое обновление от 27.01.2021)
			//Заявка.СБ_СгенерированАвтоматическиAXAPTA	= ?(Строка.MASTERCREATED = 0, Истина, Ложь);
			Если ЗагружатьЗНРДСПоНеБКВСтатусеУтверждено Тогда
				Заявка.СБ_СгенерированАвтоматическиAXAPTA	= ?(Строка.MASTERCREATED = 0, Истина, Ложь);
			КонецЕсли; 
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-12-07 (#3842)
			Заявка.ДополнительныеСвойства.Вставить("СчетРСБУ", 		РеквизитыЗаполнения.СчетРСБУ[Строка.POSTINGPROFILE]);
			Заявка.ДополнительныеСвойства.Вставить("ВидПеревода", 	Строка.ВидПеревода);

			Если ЗначениеЗаполнено(Строка.Контрагент) Тогда
				
				Заявка.Контрагент = Строка.Контрагент;
				
			ИначеЕсли Заявка.ВидОперации <> ВидОперации_ПереводНаДругойСчет
				Тогда
				
				Заявка.Контрагент = РеквизитыЗаполнения.КонтрагентНеопределено;
				ЭтоЧерновик = Истина;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.ДоговорКонтрагента) Тогда
				
				Заявка.ДоговорКонтрагента = Строка.ДоговорКонтрагента;
				
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-14 (#3629)  //заполняется перед записью документа
				//Если Строка.ДоговорКонтрагента.бит_НаправлениеДоговора = НаправлениеФакторинг 
				//	И ЗначениеЗаполнено(Строка.БанковскийСчет) Тогда
				//	
				//	Заявка.СБ_БанковскийСчетКонтрагента = Строка.БанковскийСчет; 		
				//ИначеЕсли ЗначениеЗаполнено(Строка.ОсновнойБанковскийСчет) Тогда
				//	Заявка.СБ_БанковскийСчетКонтрагента = Строка.ОсновнойБанковскийСчет;
				//ИначеЕсли ЗначениеЗаполнено(Строка.Контрагент) Тогда
				//	Заявка.СБ_БанковскийСчетКонтрагента = Строка.Контрагент.ОсновнойБанковскийСчет;
				//КонецЕсли;
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-14 (#3629)
				
			ИначеЕсли Заявка.ВидОперации <> ВидОперации_ПеречислениеНалога
				И Заявка.ВидОперации <> ВидОперации_ПеречислениеЗП
				И Заявка.ВидОперации <> ВидОперации_ПрочееСписаниеБезналДС
				И Заявка.ВидОперации <> ВидОперации_ПереводНаДругойСчет
				Тогда
				
				Заявка.ДоговорКонтрагента = РеквизитыЗаполнения.ДоговорНеопределено;
				ЭтоЧерновик = Истина;
				
			КонецЕсли;	
		
			Если ЗначениеЗаполнено(Строка.ЦФО) Тогда
				
				Заявка.ЦФО = Строка.ЦФО;		
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.СтатьяОборотов) Тогда
				
				Заявка.СтатьяОборотов = Строка.СтатьяОборотов;
				
			Иначе
				
				Заявка.СтатьяОборотов = РеквизитыЗаполнения.СтатьяОборотовНеопределено;
				ЭтоЧерновик = Истина;
				
			КонецЕсли;
			
			Если Строка.PREPAY = 1 Тогда
				Заявка.ТипПлатежа = РеквизитыЗаполнения.ТипПлатежаАванс;
			ИначеЕсли Строка.PREPAY = 0 Тогда
				Заявка.ТипПлатежа = РеквизитыЗаполнения.ТипПлатежаОплата;
			Иначе
				ЭтоЧерновик = Истина;
			КонецЕсли;	
				
			Заявка.ВалютаДокумента = РеквизитыЗаполнения.Валюта[Строка.CURRENCYCODE];
			СтруктураПоиска = Новый Структура("Валюта, Период", Заявка.ВалютаДокумента, Заявка.Дата); 
			СтрокиКурсКратность = РеквизитыЗаполнения.КурсВалюты.НайтиСтроки(СтруктураПоиска);
			Если СтрокиКурсКратность.Количество() = 0 Тогда
				
				Заявка.КурсДокумента = 1;
				Заявка.КратностьДокумента = 1;
			
			Иначе
				
				Заявка.КурсДокумента = СтрокиКурсКратность[0].Курс;
				Заявка.КратностьДокумента = СтрокиКурсКратность[0].Кратность;
				
			КонецЕсли; 
			
			Заявка.СтавкаНДС = РеквизитыЗаполнения.СтавкаНДС[Строка.TAXTYPE];
			Заявка.НДС = Строка.TAXAMOUNTCUR;
			Заявка.Сумма = Строка.AMOUNTCUR;
			Заявка.СуммаДокумента = Строка.AMOUNTCUR;
			//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-12-21 (#3415)
			Заявка.ок_СпособСоздания = 6;
	        //ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-12-21 (#3415)
	        Заявка.НазначениеПлатежа = Строка.REQUESTPURPOSE;
			Заявка.НазначениеПлатежаУпр = Строка.REQUESTPURPOSE;
			Заявка.Комментарий = "№" + Строка.ORDERID + ". Загружен из AXAPTA, " + ТекущаяДатаСеанса();
			
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-28 (#3842)
			Заявка.СуммаРегл = бит_КурсыВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Заявка.Сумма
																			 , Заявка.ВалютаДокумента
																			 , ВалютаРегламентированногоУчета
																			 , Заявка.КурсДокумента
																			 , 1
																			 , Заявка.КратностьДокумента
																			 , 1);
			Заявка.НДСРегл = бит_КурсыВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Заявка.НДС
																			 , Заявка.ВалютаДокумента
																			 , ВалютаРегламентированногоУчета
																			 , Заявка.КурсДокумента
																			 , 1
																			 , Заявка.КратностьДокумента
																			 , 1);
																			 
			Если ЗначениеЗаполнено(Заявка.Организация)
				И ЗначениеЗаполнено(Заявка.Контрагент) 
				И Заявка.Контрагент <> РеквизитыЗаполнения.КонтрагентНеопределено Тогда
				
				ОстатокПоКонтрагенту = ОстаткиПоКонтрагентам.Получить(Заявка.Контрагент);
				Если ОстатокПоКонтрагенту = Неопределено
					ИЛИ ОстатокПоКонтрагенту < Заявка.СуммаРегл Тогда
					Заявка.ок_НаличиеДЗ = Истина;
				КонецЕсли; 
				
				Если ОстатокПоКонтрагенту <> Неопределено Тогда
					ОстаткиПоКонтрагентам.Вставить(Заявка.Контрагент, ОстатокПоКонтрагенту - Заявка.СуммаРегл);
				КонецЕсли; 
				
			КонецЕсли;
			//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-28 (#3842)
			
			ЗаписатьДокумент(Заявка, ЭтоЧерновик, Строка.RECID, СтруктураВозврата, РеквизитыЗаполнения.ВизаУтверждения, КлючеваяОперация);	
			
			//СБ_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(КлючеваяОперация, ВремяНачала);	
			
		КонецЦикла;	
	
		//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-11-30 (#3415)
	КонецЕсли;	
	Если ТаблицаДанныхБК.Количество() <> 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =            "ВЫБРАТЬ
		|	ВТ_ТаблицаДанныхБК.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств,
		|	ВТ_ТаблицаДанныхБК.PREPAY КАК ТипПлатежа,
		|	ВТ_ТаблицаДанныхБК.PRETERM КАК Важность,
		|	ВТ_ТаблицаДанныхБК.POSTINGPROFILE КАК POSTINGPROFILE,
		|	ВТ_ТаблицаДанныхБК.REQUESTPURPOSE КАК REQUESTPURPOSE,
		|	ВТ_ТаблицаДанныхБК.VOUCHER КАК Ваучер,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-11-26 (#ПроектИнтеграцияАксапта12)
		|	ВТ_ТаблицаДанныхБК.VOUCHER2012 КАК Ваучер2012,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-11-26 (#ПроектИнтеграцияАксапта12)
		|	ВТ_ТаблицаДанныхБК.DOCUMENTNUM КАК DOCUMENTNUM,
		|	ВТ_ТаблицаДанныхБК.Контрагент КАК Контрагент,
		|	ВТ_ТаблицаДанныхБК.CURRENCYCODE КАК КодВалюты,
		|	ВТ_ТаблицаДанныхБК.ORDERDATE КАК ДатаРасхода,
		|	ВТ_ТаблицаДанныхБК.DIMENSION4_Trans КАК DIMENSION4_Trans,
		|	ВТ_ТаблицаДанныхБК.DIMENSION2_Trans КАК DIMENSION2_Trans,
		|	ВТ_ТаблицаДанныхБК.DIMENSION3_Trans КАК DIMENSION3_Trans,
		|	ВТ_ТаблицаДанныхБК.ДоговорКонтрагента КАК Договор,
		|	ВТ_ТаблицаДанныхБК.DIMENSION_Trans КАК DIMENSION_Trans,
		|	ВТ_ТаблицаДанныхБК.AMOUNTCUR КАК СуммаДокумента,
		|	ВТ_ТаблицаДанныхБК.AMOUNTCUR_Trans КАК СуммаСтроки,
		|	ВТ_ТаблицаДанныхБК.TAXTYPE КАК СтавкаНДС,
		|	ВТ_ТаблицаДанныхБК.TAXAMOUNTCUR КАК СуммаНДСДокумента,
		|	ВТ_ТаблицаДанныхБК.TAXAMOUNTCUR_Trans КАК СуммаНДССтроки,
		|	ВТ_ТаблицаДанныхБК.REQUESTPURPOSE КАК НазначениеПлатежа,
		|	ВТ_ТаблицаДанныхБК.RECID КАК RECID,
		|	ВТ_ТаблицаДанныхБК.POSTINGPROFILE КАК ПрофильРазноски,
		|	ВТ_ТаблицаДанныхБК.OrderID КАК OrderID
		|ПОМЕСТИТЬ ВТ_ТаблицаДанныхБК
		|ИЗ
		|	&ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВТ_ТаблицаДанныхБК.DIMENSION2_Trans КАК DIMENSION2_Trans,
		|	бит_СтатьиОборотов_СтатьиРегл.СтатьяОборотов КАК СтатьяБДДС
		|ПОМЕСТИТЬ ВТ_СтатьяБДДС
		|ИЗ
		|	ВТ_ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК бит_ок_СопоставлениеАналитики
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СтатьиОборотов_СтатьиРегл КАК бит_СтатьиОборотов_СтатьиРегл
		|			ПО бит_ок_СопоставлениеАналитики.Аналитика1С = бит_СтатьиОборотов_СтатьиРегл.СтатьяРегл
		|		ПО ВТ_ТаблицаДанныхБК.DIMENSION2_Trans = бит_ок_СопоставлениеАналитики.КодАналитикиАксапты
		|			И (бит_ок_СопоставлениеАналитики.Тип1С В
		|				(ВЫБРАТЬ
		|					Константы.СБ_ЗагрузкаПД_AXAPTA_ТипОбъектаСтатьяДДС
		|				ИЗ
		|					Константы КАК Константы))
		|ГДЕ
		|	бит_ок_СопоставлениеАналитики.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ТаблицаДанныхБК.DIMENSION3_Trans КАК СтатьяБДР,
		|	МАКСИМУМ(бит_ок_СопоставлениеАналитики.Аналитика1С) КАК Аналитика1С
		|ПОМЕСТИТЬ ВТ_СтатьяБДРСопоставление
		|ИЗ
		|	ВТ_ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК бит_ок_СопоставлениеАналитики
		|		ПО ВТ_ТаблицаДанныхБК.DIMENSION3_Trans = бит_ок_СопоставлениеАналитики.КодАналитикиАксапты
		|ГДЕ
		|	(бит_ок_СопоставлениеАналитики.Тип1С.ИмяОбъектаПолное = ""Справочник.СтатьиЗатрат""
		|			ИЛИ бит_ок_СопоставлениеАналитики.Тип1С.ИмяОбъектаПолное = ""Справочник.ПрочиеДоходыИРасходы"")
		|	И бит_ок_СопоставлениеАналитики.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаДанныхБК.DIMENSION3_Trans
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_СтатьяБДРСопоставление.СтатьяБДР КАК СтатьяБДР,
		|	МАКСИМУМ(бит_СтатьиОборотов_СтатьиРегл.СтатьяОборотов) КАК СтатьяОборотов
		|ПОМЕСТИТЬ ВТСтатьяБДРИтог
		|ИЗ
		|	ВТ_СтатьяБДРСопоставление КАК ВТ_СтатьяБДРСопоставление
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СтатьиОборотов_СтатьиРегл КАК бит_СтатьиОборотов_СтатьиРегл
		|		ПО ВТ_СтатьяБДРСопоставление.Аналитика1С = бит_СтатьиОборотов_СтатьиРегл.СтатьяРегл
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_СтатьяБДРСопоставление.СтатьяБДР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-21 (#4128)
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-11-26 (#ПроектИнтеграцияАксапта12)
		////|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		////|	ВТ_ТаблицаДанныхБК.Ваучер КАК Ваучер,
		////|	МАКСИМУМ(бит_ок_ОперацияАксапты.Ссылка) КАК ОперацияАксапты,
		////|	ОперацияБух.Ссылка КАК ОперацияБух
		////|ПОМЕСТИТЬ ВТ_ОперацияАксапты
		////|ИЗ
		////|	ВТ_ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		////|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты КАК бит_ок_ОперацияАксапты
		////|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК ОперацияБух
		////|			ПО бит_ок_ОперацияАксапты.Ссылка = ОперацияБух.СторнируемыйДокумент
		//////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-08 (#3722)
		////|				И НЕ ОперацияБух.ПометкаУдаления
		//////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-08 (#3722)
		////|		ПО ВТ_ТаблицаДанныхБК.Ваучер = бит_ок_ОперацияАксапты.Ваучер
		//////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-04-08 (#3722)
		////|				И НЕ бит_ок_ОперацияАксапты.ПометкаУдаления
		////|				И бит_ок_ОперацияАксапты.Проведен
		//////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-04-08 (#3722)
		////|
		////|СГРУППИРОВАТЬ ПО
		////|	ВТ_ТаблицаДанныхБК.Ваучер,
		////|	ОперацияБух.Ссылка
		////|;
		////|
		//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//|	ОперацииАксапты.Ваучер КАК Ваучер,
		//|	МАКСИМУМ(ОперацииАксапты.ОперацияАксапты) КАК ОперацияАксапты,
		//|	ОперацииАксапты.ОперацияБух КАК ОперацияБух
		//|ПОМЕСТИТЬ ВТ_ОперацияАксапты
		//|ИЗ
		//|	(ВЫБРАТЬ
		//|		ВТ_ТаблицаДанныхБК.Ваучер2012 КАК Ваучер,
		//|		бит_ок_ОперацияАксапты12.Ссылка КАК ОперацияАксапты,
		//|		ОперацияБух.Ссылка КАК ОперацияБух
		//|	ИЗ
		//|		ВТ_ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		//|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты12 КАК бит_ок_ОперацияАксапты12
		//|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК ОперацияБух
		//|				ПО бит_ок_ОперацияАксапты12.Ссылка = ОперацияБух.СторнируемыйДокумент
		//|					И (НЕ ОперацияБух.ПометкаУдаления)
		//|			ПО ВТ_ТаблицаДанныхБК.Ваучер2012 = бит_ок_ОперацияАксапты12.Ваучер
		//|				И (НЕ бит_ок_ОперацияАксапты12.ПометкаУдаления)
		//|				И (бит_ок_ОперацияАксапты12.Проведен)
		//|	ГДЕ
		//|		ВТ_ТаблицаДанныхБК.Ваучер2012 <> """"
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-01 (#4119)
		////|		ВТ_ТаблицаДанныхБК.Ваучер2012 = """"
		//|		И НЕ бит_ок_ОперацияАксапты12.Ссылка ЕСТЬ NULL
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-01 (#4119)
		//|	
		//|	ОБЪЕДИНИТЬ ВСЕ
		//|	
		//|	ВЫБРАТЬ
		//|		ВТ_ТаблицаДанныхБК.Ваучер,
		//|		бит_ок_ОперацияАксапты.Ссылка,
		//|		ОперацияБух.Ссылка
		//|	ИЗ
		//|		ВТ_ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		//|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты КАК бит_ок_ОперацияАксапты
		//|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК ОперацияБух
		//|				ПО бит_ок_ОперацияАксапты.Ссылка = ОперацияБух.СторнируемыйДокумент
		//|					И (НЕ ОперацияБух.ПометкаУдаления)
		//|			ПО ВТ_ТаблицаДанныхБК.Ваучер = бит_ок_ОперацияАксапты.Ваучер
		//|				И (НЕ бит_ок_ОперацияАксапты.ПометкаУдаления)
		//|				И (бит_ок_ОперацияАксапты.Проведен)
		//|	ГДЕ
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-01 (#4119)
		////|		ВТ_ТаблицаДанныхБК.Ваучер2012 = """"
		//|		НЕ бит_ок_ОперацияАксапты.Ссылка ЕСТЬ NULL
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-01 (#4119)
		//|		И ВТ_ТаблицаДанныхБК.Ваучер <> """") КАК ОперацииАксапты
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	ОперацииАксапты.Ваучер,
		//|	ОперацииАксапты.ОперацияБух
		//|;
		//|
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-11-26 (#ПроектИнтеграцияАксапта12)
		//|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОперацииАксапты.Ваучер КАК Ваучер,
		|	МАКСИМУМ(ОперацииАксапты.ОперацияАксапты) КАК ОперацияАксапты,
		|	ОперацииАксапты.ОперацияБух КАК ОперацияБух
		|ПОМЕСТИТЬ ВТ_ОперацияАксапты
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЕСТЬNULL(бит_ок_ОперацияАксапты12.Ваучер, бит_ок_ОперацияАксапты.Ваучер) КАК Ваучер,
		|		ЕСТЬNULL(бит_ок_ОперацияАксапты12.Ссылка, бит_ок_ОперацияАксапты.Ссылка) КАК ОперацияАксапты,
		|		ЕСТЬNULL(ОперацияБух_Аксапты12.Ссылка, ОперацияБух.Ссылка) КАК ОперацияБух
		|	ИЗ
		|		ВТ_ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты12 КАК бит_ок_ОперацияАксапты12
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК ОперацияБух_Аксапты12
		|				ПО бит_ок_ОперацияАксапты12.Ссылка = ОперацияБух_Аксапты12.СторнируемыйДокумент
		|					И (НЕ ОперацияБух_Аксапты12.ПометкаУдаления)
		|			ПО (ВТ_ТаблицаДанныхБК.Ваучер2012 <> """")
		|				И ВТ_ТаблицаДанныхБК.Ваучер2012 = бит_ок_ОперацияАксапты12.Ваучер
		|				И (НЕ бит_ок_ОперацияАксапты12.ПометкаУдаления)
		|				И (бит_ок_ОперацияАксапты12.Проведен)
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ок_ОперацияАксапты КАК бит_ок_ОперацияАксапты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияБух КАК ОперацияБух
		|				ПО бит_ок_ОперацияАксапты.Ссылка = ОперацияБух.СторнируемыйДокумент
		|					И (НЕ ОперацияБух.ПометкаУдаления)
		|			ПО (бит_ок_ОперацияАксапты12.Ваучер ЕСТЬ NULL)
		|				И (ВТ_ТаблицаДанныхБК.Ваучер <> """")
		|				И ВТ_ТаблицаДанныхБК.Ваучер = бит_ок_ОперацияАксапты.Ваучер
		|				И (НЕ бит_ок_ОперацияАксапты.ПометкаУдаления)
		|				И (бит_ок_ОперацияАксапты.Проведен)
		|	ГДЕ
		|		НЕ ЕСТЬNULL(бит_ок_ОперацияАксапты12.Ваучер, бит_ок_ОперацияАксапты.Ваучер) ЕСТЬ NULL) КАК ОперацииАксапты
		|
		|СГРУППИРОВАТЬ ПО
		|	ОперацииАксапты.Ваучер,
		|	ОперацииАксапты.ОперацияБух
		|;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-21 (#4128)
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-02 (#3891)
		//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//|	ВТ_ОперацияАксапты.Ваучер КАК Ваучер,
		//|	ВТ_ОперацияАксапты.ОперацияАксапты КАК ОперацияАксапты,
		//|	МАКСИМУМ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1) КАК Аналитика_1,
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-09-10 (#3841)
		////|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект КАК Проект
		//|	ЕСТЬNULL(бит_КонтрольныеЗначенияБюджетовОбороты_Проект.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)) КАК Проект
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-09-10 (#3841)
		//|ПОМЕСТИТЬ ВТ_ОперацияАксаптыИтог
		//|ИЗ
		//|	ВТ_ОперацияАксапты КАК ВТ_ОперацияАксапты
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(, , Регистратор, ) КАК бит_КонтрольныеЗначенияБюджетовОбороты
		//|		ПО (ВТ_ОперацияАксапты.ОперацияАксапты = бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор
		//|				ИЛИ ВТ_ОперацияАксапты.ОперацияБух = бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор)
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-09-10 (#3841)
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(, , Регистратор, ) КАК бит_КонтрольныеЗначенияБюджетовОбороты_Проект
		//|		ПО ВТ_ОперацияАксапты.ОперацияАксапты = бит_КонтрольныеЗначенияБюджетовОбороты_Проект.Регистратор
		//|			И (бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 = бит_КонтрольныеЗначенияБюджетовОбороты_Проект.Аналитика_1)
		//|			И (бит_КонтрольныеЗначенияБюджетовОбороты_Проект.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка))
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-09-10 (#3841)
		//|СГРУППИРОВАТЬ ПО
		//|	ВТ_ОперацияАксапты.Ваучер,
		//|	ВТ_ОперацияАксапты.ОперацияАксапты
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-09-10 (#3841)
		////|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект
		//|	ЕСТЬNULL(бит_КонтрольныеЗначенияБюджетовОбороты_Проект.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка))
		////ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-09-10 (#3841)
		//|;
		////|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		////|	ВТ_ОперацияАксапты.Ваучер КАК Ваучер,
		////|	ВТ_ОперацияАксапты.ОперацияАксапты КАК ОперацияАксапты,
		////|	МАКСИМУМ(ЕСТЬNULL(ДополнительныеДанныеПоОперациямАксапты.НомерЗаявки, ЗНАЧЕНИЕ(Документ.бит_ФормаВводаБюджета.ПустаяСсылка))) КАК Аналитика_1,
		////|	МАКСИМУМ(ЕСТЬNULL(ФормаВводаБюджета_БДДС.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка))) КАК Проект
		////|ПОМЕСТИТЬ ВТ_ОперацияАксаптыИтог
		////|ИЗ
		////|	ВТ_ОперацияАксапты КАК ВТ_ОперацияАксапты
		////|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ДополнительныеДанныеПоОперациямАксапты КАК ДополнительныеДанныеПоОперациямАксапты
		////|		ПО (ВТ_ОперацияАксапты.ОперацияАксапты = ДополнительныеДанныеПоОперациямАксапты.Документ)
		////|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ФормаВводаБюджета.БДДС КАК ФормаВводаБюджета_БДДС
		////|		ПО (ДополнительныеДанныеПоОперациямАксапты.НомерЗаявки = ФормаВводаБюджета_БДДС.Ссылка) И ФормаВводаБюджета_БДДС.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
		////|
		////|СГРУППИРОВАТЬ ПО
		////|	ВТ_ОперацияАксапты.Ваучер,
		////|	ВТ_ОперацияАксапты.ОперацияАксапты
		////|;
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-20 (#4390)
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ОперацияАксапты.Ваучер КАК Ваучер,
		|	ВТ_ОперацияАксапты.ОперацияАксапты КАК ОперацияАксапты,
		|	МАКСИМУМ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1) КАК ФВБ,
		|	МАКСИМУМ(ЕСТЬNULL(бит_КонтрольныеЗначенияБюджетовОбороты.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка))) КАК Проект
		|ПОМЕСТИТЬ ВТ_ОперацияАксаптыСФВБ
		|ИЗ
		|	ВТ_ОперацияАксапты КАК ВТ_ОперацияАксапты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК бит_КонтрольныеЗначенияБюджетовОбороты
		|		ПО (ВТ_ОперацияАксапты.ОперацияАксапты = бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор
		|				ИЛИ ВТ_ОперацияАксапты.ОперацияБух = бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор)
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОперацияАксапты.Ваучер,
		|	ВТ_ОперацияАксапты.ОперацияАксапты
		|;
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-20 (#4390)
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОперацияАксаптыСФВБ.ФВБ КАК ФВБ,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА бит_ФормаВводаБюджетаБДДС.СтатьяОборотов.ВидСтатьи = ЗНАЧЕНИЕ(Справочник.бит_ВидыСтатейОборотов.Выручка)
		|				ТОГДА бит_ФормаВводаБюджетаБДДС.НомерСтроки
		|			ИНАЧЕ 100000
		|		КОНЕЦ) КАК НомерСтрокиОпер,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА бит_ФормаВводаБюджетаБДДС.СтатьяОборотов.ВидСтатьи = ЗНАЧЕНИЕ(Справочник.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность)
		|				ТОГДА бит_ФормаВводаБюджетаБДДС.НомерСтроки
		|			ИНАЧЕ 100000
		|		КОНЕЦ) КАК НомерСтрокиИнвест
		|ПОМЕСТИТЬ ВТ_ФВБ_ПроектыПоСтатьям
		|ИЗ
		|	ВТ_ОперацияАксаптыСФВБ КАК ВТ_ОперацияАксаптыСФВБ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
		|		ПО ВТ_ОперацияАксаптыСФВБ.ФВБ = бит_ФормаВводаБюджетаБДДС.Ссылка
		|			И (бит_ФормаВводаБюджетаБДДС.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка))
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОперацияАксаптыСФВБ.ФВБ
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ОперацияАксапты.Ваучер КАК Ваучер,
		|	ВТ_ОперацияАксапты.ОперацияАксапты КАК ОперацияАксапты,
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-20 (#4390)
		//|	МАКСИМУМ(бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1) КАК Аналитика_1,
		//|	ВЫБОР
		//|		КОГДА МАКСИМУМ(ЕСТЬNULL(бит_КонтрольныеЗначенияБюджетовОбороты.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка))) = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
		//|			ТОГДА МАКСИМУМ(ЕСТЬNULL(бит_ФормаВводаБюджетаБДДС.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)))
		//|		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(бит_КонтрольныеЗначенияБюджетовОбороты.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)))
		//|	КОНЕЦ КАК Проект
		|	МАКСИМУМ(ВТ_ОперацияАксапты.ФВБ) КАК Аналитика_1,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(ВТ_ОперацияАксапты.Проект) = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
		|			ТОГДА МАКСИМУМ(ЕСТЬNULL(бит_ФормаВводаБюджетаБДДС.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)))
		|		ИНАЧЕ МАКСИМУМ(ВТ_ОперацияАксапты.Проект)
		|	КОНЕЦ КАК Проект,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА бит_ФормаВводаБюджетаБДДС.НомерСтроки = ВТ_ФВБ_ПроектыПоСтатьям.НомерСтрокиОпер
		|				ТОГДА бит_ФормаВводаБюджетаБДДС.Проект
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
		|		КОНЕЦ) КАК ПроектФВБ_Опер,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА бит_ФормаВводаБюджетаБДДС.НомерСтроки = ВТ_ФВБ_ПроектыПоСтатьям.НомерСтрокиИнвест
		|				ТОГДА бит_ФормаВводаБюджетаБДДС.Проект
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
		|		КОНЕЦ) КАК ПроектФВБ_Инвест
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-20 (#4390)
		|ПОМЕСТИТЬ ВТ_ОперацияАксаптыИтог
		|ИЗ
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-20 (#4390)
		//|	ВТ_ОперацияАксапты КАК ВТ_ОперацияАксапты
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_КонтрольныеЗначенияБюджетов КАК бит_КонтрольныеЗначенияБюджетовОбороты
		//|		ПО (ВТ_ОперацияАксапты.ОперацияАксапты = бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор
		//|				ИЛИ ВТ_ОперацияАксапты.ОперацияБух = бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор)
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
		//|		ПО бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 = бит_ФормаВводаБюджетаБДДС.Ссылка
		//|			И бит_ФормаВводаБюджетаБДДС.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
		|	ВТ_ОперацияАксаптыСФВБ КАК ВТ_ОперацияАксапты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.бит_ФормаВводаБюджета.БДДС КАК бит_ФормаВводаБюджетаБДДС
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФВБ_ПроектыПоСтатьям КАК ВТ_ФВБ_ПроектыПоСтатьям
		|			ПО бит_ФормаВводаБюджетаБДДС.Ссылка = ВТ_ФВБ_ПроектыПоСтатьям.ФВБ
		|		ПО ВТ_ОперацияАксапты.ФВБ = бит_ФормаВводаБюджетаБДДС.Ссылка
		|			И бит_ФормаВводаБюджетаБДДС.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-20 (#4390)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОперацияАксапты.Ваучер,
		|	ВТ_ОперацияАксапты.ОперацияАксапты
		|;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-02 (#3891)
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ТаблицаДанныхБК.DIMENSION4_Trans КАК DIMENSION4_Trans,
		|	МАКСИМУМ(бит_ок_СопоставлениеАналитики.Аналитика1С) КАК ЦФО
		|ПОМЕСТИТЬ ВТ_ЦФО
		|ИЗ
		|	ВТ_ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК бит_ок_СопоставлениеАналитики
		|		ПО ВТ_ТаблицаДанныхБК.DIMENSION4_Trans = бит_ок_СопоставлениеАналитики.КодАналитикиАксапты
		|ГДЕ
		|	бит_ок_СопоставлениеАналитики.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаДанныхБК.DIMENSION4_Trans
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ТаблицаДанныхБК.DIMENSION_Trans КАК DIMENSION_Trans,
		|	МАКСИМУМ(бит_ок_СопоставлениеАналитики.Аналитика1С) КАК Объект
		|ПОМЕСТИТЬ ВТ_Объект
		|ИЗ
		|	ВТ_ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ок_СопоставлениеАналитики КАК бит_ок_СопоставлениеАналитики
		|		ПО ВТ_ТаблицаДанныхБК.DIMENSION_Trans = бит_ок_СопоставлениеАналитики.КодАналитикиАксапты
		|ГДЕ
		|	бит_ок_СопоставлениеАналитики.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаДанныхБК.DIMENSION_Trans
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДанныхБК.ТипПлатежа КАК ТипПлатежа,
		|	ВТ_ТаблицаДанныхБК.Важность КАК Важность,
		|	ВТ_ТаблицаДанныхБК.POSTINGPROFILE КАК POSTINGPROFILE,
		|	ВТ_ТаблицаДанныхБК.REQUESTPURPOSE КАК REQUESTPURPOSE,
		|	ВТ_ТаблицаДанныхБК.Ваучер КАК Ваучер,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-11-26 (#ПроектИнтеграцияАксапта12)
		|	ВТ_ТаблицаДанныхБК.Ваучер2012 КАК Ваучер2012,
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-11-26 (#ПроектИнтеграцияАксапта12)
		|	ВТ_ТаблицаДанныхБК.DOCUMENTNUM КАК DOCUMENTNUM,
		|	ВТ_ТаблицаДанныхБК.Контрагент КАК Контрагент,
		|	ВТ_ТаблицаДанныхБК.КодВалюты КАК КодВалюты,
		|	ВТ_ТаблицаДанныхБК.ДатаРасхода КАК ДатаРасхода,
		|	ВТ_ТаблицаДанныхБК.DIMENSION2_Trans КАК DIMENSION2_Trans,
		|	ВТ_ТаблицаДанныхБК.DIMENSION3_Trans КАК DIMENSION3_Trans,
		|	ВТ_ТаблицаДанныхБК.Договор КАК Договор,
		|	ВТ_ТаблицаДанныхБК.СуммаДокумента КАК СуммаДокумента,
		|	ВТ_ТаблицаДанныхБК.СуммаСтроки КАК СуммаСтроки,
		|	ВТ_ТаблицаДанныхБК.СтавкаНДС КАК СтавкаНДС,
		|	ВТ_ТаблицаДанныхБК.СуммаНДСДокумента КАК СуммаНДСДокумента,
		|	ВТ_ТаблицаДанныхБК.СуммаНДССтроки КАК СуммаНДССтроки,
		|	ВТ_ТаблицаДанныхБК.НазначениеПлатежа КАК НазначениеПлатежа,
		|	ВТ_ТаблицаДанныхБК.RECID КАК RECID,
		|	ВТ_ТаблицаДанныхБК.ПрофильРазноски КАК ПрофильРазноски,
		|	ВТ_ТаблицаДанныхБК.OrderID КАК OrderID,
		|	ВТ_ТаблицаДанныхБК.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств,
		|	ВТ_СтатьяБДДС.СтатьяБДДС КАК СтатьяБДДС,
		|	ВТСтатьяБДРИтог.СтатьяОборотов КАК СтатьяБДР,
		|	ВТ_ОперацияАксаптыИтог.ОперацияАксапты КАК ОперацияАксапты,
		|	ВТ_ТаблицаДанныхБК.DIMENSION4_Trans КАК DIMENSION4_Trans,
		|	ВТ_ЦФО.ЦФО КАК ЦФО,
		|	ВТ_ТаблицаДанныхБК.DIMENSION_Trans КАК DIMENSION_Trans,
		|	ВТ_Объект.Объект КАК Объект,
		|	ВТ_ОперацияАксаптыИтог.Аналитика_1 КАК НомерЗаявки,
		|	ВТ_ОперацияАксаптыИтог.Проект КАК Проект
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-20 (#4390)
		|	, ВТ_ОперацияАксаптыИтог.ПроектФВБ_Опер КАК ПроектФВБ_Опер
		|	, ВТ_ОперацияАксаптыИтог.ПроектФВБ_Инвест КАК ПроектФВБ_Инвест
		|	, ВТСтатьяБДРИтог.СтатьяОборотов.ВидСтатьи КАК ВидСтатьиБДР
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-20 (#4390)
		|ИЗ
		|	ВТ_ТаблицаДанныхБК КАК ВТ_ТаблицаДанныхБК
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтатьяБДДС КАК ВТ_СтатьяБДДС
		|		ПО ВТ_ТаблицаДанныхБК.DIMENSION2_Trans = ВТ_СтатьяБДДС.DIMENSION2_Trans
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатьяБДРИтог КАК ВТСтатьяБДРИтог
		|		ПО ВТ_ТаблицаДанныхБК.DIMENSION3_Trans = ВТСтатьяБДРИтог.СтатьяБДР
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОперацияАксаптыИтог КАК ВТ_ОперацияАксаптыИтог
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-11-26 (#ПроектИнтеграцияАксапта12)
		//|		ПО ВТ_ТаблицаДанныхБК.Ваучер = ВТ_ОперацияАксаптыИтог.Ваучер
		|		ПО (ВТ_ТаблицаДанныхБК.Ваучер2012 <> """"
		|					И ВТ_ТаблицаДанныхБК.Ваучер2012 = ВТ_ОперацияАксаптыИтог.Ваучер
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-01 (#4119)
		//|				ИЛИ ВТ_ТаблицаДанныхБК.Ваучер2012 = """"
		//|					И ВТ_ТаблицаДанныхБК.Ваучер = ВТ_ОперацияАксаптыИтог.Ваучер)
		|				ИЛИ ВТ_ТаблицаДанныхБК.Ваучер <> """"
		|					И ВТ_ТаблицаДанныхБК.Ваучер = ВТ_ОперацияАксаптыИтог.Ваучер
		|					И ВТ_ТаблицаДанныхБК.Ваучер2012 <> ВТ_ОперацияАксаптыИтог.Ваучер)
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-01 (#4119)
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-11-26 (#ПроектИнтеграцияАксапта12)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦФО КАК ВТ_ЦФО
		|		ПО ВТ_ТаблицаДанныхБК.DIMENSION4_Trans = ВТ_ЦФО.DIMENSION4_Trans
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Объект КАК ВТ_Объект
		|		ПО ВТ_ТаблицаДанныхБК.DIMENSION_Trans = ВТ_Объект.DIMENSION_Trans
		|ИТОГИ ПО
		|	RECID,
		|	ЗаявкаНаРасходованиеСредств";
		Запрос.УстановитьПараметр("ТаблицаДанныхБК", ТаблицаДанныхБК);
		Запрос.УстановитьПараметр("Организация", РеквизитыЗаполнения.Организация);
		ВыборкаПоRECID = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоRECID.Следующий() Цикл
			ВыборкаПоЗаявкам = ВыборкаПоRECID.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоЗаявкам.Следующий() Цикл	
				
				Если ЗначениеЗаполнено(ВыборкаПоЗаявкам.ЗаявкаНаРасходованиеСредств) Тогда
					Заявка = ВыборкаПоЗаявкам.ЗаявкаНаРасходованиеСредств.ПолучитьОбъект();
					Заявка.Распределение.Очистить();
				Иначе
					Заявка = Документы.бит_ЗаявкаНаРасходованиеСредств.СоздатьДокумент();
				КонецЕсли;
				
				ЗаполнятьШапку 			= Истина;
				Ошибка 					= Ложь;
				ЭтоАванс 				= Ложь;
				АналитикаНеСопоставлена = Ложь;
				СтавкаНДСнеСопоставлена = Ложь;
				СледующийДокумент 		= Ложь;
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-21 (#4128)
				Заявка.ДополнительныеСвойства.Вставить("ок_ЗагрузкаПД_СинхронизироватьПлатежныеПозиции", Истина);
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-21 (#4128)
				
				Выборка = ВыборкаПоЗаявкам.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					Если ЗаполнятьШапку Тогда	
						Если ЗначениеЗаполнено(РеквизитыЗаполнения.ВидОперации[Выборка.POSTINGPROFILE]) Тогда
							Заявка.ВидОперации = РеквизитыЗаполнения.ВидОперации[Выборка.POSTINGPROFILE];
						КонецЕсли; 
						Если Выборка.ТипПлатежа = 1 Тогда
							Заявка.ТипПлатежа = РеквизитыЗаполнения.ТипПлатежаАванс;
							Ошибка = Истина;
							ЭтоАванс = Истина;
						ИначеЕсли Выборка.ТипПлатежа = 0 Тогда
							Заявка.ТипПлатежа = РеквизитыЗаполнения.ТипПлатежаОплата;
						КонецЕсли;
						
						Если ЗначениеЗаполнено (Выборка.DOCUMENTNUM) Тогда
							ЭтоОС = Истина;
						Иначе
							ЭтоОС = Ложь;
						КонецЕсли;
						
						Заявка.СБ_ИдентификаторЗаписиAXAPTA 	= Выборка.RECID;
						Заявка.СБ_ПрофильРазноски 				= Выборка.POSTINGPROFILE;
						Заявка.НазначениеПлатежа 				= Выборка.REQUESTPURPOSE;
						Заявка.НазначениеПлатежаУпр 			= Выборка.REQUESTPURPOSE;
						Заявка.Исполнитель						= бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
						Заявка.Ответственный 					= Заявка.Исполнитель;
						Заявка.Аналитика_1 						= Выборка.НомерЗаявки;
						Заявка.СБ_Инициатор 					= ?(ЗначениеЗаполнено(Заявка.Аналитика_1), Заявка.Аналитика_1.бит_БК_Инициатор, Справочники.бит_БК_Инициаторы.ПустаяСсылка());
						Заявка.Дата 							= Выборка.ДатаРасхода;
						Заявка.ДатаРасхода 						= Выборка.ДатаРасхода;
						Заявка.Организация 						= РеквизитыЗаполнения.Организация;
						Заявка.Сумма 							= Выборка.СуммаДокумента;
						Заявка.НДС 								= Выборка.СуммаНДСДокумента;
						Заявка.СуммаБезНДС 						= Заявка.Сумма - Заявка.НДС;
						Заявка.ТипЗаявки 						= РеквизитыЗаполнения.ТипЗаявки;
						Заявка.ФормаОплаты 						= РеквизитыЗаполнения.ФормаОплаты;
						Заявка.СуммаВключаетНДС					= Истина;
						Заявка.НеВключатьВПлатежныйКалендарь 	= Истина;
						Заявка.ок_СпособСоздания 				= 7;
						Заявка.Комментарий 						= Заявка.Комментарий + " №" +Выборка.OrderID +" Загружен из Axapta, "+ ТекущаяДата();
						
						Если ЗначениеЗаполнено(Выборка.Контрагент) Тогда
							Заявка.Контрагент = Выборка.Контрагент;
						Иначе
							Заявка.Контрагент = РеквизитыЗаполнения.КонтрагентНеопределено;
							Ошибка = Истина;
							АналитикаНеСопоставлена = Истина;
						КонецЕсли;
						
						Если ЗначениеЗаполнено(Выборка.Договор) Тогда
							Заявка.ДоговорКонтрагента = Выборка.Договор;
						Иначе
							Заявка.ДоговорКонтрагента = РеквизитыЗаполнения.ДоговорНеопределено;
							Ошибка = Истина;
							АналитикаНеСопоставлена = Истина;
						КонецЕсли;
						
						Заявка.Ок_ПересчетКурса = ?(ЗначениеЗаполнено(Заявка.ДоговорКонтрагента), Заявка.ДоговорКонтрагента.Ок_ПересчетКурса, Ложь);
						
						Если ЗначениеЗаполнено(РеквизитыЗаполнения.Валюта[Выборка.КодВалюты]) Тогда 
							Заявка.ВалютаДокумента = РеквизитыЗаполнения.Валюта[Выборка.КодВалюты];
						Иначе 
							Ошибка = Истина;
							Заявка.Комментарий = Заявка.Комментарий + " Тип ошибки: Не сопоставлена валюта ";
						КонецЕсли;
						
						СтруктураПоиска = Новый Структура(); 
						СтруктураПоиска.Вставить("Валюта", Заявка.ВалютаДокумента);
						СтруктураПоиска.Вставить("Период", Заявка.Дата);
						СтрокиКурсКратность = РеквизитыЗаполнения.КурсВалюты.НайтиСтроки(СтруктураПоиска);
						
						Если СтрокиКурсКратность.Количество() = 0 Тогда	
							Заявка.КурсДокумента = 1;
							Заявка.КратностьДокумента = 1;
						Иначе
							Заявка.КурсДокумента 		= СтрокиКурсКратность[0].Курс;
							Заявка.КратностьДокумента 	= СтрокиКурсКратность[0].Кратность;
						КонецЕсли; 
						
						Если ЗначениеЗаполнено(РеквизитыЗаполнения.СтавкаНДС[Выборка.СтавкаНДС]) Тогда
							Заявка.СтавкаНДС = РеквизитыЗаполнения.СтавкаНДС[Выборка.СтавкаНДС];
						Иначе 
							Ошибка = Истина;
							СтавкаНДСнеСопоставлена = Истина;
						КонецЕсли;
						
						Если ЗначениеЗаполнено(Выборка.ЦФО) Тогда
							Заявка.ЦФО 	= Выборка.ЦФО; 
						Иначе
							Заявка.ЦФО = РеквизитыЗаполнения.ЦФОНеопределено;
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-02-06 (#3636)
							Если НЕ ЭтоОС Тогда
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-02-06 (#3636)
								Ошибка = Истина;
								АналитикаНеСопоставлена = Истина;
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-02-06 (#3636)
							КонецЕсли;
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-02-06 (#3636)
						КонецЕсли;
						
						Если ЗначениеЗаполнено(Выборка.Объект) Тогда
							Заявка.Аналитика_2 = Выборка.Объект; 
						Иначе
							Заявка.Аналитика_2 = РеквизитыЗаполнения.ОбъектНеопределено;
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-02-06 (#3636)
							Если НЕ ЭтоОС Тогда
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-02-06 (#3636)
								Ошибка = Истина;
								АналитикаНеСопоставлена = Истина;
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-02-06 (#3636)
							КонецЕсли;
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-02-06 (#3636)
						КонецЕсли;
						
						СтрКурсаДокумента = бит_КурсыВалют.ПолучитьКурсВалюты(Заявка.ВалютаДокумента, Заявка.ДатаРасхода);
								
						Заявка.СуммаРегл = бит_КурсыВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Заявка.Сумма
																						 , Заявка.ВалютаДокумента
																						 , ВалютаРегламентированногоУчета
																						 , СтрКурсаДокумента.Курс
																						 , 1
																						 , СтрКурсаДокумента.Кратность
																						 , 1);
						//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-28 (#3842)
						//ЗапросПоБУ = Новый Запрос;
						//ЗапросПоБУ.Текст = 
						//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
						//	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) - СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК Остаток
						//	|ПОМЕСТИТЬ ВТ_СальдоХозрасчетный
						//	|ИЗ
						//	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
						//	|			&ДатаОстатка,
						//	|			Счет В ИЕРАРХИИ (&СписокСчетов),
						//	|			,
						//	|			Организация = &Организация
						//	|				И Субконто1 = &Контрагент) КАК ХозрасчетныйОстатки
						//	|;
						//	|
						//	|////////////////////////////////////////////////////////////////////////////////
						//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
						//	|	СУММА(бит_ПланируемыйРасходДенежныхСредствОстатки.СуммаРеглОстаток) КАК Остаток
						//	|ПОМЕСТИТЬ ВТ_СформированныеЗнРДС
						//	|ИЗ
						//	|	РегистрНакопления.бит_ПланируемыйРасходДенежныхСредств.Остатки(
						//	|			,
						//	|			Контрагент = &Контрагент
						//	|				И Организация = &Организация) КАК бит_ПланируемыйРасходДенежныхСредствОстатки
						//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СтатусыОбъектов КАК СтатусыОбъектов
						//	|		ПО бит_ПланируемыйРасходДенежныхСредствОстатки.ДокументПланирования = СтатусыОбъектов.Объект
						//	|			И (СтатусыОбъектов.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус))
						//	|ГДЕ
						//	|	СтатусыОбъектов.Статус В(&СтатусыЗаявокДляИсключений)
						//	|;
						//	|
						//	|////////////////////////////////////////////////////////////////////////////////
						//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
						//	|	ЕСТЬNULL(СальдоХозрасчетный.Остаток, 0) - ЕСТЬNULL(СформированныеЗнРДС.Остаток, 0) КАК Остаток
						//	|ИЗ
						//	|	ВТ_СальдоХозрасчетный КАК СальдоХозрасчетный,
						//	|	ВТ_СформированныеЗнРДС КАК СформированныеЗнРДС
						//	|ГДЕ
						//	|	ЕСТЬNULL(СальдоХозрасчетный.Остаток, 0) - ЕСТЬNULL(СформированныеЗнРДС.Остаток, 0) > 0";
						//
						//СписокСчетовПроверкиДЗ 		= СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Ок_ФормированиеЗнРДС_СписокСчетовПроверкиДЗ", Неопределено);
						//СтатусыЗаявокДляИсключений 	= СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Ок_ФормированиеЗнРДС_СтатусыЗаявокДляИсключений", Неопределено);
						//
						//ЗапросПоБУ.УстановитьПараметр("СписокСчетов", 				?(СписокСчетовПроверкиДЗ = Неопределено, 	 Новый Массив(), СписокСчетовПроверкиДЗ));
						//ЗапросПоБУ.УстановитьПараметр("СтатусыЗаявокДляИсключений",	?(СтатусыЗаявокДляИсключений = Неопределено, Новый Массив(), СтатусыЗаявокДляИсключений));
						//ЗапросПоБУ.УстановитьПараметр("Организация", 				Заявка.Организация);
						//ЗапросПоБУ.УстановитьПараметр("Контрагент", 				Заявка.Контрагент);
						//ЗапросПоБУ.УстановитьПараметр("ДатаОстатка", 				ТекущаяДата());
						//
						//Результат = ЗапросПоБУ.Выполнить().Выгрузить();
						//
						//Если НЕ Результат.Количество() = 0 Тогда
						//	Если (Результат[0].Остаток - Заявка.СуммаРегл) < 0 Тогда
						//		Заявка.ок_НаличиеДЗ = Истина 
						//	Иначе
						//		Заявка.ок_НаличиеДЗ = Ложь;
						//	КонецЕсли;
						//Иначе 
						//	Заявка.ок_НаличиеДЗ = Истина
						//КонецЕсли;
						Заявка.НДСРегл = бит_КурсыВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(Заявка.НДС
																						 , Заявка.ВалютаДокумента
																						 , ВалютаРегламентированногоУчета
																						 , Заявка.КурсДокумента
																						 , 1
																						 , Заявка.КратностьДокумента
																						 , 1);
																						 
						Если ЗначениеЗаполнено(Заявка.Организация)
							И ЗначениеЗаполнено(Заявка.Контрагент) 
							И Заявка.Контрагент <> РеквизитыЗаполнения.КонтрагентНеопределено Тогда
							
							ОстатокПоКонтрагенту = ОстаткиПоКонтрагентам.Получить(Заявка.Контрагент);
							Если ОстатокПоКонтрагенту = Неопределено
								ИЛИ ОстатокПоКонтрагенту < Заявка.СуммаРегл Тогда
								Заявка.ок_НаличиеДЗ = Истина;
							КонецЕсли; 
							
							Если ОстатокПоКонтрагенту <> Неопределено Тогда
								ОстаткиПоКонтрагентам.Вставить(Заявка.Контрагент, ОстатокПоКонтрагенту - Заявка.СуммаРегл);
							КонецЕсли; 
							
						КонецЕсли;
						//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-28 (#3842)
						
						//Шапка ОС
						Если НЕ ЭтоОС Тогда
							
							Заявка.Проект = Выборка.Проект;
							Если Выборка.Важность = 1 Тогда
								Заявка.Важность = Перечисления.бит_Важность.Высокая;
							Иначе
								Заявка.Важность = Перечисления.бит_Важность.Средняя;
							КонецЕсли; 
							
							Если ЗначениеЗаполнено(Выборка.СтатьяБДДС) Тогда
								Заявка.СтатьяОборотов = Выборка.СтатьяБДДС;
								Если Заявка.СтатьяОборотов.ВидСтатьи = Справочники.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность Тогда 
									Заявка.Сценарий = Справочники.СценарииПланирования.ЗаявкаНаОплату_И;
								Иначе
									Заявка.Сценарий = Справочники.СценарииПланирования.ЗаявкаНаОплату_У;
								КонецЕсли;
							Иначе
								Заявка.СтатьяОборотов = РеквизитыЗаполнения.СтатьяБДДСНеопределено;
								Ошибка = Истина;
								АналитикаНеСопоставлена = Истина;
							КонецЕсли;
							
							Если ЗначениеЗаполнено(Выборка.СтатьяБДР) Тогда
								Заявка.Ок_СтатьяОборотовБДР = Выборка.СтатьяБДР;
							Иначе 
								Заявка.Ок_СтатьяОборотовБДР = РеквизитыЗаполнения.СтатьяОборотовНеопределено;
								Ошибка = Истина;
								АналитикаНеСопоставлена = Истина;
							КонецЕсли;
							
							// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-20 (#4390)
							Если Выборка.ВидСтатьиБДР = Справочники.бит_ВидыСтатейОборотов.Выручка
								И ЗначениеЗаполнено(Выборка.ПроектФВБ_Опер) Тогда
								Заявка.Проект = Выборка.ПроектФВБ_Опер;
							ИначеЕсли Выборка.ВидСтатьиБДР = Справочники.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность
								И ЗначениеЗаполнено(Выборка.ПроектФВБ_Инвест) Тогда
								Заявка.Проект = Выборка.ПроектФВБ_Инвест;	
							КонецЕсли;	
							// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-20 (#4390)
							
						КонецЕсли;            
						
						Если ЭтоОС Тогда
							
							ОбъектСистемы = Справочники.бит_ОбъектыСистемы.НайтиПоКоду("0" + Прав(Выборка.DOCUMENTNUM, 8));  
							
							Если ЗначениеЗаполнено(ОбъектСистемы) Тогда
								
								Текст = ОбъектСистемы.ИмяОбъектаПолное;
								ЗапросПоДокументам = Новый Запрос;
								ЗапросПоДокументам.Текст =  
									"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
									|	ДокументОбъект.Ссылка КАК Ссылка
									|ИЗ
									|	" + Текст + "  КАК ДокументОбъект
									|ГДЕ
									|	ДокументОбъект.Номер = &Номер
									|УПОРЯДОЧИТЬ ПО
									|	ДокументОбъект.Дата УБЫВ";
								ЗапросПоДокументам.УстановитьПараметр("Номер", Лев(Выборка.DOCUMENTNUM, 11));
								Результат = ЗапросПоДокументам.Выполнить();
								Выборка_ДокументОснование = Результат.Выбрать();
								Если Выборка_ДокументОснование.Следующий() Тогда
									
									ДокументОснование = Выборка_ДокументОснование.Ссылка;
									Заявка.ДокументОснование = Выборка_ДокументОснование.Ссылка;
									
								Иначе
									
									ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Не найден документ-основание с номером %2. Загрузка заявки прервана.'"), ВыборкаПоRECID.RECID, Выборка.DOCUMENTNUM);
									ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
									ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
									
									Продолжить;
									
								КонецЕсли;
								
								СвойствоПриоритетаОплаты = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Ок_ФормированиеЗнРДС_СвойствоПриоритетаОплаты", Неопределено); 
								ЗначениеСвойстваПриоритетаОплаты = УправлениеСвойствами.ЗначениеСвойства(ДокументОснование, СвойствоПриоритетаОплаты);
								
								Заявка.Важность = ?(ЗначениеСвойстваПриоритетаОплаты = Истина, Перечисления.бит_Важность.Высокая, Перечисления.бит_Важность.Средняя);
								
							Иначе
								
								ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Не найден документ-основание с номером %2. Загрузка заявки прервана.'"), ВыборкаПоRECID.RECID, Выборка.DOCUMENTNUM);
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
								ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
									
								СледующийДокумент = Истина;
								Прервать;
								
							КонецЕсли;
							
						Иначе
							
							ЭтоОС = Ложь;
							Заявка.ДокументОснование = ?(ЗначениеЗаполнено(Выборка.ОперацияАксапты), Выборка.ОперацияАксапты, Неопределено);
							
							Если Заявка.ДокументОснование = Неопределено Тогда
								
								//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-11-26 (#4119)
								//ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Не найдена Операция аксапты с номером ваучера %2. Загрузка заявки прервана.'"), ВыборкаПоRECID.RECID, Выборка.Ваучер);
								ТекстСообщения = "";
								Если ЗначениеЗаполнено(Выборка.Ваучер2012) Тогда
									ТекстСообщения = ТекстСообщения + СтрШаблон(Нстр("ru = '(RECID: %1) Не найдена Операция аксапты 12 с номером ваучера %2.'"), ВыборкаПоRECID.RECID, Выборка.Ваучер2012);
								КонецЕсли;
								Если ЗначениеЗаполнено(Выборка.Ваучер) Тогда
									ТекстСообщения = ТекстСообщения + ?(ЗначениеЗаполнено(ТекстСообщения), Символы.ПС, "") + СтрШаблон(Нстр("ru = '(RECID: %1) Не найдена Операция аксапты с номером ваучера %2.'"), ВыборкаПоRECID.RECID, Выборка.Ваучер);
								КонецЕсли;
								Если ЗначениеЗаполнено(ТекстСообщения) Тогда
									ТекстСообщения = ТекстСообщения + Символы.ПС + "Загрузка заявки прервана." 
								Иначе
									ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Номер ваучера не заполнен. Загрузка заявки прервана.'"), ВыборкаПоRECID.RECID);
								КонецЕсли; 
								//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-11-26 (#4119)
								
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
								ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
								
								СледующийДокумент = Истина;
								Прервать;
								
							КонецЕсли;
							
						КонецЕсли;
						
						ЗаполнятьШапку = Ложь;
					КонецЕсли;
					
					Если ЭтоОС Тогда
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ РАЗРЕШЕННЫЕ
							|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1 КАК Аналитика_1,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2 КАК Аналитика_2,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО КАК ЦФО,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект КАК Проект,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот КАК СуммаСценарийИсполнениеОборот
							|ИЗ
							|	РегистрНакопления.бит_КонтрольныеЗначенияБюджетов.Обороты(, , Регистратор, СценарийКонтролируемый В (ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_У), ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт_Инвест))) КАК бит_КонтрольныеЗначенияБюджетовОбороты
							|ГДЕ
							|	бит_КонтрольныеЗначенияБюджетовОбороты.Регистратор = &Регистратор
							|
							|СГРУППИРОВАТЬ ПО
							|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_2,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.Аналитика_1,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.ЦФО,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.Проект,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.СтатьяОборотов,
							|	бит_КонтрольныеЗначенияБюджетовОбороты.СуммаСценарийИсполнениеОборот";
					
						Запрос.УстановитьПараметр("Регистратор", Заявка.ДокументОснование);
						Результат = Запрос.Выполнить().Выгрузить();
						Если Результат.Количество() = 0 Тогда
							
							ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Не найден оборот по регистру КЗБ для документа %2. Загрузка заявки прервана.'"), ВыборкаПоRECID.RECID, Заявка.ДокументОснование);
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-09-10 (#3841)
							//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
							//ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Заявка.ДокументОснование);
							ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,Заявка.ДокументОснование, ТекстСообщения);
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-09-10 (#3841)
							
							Прервать;
							
						КонецЕсли;	 
						СуммаДокументаОснования = Результат.Итог("СуммаСценарийИсполнениеОборот");
						КоличествоСтрок = Результат.Количество();
						ЗаполнитьШапкуОС = Истина;
						Для Каждого Строка ИЗ Результат Цикл
							
							Если ЗаполнитьШапкуОС Тогда
								
								Заявка.Аналитика_1 			= Строка.Аналитика_1;
								Заявка.Аналитика_2 			= Строка.Аналитика_2;
								Заявка.СБ_Инициатор 		= ?(ЗначениеЗаполнено(Строка.Аналитика_1),Строка.Аналитика_1.бит_БК_Инициатор, Справочники.бит_БК_Инициаторы.ПустаяСсылка());
								Заявка.ЦФО 					= Строка.ЦФО;
								Заявка.Ок_СтатьяОборотовБДР = Строка.СтатьяОборотов;
								Заявка.Сумма 				= Выборка.СуммаСтроки;
								//Заявка.НДС	 			= Выборка.СуммаНДССтроки;
								
								Если ЗначениеЗаполнено(РеквизитыЗаполнения.СтавкаНДС[Выборка.СтавкаНДС]) Тогда 
									
									Заявка.СтавкаНДС 	= РеквизитыЗаполнения.СтавкаНДС[Выборка.СтавкаНДС];
									СтавкаНДСЧисло		= бит_БухгалтерияСервер.ПолучитьСтавкуНДС(Заявка.СтавкаНДС);
									Заявка.НДС  		= бит_БухгалтерияКлиентСервер.РассчитатьСуммуНДС(Заявка.Сумма
																											,Истина
																											,Истина
																											,СтавкаНДСЧисло);
								Иначе 
									Ошибка = Истина;
									СтавкаНДСнеСопоставлена = Истина;
								КонецЕсли;
								
								Заявка.СуммаБезНДС = Заявка.Сумма - Заявка.НДС;
								ЗаполнитьШапкуОС = Ложь;
								
							КонецЕсли;
							
							НоваяСтрока = Заявка.Распределение.Добавить();
							НоваяСтрока.ДоговорКонтрагента = Заявка.ДоговорКонтрагента;		
							НоваяСтрока.Сумма = Заявка.Сумма * (Строка.СуммаСценарийИсполнениеОборот / СуммаДокументаОснования);
							
							Если ЗначениеЗаполнено(РеквизитыЗаполнения.СтавкаНДС[Выборка.СтавкаНДС]) Тогда
								
								НоваяСтрока.СтавкаНДС = РеквизитыЗаполнения.СтавкаНДС[Выборка.СтавкаНДС];					
								НоваяСтрока.НДС 	  = бит_БухгалтерияКлиентСервер.РассчитатьСуммуНДС(НоваяСтрока.Сумма
																										,Истина
																										,Истина							
																										,СтавкаНДСЧисло);
							Иначе
								Ошибка = Истина;
								СтавкаНДСнеСопоставлена = Истина;
							КонецЕсли;
							
							НоваяСтрока.СуммаБезНДС = НоваяСтрока.Сумма - НоваяСтрока.НДС;
							
							НоваяСтрока.Аналитика_1 			= Строка.Аналитика_1;
							НоваяСтрока.Аналитика_2 			= Строка.Аналитика_2;
							НоваяСтрока.ЦФО 					= Строка.ЦФО;
							НоваяСтрока.Проект 					= Строка.Проект;
							НоваяСтрока.Ок_СтатьяОборотовБДР 	= Строка.СтатьяОборотов;
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
								|	бит_СоответствияАналитик.ЛеваяАналитика_1 КАК ЛеваяАналитика_1,
								|	бит_СоответствияАналитик.ПраваяАналитика_1 КАК ПраваяАналитика_1
								|ИЗ
								|	РегистрСведений.бит_СоответствияАналитик КАК бит_СоответствияАналитик
								|ГДЕ
								|	бит_СоответствияАналитик.ЛеваяАналитика_1 = &СтатьяБДР";
							
							Запрос.УстановитьПараметр("СтатьяБДР", Строка.СтатьяОборотов);
							Результат = Запрос.Выполнить();
							Выборка_СтатьяОборотов = Результат.Выбрать();
							Если Выборка_СтатьяОборотов.Следующий() Тогда 
								
								НоваяСтрока.СтатьяОборотов = Выборка_СтатьяОборотов.ПраваяАналитика_1;
								Заявка.СтатьяОборотов = Выборка_СтатьяОборотов.ПраваяАналитика_1;
								Если Заявка.СтатьяОборотов.ВидСтатьи = ПредопределенноеЗначение("Справочник.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность") Тогда 
									Заявка.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.ЗаявкаНаОплату_И");
								Иначе
									Заявка.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.ЗаявкаНаОплату_У");
								КонецЕсли;
								
							КонецЕсли;	 
							
						КонецЦикла;
						
					Иначе
						
						НоваяСтрока = Заявка.Распределение.Добавить();
						НоваяСтрока.Аналитика_1 = Выборка.НомерЗаявки;
						НоваяСтрока.Проект 		= Выборка.Проект;
						// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-20 (#4390)
						Если Выборка.ВидСтатьиБДР = Справочники.бит_ВидыСтатейОборотов.Выручка
							И ЗначениеЗаполнено(Выборка.ПроектФВБ_Опер) Тогда
							НоваяСтрока.Проект = Выборка.ПроектФВБ_Опер;
						ИначеЕсли Выборка.ВидСтатьиБДР = Справочники.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность
							И ЗначениеЗаполнено(Выборка.ПроектФВБ_Инвест) Тогда
							НоваяСтрока.Проект = Выборка.ПроектФВБ_Инвест;	
						КонецЕсли;	
						// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-20 (#4390)
						НоваяСтрока.Сумма 		= Выборка.СуммаСтроки;
						Если ЗначениеЗаполнено (РеквизитыЗаполнения.СтавкаНДС[Выборка.СтавкаНДС]) Тогда
							НоваяСтрока.СтавкаНДС = РеквизитыЗаполнения.СтавкаНДС[Выборка.СтавкаНДС];
							Если НЕ ЗначениеЗаполнено(Выборка.СуммаНДССтроки) Тогда
								СтавкаНДСЧисло = бит_БухгалтерияСервер.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС);
								НоваяСтрока.НДС = бит_БухгалтерияКлиентСервер.РассчитатьСуммуНДС(НоваяСтрока.Сумма
																									,Истина
																									,Истина
																									,СтавкаНДСЧисло);
							Иначе
								НоваяСтрока.НДС = Выборка.СуммаНДССтроки;
							КонецЕсли;
						Иначе
							Ошибка = Истина;
							СтавкаНДСнеСопоставлена = Истина;
						КонецЕсли;
						
						НоваяСтрока.ДоговорКонтрагента 	= Заявка.ДоговорКонтрагента;
						НоваяСтрока.СуммаБезНДС 		= НоваяСтрока.Сумма - НоваяСтрока.НДС;
						
						//ЦФО
						Если ЗначениеЗаполнено(Выборка.ЦФО) Тогда							
							НоваяСтрока.ЦФО = Выборка.ЦФО;
						Иначе
							НоваяСтрока.ЦФО = РеквизитыЗаполнения.ЦФОНеопределено;
							Ошибка = Истина;
							АналитикаНеСопоставлена = Истина;
						КонецЕсли;
						
						//Объект
						Если ЗначениеЗаполнено(Выборка.Объект) Тогда
							НоваяСтрока.Аналитика_2 = Выборка.Объект; 
						Иначе
							НоваяСтрока.Аналитика_2 = РеквизитыЗаполнения.ОбъектНеопределено;
							Ошибка = Истина;
							АналитикаНеСопоставлена = Истина;
						КонецЕсли;
						
						//СтатьяБДДС
						Если ЗначениеЗаполнено(Выборка.СтатьяБДДС) Тогда
							НоваяСтрока.СтатьяОборотов  = Выборка.СтатьяБДДС; 
						Иначе
							НоваяСтрока.СтатьяОборотов  = РеквизитыЗаполнения.СтатьяБДДСНеопределено;
							Ошибка = Истина;
							АналитикаНеСопоставлена = Истина;
						КонецЕсли;
						
						//СтатьяБДР
						Если ЗначениеЗаполнено(Выборка.СтатьяБДР) Тогда
							НоваяСтрока.Ок_СтатьяОборотовБДР = Выборка.СтатьяБДР;
						Иначе 
							НоваяСтрока.Ок_СтатьяОборотовБДР = РеквизитыЗаполнения.СтатьяОборотовНеопределено;
							Ошибка = Истина;
							АналитикаНеСопоставлена = Истина;
						КонецЕсли; 
						
						//Сценарий
						Если ЗначениеЗаполнено(Выборка.СтатьяБДДС) Тогда
							Если Заявка.СтатьяОборотов.ВидСтатьи = Справочники.бит_ВидыСтатейОборотов.ИнвестиционнаяДеятельность Тогда 
								Заявка.Сценарий = Справочники.СценарииПланирования.ЗаявкаНаОплату_И;
							Иначе
								Заявка.Сценарий = Справочники.СценарииПланирования.ЗаявкаНаОплату_У;
							КонецЕсли;	
						КонецЕсли;		
						
					КонецЕсли;
					
				КонецЦикла;
				
				Если СледующийДокумент Тогда
					Продолжить;
				КонецЕсли;	
				
				Если НЕ ЭтоОС Тогда
					Заявка.Распределение.Свернуть("ЦФО,СтатьяОборотов,ВидПлатежаПоКредитамЗаймам,Проект,ДоговорКонтрагента,СтавкаНДС,НоменклатурнаяГруппа,ИД,Аналитика_1,Аналитика_2,Аналитика_3,Аналитика_4,Аналитика_5,Аналитика_6,Аналитика_7, ИД_Прогноз,Ок_СтатьяОборотовБДР","Сумма,НДС,СуммаБезНДС");
				КонецЕсли;	
				
				Если Заявка.Распределение.Количество() = 1 Тогда
					МассивИсключений = Новый Массив;
					МассивИсключений.Добавить("Сумма");
					МассивИсключений.Добавить("НДС");
					Заявка.СинхронизироватьРеквизитыШапкиИСтроки(Заявка.Распределение[0], "Шапка", МассивИсключений);
				ИначеЕсли Заявка.Распределение.Количество() > 1 Тогда
					
					Эталон_Сумма 		= Заявка.Сумма;
					Эталон_НДС 			= Заявка.НДС;
					Эталон_СуммаБезНДС 	= Заявка.СуммаБезНДС;
					
					Итого_Сумма 		= Заявка.Распределение.Итог("Сумма");
					Итого_НДС 			= Заявка.Распределение.Итог("НДС");
					Итого_СуммаБезНДС 	= Заявка.Распределение.Итог("СуммаБезНДС");
					
					СтрокаДляКорректировкиСумм = Заявка.Распределение[Заявка.Распределение.Количество() - 1];
					
					Если Эталон_Сумма <> Итого_Сумма Тогда
						СтрокаДляКорректировкиСумм.Сумма = СтрокаДляКорректировкиСумм.Сумма + (Эталон_Сумма - Итого_Сумма);
					КонецЕсли;
					Если Эталон_НДС <> Итого_НДС Тогда
						СтрокаДляКорректировкиСумм.НДС = СтрокаДляКорректировкиСумм.НДС + (Эталон_НДС - Итого_НДС);
					КонецЕсли;
					Если Эталон_СуммаБезНДС <> Итого_СуммаБезНДС Тогда
						СтрокаДляКорректировкиСумм.СуммаБезНДС = СтрокаДляКорректировкиСумм.СуммаБезНДС + (Эталон_СуммаБезНДС - Итого_СуммаБезНДС);
					КонецЕсли;
					
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(Заявка.Аналитика_1) Тогда
					Ошибка = Истина;
					Заявка.Комментарий = Заявка.Комментарий + " Тип ошибки: Не найден № ФВБ.заяки. Нет движений по РН КЗБ.";
				КонецЕсли;
				
				Если Ошибка Тогда
					
					Если ЭтоАванс Тогда
						Заявка.Комментарий = Заявка.Комментарий + " Тип ошибки: Тип платежа (Аванс).";
					Иначе
						Если АналитикаНеСопоставлена Тогда
							Заявка.Комментарий = Заявка.Комментарий + " Тип ошибки: Не сопоставленная аналитика.";
						КонецЕсли;	
						Если СтавкаНДСнеСопоставлена Тогда
							Заявка.Комментарий = Заявка.Комментарий + " Тип ошибки: Ставка НДС Не сопоставлена.";
						КонецЕсли;	
					КонецЕсли;	
					
					Попытка
						
						Заявка.ДополнительныеСвойства.Вставить("ДокументЗагруженСОшибкой");
						Заявка.Записать();
						
						ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Заявка загружена с ошибками. %2'"), ВыборкаПоRECID.RECID, Заявка.Ссылка);
						//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-09-10 (#3841)
						//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
						//ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Информация,,, ТекстСообщения);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Заявка.Ссылка);
						ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Информация,,Заявка.Ссылка, ТекстСообщения);
						//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-09-10 (#3841)
						
						МассивЗаписанныхЗаявок.Добавить(Заявка.СБ_ИдентификаторЗаписиAXAPTA);
						
					Исключение
						
						ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Ошибка при записи: %2'"), ВыборкаПоRECID.RECID, ОписаниеОшибки());
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
						ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
						
						МассивНезаписанныхЗаявок.Добавить(Заявка.СБ_ИдентификаторЗаписиAXAPTA);
						Продолжить;
						
					КонецПопытки;
					
					МенеджерЗаписи = РегистрыСведений.бит_СтатусыОбъектов.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.Объект                     = Заявка.Ссылка;
					МенеджерЗаписи.ДатаИзмененияСтатуса       = ТекущаяДата();
					МенеджерЗаписи.ВидСтатуса                 = Перечисления.бит_ВидыСтатусовОбъектов.Статус;
					МенеджерЗаписи.Пользователь               = бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь");
					МенеджерЗаписи.Статус                     = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("СтатусЗаявки_Ошибка", Неопределено);
					
					Попытка
						
						МенеджерЗаписи.Записать();
						
					Исключение
						
						ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) РС ""бит_СтатусыОбъектов"" ошибка: %2'"), ВыборкаПоRECID.RECID, ОписаниеОшибки());
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
						ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
						
					КонецПопытки;	
					
				Иначе
					
					Попытка
						
						Заявка.Записать(РежимЗаписиДокумента.Проведение);
						
						ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Заявка успешно загружена. %2'"), ВыборкаПоRECID.RECID, Заявка.Ссылка);
						//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-09-10 (#3841)
						//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
						//ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Информация,,, ТекстСообщения);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Заявка.Ссылка);
						ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Информация,,Заявка.Ссылка, ТекстСообщения);
						//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-09-10 (#3841)
						
						МассивПроведенныхЗаявок.Добавить(Заявка.СБ_ИдентификаторЗаписиAXAPTA);
						
					Исключение
						
						Попытка
							
							Заявка.Записать();
							
							ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Заявка загружена с ошибками %2. Ошибка при проведении: %3'"), ВыборкаПоRECID.RECID, Заявка.Ссылка, ОписаниеОшибки());
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-09-10 (#3841)
							//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
							//ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Заявка.Ссылка);
							ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,Заявка.Ссылка, ТекстСообщения);
							//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-09-10 (#3841)
							
							МассивЗаписанныхЗаявок.Добавить(Заявка.СБ_ИдентификаторЗаписиAXAPTA);
							
						Исключение
							
							ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Ошибка при записи: %2'"), ВыборкаПоRECID.RECID, ОписаниеОшибки());
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
							ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Информация,,, ТекстСообщения);
							
							МассивНезаписанныхЗаявок.Добавить(Заявка.СБ_ИдентификаторЗаписиAXAPTA);
							
						КонецПопытки;
						
					КонецПопытки;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-11-30 (#3415)
	
	Возврат СтруктураВозврата;
	
КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-01-23 (#3621)

// +СБ. Михайлов Никита. 2014-05-08. Загрузка платежных документов AXAPTA  
Процедура ЗаписатьДокумент(Заявка, ЭтоЧерновик, RECID, СтруктураВозврата, ВизаУтверждения, КлючеваяОперация)
	
	Отказ = Ложь;
	ВизаЗаписана = Ложь;
	
	Заявка.ДополнительныеСвойства.Вставить("СБ_ЗагрузкаПД_AXAPTA");
	
// +СБ. Широков Николай. 2014-09-04. ТЗ "Казначейство" 2.2.1.3.	
    ЭтоНовыйДокумент = Заявка.ЭтоНовый(); 

	Если ЭтоЧерновик Тогда
		Заявка.ДополнительныеСвойства.Вставить("ДокументЗагруженСОшибкой");
	КонецЕсли; 	
// -СБ. Широков Николай

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-12-03 (#3842) //Расскоментировал временно (Динамическое обновление от 27.01.2021)
//// +СБ. Широков Николай. 2014-09-04. ТЗ "Казначейство" 2.2.1.4.
////	Если Заявка.ЭтоНовый() Тогда
//	Если ЭтоНовыйДокумент И Заявка.СБ_СгенерированАвтоматическиAXAPTA Тогда
//// -СБ. Широков Николай 		
//		
//		СсылкаНовойЗаявки = Документы.бит_ЗаявкаНаРасходованиеСредств.ПолучитьСсылку();
//		Заявка.УстановитьСсылкуНового(СсылкаНовойЗаявки);

//		СтрокаУИД = Строка(Новый УникальныйИдентификатор);
//		МенеджерЗаписи = РегистрыСведений.бит_УстановленныеВизы.СоздатьМенеджерЗаписи();
//		МенеджерЗаписи.Объект = СсылкаНовойЗаявки;
//		МенеджерЗаписи.Виза = ВизаУтверждения;
//		МенеджерЗаписи.ИД = СтрокаУИД;
//		МенеджерЗаписи.ДобавленаВручную = Истина;
//		МенеджерЗаписи.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
//// +СБ. Широков Николай. 2014-09-04. ТЗ "Казначейство" 2.2.1.4.
//		//МенеджерЗаписи.Решение = Справочники.бит_ВидыРешенийСогласования.Согласовано;
//		МенеджерЗаписи.Решение = 
//			?(ЭтоЧерновик, 
//				Справочники.бит_ВидыРешенийСогласования.ПустаяСсылка(), 
//				Справочники.бит_ВидыРешенийСогласования.Согласовано);
//// -СБ. Широков Николай 		
//		МенеджерЗаписи.ДатаУстановки = Заявка.Дата;
//		МенеджерЗаписи.Записать(Ложь);
//		ВизаЗаписана = Истина;
//		
//	КонецЕсли;

	//Динамическое обновление от 27.01.2021
	ЗагружатьЗНРДСПоНеБКВСтатусеУтверждено = ОК_ОбщегоНазначения.ПолучитьЗначениеУниверсальнойНастройки("Загрузка из AXAPTA", "Загружать ЗНРДС по не БК в статусе утверждено", Ложь);

	Если ЗагружатьЗНРДСПоНеБКВСтатусеУтверждено
		И ЭтоНовыйДокумент 
		И Заявка.СБ_СгенерированАвтоматическиAXAPTA Тогда
	
		СсылкаНовойЗаявки = Документы.бит_ЗаявкаНаРасходованиеСредств.ПолучитьСсылку();
		Заявка.УстановитьСсылкуНового(СсылкаНовойЗаявки);

		СтрокаУИД = Строка(Новый УникальныйИдентификатор);
		МенеджерЗаписи = РегистрыСведений.бит_УстановленныеВизы.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Объект = СсылкаНовойЗаявки;
		МенеджерЗаписи.Виза = ВизаУтверждения;
		МенеджерЗаписи.ИД = СтрокаУИД;
		МенеджерЗаписи.ДобавленаВручную = Истина;
		МенеджерЗаписи.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		МенеджерЗаписи.Решение = 
			?(ЭтоЧерновик, 
				Справочники.бит_ВидыРешенийСогласования.ПустаяСсылка(), 
				Справочники.бит_ВидыРешенийСогласования.Согласовано);
		МенеджерЗаписи.ДатаУстановки = Заявка.Дата;
		МенеджерЗаписи.Записать(Ложь);
		ВизаЗаписана = Истина;
		
	КонецЕсли;

//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-12-03 (#3842)

	Если НЕ Отказ Тогда
		
		Если ЭтоЧерновик Тогда
				
			Попытка 
				
				Заявка.Записать(РежимЗаписиДокумента.Запись);
				КлючеваяОперация = ПредопределенноеЗначение("Справочник.КлючевыеОперации.СБ_ЗаписьЗаявкиНаРасходДС_AXAPTA");
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-09 (#4119)
				ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Заявка успешно загружена. %2'"), RECID, Заявка.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Заявка.Ссылка);
				ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Информация,,Заявка.Ссылка, ТекстСообщения);
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-09 (#4119)
				СтруктураВозврата.ЗаписанныеЗаявки.Добавить(RECID);
				
			Исключение
				
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-09 (#4119)
				//ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
				//					 УровеньЖурналаРегистрации.Ошибка,
				//					 ,
				//					 ,
				//					 "Не удалось записать заявку на расход ДС: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Ошибка при записи: %2'"), RECID, ОписаниеОшибки());
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-09 (#4119)
				
				СтруктураВозврата.НезаписанныеЗаявки.Добавить(RECID);
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-12-03 (#3842)
				//Если ВизаЗаписана Тогда
				//	
				//	МенеджерЗаписи = РегистрыСведений.бит_УстановленныеВизы.СоздатьМенеджерЗаписи();
				//	МенеджерЗаписи.Объект = СсылкаНовойЗаявки;
				//	МенеджерЗаписи.Виза = Справочники.бит_Визы.ПустаяСсылка();
				//	МенеджерЗаписи.ИД = СтрокаУИД;
				//	МенеджерЗаписи.Удалить();
	            //  
				//КонецЕсли; 
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-12-03 (#3842)
			КонецПопытки;	
			
		Иначе
			
			Попытка 
				
				Заявка.Записать(РежимЗаписиДокумента.Проведение);
				КлючеваяОперация = ПредопределенноеЗначение("Справочник.КлючевыеОперации.СБ_ПроведениеЗаявкиНаРасходДС_AXAPTA");
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-09 (#4119)
				ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Заявка успешно загружена. %2'"), RECID, Заявка.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Заявка.Ссылка);
				ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Информация,,Заявка.Ссылка, ТекстСообщения);
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-09 (#4119)
				СтруктураВозврата.ПроведенныеЗаявки.Добавить(RECID);
				
			Исключение
				
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-04-09 (#4119)
				ТекстСообщения = СтрШаблон(Нстр("ru = '(RECID: %1) Ошибка при записи: %2'"), RECID, ОписаниеОшибки());
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				ЗаписьЖурналаРегистрации("Загрузка платежных документов (AXAPTA)", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
				//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-04-09 (#4119)
				
				//Попытка
				//	
				//	Заявка.Записать(РежимЗаписиДокумента.Запись);
				//	КлючеваяОперация = ПредопределенноеЗначение("Справочник.КлючевыеОперации.СБ_ЗаписьЗаявкиНаРасходДС_AXAPTA");
				//	СтруктураВозврата.ЗаписанныеЗаявки.Добавить(RECID);
				//	
				//Исключение
					
					//ЗаписьЖурналаРегистрации("Загрузка из APXAPTA.Платежные документы",
					//				 УровеньЖурналаРегистрации.Ошибка,
					//				 ,
					//				 ,
					//				 "Не удалось провести заявку на расход ДС: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					СтруктураВозврата.НезаписанныеЗаявки.Добавить(RECID);
					
					//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-12-03 (#3842)
					//Если ВизаЗаписана Тогда
					//	
					//	МенеджерЗаписи = РегистрыСведений.бит_УстановленныеВизы.СоздатьМенеджерЗаписи();
					//	МенеджерЗаписи.Объект = СсылкаНовойЗаявки;
					//	МенеджерЗаписи.Виза = Справочники.бит_Визы.ПустаяСсылка();
					//	МенеджерЗаписи.ИД = СтрокаУИД;
					//	МенеджерЗаписи.Удалить();
					//	
					//КонецЕсли;
					//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-12-03 (#3842)
				//КонецПопытки;	
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры // -СБ. Михайлов Никита

// +СБ. Михайлов Никита. 2014-05-06. Загрузка платежных документов AXAPTA 
// Возвращает структуру условно-константных данных для заполнения документов
//
// Параметры:
//  ДатыВалют - Массив - Даты, на которые требуется получить курсы валют, 
//						 сведения получаются для каждой валюты из РС СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA
//
// Возвращаемое значение:
//  Структура - содержит ключи заполняемых данных
//		* Важность -   
//		* ФормаОплаты -   
//		* ТипЗаявки -   
//		* ТипОснованияПлатежа -   
//		* СпособПогашенияЗадолженности -   
//		* ВизаУтверждения -   
//		* УсловиеПоКурсу -   
//		* Организация -   
//		* БанковскийСчетОрганизации -   
//		* ВалютаПоУмолчанию - СправочникСсылка.Валюты - Временно не используется, оставлено для совместимости  
//		* Сценарий -   
//		* ТипПлатежаАванс -   
//		* ТипПлатежаОплата -   
//		* ЦФОНеопределено -   
//		* СтатьяОборотовНеопределено -   
//		* КонтрагентНеопределено - СправочникСсылка.Контрагенты - Контрагент, подставляемый, если значение не было определно при загрузке
//		* Валюта - Соответствие - ключ соответствия содержит наименование валюты, значение - ссылку на валюту
//		* КурсВалюты - ТаблицаЗначений - Таблица курсов валют, индексы по Валюта и Дата
//			**Валюта - СправочникСсылка.Валюты - Искомая валюта
//			**Период - Дата - Дата курса валюты
//			**Курс - Число(10, 4) - Курс валюты
//			**Кратность - Число(10) - Кратность валюты
//		* СтавкаНДС - Соответствие - ключ соответствия содержит код НДС, значение - ссылка на перечисление
//		* ВидОперации - Соответствие - ключ соответствия содержит код операции, значение - ссылка на перечисление
//
Функция КонстантныеДанные(ТаблицаДатВалют) 
	
	ПараметрыПоУмолчанию = Новый Структура;
	ПараметрыПоУмолчанию.Вставить("ДоговорНеопределено");
	ПараметрыПоУмолчанию.Вставить("КонтрагентНеопределено");
	ПараметрыПоУмолчанию.Вставить("ЦФОНеопределено");
	ПараметрыПоУмолчанию.Вставить("СтатьяОборотовНеопределено");
	ПараметрыПоУмолчанию.Вставить("ВалютаПоУмолчанию");
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-12-17 (#3415)
	ПараметрыПоУмолчанию.Вставить("ОбъектНеопределено");
	ПараметрыПоУмолчанию.Вставить("СтатьяБДДСНеопределено");
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-12-17 (#3415)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.ИмяНастройки,
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Значение
	|ИЗ
	|	РегистрСведений.бит_ок_НастройкиМеханизмаИмпортаДанных КАК бит_ок_НастройкиМеханизмаИмпортаДанных
	|ГДЕ
	|	бит_ок_НастройкиМеханизмаИмпортаДанных.Группа = &Группа";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Группа", ИмяГруппыХраненияНастроекПоУмолчанию());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ИмяНастройки = "Договоры контрагентов" Тогда
			ПараметрыПоУмолчанию.ДоговорНеопределено = Выборка.Значение;	
		ИначеЕсли Выборка.ИмяНастройки = "Контрагенты" Тогда
			ПараметрыПоУмолчанию.КонтрагентНеопределено = Выборка.Значение;	
		ИначеЕсли Выборка.ИмяНастройки = "ЦФО" Тогда
			ПараметрыПоУмолчанию.ЦФОНеопределено = Выборка.Значение;	
			//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-12-03 (#3415)	
			//ИначеЕсли Выборка.ИмяНастройки = "Статья оборотов" Тогда
		ИначеЕсли Выборка.ИмяНастройки = "Статьи оборотов" Тогда
			//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-12-03
			ПараметрыПоУмолчанию.СтатьяОборотовНеопределено = Выборка.Значение;	
		ИначеЕсли Выборка.ИмяНастройки = "Валюта" Тогда
			ПараметрыПоУмолчанию.ВалютаПоУмолчанию = Выборка.Значение;	
			//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-12-17 (#3415)
		ИначеЕсли Выборка.ИмяНастройки = "Объекты строительства" Тогда
			ПараметрыПоУмолчанию.ОбъектНеопределено = Выборка.Значение;	
		ИначеЕсли Выборка.ИмяНастройки = "Статьи оборотов БДДС" Тогда
			ПараметрыПоУмолчанию.СтатьяБДДСНеопределено = Выборка.Значение;	
			//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-12-17 (#3415)
		КонецЕсли; 
		
	КонецЦикла; 
	
	Данные = Новый Структура;
	
	Данные.Вставить("Важность", Перечисления.бит_Важность.Средняя);
	Данные.Вставить("ФормаОплаты", Перечисления.бит_ВидыДенежныхСредств.Безналичные);
	Данные.Вставить("ТипЗаявки", Перечисления.бит_ТипыЗаявокНаРасходованиеСредств.Плановая);
	Данные.Вставить("ТипОснованияПлатежа", Перечисления.бит_ОснованияПлатежа.Договор);
	Данные.Вставить("СпособПогашенияЗадолженности", Перечисления.СпособыПогашенияЗадолженности.НеПогашать);
	Данные.Вставить("УсловиеПоКурсу", Перечисления.бит_УсловияПоКурсу.ЦБ);
	
	Данные.Вставить("Организация", Константы.СБ_ЗагрузкаПД_AXAPTA_Организация.Получить());
	Данные.Вставить("ВалютаПоУмолчанию", ПараметрыПоУмолчанию.ВалютаПоУмолчанию);
	Данные.Вставить("Сценарий", Константы.СБ_ЗагрузкаПД_AXAPTA_Сценарий.Получить());
	
	Данные.Вставить("ВизаУтверждения", Константы.СБ_ЗагрузкаПД_AXAPTA_ВизаУтверждения.Получить());
	Данные.Вставить("ТипПлатежаАванс", Константы.СБ_ЗагрузкаПД_AXAPTA_ТипПлатежаАванс.Получить());
	Данные.Вставить("ТипПлатежаОплата", Константы.СБ_ЗагрузкаПД_AXAPTA_ТипПлатежаОплата.Получить());
	
	Данные.Вставить("ЦФОНеопределено", ПараметрыПоУмолчанию.ЦФОНеопределено);
	Данные.Вставить("СтатьяОборотовНеопределено", ПараметрыПоУмолчанию.СтатьяОборотовНеопределено);
	Данные.Вставить("КонтрагентНеопределено", ПараметрыПоУмолчанию.КонтрагентНеопределено);
	Данные.Вставить("ДоговорНеопределено", ПараметрыПоУмолчанию.ДоговорНеопределено);
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Начало 2019-12-21 (#3415)
	Данные.Вставить("ОбъектНеопределено",ПараметрыПоУмолчанию.ОбъектНеопределено);
	Данные.Вставить("СтатьяБДДСНеопределено",ПараметрыПоУмолчанию.СтатьяБДДСНеопределено);
	//ОКЕЙ Щербакова С.В. (СофтЛаб) Конец 2019-12-21 (#3415)

	Валюты = СоответствиеАналитики(Перечисления.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.Валюта);
	Данные.Вставить("Валюта", Валюты);
	
	КурсыВалют = КурсыВалют(ТаблицаДатВалют);
	Данные.Вставить("КурсВалюты", КурсыВалют);
	
	СтавкиНДС = СоответствиеАналитики(Перечисления.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.СтавкаНДС);
	Данные.Вставить("СтавкаНДС", СтавкиНДС);
	
	ВидыОперации = СоответствиеАналитики(Перечисления.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.ВидОперацииЗаявкаНаРасход);
	Данные.Вставить("ВидОперации", ВидыОперации);
	
// +СБ. Широков Николай. 2014-09-09.  ТЗ "Казначейство" 2.2.1.8. 
	СчетаРСБУ	= СоответствиеАналитики(Перечисления.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.СчетРСБУ);
	Данные.Вставить("СчетРСБУ", СчетаРСБУ);
// -СБ. Широков Николай 	

	Возврат Данные;
	
КонецФункции // -СБ. Михайлов Никита

// +СБ. Михайлов Никита. 2014-05-07. Загрузка платежных документов AXAPTA 
Функция КурсыВалют(ТаблицаДатВалют)
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Валюта");
	Результат.Колонки.Добавить("Период");
	Результат.Колонки.Добавить("Курс");
	Результат.Колонки.Добавить("Кратность");
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Соответствие.ЗначениеАналитики КАК Валюта
	|ПОМЕСТИТЬ Валюты
	|ИЗ
	|	РегистрСведений.СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA КАК Соответствие
	|ГДЕ
	|	Соответствие.ВидАналитики = ЗНАЧЕНИЕ(Перечисление.СБ_ЗагрузкаПД_ВидыАналитикКодовAXAPTA.Валюта)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДатВалют.Период
	|ПОМЕСТИТЬ Периоды
	|ИЗ
	|	&ТаблицаДатВалют КАК ТаблицаДатВалют
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Валюты.Валюта,
	|	ПериодыВалют.Период
	|ПОМЕСТИТЬ ВалютыПоПериодам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДатыКурсов.Период КАК Период
	|	ИЗ
	|		Валюты КАК Валюты,
	|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Периоды.Период КАК Период
	|		ИЗ
	|			Периоды КАК Периоды) КАК ДатыКурсов) КАК ПериодыВалют,
	|	Валюты КАК Валюты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВалютыПериодыКурса.Валюта,
	|	ВалютыПериодыКурса.Период,
	|	ВалютыПериодыКурса.ПериодКурса,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВалютыПоПериодам.Валюта КАК Валюта,
	|		ВалютыПоПериодам.Период КАК Период,
	|		МАКСИМУМ(КурсыВалют.Период) КАК ПериодКурса
	|	ИЗ
	|		ВалютыПоПериодам КАК ВалютыПоПериодам
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|			ПО ВалютыПоПериодам.Валюта = КурсыВалют.Валюта
	|				И ВалютыПоПериодам.Период >= КурсыВалют.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВалютыПоПериодам.Валюта,
	|		ВалютыПоПериодам.Период) КАК ВалютыПериодыКурса
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВалютыПериодыКурса.Валюта = КурсыВалют.Валюта
	|			И ВалютыПериодыКурса.ПериодКурса = КурсыВалют.Период";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаДатВалют", ТаблицаДатВалют); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции // -СБ. Михайлов Никита

// +СБ. Михайлов Никита. 2014-05-06. Загрузка платежных документов AXAPTA 
Функция СоответствиеАналитики(ВидАналитики)
	
	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Соответствие.Аналитика,
	|	Соответствие.ЗначениеАналитики
	|ИЗ
	|	РегистрСведений.СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA КАК Соответствие
	|ГДЕ
	|	Соответствие.ВидАналитики = &ВидАналитики";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ВидАналитики", ВидАналитики);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока  Выборка.Следующий() Цикл
		Результат[Выборка.Аналитика] = Выборка.ЗначениеАналитики;
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции // -СБ. Михайлов Никита

// +СБ. Михайлов Никита. 2014-05-14. Загрузка платежных документов AXAPTA   
Функция ИмяГруппыХраненияНастроекПоУмолчанию() Экспорт 
	
	Возврат "Служебные элементы Не сопоставлено";	
	
КонецФункции // -СБ. Михайлов Никита

//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-28 (#3842)
Функция ПолучитьОстаткиПоКонтрагентам(ТаблицаКонтрагентов)

	ЗапросПоБУ = Новый Запрос;
	ЗапросПоБУ.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаКонтрагентов.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ вт_Контрагенты
		|ИЗ
		|	&ТаблицаКонтрагентов КАК ТаблицаКонтрагентов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Контрагенты.Контрагент КАК Контрагент,
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-14 (#4262)
		//|	ЕСТЬNULL(СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) - СУММА(ХозрасчетныйОстатки.СуммаОстатокДт), 0) КАК Остаток
		|	ЕСТЬNULL(СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) - СУММА(ХозрасчетныйОстатки.СуммаОстатокДт), 0) - СУММА(КонтрагентыСпр.ок_КредитныйЛимит) КАК Остаток
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-14 (#4262)
		|ПОМЕСТИТЬ ВТ_СальдоХозрасчетный
		|ИЗ
		|	вт_Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&ДатаОстатка,
		|				Счет В ИЕРАРХИИ (&СписокСчетов),
		|				,
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-08-02 (#4262)
		|Организация = &Организация И
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-08-02 (#4262)
		|				Субконто1 В
		|					(ВЫБРАТЬ
		|						Контрагенты.Контрагент
		|					ИЗ
		|						ВТ_контрагенты КАК Контрагенты)) КАК ХозрасчетныйОстатки
		|		ПО Контрагенты.Контрагент = ХозрасчетныйОстатки.Субконто1
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-07-14 (#4262)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК КонтрагентыСпр
		|		ПО (Контрагенты.Контрагент = КонтрагентыСпр.Ссылка)
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-07-14 (#4262)
		|
		|СГРУППИРОВАТЬ ПО
		|	Контрагенты.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Контрагенты.Контрагент КАК Контрагент,
		|	СтатусыОбъектов.Объект КАК Объект
		|ПОМЕСТИТЬ ВТ_СписокСформированныхЗнРДС
		|ИЗ
		|	вт_Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_СтатусыОбъектов КАК СтатусыОбъектов
		|		ПО (СтатусыОбъектов.Объект ССЫЛКА Документ.бит_ЗаявкаНаРасходованиеСредств)
		|			И (ВЫРАЗИТЬ(СтатусыОбъектов.Объект КАК Документ.бит_ЗаявкаНаРасходованиеСредств).Контрагент = Контрагенты.Контрагент)
		|			И (СтатусыОбъектов.ВидСтатуса = ЗНАЧЕНИЕ(Перечисление.бит_ВидыСтатусовОбъектов.Статус))
		|			И (СтатусыОбъектов.Статус В (&СтатусыЗаявокДляИсключений))
		|ГДЕ
		|	НЕ СтатусыОбъектов.Объект ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СписокСформированныхЗнРДС.Контрагент КАК Контрагент,
		|	ЕСТЬNULL(СУММА(бит_ПланируемыйРасходДенежныхСредствОстатки.СуммаРеглПриход), 0) КАК Остаток
		|ПОМЕСТИТЬ ВТ_СформированныеЗнРДС
		|ИЗ
		|	ВТ_СписокСформированныхЗнРДС КАК СписокСформированныхЗнРДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_ПланируемыйРасходДенежныхСредств.Обороты(
		|				,
		|				,
		|				,
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-08-02 (#4262)
		|Организация = &Организация И
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-08-02 (#4262)
		|				Контрагент В
		|					(ВЫБРАТЬ
		|						Контрагенты.Контрагент
		|					ИЗ
		|						ВТ_контрагенты КАК Контрагенты)) КАК бит_ПланируемыйРасходДенежныхСредствОстатки
		|		ПО СписокСформированныхЗнРДС.Объект = бит_ПланируемыйРасходДенежныхСредствОстатки.ДокументПланирования
		|ГДЕ
		|	НЕ бит_ПланируемыйРасходДенежныхСредствОстатки.Контрагент ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокСформированныхЗнРДС.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СальдоХозрасчетный.Контрагент КАК Контрагент,
		|	ЕСТЬNULL(СальдоХозрасчетный.Остаток, 0) - ЕСТЬNULL(СформированныеЗнРДС.Остаток, 0) КАК Остаток
		|ИЗ
		|	ВТ_СальдоХозрасчетный КАК СальдоХозрасчетный
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СформированныеЗнРДС КАК СформированныеЗнРДС
		|		ПО СальдоХозрасчетный.Контрагент = СформированныеЗнРДС.Контрагент";
	
	СписокСчетовПроверкиДЗ 		= СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Ок_ФормированиеЗнРДС_СписокСчетовПроверкиДЗ", Неопределено);
	СтатусыЗаявокДляИсключений 	= СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Ок_ФормированиеЗнРДС_СтатусыЗаявокДляИсключений", Неопределено);
	
	ЗапросПоБУ.УстановитьПараметр("СписокСчетов", 				?(СписокСчетовПроверкиДЗ = Неопределено, 	 Новый Массив(), СписокСчетовПроверкиДЗ));
	ЗапросПоБУ.УстановитьПараметр("СтатусыЗаявокДляИсключений",	?(СтатусыЗаявокДляИсключений = Неопределено, Новый Массив(), СтатусыЗаявокДляИсключений));
	ЗапросПоБУ.УстановитьПараметр("ТаблицаКонтрагентов", 		ТаблицаКонтрагентов);
	ЗапросПоБУ.УстановитьПараметр("ДатаОстатка", 				Новый Граница(КонецДня(ТекущаяДата()), ВидГраницы.Включая));
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-08-02 (#4262)
	ЗапросПоБУ.УстановитьПараметр("Организация",				Константы.СБ_ЗагрузкаПД_AXAPTA_Организация.Получить());
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-08-02 (#4262)
	
	ОстаткиКонтрагентов = Новый Соответствие();
	
	Результат = ЗапросПоБУ.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
	
		ОстаткиКонтрагентов.Вставить(Результат.Контрагент, Результат.Остаток);
	
	КонецЦикла; 
	
	Возврат ОстаткиКонтрагентов;
	
КонецФункции
//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-28 (#3842)

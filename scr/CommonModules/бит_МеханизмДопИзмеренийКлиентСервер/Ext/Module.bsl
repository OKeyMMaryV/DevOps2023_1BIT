////////////////////////////////////////////////////////////////////////////////
// Расширение модуля "бит_МеханизмДопИзмерений".
//  
////////////////////////////////////////////////////////////////////////////////


#Область СлужебныйПрограммныйИнтерфейс

Процедура УстановитьСвойстваАналитикШапкиПриИзмененииСтатьиОборотов(Форма, Объект, ПараметрыУстановки) Экспорт
		
	ДанныеОбъекта = ДанныеУстановкиПараметровАналитик(Объект, ПараметрыУстановки);
	
	УстановитьПараметрыВыбораАналитик(Форма, Объект, ПараметрыУстановки, ДанныеОбъекта);
	
КонецПроцедуры

Процедура УстановитьСвойстваАналитикСтрокиПриИзмененииСтатьиОборотов(Форма, СтрокаТаблицы, ПараметрыУстановки) Экспорт
			
	ДанныеОбъекта = ДанныеУстановкиПараметровАналитик(СтрокаТаблицы, ПараметрыУстановки);
	
	УстановитьПараметрыВыбораАналитик(Форма, СтрокаТаблицы, ПараметрыУстановки, ДанныеОбъекта);
	
КонецПроцедуры

Процедура УстановитьСвойстваАналитикШапкиПриИзмененииОрганизации(Форма, Объект, ПараметрыУстановки) Экспорт
	
	ОчиститьАналитикиПриИзмененииОрганизации(Объект, ПараметрыУстановки);
	
	ДанныеОбъекта = ДанныеУстановкиПараметровАналитик(Объект, ПараметрыУстановки);
	
	УстановитьПараметрыВыбораАналитик(Форма, Объект, ПараметрыУстановки, ДанныеОбъекта);
	
КонецПроцедуры

Процедура УстановитьСвойстваАналитикТаблицыПриИзмененииОрганизации(Таблица, ПараметрыУстановки) Экспорт
	
	Для каждого СтрокаТаблицы Из Таблица Цикл
		
		ОчиститьАналитикиПриИзмененииОрганизации(СтрокаТаблицы, ПараметрыУстановки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьНачальныеСвойстваАналитикШапки(Форма, Объект, ПараметрыУстановки) Экспорт
		
	ДанныеОбъекта = ДанныеУстановкиПараметровАналитик(Объект, ПараметрыУстановки);
	
	УстановитьПараметрыВыбораАналитик(Форма, Объект, ПараметрыУстановки, ДанныеОбъекта);
	
КонецПроцедуры

Процедура УстановитьНачальныеСвойстваАналитикСтроки(Форма, СтрокаТаблицы, ПараметрыУстановки) Экспорт
		
	ДанныеОбъекта = ДанныеУстановкиПараметровАналитик(СтрокаТаблицы, ПараметрыУстановки);
	
	УстановитьПараметрыВыбораАналитик(Форма, СтрокаТаблицы, ПараметрыУстановки, ДанныеОбъекта);
	
КонецПроцедуры

Процедура УстановитьПараметрыВыбораАналитик(Форма, Объект, ПараметрыУстановки, ДанныеОбъекта)

	Элементы = Форма.Элементы;
	
	ПоляОбъекта = ПараметрыУстановки.ПоляОбъекта;
	ПоляФормы   = ПараметрыУстановки.ПоляФормы;
	
	ВидыПараметров = Новый Соответствие;
	ВидыПараметров.Вставить(БухгалтерскийУчетКлиентСерверПереопределяемый.ТипПодразделения(), "Подразделение");
	
	ВГраница  = бит_МеханизмДопИзмерений.ПолучитьМаксимальноеКоличествоДополнительныхИзмерений();
	 
	Для Индекс = 1 По ВГраница Цикл
		Если НЕ ЗначениеЗаполнено(ПоляФормы["Аналитика_" + Индекс])
			ИЛИ НЕ ЗначениеЗаполнено(ПоляОбъекта["Аналитика_" + Индекс]) Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементФормыСубконто = Элементы.Найти(ПоляФормы["Аналитика_" + Индекс]);
		Если ЭлементФормыСубконто = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТипСубконто   = ТипЗнч(Объект[ПоляОбъекта["Аналитика_" + Индекс]]);
		ВидПараметров = ВидыПараметров[ТипСубконто];
		Если ВидПараметров <> Неопределено Тогда
			
			МассивПараметров = Новый Массив();
			Если ВидПараметров = "Подразделение" Тогда
				Если ДанныеОбъекта.Свойство("Организация") Тогда
					ИмяРеквизитаОрганизация = БухгалтерскийУчетКлиентСерверПереопределяемый.ИмяРеквизитаОрганизацияПодразделения();
					Если ЗначениеЗаполнено(ИмяРеквизитаОрганизация) Тогда
						МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор." + ИмяРеквизитаОрганизация, ДанныеОбъекта.Организация));
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если МассивПараметров.Количество() > 0 Тогда
				ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
				ЭлементФормыСубконто.ПараметрыВыбора = ПараметрыВыбора;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Функция ДанныеУстановкиПараметровАналитик(Объект, ПараметрыУстановки) Экспорт
	
	Результат = Новый Структура;
	
	ПоляОбъекта  = ПараметрыУстановки.ПоляОбъекта;
	ДопРеквизиты = ПараметрыУстановки.ДопРеквизиты;
	
	ВГраница  = бит_МеханизмДопИзмерений.ПолучитьМаксимальноеКоличествоДополнительныхИзмерений();
	
	Для Индекс = 1 По ВГраница Цикл
		Если НЕ ЗначениеЗаполнено(ПоляОбъекта["Аналитика_" + Индекс]) Тогда
			Продолжить;
		КонецЕсли;
		ЗначениеСубконто = Объект[ПоляОбъекта["Аналитика_" + Индекс]];
		ТипСубконто = ТипЗнч(ЗначениеСубконто);
	КонецЦикла;
	
	Если ПоляОбъекта.Свойство("Организация") Тогда
		Результат.Вставить("Организация", Объект[ПоляОбъекта.Организация]);
	КонецЕсли;
	
	Для каждого ДопРеквизит Из ДопРеквизиты Цикл
		Результат.Вставить(ДопРеквизит.Ключ, ДопРеквизит.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции	

Функция ПараметрыУстановкиСвойствАналитикПоШаблону(АналитикаФормы, АналитикаОбъекта, СтатьяОборотовОбъекта) Экспорт
	
	Результат = НовыеПараметрыУстановкиСвойствАналитик();
	ВГраница  = бит_МеханизмДопИзмерений.ПолучитьМаксимальноеКоличествоДополнительныхИзмерений();
	
	Если НЕ ПустаяСтрока(АналитикаФормы) Тогда
		Для Индекс = 1 По ВГраница Цикл
			Результат.ПоляФормы["Аналитика_" + Индекс] = АналитикаФормы + Индекс;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(АналитикаОбъекта) Тогда
		Для Индекс = 1 По ВГраница Цикл
			Результат.ПоляОбъекта["Аналитика_" + Индекс] = АналитикаОбъекта + Индекс;
		КонецЦикла;
	КонецЕсли;

	Если НЕ ПустаяСтрока(СтатьяОборотовОбъекта) Тогда
		Результат.ПоляОбъекта.СтатьяОборотов = СтатьяОборотовОбъекта;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НовыеПараметрыУстановкиСвойствАналитик()
	
	ВГраница  = бит_МеханизмДопИзмерений.ПолучитьМаксимальноеКоличествоДополнительныхИзмерений();
	Результат = Новый Структура;
	
	ПоляФормы = Новый Структура;
	Для Индекс = 1 По ВГраница Цикл
		ПоляФормы.Вставить("Аналитика_" + Индекс);
	КонецЦикла; 
	Результат.Вставить("ПоляФормы", ПоляФормы);
	
	ПоляОбъекта = Новый Структура;
	ПоляОбъекта.Вставить("СтатьяОборотов", "СтатьяОборотов");
	Для Индекс = 1 По ВГраница Цикл
		ПоляОбъекта.Вставить("Аналитика_" + Индекс);
	КонецЦикла; 
	Результат.Вставить("ПоляОбъекта", ПоляОбъекта);
	
	ДопРеквизиты = Новый Структура;
	Результат.Вставить("ДопРеквизиты", ДопРеквизиты);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОчиститьАналитикиПриИзмененииОрганизации(Объект, ПараметрыУстановки)
	
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-02-15 (#3235)
	Перем ИсключенияСвязанныхТипов;
	
	Если Не ПараметрыУстановки.Свойство("ИсключенияСвязанныхТипов",ИсключенияСвязанныхТипов) Тогда 
		ИсключенияСвязанныхТипов = Новый Массив;
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-02-15 (#3235)
	
	ВсеТипыСвязанныхСубконто   = БухгалтерскийУчетВызовСервераПовтИсп.ВсеТипыСвязанныхСубконто();
	ТипыСвязанныеСОрганизацией = ВсеТипыСвязанныхСубконто["Организация"];
	
	ПоляОбъекта = ПараметрыУстановки.ПоляОбъекта;
	
	Для каждого ПолеОбъекта Из ПоляОбъекта Цикл
		ИмяПоля = ПолеОбъекта.Значение;
		Если ЗначениеЗаполнено(ИмяПоля)
			И ЗначениеЗаполнено(Объект[ИмяПоля]) Тогда
			ТипПоля = ТипЗнч(Объект[ИмяПоля]);
			Если				
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-02-15 (#3235)
				ИсключенияСвязанныхТипов.Найти(ТипПоля) = Неопределено И
				//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-02-15 (#3235)
				ТипыСвязанныеСОрганизацией.СодержитТип(ТипПоля) 				
			Тогда
				Объект[ИмяПоля] = Новый (ТипПоля);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

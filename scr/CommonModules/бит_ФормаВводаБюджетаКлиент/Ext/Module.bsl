
Процедура ОтправитьСообщениеOutlook(Ссылка, ТекстКнопки) Экспорт
	
	Результат = бит_ФормаВводаБюджетаВызовСервера.ОтправитьСообщениеOutlook(Ссылка, ТекстКнопки);
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	СписокВложений = бит_БК_ОбщийКлиент.ПолучитьСписокВложений(Результат.ИменаТабДокументов, Результат.ОбъектыПечати);
	бит_БК_ОбщийКлиент.СоздатьНовоеСообщениеАУТЛУК(СписокВложений, Результат.СообщениеСтруктура);
	
КонецПроцедуры

Процедура бит_ПоискОстаткаПоБюджету(Объект, ДатаНачала, СценарийЗаявки, ЦФО, СтатьяОборотов, ОбъектСтр,ДатаОкончания=Неопределено) Экспорт 
	//+Сундукова 25.03.16
	Если ДатаОкончания = Неопределено тогда
		ДатаОкончания = ДатаНачала;
	КонецЕсли;           
//- Сундукова 25.03.16	
	
	// БИТ_YK_н 01/16
	Форма = ОткрытьФорму("Отчет.бит_БК_ВыполнениеПлана_Расширенный.Форма",,Объект.Ссылка);
	

	
	КоллекцияПользовательскихНастроек = Форма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	
	Для каждого ЭлементПН Из КоллекцияПользовательскихНастроек Цикл
		
		Если ТипЗнч(ЭлементПН) = Тип("ОтборКомпоновкиДанных") Тогда
			
			ЭлементыОтбора = ЭлементПН.Элементы;
			ЭлементыОтбора.Очистить();
			
		ИначеЕсли ТипЗнч(ЭлементПН) = тип("ВыбранныеПоляКомпоновкиДанных") тогда
			Если ЭлементПН.Элементы.количество() =0 тогда
			КонецЕсли;
			
			
		КонецЕсли;
		
	КонецЦикла;
	
	// установка отбора
	// Контролирующая статья
	//+Сундукова  160316 - добавляю возможность передавать параметры в т.ч. в ввиде массива значений
	Если ТипЗнч(СтатьяОборотов) = тип("Массив") тогда
		КонтролирующаяСтатья = новый массив;
		Для каждого ТекСтрока из СтатьяОборотов цикл
			КонтрлСтатья = бит_ФормаВводаБюджетаВызовСервера.ВернутьКонтролирующуюСтатью(ДатаНачала,ТекСтрока);
			КонтролирующаяСтатья.Добавить(КонтрлСтатья);
		КонецЦикла;
		СтрВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	Иначе
		КонтролирующаяСтатья = бит_ФормаВводаБюджетаВызовСервера.ВернутьКонтролирующуюСтатью(ДатаНачала,СтатьяОборотов);		
		СтрВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;		
	ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтролирующаяСтатья");
	ЭлементОтбора.ВидСравнения = СтрВидСравнения;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ЭлементОтбора.ПравоеЗначение   = КонтролирующаяСтатья;
	
	
	// ЦФО	
	Если ТипЗнч(ЦФО) = тип("Массив") тогда
		СтрВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	Иначе
		СтрВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;	 
	ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЦФО");
	ЭлементОтбора.ВидСравнения = СтрВидСравнения;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ЭлементОтбора.ПравоеЗначение = ЦФО;
	
	//Объект 
	Если ТипЗнч(ОбъектСтр) = тип("Массив") тогда
		СтрВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	Иначе
		СтрВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;	
	ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Аналитика_2");
	ЭлементОтбора.ВидСравнения = СтрВидСравнения;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ЭлементОтбора.ПравоеЗначение = ОбъектСтр;
	//+Сундукова - 160316	
	//Параметры
	
	Форма.Отчет.ПериодОтчета.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	Форма.Отчет.ПериодОтчета.ДатаНачала    = НачалоМесяца(ДатаНачала);
	//+Сундукова 25.03.16
	//Форма.Отчет.ПериодОтчета.ДатаОкончания = КонецМесяца(ДатаНачала);
	Форма.Отчет.ПериодОтчета.ДатаОкончания = КонецМесяца(ДатаОкончания);
	//-Сундукова 25.03.16
	
 	//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-11-19 (#3101)
	пВидОперацииФВБ = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.ПустаяСсылка");
	Если ТипЗнч(объект.ссылка) = Тип("ДокументСсылка.бит_БюджетнаяОперация") И 
		 ТипЗнч(объект.НомерЗаявки) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") И
		 ЗначениеЗаполнено(объект.НомерЗаявки)
	Тогда 
	 	пВидОперацииФВБ = бит_ФормаВводаБюджетаВызовСервера.ПолучитьВидОперацииФВБ(Объект.НомерЗаявки);
	КонецЕсли;
	//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-11-19 (#3101)	
	
	Если (ТипЗнч(объект.ссылка) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") и (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный") или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт"))) или  
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2018-11-19 (#3102)
		//(ТипЗнч(объект.ссылка) = Тип("ДокументСсылка.бит_БюджетнаяОперация") и ТипЗнч(объект.НомерЗаявки) = Тип("ДокументСсылка.бит_ФормаВводаБюджета") и (объект.НомерЗаявки.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный") ИЛИ объект.НомерЗаявки.ВидОперации = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт"))) Тогда	
		//Заменено на:
		(пВидОперацииФВБ = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный") ИЛИ
		 пВидОперацииФВБ = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Контракт")) 
	Тогда			
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2018-11-19 (#3102)		
		СценарийИнвест = истина;
	иначе
		СценарийИнвест = ложь;	
	КонецЕсли;
	
	
	
	Если СценарийИнвест Тогда
		Форма.Отчет.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Факт_Инвест");	
		Форма.Отчет.СценарийЭталон = ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_Инвест");		
	Иначе		
		Форма.Отчет.Сценарий = ПредопределенноеЗначение("Справочник.СценарииПланирования.Факт_У");	
		Форма.Отчет.СценарийЭталон = ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_У");		
	КонецЕсли;
	Форма.Отчет.СценарийЗаявка = СценарийЗаявки;	
	
	//периодичность = 9, т.е. месяц
	ИмяПараметра = "Периодичность";
	Форма.Отчет[ИмяПараметра] = 9;
															
	бит_ОтчетыКлиент.СформироватьОтчет(Форма, Форма.Элементы.ГруппаКоманднаяПанельОтчетаЛевая, "Авто");
	// БИТ_YK_к

КонецПроцедуры





 //BIT_Amosov 2014/09/22 {{
Процедура бит_ПроверитьПоБюджету_Новый(Ссылка) Экспорт
  	
	Если ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Ссылка, "ВидОперации") = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Операционный") Тогда
		бит_ПроверитьПоБюджету_Новый_Опер(Ссылка);
	ИначеЕсли ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Ссылка, "ВидОперации") = ПредопределенноеЗначение("Перечисление.бит_БК_ВидыОперацийФормаВводаБюджета.Заявка_Инвестиционный") Тогда
		бит_ПроверитьПоБюджету_Новый_Инвест(Ссылка);
	КонецЕсли;

КонецПроцедуры

Процедура бит_ПроверитьПоБюджету_Новый_Опер(Ссылка)

	Структура = бит_ФормаВводаБюджетаВызовСервера.бит_ПроверитьПоБюджету_Новый_Опер_НаСервере(Ссылка);
	//Для Каждого СтрЦФО Из Структура.СписокЦФО Цикл
		
		//Для Каждого СтрПроект Из Структура.СписокПроектов Цикл
			
			бит_ПроверитьПоБюджету_Новый_ОткрытьОтчет_Опер(Ссылка, Структура.СписокЦФО); //, СтрПроект);
				
		//КонецЦикла;

	//КонецЦикла;
	
КонецПроцедуры

Процедура бит_ПроверитьПоБюджету_Новый_Инвест(Ссылка)

	Структура = бит_ФормаВводаБюджетаВызовСервера.бит_ПроверитьПоБюджету_Новый_Инвест_НаСервере(Ссылка);
	
	//Для Каждого СтрЦФО Из Структура.СписокЦФО Цикл
		
		Для Каждого СтрПроект Из Структура.СписокПроектов Цикл
			
			Для Каждого СтрОбъект Из Структура.СписокОбъектов Цикл
				
				бит_ПроверитьПоБюджету_Новый_ОткрытьОтчет_Инвест(Структура.СписокЦФО, СтрПроект, СтрОбъект);
				
			КонецЦикла;

	//	КонецЦикла;

	КонецЦикла;
	
	
КонецПроцедуры

Процедура бит_ПроверитьПоБюджету_Новый_ОткрытьОтчет_Инвест(СтрЦФО, СтрПроект, СтрОбъект)
	
	Попытка
		//ИмяФайла = ПолучитьИмяВременногоФайла("erf");		
		//Справочники.ВнешниеОбработки.НайтиПоКоду("000000215").ХранилищеВнешнейОбработки.Получить().Записать(ИмяФайла);
		//Отчет = ВнешниеОтчеты.Создать(ИмяФайла);
		//Форма=Отчет.ПолучитьФорму("ФормаОтчета");
		//Форма.Открыть();
		Отчет_=бит_ФормаВводаБюджетаВызовСервера.ПолучитьВнешнийОтчет("000000215", Истина);
		ИмяОбработки = ДополнительныеОтчетыИОбработкиВызовСервера.ПодключитьВнешнююОбработку(Отчет_);
		Форма=ПолучитьФорму("ВнешнийОтчет."+ ИмяОбработки +".Форма");
		Форма.Открыть();
	Исключение		
		Возврат;
	КонецПопытки;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СтрЦФО", СтрЦФО);
	СтруктураПараметров.Вставить("СтрПроект", СтрПроект);
	СтруктураПараметров.Вставить("СтрОбъект", СтрОбъект);
	СтруктураПараметров.Вставить("Сценарий",      ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_Инвест"));
	СтруктураПараметров.Вставить("СценарийЭталон",ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_Инвест"));
	//СтруктураПараметров.Вставить("СценарийЗаявка",Справочники.СценарииПланирования.Заявка_Инвест);
	//СтруктураПараметров.Вставить("ВалютаСценария",Справочники.СценарииПланирования.Бюджет_Инвест.Валюта);
	//СтруктураПараметров.Вставить("ВалютаСценарияЭталон",Справочники.СценарииПланирования.Заявка_Инвест.Валюта);

	
	Форма.УстановитьПараметры(СтруктураПараметров);
	
	Форма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура бит_ПроверитьПоБюджету_Новый_ОткрытьОтчет_Опер(Ссылка, СтрЦФО)
	
	Попытка
		//ИмяФайла = ПолучитьИмяВременногоФайла("erf");		
		//Справочники.ВнешниеОбработки.НайтиПоКоду("000000214").ХранилищеВнешнейОбработки.Получить().Записать(ИмяФайла);
		//Отчет = ВнешниеОтчеты.Создать(ИмяФайла);
		//Форма=Отчет.ПолучитьФорму("ФормаОтчета");
		//Форма.Открыть();
		Отчет_=бит_ФормаВводаБюджетаВызовСервера.ПолучитьВнешнийОтчет("000000214", Истина);
		ИмяОбработки = ДополнительныеОтчетыИОбработкиВызовСервера.ПодключитьВнешнююОбработку(Отчет_);
		Форма=ПолучитьФорму("ВнешнийОтчет."+ ИмяОбработки +".Форма");
		Форма.Открыть();
	Исключение		
		Возврат;
	КонецПопытки;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СтрЦФО", СтрЦФО);
	//СтруктураПараметров.Вставить("СтрПроект", СтрПроект);
	//СтруктураПараметров.Вставить("СтрОбъект", СтрОбъект);
	//СтруктураПараметров.Вставить("Сценарий",      Справочники.СценарииПланирования.Факт_Инвест);
	//СтруктураПараметров.Вставить("СценарийЭталон",Справочники.СценарииПланирования.Бюджет_Инвест);
	//СтруктураПараметров.Вставить("СценарийЗаявка",Справочники.СценарииПланирования.Заявка_Инвест);
	Дата = ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Ссылка, "Дата");
	СтруктураПараметров.Вставить("ДатаНач", НачалоГода(Дата));
	СтруктураПараметров.Вставить("ДатаКон",  КонецГода(Дата));
	
	СписокСценариев = Новый СписокЗначений;
	СписокСценариев.Добавить(ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_А"));
	СписокСценариев.Добавить(ПредопределенноеЗначение("Справочник.СценарииПланирования.Бюджет_У"));
	СписокСценариев.Добавить(ПредопределенноеЗначение("Справочник.СценарииПланирования.Заявка_У"));
	СписокСценариев.Добавить(ПредопределенноеЗначение("Справочник.СценарииПланирования.Факт_А"));
	СписокСценариев.Добавить(ПредопределенноеЗначение("Справочник.СценарииПланирования.рс_ЭкономическийУчет"));
	
	СтруктураПараметров.Вставить("СписокСценариев",  СписокСценариев);
	
	
	Форма.УстановитьПараметры(СтруктураПараметров);
	
	Форма.ОбновитьОтчет();	
		
КонецПроцедуры
 //BIT_Amosov 2014/09/22 }}

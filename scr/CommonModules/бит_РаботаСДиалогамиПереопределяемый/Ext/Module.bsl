////////////////////////////////////////////////////////////////////////////////
//
// Учитывает особенности реализации в конфигурации-носителе.
// При обновлении библиотеки переносить только состав процедур и функций без содержимого.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Обработка.бит_ИзменениеТабЧастиДанныеБюджета
//
Процедура СоздатьЭлементыУправленияИзменениеТабЧастиДанныеБюджета(ЭлементыФормы) Экспорт

	МестоРасположения = ЭлементыФормы.АналитикиТЧГруппаКоличество;

	Реквизиты = ХарактерныеРеквизиты();
	Для Каждого Реквизит ИЗ Реквизиты Цикл
		// Группа колонок.
		ГруппаКолонок = ЭлементыФормы.Добавить("АналитикиТЧГруппа" + Реквизит.Значение, Тип("ГруппаФормы"), ЭлементыФормы.АналитикиТЧ);
		ГруппаКолонок.Группировка = ГруппировкаКолонок.Вертикальная;
		ГруппаКолонок.ОтображатьВШапке = Истина;
		ГруппаКолонок.Заголовок = Реквизит.Представление;
		
		// До изменения.
		КолонкаДоИзменения = ЭлементыФормы.Добавить("АналитикиТЧ" + Реквизит.Значение + "_Старый", Тип("ПолеФормы"), ГруппаКолонок); 
		КолонкаДоИзменения.ПутьКДанным         = "Объект.АналитикиТЧ." + Реквизит.Значение + "_Старый";
		КолонкаДоИзменения.Вид                 = ВидПоляФормы.ПолеВвода; 
		КолонкаДоИзменения.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		КолонкаДоИзменения.ТолькоПросмотр      = Истина;
		КолонкаДоИзменения.ОтображатьВШапке    = Ложь;
		
		КолонкаДоИзменения.УстановитьДействие("ПриИзменении", "Подключаемый_АналитикаСтрокиПриИзменении");
		КолонкаДоИзменения.УстановитьДействие("НачалоВыбора", "Подключаемый_АналитикаСтрокиНачалоВыбора");
		КолонкаДоИзменения.УстановитьДействие("Очистка", 	  "Подключаемый_АналитикаСтрокиОчистка");
		КолонкаДоИзменения.УстановитьДействие("АвтоПодбор",   "Подключаемый_АналитикаСтрокиАвтоПодбор");

		// После изменения.
		КолонкаПослеИзменения = ЭлементыФормы.Добавить("АналитикиТЧ" + Реквизит.Значение, Тип("ПолеФормы"), ГруппаКолонок); 
		КолонкаПослеИзменения.ПутьКДанным         = "Объект.АналитикиТЧ." + Реквизит.Значение;
		КолонкаПослеИзменения.Вид                 = ВидПоляФормы.ПолеВвода; 
		КолонкаПослеИзменения.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		КолонкаПослеИзменения.ОтображатьВШапке    = Ложь;
		
		КолонкаПослеИзменения.УстановитьДействие("ПриИзменении", "Подключаемый_АналитикаСтрокиПриИзменении");
		КолонкаПослеИзменения.УстановитьДействие("НачалоВыбора", "Подключаемый_АналитикаСтрокиНачалоВыбора");
		КолонкаПослеИзменения.УстановитьДействие("Очистка", 	 "Подключаемый_АналитикаСтрокиОчистка");
		КолонкаПослеИзменения.УстановитьДействие("АвтоПодбор", 	 "Подключаемый_АналитикаСтрокиАвтоПодбор");
		
		ЭлементыФормы.Переместить(ГруппаКолонок, ЭлементыФормы.АналитикиТЧ, МестоРасположения);
	КонецЦикла;  
		
КонецПроцедуры

// КорректировкаБюджета.
//
Процедура СоздатьЭлементыУправленияКорректировкаБюджета(ЭлементыФормы) Экспорт

	МестоРасположения = ЭлементыФормы.БДДСГруппаКоличество;

	Реквизиты = ХарактерныеРеквизиты();
	Для Каждого Реквизит ИЗ Реквизиты Цикл
		// Группа колонок.
		ГруппаКолонок = ЭлементыФормы.Добавить("БДДСГруппа" + Реквизит.Значение, Тип("ГруппаФормы"), ЭлементыФормы.БДДС);
		ГруппаКолонок.Группировка = ГруппировкаКолонок.Вертикальная;
		ГруппаКолонок.ОтображатьВШапке = Истина;
		ГруппаКолонок.Заголовок = Реквизит.Представление;
		
		// До изменения.
		КолонкаДоИзменения = ЭлементыФормы.Добавить("БДДС" + Реквизит.Значение + "_Старый", Тип("ПолеФормы"), ГруппаКолонок); 
		КолонкаДоИзменения.ПутьКДанным         = "Объект.БДДС." + Реквизит.Значение + "_Старый";
		КолонкаДоИзменения.Вид                 = ВидПоляФормы.ПолеВвода; 
		КолонкаДоИзменения.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		КолонкаДоИзменения.ТолькоПросмотр      = Истина;
		КолонкаДоИзменения.ОтображатьВШапке    = Ложь;
		
		КолонкаДоИзменения.УстановитьДействие("ПриИзменении", "Подключаемый_БДДСАналитикаСтрокиПриИзменении");
		КолонкаДоИзменения.УстановитьДействие("НачалоВыбора", "Подключаемый_БДДСАналитикаСтрокиНачалоВыбора");
		КолонкаДоИзменения.УстановитьДействие("Очистка", 	  "Подключаемый_БДДСАналитикаСтрокиОчистка");
		КолонкаДоИзменения.УстановитьДействие("АвтоПодбор",   "Подключаемый_БДДСАналитикаСтрокиАвтоПодбор");

		// После изменения.
		КолонкаПослеИзменения = ЭлементыФормы.Добавить("БДДС" + Реквизит.Значение, Тип("ПолеФормы"), ГруппаКолонок); 
		КолонкаПослеИзменения.ПутьКДанным         = "Объект.БДДС." + Реквизит.Значение;
		КолонкаПослеИзменения.Вид                 = ВидПоляФормы.ПолеВвода; 
		КолонкаПослеИзменения.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		КолонкаПослеИзменения.ОтображатьВШапке    = Ложь;
		
		КолонкаДоИзменения.УстановитьДействие("ПриИзменении", "Подключаемый_БДДСАналитикаСтрокиПриИзменении");
		КолонкаДоИзменения.УстановитьДействие("НачалоВыбора", "Подключаемый_БДДСАналитикаСтрокиНачалоВыбора");
		КолонкаДоИзменения.УстановитьДействие("Очистка", 	  "Подключаемый_БДДСАналитикаСтрокиОчистка");
		КолонкаДоИзменения.УстановитьДействие("АвтоПодбор",   "Подключаемый_БДДСАналитикаСтрокиАвтоПодбор");
		
		ЭлементыФормы.Переместить(ГруппаКолонок, ЭлементыФормы.БДДС, МестоРасположения);
	КонецЦикла;  
	
	// ++ БП 
	СоздатьЭлементВШапке("Проект", "Проект", ЭлементыФормы, ЭлементыФормы.СтраницаДополнительно);
	// -- БП 
		
КонецПроцедуры

// УстановкаЗависимыхОборотов.
//
Процедура СоздатьЭлементыУправленияУстановкаЗависимыхОборотов(ЭлементыФормы) Экспорт

	МестоРасположения = ЭлементыФормы.ЗависимыеОборотыГруппаИД;

	Реквизиты = ХарактерныеРеквизиты();
	Для Каждого Реквизит ИЗ Реквизиты Цикл
		// Группа колонок.
		ГруппаКолонок = ЭлементыФормы.Добавить("ЗависимыеОборотыГруппа" + Реквизит.Значение, Тип("ГруппаФормы"), ЭлементыФормы.ЗависимыеОбороты);
		ГруппаКолонок.Группировка = ГруппировкаКолонок.Вертикальная;
		ГруппаКолонок.ОтображатьВШапке = Ложь;
		ГруппаКолонок.Заголовок = Реквизит.Представление;
		
		// Основная.
		КолонкаОсновная = ЭлементыФормы.Добавить("ЗависимыеОбороты" + Реквизит.Значение, Тип("ПолеФормы"), ГруппаКолонок); 
		КолонкаОсновная.ПутьКДанным         = "Объект.ЗависимыеОбороты." + Реквизит.Значение;
		КолонкаОсновная.Вид                 = ВидПоляФормы.ПолеВвода; 
		КолонкаОсновная.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		КолонкаОсновная.ОтображатьВШапке    = Истина;
		
		КолонкаОсновная.УстановитьДействие("НачалоВыбора", "Подключаемый_АналитикаСтрокиНачалоВыбора");
		КолонкаОсновная.УстановитьДействие("Очистка", 	  "Подключаемый_АналитикаСтрокиОчистка");
		КолонкаОсновная.УстановитьДействие("АвтоПодбор",   "Подключаемый_АналитикаСтрокиАвтоПодбор");

		// Зависимая.
		КолонкаЗависимая = ЭлементыФормы.Добавить("ЗависимыеОбороты" + Реквизит.Значение + "_Зависимый", Тип("ПолеФормы"), ГруппаКолонок); 
		КолонкаЗависимая.ПутьКДанным         = "Объект.ЗависимыеОбороты." + Реквизит.Значение + "_Зависимый";
		КолонкаЗависимая.Вид                 = ВидПоляФормы.ПолеВвода; 
		КолонкаЗависимая.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		КолонкаЗависимая.ОтображатьВШапке    = Истина;
		
		КолонкаЗависимая.УстановитьДействие("НачалоВыбора", "Подключаемый_АналитикаСтрокиНачалоВыбора");
		КолонкаЗависимая.УстановитьДействие("Очистка", 	  "Подключаемый_АналитикаСтрокиОчистка");
		КолонкаЗависимая.УстановитьДействие("АвтоПодбор",   "Подключаемый_АналитикаСтрокиАвтоПодбор");

		ЭлементыФормы.Переместить(ГруппаКолонок, ЭлементыФормы.ЗависимыеОбороты, МестоРасположения);
	КонецЦикла;  
	
КонецПроцедуры

// УстановкаЗависимыхОборотов.
//
Процедура СоздатьЭлементыУправленияУстановкаЗависимыхОборотовДеревоЗависимостей(ЭлементыФормы, Форма) Экспорт

	МестоРасположения = ЭлементыФормы.ДеревоЗависимостейИД;
	
	Реквизиты = ХарактерныеРеквизиты();
	ДобавляемыеРеквизиты = Новый Массив(); 
	Для Каждого Реквизит ИЗ Реквизиты Цикл
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Реквизит.Значение, 
			Метаданные.ПланыВидовХарактеристик.бит_ВидыДополнительныхАналитик.Тип,"ДеревоЗависимостей",Реквизит.Представление));
	КонецЦикла;	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для Каждого Реквизит ИЗ Реквизиты Цикл
		НоваяКолонка = ЭлементыФормы.Добавить("ДеревоЗависимостей" + Реквизит.Значение, Тип("ПолеФормы"), ЭлементыФормы.ДеревоЗависимостей); 
		НоваяКолонка.Заголовок = Реквизит.Представление; 
		НоваяКолонка.ПутьКДанным = "ДеревоЗависимостей." + Реквизит.Значение;
		НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода; 
		НоваяКолонка.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		
		ЭлементыФормы.Переместить(НоваяКолонка, ЭлементыФормы.ДеревоЗависимостей, МестоРасположения);	
		
		НоваяКолонка.УстановитьДействие("НачалоВыбора", "Подключаемый_АналитикаСтрокиНачалоВыбора");
		НоваяКолонка.УстановитьДействие("Очистка", 	   "Подключаемый_АналитикаСтрокиОчистка");
		НоваяКолонка.УстановитьДействие("АвтоПодбор",   "Подключаемый_АналитикаСтрокиАвтоПодбор");
	КонецЦикла; 
	
КонецПроцедуры

// ПротоколРасхожденийБюджета.
//
Процедура СоздатьЭлементыУправленияПротоколРасхожденийБюджета(ЭлементыФормы) Экспорт

	МестоРасположения 	= ЭлементыФормы.ДанныеБюджетаГруппаПлан;
	ДобавленныеЭлементы = Новый Массив(); 
	
	// Группа Контрагент/ДоговорКонтрагента/Проект/НоменклатурнаяГруппа.
	Группа1 = ЭлементыФормы.Добавить("ДанныеБюджетаГруппа1", Тип("ГруппаФормы"), ЭлементыФормы.ДанныеБюджета);
	Группа1.Группировка = ГруппировкаКолонок.Вертикальная;
	ЭлементыФормы.Переместить(Группа1, ЭлементыФормы.ДанныеБюджета, МестоРасположения);
	
	// Контрагент.
	Кандидат = ЭлементыФормы.Добавить("ДанныеБюджетаКонтрагент", Тип("ПолеФормы"), Группа1); 
	Кандидат.Заголовок = НСтр("ru = 'Контрагент'"); 
	Кандидат.ПутьКДанным = "Объект.ДанныеБюджета.Контрагент";
	Кандидат.Вид = ВидПоляФормы.ПолеВвода; 
	Кандидат.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
	Кандидат.Видимость = Ложь; 
	ДобавленныеЭлементы.Добавить(Кандидат);
	
	// ДоговорКонтрагента.
	Кандидат = ЭлементыФормы.Добавить("ДанныеБюджетаДоговорКонтрагента", Тип("ПолеФормы"), Группа1); 
	Кандидат.Заголовок = НСтр("ru = 'Договор контрагента'"); 
	Кандидат.ПутьКДанным = "Объект.ДанныеБюджета.ДоговорКонтрагента";
	Кандидат.Вид = ВидПоляФормы.ПолеВвода; 
	Кандидат.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
	Кандидат.Видимость = Ложь; 
	ДобавленныеЭлементы.Добавить(Кандидат);
	
	// Проект.	
	Кандидат = ЭлементыФормы.Добавить("ДанныеБюджетаПроект", Тип("ПолеФормы"), Группа1); 
	Кандидат.Заголовок = НСтр("ru = 'Проект'"); 
	Кандидат.ПутьКДанным = "Объект.ДанныеБюджета.Проект";
	Кандидат.Вид = ВидПоляФормы.ПолеВвода; 
	Кандидат.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
	Кандидат.Видимость = Ложь; 
	ДобавленныеЭлементы.Добавить(Кандидат);
	
	// НоменклатурнаяГруппа.	
	Кандидат = ЭлементыФормы.Добавить("ДанныеБюджетаНоменклатурнаяГруппа", Тип("ПолеФормы"), Группа1); 
	Кандидат.Заголовок = НСтр("ru = 'Номенклатурная группа'"); 
	Кандидат.ПутьКДанным = "Объект.ДанныеБюджета.НоменклатурнаяГруппа";
	Кандидат.Вид = ВидПоляФормы.ПолеВвода; 
	Кандидат.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
	Кандидат.Видимость = Ложь; 
	ДобавленныеЭлементы.Добавить(Кандидат);
	
	// Группа БанковскийСчет/Аналитика_1/Аналитика_2/Аналитика_3.
	Группа2 = ЭлементыФормы.Добавить("ДанныеБюджетаГруппа2", Тип("ГруппаФормы"), ЭлементыФормы.ДанныеБюджета);
	Группа2.Группировка = ГруппировкаКолонок.Вертикальная;
	ЭлементыФормы.Переместить(Группа2, ЭлементыФормы.ДанныеБюджета, МестоРасположения);	
	
	// БанковскийСчет.	
	Кандидат = ЭлементыФормы.Добавить("ДанныеБюджетаБанковскийСчет", Тип("ПолеФормы"), Группа2); 
	Кандидат.Заголовок = НСтр("ru = 'Банковский счет'"); 
	Кандидат.ПутьКДанным = "Объект.ДанныеБюджета.БанковскийСчет";
	Кандидат.Вид = ВидПоляФормы.ПолеВвода; 
	Кандидат.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
	Кандидат.Видимость = Ложь; 
	ДобавленныеЭлементы.Добавить(Кандидат);
	
	Для Индекс = 1 По 3 Цикл		
		Кандидат = ЭлементыФормы.Добавить("ДанныеБюджетаАналитика_" + Индекс, Тип("ПолеФормы"), Группа2); 
		Кандидат.Заголовок   = СтрШаблон(НСтр("ru = 'Аналитика_%1'"), Индекс); 
		Кандидат.ПутьКДанным = "Объект.ДанныеБюджета.Аналитика_" + Индекс;
		Кандидат.Вид = ВидПоляФормы.ПолеВвода; 
		Кандидат.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		Кандидат.Видимость = Ложь; 
		ДобавленныеЭлементы.Добавить(Кандидат);
	КонецЦикла; 

	Группа3 = ЭлементыФормы.Добавить("ДанныеБюджетаГруппа3", Тип("ГруппаФормы"), ЭлементыФормы.ДанныеБюджета);
	Группа3.Группировка = ГруппировкаКолонок.Вертикальная;
	ЭлементыФормы.Переместить(Группа3, ЭлементыФормы.ДанныеБюджета, МестоРасположения);	

	Для Индекс = 4 По 7 Цикл		
		Кандидат = ЭлементыФормы.Добавить("ДанныеБюджетаАналитика_" + Индекс, Тип("ПолеФормы"), Группа3); 
		Кандидат.Заголовок   = СтрШаблон(НСтр("ru = 'Аналитика_%1'"), Индекс); 
		Кандидат.ПутьКДанным = "Объект.ДанныеБюджета.Аналитика_" + Индекс;
		Кандидат.Вид = ВидПоляФормы.ПолеВвода; 
		Кандидат.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		Кандидат.Видимость = Ложь; 
		ДобавленныеЭлементы.Добавить(Кандидат);
	КонецЦикла; 
	
	Для каждого Кандидат Из ДобавленныеЭлементы Цикл
		Кандидат.УстановитьДействие("ПриИзменении", "Подключаемый_АналитикаСтрокиПриИзменении");
		Кандидат.УстановитьДействие("НачалоВыбора", "Подключаемый_АналитикаСтрокиНачалоВыбора");
		Кандидат.УстановитьДействие("Очистка", 		"Подключаемый_АналитикаСтрокиОчистка");
		Кандидат.УстановитьДействие("АвтоПодбор", 	"Подключаемый_АналитикаСтрокиАвтоПодбор");
	КонецЦикла; 
	
КонецПроцедуры

// ВерсияОтчета.
//
Процедура СоздатьЭлементыУправленияВерсияОтчета(ЭлементыФормы, Форма) Экспорт

	МестоРасположения = ЭлементыФормы.ТаблицаДанныеОтчетаЗначениеПоказателя;
	
	Реквизиты = Новый СписокЗначений(); 		
	ШаблонЗначения 		 = "Аналитика_%1";
	ШаблонПредставления  = Нстр("ru = 'Аналитика %1'");
	
	Для Индекс = 1 По 7 Цикл
		Реквизиты.Добавить(СтрШаблон(ШаблонЗначения, Индекс),
			СтрШаблон(ШаблонПредставления, Индекс));
	КонецЦикла; 

	ДобавляемыеРеквизиты = Новый Массив(); 
	Для Каждого Реквизит ИЗ Реквизиты Цикл
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Реквизит.Значение, 
			Метаданные.ПланыВидовХарактеристик.бит_ВидыДополнительныхАналитик.Тип,"ТаблицаДанныеОтчета",Реквизит.Представление));
	КонецЦикла;	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для Каждого Реквизит ИЗ Реквизиты Цикл
		
		НовыйЭлемент = ЭлементыФормы.Добавить("ТаблицаДанныеОтчета" + Реквизит.Значение, Тип("ПолеФормы"), ЭлементыФормы.ТаблицаДанныеОтчета); 
		НовыйЭлемент.ПутьКДанным         = "ТаблицаДанныеОтчета." + Реквизит.Значение;
		НовыйЭлемент.Вид                 = ВидПоляФормы.ПолеВвода; 
		НовыйЭлемент.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		НовыйЭлемент.ОтображатьВШапке    = Истина;

		ЭлементыФормы.Переместить(НовыйЭлемент, ЭлементыФормы.ТаблицаДанныеОтчета, МестоРасположения);
	КонецЦикла;  

КонецПроцедуры

// РаспределениеБюджета.
//
Процедура СоздатьЭлементыУправленияРаспределениеБюджета(ЭлементыФормы) Экспорт

	ГруппаПроект = ЭлементыФормы.Добавить("ГруппаПроект", Тип("ГруппаФормы"), ЭлементыФормы.ГруппаПрочее);
	ГруппаПроект.Вид 		 = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаПроект.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно;
	ГруппаПроект.Заголовок 	 = НСтр("ru = 'Проект'");
	ГруппаПроект.ОтображатьЗаголовок = Ложь;
	ГруппаПроект.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	Кандидат = ЭлементыФормы.Добавить("Проект", Тип("ПолеФормы"), ГруппаПроект);
	Кандидат.ПутьКДанным = "Объект.Проект";
	Кандидат.Вид 		 = ВидПоляФормы.ПолеВвода;
	
	Кандидат = ЭлементыФормы.Добавить("Данные_ЗаполнениеПроект", Тип("ПолеФормы"), ГруппаПроект);
	Кандидат.ПутьКДанным = "Объект.ЗаполнениеПроектДанные";
	Кандидат.Вид 		 = ВидПоляФормы.ПолеФлажка;
	Кандидат.Заголовок	 = НСтр("ru = 'Данные'");
	
	Кандидат = ЭлементыФормы.Добавить("База_ЗаполнениеПроект", Тип("ПолеФормы"), ГруппаПроект);
	Кандидат.ПутьКДанным = "Объект.ЗаполнениеПроектБаза";
	Кандидат.Вид 		 = ВидПоляФормы.ПолеФлажка;
	Кандидат.Заголовок	 = НСтр("ru = 'База'");
	Кандидат.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	
	ЭлементыФормы.Переместить(ГруппаПроект, ЭлементыФормы.ГруппаПрочее);
	
КонецПроцедуры
 
// Общий случай.
//
Процедура СоздатьЭлементыУправления(ЭлементыФормы, ТаблицаФормы, ТаблицаОбъекта, МестоРасположения = Неопределено) Экспорт 
	
	Реквизиты = ХарактерныеРеквизиты();
	Для Каждого Реквизит ИЗ Реквизиты Цикл
		ИмяКандидат = ТаблицаФормы + Реквизит.Значение;
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление (
		КолонкаКонтрагент = ЭлементыФормы.Найти(ИмяКандидат);
		Если НЕ КолонкаКонтрагент = Неопределено Тогда 
			Продолжить;
		КонецЕсли;	
		//1С-ИжТиСи, Кондратьев, 03.2020, обновление )
		Кандидат = ЭлементыФормы.Добавить(ИмяКандидат, Тип("ПолеФормы"), ЭлементыФормы[ТаблицаФормы]); 
		Кандидат.Заголовок = Реквизит.Представление; 
		Кандидат.ПутьКДанным = "Объект." + ТаблицаОбъекта + "." + Реквизит.Значение;
		Кандидат.Вид = ВидПоляФормы.ПолеВвода; 
		Кандидат.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе; 
		
		Если МестоРасположения <> Неопределено Тогда
			ЭлементыФормы.Переместить(Кандидат, ЭлементыФормы[ТаблицаФормы], МестоРасположения);	
		КонецЕсли; 
		
		Кандидат.УстановитьДействие("ПриИзменении", "Подключаемый_АналитикаСтрокиПриИзменении");
		Кандидат.УстановитьДействие("НачалоВыбора", "Подключаемый_АналитикаСтрокиНачалоВыбора");
		Кандидат.УстановитьДействие("Очистка", 		"Подключаемый_АналитикаСтрокиОчистка");
		Кандидат.УстановитьДействие("АвтоПодбор", 	"Подключаемый_АналитикаСтрокиАвтоПодбор");
	КонецЦикла; 
	
КонецПроцедуры

// Элементы шапки документов.
//
Процедура СоздатьЭлементыУправленияВкладкиОсновные(ЭлементыФормы, ГруппаФормы) Экспорт

	Реквизиты = ХарактерныеРеквизиты();
	СтандартныеОбработчики = СтандартныеОбработчикиПоля();
	
	Для Каждого Реквизит ИЗ Реквизиты Цикл
		СоздатьЭлементВШапке(Реквизит.Значение, Реквизит.Значение, ЭлементыФормы, ГруппаФормы, 
			СтандартныеОбработчики);
	КонецЦикла; 
	
	// 1c-izhtc spawn (
	Если бит_ОбщегоНазначения.ЭтоСемействоБП() ИЛИ бит_ОбщегоНазначения.ЭтоERP() Тогда	
		ЭлементыФормы.Проект.Видимость				= Ложь;
		ЭлементыФормы.НоменклатурнаяГруппа.Видимость	= Ложь;
		ЭлементыФормы.БанковскийСчет.Видимость		= Ложь;
		ЭлементыФормы.Контрагент.УстановитьДействие("НачалоВыбора", "КонтрагентНачалоВыбора");
	КонецЕсли;
	// 1c-izhtc spawn )
	
КонецПроцедуры

// Элемент шапки документа.
//
Процедура СоздатьЭлементВШапке(ПолеФормы, ПолеОбъекта, ЭлементыФормы, ГруппаФормы, ПодключаемыеОбработчики = Неопределено) Экспорт
	
	Если ЭлементыФормы.Найти(ПолеФормы) <> Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Кандидат = ЭлементыФормы.Добавить(ПолеФормы, Тип("ПолеФормы"), ГруппаФормы); 
	Кандидат.ПутьКДанным = "Объект." + ПолеОбъекта;
	Кандидат.Вид = ВидПоляФормы.ПолеВвода; 
	
	Если ТипЗнч(ПодключаемыеОбработчики) = Тип("Структура") Тогда
		Для каждого Обработчик Из ПодключаемыеОбработчики Цикл
			Кандидат.УстановитьДействие(Обработчик.Ключ, Обработчик.Значение);
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

Функция СтандартныеОбработчикиПоля() Экспорт

	СтандартныеОбработчики = Новый Структура; 
	СтандартныеОбработчики.Вставить("ПриИзменении", "Подключаемый_АналитикаПриИзменении");
	СтандартныеОбработчики.Вставить("НачалоВыбора", "Подключаемый_АналитикаНачалоВыбора");
	СтандартныеОбработчики.Вставить("Очистка", 		"Подключаемый_АналитикаОчистка");
	СтандартныеОбработчики.Вставить("АвтоПодбор", 	"Подключаемый_АналитикаАвтоПодбор");

	Возврат СтандартныеОбработчики;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ХарактерныеРеквизиты()

	ХарактерныеРеквизиты = Новый СписокЗначений(); 	
	ХарактерныеРеквизиты.Добавить("Контрагент",			 Нстр("ru = 'Контрагент'"));
	ХарактерныеРеквизиты.Добавить("ДоговорКонтрагента",	 Нстр("ru = 'Договор'"));
	ХарактерныеРеквизиты.Добавить("Проект",				 Нстр("ru = 'Проект'"));
	ХарактерныеРеквизиты.Добавить("НоменклатурнаяГруппа",Нстр("ru = 'Номенклатурная группа'"));
	ХарактерныеРеквизиты.Добавить("БанковскийСчет",		 Нстр("ru = 'Банковский счет'"));
	
	ШаблонЗначения 		 = "Аналитика_%1";
	ШаблонПредставления  = Нстр("ru = 'Аналитика %1'");
	
	Для Индекс = 1 По 7 Цикл
		ХарактерныеРеквизиты.Добавить(СтрШаблон(ШаблонЗначения, Индекс),
			СтрШаблон(ШаблонПредставления, Индекс));
	КонецЦикла; 

	Возврат ХарактерныеРеквизиты;

КонецФункции

#КонецОбласти 

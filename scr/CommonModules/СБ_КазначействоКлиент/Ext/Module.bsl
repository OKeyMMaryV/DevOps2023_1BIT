////////////////////////////////////////////////////////////////////////////////
// Подсистема "Казначейство".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ОткрытьФормуВводаНастроекКазначейства() Экспорт
//ОКЕЙ Рычаков А.C. (СофтЛаб) Начало 2019-12-03 (#3437)
	ОткрытьФорму("РегистрСведений.СБ_НастройкиКазначейства.Форма.ФормаВводаНастроекКазначейства"); 	
//	ОткрытьФорму("РегистрСведений.СБ_НастройкиКазначейства.Форма.ФормаРедактированияНастроек"); 	
//ОКЕЙ Рычаков А.C. (СофтЛаб) Конец 2019-12-03 (#3437)
КонецПроцедуры

Процедура ОткрытьФормуПрофилиРазноски() Экспорт

	ОткрытьФорму("РегистрСведений.СБ_ЗагрузкаПД_СопоставлениеКодовАналитикиAXAPTA.Форма.ФормаПрофилиРазноски");
	
КонецПроцедуры 

//Обработчики "При открытии" обычный форм объектов 

#Область Блок1  //Перенесено ИжТиСи_СВД_Сервер  в ОК_ВывестиРеквизиты
//Например:
// +СБ. Широков Николай. 2014-09-11. ТЗ "Казначейство" 2.2.3.1. 
//	//СБ_КазначействоКлиент.бит_РеестрПлатежейФормаДокументаПриОткрытии(ЭтаФорма);                           // - Старый вариант
//	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(ЭтаФорма, "Документ.бит_РеестрПлатежей.ФормаСпискаУправляемая");   // - Новый вариант
// -СБ. Широков Николай 

//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер  
Процедура ЗаявкаНаРасходованиеДСФормаДокументаПриОткрытии(Форма) Экспорт
	
		ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма,"Документ.бит_ЗаявкаНаРасходованиеСредств.ФормаДокументаУправляемая");

КонецПроцедуры
//1c-izhtc А.В. Пушин )

//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер  
Процедура ЗаявкаНаРасходованиеДСФормаСпискаПриОткрытии(Форма) Экспорт
	
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма, "Документ.бит_ЗаявкаНаРасходованиеСредств.ФормаСпискаУправляемая");
	
КонецПроцедуры
//1c-izhtc А.В. Пушин )

//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер 
Процедура ЗаявкаНаРасходованиеДСФормаВыбораПриОткрытии(Форма) Экспорт
	
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма, "Документ.бит_ЗаявкаНаРасходованиеСредств.ФормаВыбораУправляемая");

КонецПроцедуры
//1c-izhtc А.В. Пушин )

//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер кнопка уже реализована в типовом механизме
Процедура ПлатежнаяПозицияФормаДокументаПриОткрытии(Форма) Экспорт
	
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма, "Документ.бит_ПлатежнаяПозиция.ФормаДокументаУправляемая");

КонецПроцедуры
//1c-izhtc А.В. Пушин )

//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер
Процедура БанковскиеСчетаФормаЭлементаПриОтркытии(Форма) Экспорт
	
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма, "Справочник.БанковскиеСчета.ФормаЭлемента");

КонецПроцедуры
//1c-izhtc А.В. Пушин )

//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер
Процедура бит_ПланируемоеПоступлениеДенежныхСредствФормаДокументаПриОткрытии(Форма) Экспорт
	
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма, "Документ.бит_ПланируемоеПоступлениеДенежныхСредств.ФормаДокументаУправляемая");

КонецПроцедуры
//1c-izhtc А.В. Пушин )
 
//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер
Процедура бит_ЗаявкаНаРасходованиеСредствОбщаяФормаДокументаПриОткрытии(Форма) Экспорт
	
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма, "Документ.бит_ЗаявкаНаРасходованиеСредствОбщая.ФормаДокументаУправляемая");

КонецПроцедуры
//1c-izhtc А.В. Пушин )

//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер
Процедура бит_РеестрПлатежейФормаДокументаПриОткрытии(Форма) Экспорт
	
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма, "Документ.бит_РеестрПлатежей.ФормаДокументаУправляемая");

КонецПроцедуры
//1c-izhtc А.В. Пушин )
 
//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер
Процедура бит_РеестрПлатежейФормаСпискаПриОткрытии(Форма) Экспорт
	
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма, "Документ.бит_РеестрПлатежей.ФормаСпискаУправляемая");

КонецПроцедуры
//1c-izhtc А.В. Пушин )
#КонецОбласти

////Процедура бит_ПанельФункцийПриОткрытии(Форма) Экспорт
////	
////	ПромежутокУ		= 5;
////	ВысотаЭлемента	= 18;
////
////	ЭлементыФормы 				= Форма.ЭлементыФормы;
////	
////	ОсновнаяПанель 					= ЭлементыФормы.ОсновнаяПанель;
////	ОсновнаяПанельТекСтраница		= ОсновнаяПанель.ТекущаяСтраница;	
////	ОсновнаяПанель.ТекущаяСтраница 	= ОсновнаяПанель.Страницы.Казначейство;
////	
////	ВложеннаяПанельКазначейство 				= ЭлементыФормы.ВложеннаяПанельКазначейство;
////	ВложеннаяПанельКазначействоТекСтраница 		= ВложеннаяПанельКазначейство.ТекущаяСтраница;	
////	ВложеннаяПанельКазначейство.ТекущаяСтраница = ВложеннаяПанельКазначейство.Страницы.ЗаявкиНаРасход;	
////	
////	НадписьСтатьиОборотов = ЭлементыФормы.бит_СтатьиОборотов;
////	
////	мВерх 	= НадписьСтатьиОборотов.Верх + ВысотаЭлемента + ПромежутокУ;
////	мЛево 	= НадписьСтатьиОборотов.Лево;
////	мШирина = НадписьСтатьиОборотов.Ширина;
////	мЦвет	= Новый Цвет(248, 242, 229);
////	
////	// РС "СБ_СопоставлениеСтатейОборотовБДРиБДДС"
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_СопоставлениеСтатейОборотовБДРиБДДС", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "Сопоставление статей оборотов БДР и БДДС";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.РегистрСведений;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Низ,,);
////	
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьРегистрСведений");
////	
////	// РС "СБ_НастройкиКазначейства"
////	мВерх 	= мВерх + ВысотаЭлемента + ПромежутокУ;
////	
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_НастройкиКазначейства", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "Настройки казначейства";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.РегистрСведений;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Низ,,);
////	
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьНастройкиКазначейства");
////	
////	// Профили разноски
////	мВерх 	= мВерх + ВысотаЭлемента + ПромежутокУ;
////	
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_ПрофилиРазноски", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "Профили разноски";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.Справочник;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьСтатьиОборотов, ГраницаЭлементаУправления.Низ,,);
////	
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьПрофилиРазноски");
////	
////	// Обработка "СБ_ФормированиеЗаявокНаОплату"
////	НадписьТочкаОтсчета = ЭлементыФормы.бит_ФормированиеПланируемыхПоступлений;
////		
////	мВерх 	= НадписьТочкаОтсчета.Верх + ВысотаЭлемента + ПромежутокУ;
////	мЛево 	= НадписьТочкаОтсчета.Лево;
////	мШирина = НадписьТочкаОтсчета.Ширина;
////
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_ФормированиеЗаявокНаОплату", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "Формирование заявок на оплату";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.Обработка;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Низ,,);
////	
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьОбработку");
////	
////	// Обработка "СБ_ФормированиеРеестраРазрешенныхОплатПоЗаявкам"
////	мВерх 	= мВерх + ВысотаЭлемента + ПромежутокУ;
////	
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_ФормированиеРеестраРазрешенныхОплатПоЗаявкам", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "Формирование реестра разрешенных оплат по заявкам";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.Обработка;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Низ,,);
////
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьОбработку");
////	
////	// Обработка "СБ_ВыгрузкаБанковскихВыписокВAXAPTA"
////	мВерх 	= мВерх + ВысотаЭлемента + ПромежутокУ;
////	
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_ВыгрузкаБанковскихВыписокВAXAPTA", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "Выгрузка банковских выписок в AXAPTA";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.Обработка;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Низ,,);
////
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьОбработку");
////	
////	//Отчеты
////	НадписьТочкаОтсчета = ЭлементыФормы.бит_СведенияОДвиженииДенежныхСредств;
////	НадписьТочкаОтсчета.Видимость = Ложь;
////	
////	мВерх 	= НадписьТочкаОтсчета.Верх;// + ВысотаЭлемента + ПромежутокУ;
////	мЛево 	= НадписьТочкаОтсчета.Лево;
////	мШирина = НадписьТочкаОтсчета.Ширина;
////	мЦвет	= Новый Цвет(248, 242, 229);
////	
////	// Отчет "СБ_КонтрольОтложенныхЗаявок"
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_КонтрольОтложенныхЗаявок", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "Контроль отложенных заявок";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.Отчет;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Низ,,);
////	
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьОтчет");
////	
////	// Отчет "СБ_ПланИФактДДС"
////	мВерх 	= мВерх + ВысотаЭлемента + ПромежутокУ;
////	
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_ПланИФактДДС", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "Плановые и фактические ДДС";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.Отчет;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Низ,,);
////	
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьОтчет");
////	
////	// Отчет "СБ_МежгрупповыеПоступленияИВыплаты"
////	мВерх 	= мВерх + ВысотаЭлемента + ПромежутокУ;
////	
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_МежгрупповыеПоступленияИВыплаты", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "Межгрупповые поступления и выплаты";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.Отчет;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Низ,,);
////	
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьОтчет");
////	
////	// Отчет "СБ_ПланФактВыплатДС"
////	мВерх 	= мВерх + ВысотаЭлемента + ПромежутокУ;
////	
////	Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "СБ_ПланФактВыплатДС", Истина, ВложеннаяПанельКазначейство);
////	Надпись.Верх	= мВерх;
////	Надпись.Лево	= мЛево;
////	Надпись.Высота 	= ВысотаЭлемента;
////	Надпись.Ширина 	= мШирина;
////	
////	Надпись.Заголовок 	= "План-Факт выплат ДС";
////	Надпись.Гиперссылка = Истина;
////	Надпись.Картинка 	= БиблиотекаКартинок.Отчет;
////	Надпись.ЦветФона	= мЦвет;
////	Надпись.ЦветТекста	= ЦветаСтиля.ЦветГиперссылки;
////	
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Лево, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Лево,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Право,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Верх,,);
////	Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ, НадписьТочкаОтсчета, ГраницаЭлементаУправления.Низ,,);
////	
////	Надпись.УстановитьДействие("Нажатие", "ОткрытьОтчет");
////	
////	//Вернем
////	ОсновнаяПанель.ТекущаяСтраница 				= ОсновнаяПанельТекСтраница;
////	ВложеннаяПанельКазначейство.ТекущаяСтраница = ВложеннаяПанельКазначействоТекСтраница;	
////	
////КонецПроцедуры


Процедура КлиентБанкПриОткрытии(Форма) Экспорт
	
// +СБ. Широков Николай. 2014-10-13. Доработка #1035 
	//1c-izhtc А.В. Пушин функционал перенесен в серверный модуль
	ДоступнаЗагрузка = Ложь;
	ДоступнаВыгрузка = Ложь;
	СБ_КазначействоСервер.КлиентБанкПриОткрытии(ДоступнаВыгрузка, ДоступнаЗагрузка);
	Форма.Элементы.ГруппаВыгрузка.Видимость = ДоступнаВыгрузка;
	Форма.Элементы.ГруппаЗагрузка.Видимость = ДоступнаЗагрузка;
// -СБ. Широков Николай 	
	
КонецПроцедуры

//1c-izhtc А.В. Пушин( Перенесено ИжТиСи_СВД_Сервер 
Процедура ПлатежноеПоручениеФормаСпискаПриОткрытии(Форма) Экспорт
	
// +СБ. Широков Николай. 2015-02-25. Консультация #1356
	ИжТиСи_СВД_Сервер.ОК_ВывестиРеквизиты(Форма,"Документ.ПлатежноеПоручение.ФормаСписка");
// -СБ. Широков Николай 

КонецПроцедуры
//1c-izhtc А.В. Пушин )
//// 
////Процедура БанковскиеВыпискиФормаСпискаПриОткрытии(Форма) Экспорт
////	Таблица = Форма.ЭлементыФормы.ЖурналДокументовСписок;
////	
////	КолонкаТаблицы = Таблица.Колонки.Вставить(1, "");	
////	КолонкаТаблицы.ДанныеФлажка 	= "СБ_ВыгруженВAXAPTA";
////	//КолонкаТаблицы.ОтображатьВШапке = Ложь;
////	КолонкаТаблицы.Ширина			= 3;
////	КолонкаТаблицы.ИзменениеРазмера	= ИзменениеРазмераКолонки.НеИзменять;
////	
////	Таблица.НастройкаОтбора.СБ_ВыгруженВAXAPTA.Доступность = Истина;

////КонецПроцедуры
//// 
//////Обработчики событий элементов форм

// +СБ. Широков Николай. 2014-09-04. ТЗ "Казначейство" 2.2.2.2.	
&НаКлиенте
Процедура СБ_ПрофильРазноскиНачалоВыбора(Форма, Элемент, СтандартнаяОбработка, ВыполнитьДополнительныеДействия = Ложь) Экспорт
	мТекущийПрофиль = Форма.Объект.СБ_ПрофильРазноски;
	
	СтандартнаяОбработка = Ложь;
	
	ОрганизацииНаФорме = Новый Структура("Организация, СБ_Организация");
	ЗаполнитьЗначенияСвойств(ОрганизацииНаФорме, Форма.Объект);
	Организация = ?(ОрганизацииНаФорме.Организация = Неопределено
						, ОрганизацииНаФорме.СБ_Организация
						, ОрганизацииНаФорме.Организация);
	
	// 1c-izhtc spawn 17.07.15 (
	//ТаблицаПрофилей			= ТаблицаПрофилейРазноски(Организация);
	//
	//ТекущийЭлементВСписке 	= ТаблицаПрофилей.Найти(Форма.СБ_ПрофильРазноски, "Код");
	//Если ТекущийЭлементВСписке = Неопределено Тогда
	//	ТекущийЭлементВСписке = ТаблицаПрофилей[0];
	//КонецЕсли; 
	//
	//ВыбраннаяСтрока = ТаблицаПрофилей.ВыбратьСтроку("Профили разноски:", ТекущийЭлементВСписке);
	ПараметрыФормы = Новый Структура("Организация, СБ_ПрофильРазноски", Организация, Форма.Объект.СБ_ПрофильРазноски);
	//ОписаниеОповещения = Новый ОписаниеОповещения("ПрисвоениеПрофиля", СБ_КазначействоКлиент, Форма); 
	//ОткрытьФорму("ОбщаяФорма.СБ_ФормаВыбораПрофиляРазноски", ПараметрыФормы,,,,,ОписаниеОповещения);
	ВыбраннаяСтрока = ОткрытьФормуМодально("ОбщаяФорма.СБ_ФормаВыбораПрофиляРазноски", ПараметрыФормы);
	
	Если ВыбраннаяСтрока <> Неопределено Тогда
		Форма.Объект.СБ_ПрофильРазноски = ВыбраннаяСтрока.Код;
	КонецЕсли; 
	
	Если ВыполнитьДополнительныеДействия И мТекущийПрофиль <> Форма.Объект.СБ_ПрофильРазноски Тогда
		Форма.СБ_ПрофильРазноскиОбработатьИзменение();
	КонецЕсли; 
	
КонецПроцедуры // -СБ. Широков Николай

&НаКлиенте
Процедура СБ_ПрофильРазноски_НаФормеНачалоВыбора(Форма, Элемент, СтандартнаяОбработка, ВыполнитьДополнительныеДействия = Ложь) Экспорт
	мТекущийПрофиль = Форма.СБ_ПрофильРазноски;
	
	СтандартнаяОбработка = Ложь;
	
	ОрганизацииНаФорме = Новый Структура("Организация, СБ_Организация");
	ЗаполнитьЗначенияСвойств(ОрганизацииНаФорме, Форма);
	Организация = ?(ОрганизацииНаФорме.Организация = Неопределено
						, ОрганизацииНаФорме.СБ_Организация
						, ОрганизацииНаФорме.Организация);
	
	ПараметрыФормы = Новый Структура("Организация, СБ_ПрофильРазноски", Организация, Форма.СБ_ПрофильРазноски);
	ВыбраннаяСтрока = ОткрытьФормуМодально("ОбщаяФорма.СБ_ФормаВыбораПрофиляРазноски", ПараметрыФормы);
	
	Если ВыбраннаяСтрока <> Неопределено Тогда
		Форма.СБ_ПрофильРазноски = ВыбраннаяСтрока.Код;
	КонецЕсли; 
	
	Если ВыполнитьДополнительныеДействия И мТекущийПрофиль <> Форма.СБ_ПрофильРазноски Тогда
		Форма.СБ_ПрофильРазноскиОбработатьИзменение();
	КонецЕсли; 
	
КонецПроцедуры // -СБ. Широков Николай

//++ СВВ {[+](фрагмент добавлен), Сапожников Вадим 23.07.2015 11:22:55
&НаКлиенте
Процедура ПрисвоениеПрофиля(Результат, Параметры) Экспорт
	Если Результат <> Неопределено Тогда
		Параметры.Объект.СБ_ПрофильРазноски = Результат.Код;
	КонецЕсли; 
	
	//Если ВыполнитьДополнительныеДействия И мТекущийПрофиль <> Форма.Объект.СБ_ПрофильРазноски Тогда
	//	Форма.СБ_ПрофильРазноскиОбработатьИзменение();
	//КонецЕсли; 
КонецПроцедуры
 
//-- СВВ}Сапожников Вадим 23.07.2015 11:22:55

// +СБ. Широков Николай. 2014-09-04. ТЗ "Казначейство" 2.2.2.2.	
Процедура СБ_ПрофильРазноскиАвтоПодборТекста(Форма, Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, ВыполнитьДополнительныеДействия = Ложь) Экспорт
	
	мТекущийПрофиль = Форма.Объект.СБ_ПрофильРазноски; 
	
	СтандартнаяОбработка = Ложь;
	
	ОрганизацииНаФорме = Новый Структура("Организация, СБ_Организация");
	ЗаполнитьЗначенияСвойств(ОрганизацииНаФорме, Форма.Объект);
	Организация = ?(ОрганизацииНаФорме.Организация = Неопределено
						, ОрганизацииНаФорме.СБ_Организация
						, ОрганизацииНаФорме.Организация);
	
	МассивПрофилей 		= СБ_КазначействоСервер.НайтиПрофильРазноски(Текст, Организация);
	КоличествоЭлементов = МассивПрофилей.Количество();
	
	Если КоличествоЭлементов = 0 Тогда
		Возврат;	
	ИначеЕсли КоличествоЭлементов = 1 Тогда
		Форма.Объект.СБ_ПрофильРазноски = МассивПрофилей[0];
		Возврат;
	КонецЕсли; 
	
	//Если несколько элементов предложим выбрать из списка
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(МассивПрофилей);
	
	// 1c-izhtc spawn 17.07.15 (
	//ВыбранныйЭлемент = Форма.ВыбратьИзСписка(СписокВыбора, Элемент);
	//Если ВыбранныйЭлемент <> Неопределено Тогда
	//	Форма.Объект.СБ_ПрофильРазноски = ВыбранныйЭлемент.Значение;
	//КонецЕсли; 
	// 1c-izhtc spawn 17.07.15 )
	
	Если ВыполнитьДополнительныеДействия И мТекущийПрофиль <> Форма.Объект.СБ_ПрофильРазноски Тогда
		Форма.СБ_ПрофильРазноскиОбработатьИзменение();
	КонецЕсли; 
	
КонецПроцедуры // -СБ. Широков Николай

Процедура СБ_ПрофильРазноски_НаФормеАвтоПодборТекста(Форма, Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, ВыполнитьДополнительныеДействия = Ложь) Экспорт
	
	мТекущийПрофиль = Форма.СБ_ПрофильРазноски; 
	
	СтандартнаяОбработка = Ложь;
	
	ОрганизацииНаФорме = Новый Структура("Организация, СБ_Организация");
	ЗаполнитьЗначенияСвойств(ОрганизацииНаФорме, Форма);
	Организация = ?(ОрганизацииНаФорме.Организация = Неопределено
						, ОрганизацииНаФорме.СБ_Организация
						, ОрганизацииНаФорме.Организация);
	
	МассивПрофилей 		= СБ_КазначействоСервер.НайтиПрофильРазноски(Текст, Организация);
	КоличествоЭлементов = МассивПрофилей.Количество();
	
	Если КоличествоЭлементов = 0 Тогда
		Возврат;	
	ИначеЕсли КоличествоЭлементов = 1 Тогда
		Форма.СБ_ПрофильРазноски = МассивПрофилей[0];
		Возврат;
	КонецЕсли; 
	
	//Если несколько элементов предложим выбрать из списка
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(МассивПрофилей);
	
	// 1c-izhtc spawn 17.07.15 (
	//ВыбранныйЭлемент = Форма.ВыбратьИзСписка(СписокВыбора, Элемент);
	//Если ВыбранныйЭлемент <> Неопределено Тогда
	//	Форма.Объект.СБ_ПрофильРазноски = ВыбранныйЭлемент.Значение;
	//КонецЕсли; 
	// 1c-izhtc spawn 17.07.15 )
	
	Если ВыполнитьДополнительныеДействия И мТекущийПрофиль <> Форма.СБ_ПрофильРазноски Тогда
		Форма.СБ_ПрофильРазноскиОбработатьИзменение();
	КонецЕсли; 
	
КонецПроцедуры // -СБ. Широков Николай

// +СБ. Широков Николай. 2014-09-04. ТЗ "Казначейство" 2.2.2.2.	
Процедура СБ_ПрофильРазноскиОкончаниеВводаТекста(Форма, Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, ВыполнитьДополнительныеДействия = Ложь) Экспорт
	
	мТекущийПрофиль = Форма.Объект.СБ_ПрофильРазноски; 
	
	СтандартнаяОбработка = Ложь;
	
	ОрганизацииНаФорме = Новый Структура("Организация, СБ_Организация");
	ЗаполнитьЗначенияСвойств(ОрганизацииНаФорме, Форма.Объект);
	Организация = ?(ОрганизацииНаФорме.Организация = Неопределено
						, ОрганизацииНаФорме.СБ_Организация
						, ОрганизацииНаФорме.Организация);
	
	МассивПрофилей 		= СБ_КазначействоСервер.НайтиПрофильРазноски(Текст, Организация);
	КоличествоЭлементов = МассивПрофилей.Количество();
	
	Если КоличествоЭлементов = 0 Тогда
		Форма.Объект.СБ_ПрофильРазноски = "";
		Возврат;
	ИначеЕсли КоличествоЭлементов = 1 Тогда
		Форма.Объект.СБ_ПрофильРазноски = МассивПрофилей[0];
		Возврат;
	КонецЕсли; 
	
	//Если несколько элементов предложим выбрать из списка
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(МассивПрофилей);
	
	// 1c-izhtc spawn 17.07.15 (
	//ВыбранныйЭлемент = Форма.ВыбратьИзСписка(СписокВыбора, Элемент);
	//Если ВыбранныйЭлемент <> Неопределено Тогда
	//	Форма.Объект.СБ_ПрофильРазноски = ВыбранныйЭлемент.Значение;
	//Иначе
	//	Форма.Объект.СБ_ПрофильРазноски = "";
	//КонецЕсли; 
	// 1c-izhtc spawn 17.07.15 )
	
	Если ВыполнитьДополнительныеДействия И мТекущийПрофиль <> Форма.Объект.СБ_ПрофильРазноски Тогда
		Форма.СБ_ПрофильРазноскиОбработатьИзменение();
	КонецЕсли; 
	
КонецПроцедуры // -СБ. Широков Николай

Процедура СБ_ПрофильРазноски_НаФормеОкончаниеВводаТекста(Форма, Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка, ВыполнитьДополнительныеДействия = Ложь) Экспорт
	
	мТекущийПрофиль = Форма.СБ_ПрофильРазноски; 
	
	СтандартнаяОбработка = Ложь;
	
	ОрганизацииНаФорме = Новый Структура("Организация, СБ_Организация");
	ЗаполнитьЗначенияСвойств(ОрганизацииНаФорме, Форма);
	Организация = ?(ОрганизацииНаФорме.Организация = Неопределено
						, ОрганизацииНаФорме.СБ_Организация
						, ОрганизацииНаФорме.Организация);
	
	МассивПрофилей 		= СБ_КазначействоСервер.НайтиПрофильРазноски(Текст, Организация);
	КоличествоЭлементов = МассивПрофилей.Количество();
	
	Если КоличествоЭлементов = 0 Тогда
		Форма.СБ_ПрофильРазноски = "";
		Возврат;
	ИначеЕсли КоличествоЭлементов = 1 Тогда
		Форма.СБ_ПрофильРазноски = МассивПрофилей[0];
		Возврат;
	КонецЕсли; 
	
	//Если несколько элементов предложим выбрать из списка
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(МассивПрофилей);
	
	// 1c-izhtc spawn 17.07.15 (
	//ВыбранныйЭлемент = Форма.ВыбратьИзСписка(СписокВыбора, Элемент);
	//Если ВыбранныйЭлемент <> Неопределено Тогда
	//	Форма.Объект.СБ_ПрофильРазноски = ВыбранныйЭлемент.Значение;
	//Иначе
	//	Форма.Объект.СБ_ПрофильРазноски = "";
	//КонецЕсли; 
	// 1c-izhtc spawn 17.07.15 )
	
	Если ВыполнитьДополнительныеДействия И мТекущийПрофиль <> Форма.СБ_ПрофильРазноски Тогда
		Форма.СБ_ПрофильРазноскиОбработатьИзменение();
	КонецЕсли; 
	
КонецПроцедуры // -СБ. Широков Николай

////// +СБ. Широков Николай. 2014-09-10. ТЗ "Казначейство" 2.2.2.11.	
Процедура бит_ЗаявкаНаРасходованиеСредствОбщаяСценарийПриИзменении(Форма, Элемент) Экспорт 
	
	бит_ЗаявкаНаРасходованиеСредствОбщаяУстановитьВидимостьЭлементов(Форма);	
	
	ЗначенияВШапке = Новый Структура;
	ЗначенияВШапке.Вставить("СБ_Валюта",					Форма.Объект.ВалютаДокумента); 
	ЗначенияВШапке.Вставить("СБ_Курс", 						Форма.Объект.КурсДокумента); 
	ЗначенияВШапке.Вставить("СБ_Кратность", 				Форма.Объект.КратностьДокумента); 
	ЗначенияВШапке.Вставить("СБ_ДатаРасхода", 				Форма.Объект.ДатаРасхода); 
	ЗначенияВШапке.Вставить("СБ_Контрагент", 				Форма.Объект.Контрагент); 
	ЗначенияВШапке.Вставить("СБ_БанковскийСчетОрганизации", Форма.Объект.БанковскийСчетОрганизации);
		
	ТЧРаспределение = Форма.Объект.Распределение;
	
	Для каждого СтрокаТЧ Из ТЧРаспределение Цикл
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, ЗначенияВШапке);		
	КонецЦикла; 
	
КонецПроцедуры // -СБ. Широков Николай 

//////Прочие экспортные процедуры и функции клиентского контекста

// +СБ. Широков Николай. 2014-09-11. ТЗ "Казначейство" 2.2.3.1. 
Функция ДанныеЗаявокИзСтрокКоллекции(КоллекцияСтрок) Экспорт 
	 
	//1c-izhtc А.В. Пушин функционал перенесен в серверный модуль
	Возврат СБ_КазначействоСервер.ДанныеЗаявокИзСтрокКоллекции(КоллекцияСтрок);
	
КонецФункции // -СБ. Широков Николай         

// +СБ. Широков Николай. 2014-09-11. ТЗ "Казначейство" 2.2.3.1. 
Функция ДанныеПлатежныхПозицийИзСтрокКоллекции(КоллекцияСтрок) Экспорт
	
	//1c-izhtc А.В. Пушин функционал перенесен в серверный модуль
	Возврат СБ_КазначействоСервер.ДанныеПлатежныхПозицийИзСтрокКоллекции(КоллекцияСтрок);
	
КонецФункции // -СБ. Широков Николай         

Функция ЭтоСценарийОперативногоПланирования(Знач Сценарий) Экспорт

	ОперативныйСценарийПланирования = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("ОперативныйСценарийПланирования");
	Если НЕ ЗначениеЗаполнено(ОперативныйСценарийПланирования) Тогда
		Возврат Ложь;                                                          	
	КонецЕсли; 
	
	Возврат (Сценарий = ОперативныйСценарийПланирования);	
	
КонецФункции // ()
 
// +СБ. Широков Николай. 2014-09-10. ТЗ "Казначейство" 2.2.2.11.	
Процедура бит_ЗаявкаНаРасходованиеСредствОбщаяУстановитьВидимостьЭлементов(Форма) Экспорт 

	ЭлементыФормы = Форма.Элементы;
	
	ТаблицаРаспределение 	= ЭлементыФормы.Распределение;
	КоллекцияКолонок		= ТаблицаРаспределение.ПодчиненныеЭлементы;
	
	Если КоллекцияКолонок.Найти("СБ_Контрагент") = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	ЭтоОперативныйСценарий = ЭтоСценарийОперативногоПланирования(Форма.Объект.Сценарий);	
	
	//Видимость элементов шапки	
	ПеренесенныеРеквизиты = Новый Массив;
	ПеренесенныеРеквизиты.Добавить("ВалютаДокумента");
	ПеренесенныеРеквизиты.Добавить("КурсДокумента");
	ПеренесенныеРеквизиты.Добавить("ДатаРасхода");
	ПеренесенныеРеквизиты.Добавить("ДатаПлатежаКрайняя");
	ПеренесенныеРеквизиты.Добавить("БанковскийСчетОрганизации");
	ПеренесенныеРеквизиты.Добавить("Контрагент");

	Для каждого ИмяРеквизита Из ПеренесенныеРеквизиты Цикл
		ЭлементыФормы[ИмяРеквизита + "_Список"].Видимость 				= НЕ ЭтоОперативныйСценарий;		
	КонецЦикла; 
	
	//Видимость колонок
	ДобавленныеРеквизитыТЧ	= Новый Массив;
	ДобавленныеРеквизитыТЧ.Добавить("СБ_Контрагент");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_ДатаРасхода");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_БанковскийСчетОрганизации");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_Валюта");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_Курс");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_Кратность");
	
	Для каждого ИмяРеквизита Из ДобавленныеРеквизитыТЧ Цикл
	
		КолонкаТаблицы = КоллекцияКолонок.Найти(ИмяРеквизита);	
		КолонкаТаблицы.Видимость = ЭтоОперативныйСценарий;
		
	КонецЦикла; 
	
КонецПроцедуры // -СБ. Широков Николай 


Процедура ПереопределитьДоступностьРедактированияЗаявки(Форма, ЗаблокироватьЭлементы, ДоступноИзменениеЭлемента) Экспорт

	//1c-izhtc А.В. Пушин функционал перенесен в серверный модуль
	СБ_КазначействоСервер.ПереопределитьДоступностьРедактированияЗаявки(Форма, ЗаблокироватьЭлементы, ДоступноИзменениеЭлемента);
	
КонецПроцедуры

Процедура УстановитьДоступностьРедактированияРеестраПлатежей(Форма, ТекущийСтатус) Экспорт
	
	//1c-izhtc А.В. Пушин функционал перенесен в серверный модуль
	СБ_КазначействоСервер.УстановитьДоступностьРедактированияРеестраПлатежей(Форма, ТекущийСтатус);
	
КонецПроцедуры

Процедура ОбновитьПодразделениеПоПрофилюРазноски(Подразделение, Организация, ПрофильРазноски) Экспорт

	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Начало 2021-06-04 (#НТП_МП_ФР07)
	#Область СтарыйКод
	//СписокОрганизаций_НеПогашатьЗадолженность = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("СписокОрганизаций_НеПогашатьЗадолженность");
	//Если СписокОрганизаций_НеПогашатьЗадолженность <> Неопределено 
	//	И СписокОрганизаций_НеПогашатьЗадолженность.НайтиПоЗначению(Организация) <> Неопределено Тогда
	//	
	//	Подразделение = СБ_КазначействоПовтИсп.ПодразделениеПоПрофилюРазноски(Организация, ПрофильРазноски);	
	//	
	//КонецЕсли;
	#КонецОбласти
	Подразделение = СБ_КазначействоПовтИсп.ПодразделениеПоПрофилюРазноски(Организация, ПрофильРазноски);	
	//ОКЕЙ Балыков А.Г.(ПервыйБИТ) Конец 2021-06-04 (#НТП_МП_ФР07)

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////// +СБ. Широков Николай. 2014-09-10. ТЗ "Казначейство" 2.2.2.11.	
Процедура ДобавитьКолонкиВТабличноеПолеРаспределение(Форма)
	
	//1c-izhtc А.В. Пушин функционал перенесен в серверный модуль
	ИжТиСи_СВД_Сервер.ДобавитьКолонкиВТабличноеПолеРаспределение(Форма);


КонецПроцедуры // -СБ. Широков Николай

Функция ТаблицаПрофилейРазноски(Организация = Неопределено) Экспорт

	// 1c-izhtc spawn 17.07.15
	// перенес в серверный модуль
	Возврат СБ_КазначействоСервер.ТаблицаПрофилейРазноски(Организация);

КонецФункции // ()

Функция ПредопределенныеОрганизации() Экспорт

	// 1c-izhtc spawn 17.07.15
	// перенес в серверный модуль
	Возврат СБ_КазначействоСервер.ПредопределенныеОрганизации();
	
КонецФункции // ()

Процедура ОрганизацияНачалоВыбора(Форма, Элемент, СтандартнаяОбработка, КромеРазрешенных = Ложь) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Справочник.Организации.ФормаВыбора", , Элемент);	
	
	ПолучитьВидСравнения = ?(КромеРазрешенных, ВидСравненияКомпоновкиДанных.НеВСписке, ВидСравненияКомпоновкиДанных.ВСписке);
	Значение 	 = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("СписокОрганизаций_ФормироватьЗаявкиНаОплату");
	ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(ФормаВыбора.Список, "Ссылка", Значение, ПолучитьВидСравнения);
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры // -СБ. Широков Николай

////////////////////////////////////////////////////////////////////////////////
// Модуль содержит реализацию различных валютных пересчетов.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Пересчитывает сумму из валюты ВалютаНач по курсу ПоКурсуНач 
// в валюту ВалютаКон по курсу ПоКурсуКон.
// 
// Параметры:      
// 	Сумма          - сумма, которую следует пересчитать;
// 	ВалютаНач      - ссылка на элемент справочника Валют;
//                   определяет валюты из которой надо пересчитвать;
// 	ВалютаКон      - ссылка на элемент справочника Валют;
//                   определяет валюты в которую надо пересчитвать;
// 	ПоКурсуНач     - курс из которого надо пересчитать;
// 	ПоКурсуКон     - курс в который надо пересчитать;
// 	ПоКратностьНач - кратность из которого надо пересчитать (по умолчанию = 1);
// 	ПоКратностьКон - кратность в который надо пересчитать  (по умолчанию = 1);
// 
// Возвращаемое значение: 
//  Сумма, пересчитанная в другую валюту.
// 
Функция ПересчитатьИзВалютыВВалюту(Сумма, ВалютаНач, ВалютаКон, ПоКурсуНач, ПоКурсуКон, 
	                               ПоКратностьНач = 1, ПоКратностьКон = 1 ) Экспорт

	Если (ВалютаНач = ВалютаКон) Тогда

		// Считаем, что пересчет не нужен.
		Возврат Сумма;

	КонецЕсли;

	Если (ПоКурсуНач     = ПоКурсуКон) 
	   и (ПоКратностьНач = ПоКратностьКон) Тогда

		// Ну, тут и считать нечего...
		Возврат Сумма;

	КонецЕсли;
	
	//+ Меркулов
	Если Не ЗначениеЗаполнено(ВалютаНач) Тогда
		ПоКурсуНач = 1;
		ПоКратностьНач = 1;
	КонецЕсли; 
	//-	

	Если ПоКурсуНач     = 0 
	 или ПоКурсуКон     = 0 
	 или ПоКратностьНач = 0 
	 или ПоКратностьКон = 0 Тогда
	 
					  
		ТекстСообщения =  НСтр("ru = 'Процедура ""ПересчитатьИзВалютыВВалюту()"": при пересчете обнаружен нулевой курс. Валюта начальная ""%1%"", валюта конечная ""%2%"".'");
		ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, ВалютаНач, ВалютаКон);
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		
		Возврат 0;

	КонецЕсли;

	//***БИТ***Теплова***(2012.04.09
	//ОК+ Аверьянова 18.01.16 обход пустой валюты
	//Если ИнтеграцияЕГАИСВызовСервера.ЗначениеРеквизитаОбъекта(ВалютаНач, "бит_КурсыЕвропейскогоБанка") Тогда
	//	СуммаРез = Окр((Сумма * ПоКурсуНач), 2);
	//Иначе
	//	СуммаРез = Окр((Сумма * ПоКурсуНач * ПоКратностьКон) / (ПоКурсуКон * ПоКратностьНач), 2);
	//КонецЕсли;
	Если ЗначениеЗаполнено(ВалютаНач) Тогда    //ОК* Аверьянова 18.01.16 обход пустой валюты
		Если ИнтеграцияС1СДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(ВалютаНач, "бит_КурсыЕвропейскогоБанка") Тогда
			СуммаРез = Окр((Сумма * ПоКурсуНач), 2);
		Иначе
			СуммаРез = Окр((Сумма * ПоКурсуНач * ПоКратностьКон) / (ПоКурсуКон * ПоКратностьНач), 2);
		КонецЕсли;
	Иначе
		СуммаРез = Сумма;
	КонецЕсли;
	//ОК-
	
	//СуммаРез = (Сумма * ПоКурсуНач * ПоКратностьКон) / (ПоКурсуКон * ПоКратностьНач);
	//***БИТ***Теплова***)
	//{begin  Санникова Н.В. ошибка обновления 22.09.2020 
	//СуммаРез = (Сумма * ПоКурсуНач * ПоКратностьКон) / (ПоКурсуКон * ПоКратностьНач);
	// Санникова Н.В. ошибка обновления 22.09.2020 end}
	Возврат СуммаРез;

КонецФункции // ПересчитатьИзВалютыВВалюту()

// Функция выполняет валютные пересчеты. 
// Использование структур обеспечивает более компактный вызов.
//
// Параметры:
//   Сумма - Число
//   СтрКурсаНач - Структура
//   СтрКурсаКон - Структура
//
// Возвращаемое значение:
//  СуммаРез - Число.
//
Функция ПересчитатьПоВалюте(Сумма, СтрКурсаНач, СтрКурсаКон) Экспорт
	
	СуммаРез = Сумма;
	
	
	Если СтрКурсаНач.Валюта = СтрКурсаКон.Валюта Тогда
		
		// валюты совпадают пересчет - не нужен
		
	ИначеЕсли СтрКурсаНач.Курс = СтрКурсаКон.Курс И СтрКурсаНач.Кратность = СтрКурсаКон.Кратность Тогда
		
		// курсы совпадают пересчет - не нужен
		
	ИначеЕсли СтрКурсаНач.Курс = 0 
		ИЛИ СтрКурсаНач.Кратность = 0 
		ИЛИ СтрКурсаКон.Курс = 0 
		ИЛИ СтрКурсаКон.Кратность = 0 Тогда	 
		
		ТекстСообщения =  НСтр("ru = 'Процедура ""ПересчитатьПоВалюте()"": при пересчете обнаружен нулевой курс. Валюта начальная ""%1%"", валюта конечная ""%2%"".'");
		ТекстСообщения = бит_ОбщегоНазначенияКлиентСервер.ПодставитьПараметрыСтроки(ТекстСообщения, СтрКурсаНач.Валюта, СтрКурсаКон.Валюта);
		бит_ОбщегоНазначенияКлиентСервер.ВывестиСообщение(ТекстСообщения);
		
		СуммаРез = 0;
		
	Иначе	
		
		СуммаРез = (Сумма * СтрКурсаНач.Курс * СтрКурсаКон.Кратность) / (СтрКурсаКон.Курс * СтрКурсаНач.Кратность);
		
	КонецЕсли; 
	
	Возврат СуммаРез;
	
КонецФункции // ПересчитатьПоВалюте()

// Функция-конструктор структуры курса.
// 
// Параметры:
//   Валюта - СправочникСсылка.Валюты
//   Курс - Число
//   Кратность - Число.
// 
// Возвращаемое значение:
//  СтрКурса - Структура.
// 
Функция СтруктураКурса(Валюта, Курс, Кратность) Экспорт

	СтрКурса = Новый Структура("Валюта, Курс, Кратность", Валюта, Курс, Кратность);

	Возврат СтрКурса;
	
КонецФункции // СтруктураКурса()

// Функция выполняет расчет суммы по курсу.
//
// Параметры:
//
//
// Возвращаемое значение:
//  Результат - Число.
//
Функция ПересчитатьСуммуПоКурсу(СуммаВх, Курс, Кратность) Экспорт

	РезСумма = 0;
	
	РезСумма = СуммаВх*Курс/Кратность;

	Возврат РезСумма;
	
КонецФункции // ПересчитатьСуммуПоКурсу()

#КонецОбласти

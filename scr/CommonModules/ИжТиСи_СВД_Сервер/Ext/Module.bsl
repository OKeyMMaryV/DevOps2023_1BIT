
Функция ОК_ВывестиРеквизиты(Форма, ИдентификаторОбъекта="") Экспорт
	
	Элементы=Форма.Элементы;
	
	Если ИдентификаторОбъекта = "Справочник.ПодразделенияОрганизаций.ФормаЭлемента" Тогда
	
		ГруппаДобавленныеРеквизиты = Элементы.Добавить("ГруппаДобавленныеРеквизиты", Тип("ГруппаФормы"), Элементы["ГруппаОсновныеСведения"]);
		ГруппаДобавленныеРеквизиты.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаДобавленныеРеквизиты.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаДобавленныеРеквизиты.ОтображатьЗаголовок = Ложь;
		ГруппаДобавленныеРеквизиты.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		// ОКЕЙ Чернов И.Е.(СофтЛаб) Начало 2018-03-02 (#2994)
		////ОК Калинин М. 2012-08-08
		//ПолеОбъектСтроительства = Элементы.Добавить("ОК_ОбъектСтроительства", Тип("ПолеФормы"), ГруппаДобавленныеРеквизиты);
		//ПолеОбъектСтроительства.ПутьКДанным = "Объект.ОК_ОбъектСтроительства";
		//ПолеОбъектСтроительства.Вид = ВидПоляФормы.ПолеВвода;
		//ПолеОбъектСтроительства.Заголовок = "Объект строительства";
		////ОК Калинин М. 2012-08-08
		//
		//ПолеДепартаментСтроительства = Элементы.Добавить("бит_ДепартаментСтроительства", Тип("ПолеФормы"), ГруппаДобавленныеРеквизиты);
		//ПолеДепартаментСтроительства.ПутьКДанным = "Объект.бит_ДепартаментСтроительства";
		//ПолеДепартаментСтроительства.Вид = ВидПоляФормы.ПолеФлажка;
		//ПолеДепартаментСтроительства.Заголовок = "Департамент строительства";
		//ПолеДепартаментСтроительства.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		//
		////ОК Калинин М. 130313
		//ПолеКонтрольОбъекта = Элементы.Добавить("ОК_КонтрольОбъекта", Тип("ПолеФормы"), ГруппаДобавленныеРеквизиты);
		//ПолеКонтрольОбъекта.ПутьКДанным = "Объект.ОК_КонтрольОбъекта";  
		//ПолеКонтрольОбъекта.Вид = ВидПоляФормы.ПолеФлажка;
		//ПолеКонтрольОбъекта.Заголовок = "Контроль объекта";
		//ПолеКонтрольОбъекта.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		////ОК Калинин М.
	    // ОКЕЙ Чернов И.Е.(СофтЛаб) Конец 2018-03-02 (#2994)
	ИначеЕсли ИдентификаторОбъекта = "Справочник.Организации.ФормаОрганизации" Тогда
		
		ПолеОсновнойОфис = Элементы.Добавить("бит_ОсновнойОфис", Тип("ПолеФормы"), Элементы["ГруппаКонтактнаяИнформация"]);
		ПолеОсновнойОфис.ПутьКДанным = "Объект.бит_ОсновнойОфис";
		ПолеОсновнойОфис.Вид = ВидПоляФормы.ПолеВвода;
		ПолеОсновнойОфис.Заголовок = "Основной офис";
		ПолеОсновнойОфис.КнопкаОчистки = Истина;
		ПолеОсновнойОфис.КнопкаОткрытия = Истина;
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.НоменклатурныеГруппы.ФормаЭлемента" Тогда
		
		НовыйЭлемент = Элементы.Добавить("ОК_Функция", Тип("ПолеФормы"), Элементы.Группа1);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.ОК_Функция";
		НовыйЭлемент.Заголовок = "Функция";
		НовыйЭлемент.Доступность = Истина;
		НовыйЭлемент.Видимость = Истина;
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.НоменклатурныеГруппы.ФормаСписка" ИЛИ ИдентификаторОбъекта = "Справочник.НоменклатурныеГруппы.ФормаВыбора" Тогда
		
		НовыйЭлемент = Элементы.Добавить("СписокОК_Функция", Тип("ПолеФормы"), Элементы.Список);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Список.ОК_Функция";
		НовыйЭлемент.Заголовок = "Функция";
		НовыйЭлемент.Доступность = Истина;
		НовыйЭлемент.Видимость = Истина;
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.ОсновныеСредства.ФормаЭлемента" Тогда
		
		//++ СВВ {[+](фрагмент добавлен), Администратор 20.07.2015 10:08:23
		ГруппаДоп = Элементы.Вставить("ДопРеквизиты", Тип("ГруппаФормы"), Форма, Элементы.НалогНаИмуществоГиперссылка);
		ГруппаДоп.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаДоп.Заголовок = "Доп. реквизиты";
		ГруппаДоп.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
		//Объект
		ЭлОбъект = Элементы.Добавить("ОбъектЭл", Тип("ПолеФормы"), ГруппаДоп);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.Объект";
		
		//Лизинг
		ГруппаДоп2 = Элементы.Вставить("ДопРеквизиты2", Тип("ГруппаФормы"), Форма, Элементы.НалогНаИмуществоГиперссылка);
		ГруппаДоп2.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаДоп2.Заголовок = "";
		ГруппаДоп2.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаДоп2.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаДоп2.ОтображатьЗаголовок = Ложь;
		
		ГруппаФлажки = Элементы.Добавить("ДопРеквизитыФлажки", Тип("ГруппаФормы"), ГруппаДоп2);
		ГруппаФлажки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаФлажки.Заголовок = "";
		ГруппаФлажки.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаФлажки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаФлажки.ОтображатьЗаголовок = Ложь;
		
		ГруппаКонтрагенты = Элементы.Добавить("ДопРеквизитыКонтрагенты", Тип("ГруппаФормы"), ГруппаДоп2);
		ГруппаКонтрагенты.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаКонтрагенты.Заголовок = "";
		ГруппаКонтрагенты.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаКонтрагенты.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаКонтрагенты.ОтображатьЗаголовок = Ложь;
		
		//Лизинг
		ЭлОбъект = Элементы.Добавить("ВЛизинге", Тип("ПолеФормы"), ГруппаФлажки);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлОбъект.ПутьКДанным = "Объект.ВЛизинге";
		ЭлОбъект.УстановитьДействие("ПриИзменении", "ВЛизингеПриИзменении");
		
		ЭлОбъект = Элементы.Добавить("ДекорацияВЛизинге", Тип("ДекорацияФормы"), ГруппаФлажки);
		ЭлОбъект.Вид = ВидДекорацииФормы.Надпись;
		
		ЭлОбъект = Элементы.Добавить("КонтрагентЛизинга", Тип("ПолеФормы"), ГруппаКонтрагенты);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.КонтрагентЛизинга";
		
		ЭлОбъект = Элементы.Добавить("ДоговорЛизинга", Тип("ПолеФормы"), ГруппаКонтрагенты);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.ДоговорЛизинга";
		
		//Залог
		ЭлОбъект = Элементы.Добавить("ВЗалоге", Тип("ПолеФормы"), ГруппаФлажки);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлОбъект.ПутьКДанным = "Объект.ВЗалоге";
		ЭлОбъект.УстановитьДействие("ПриИзменении", "ВЗалогеПриИзменении");
		
		ЭлОбъект = Элементы.Добавить("ДекорацияВЗалоге", Тип("ДекорацияФормы"), ГруппаФлажки);
		ЭлОбъект.Вид = ВидДекорацииФормы.Надпись;
		
		ЭлОбъект = Элементы.Добавить("КонтрагентЗалога", Тип("ПолеФормы"), ГруппаКонтрагенты);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.КонтрагентЗалога";
		
		ЭлОбъект = Элементы.Добавить("ДоговорЗалога", Тип("ПолеФормы"), ГруппаКонтрагенты);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.ДоговорЗалога";
		
		//Аренда
		ЭлОбъект = Элементы.Добавить("ВАренде", Тип("ПолеФормы"), ГруппаФлажки);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлОбъект.ПутьКДанным = "Объект.ВАренде";
		ЭлОбъект.УстановитьДействие("ПриИзменении", "ВАрендеПриИзменении");
		
		ЭлОбъект = Элементы.Добавить("ДекорацияВАренде", Тип("ДекорацияФормы"), ГруппаФлажки);
		ЭлОбъект.Вид = ВидДекорацииФормы.Надпись;
		
		ЭлОбъект = Элементы.Добавить("КонтрагентАренды", Тип("ПолеФормы"), ГруппаКонтрагенты);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.КонтрагентАренды";
		
		ЭлОбъект = Элементы.Добавить("ДоговорАренды", Тип("ПолеФормы"), ГруппаКонтрагенты);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.ДоговорАренды";
		
		//Застраховано
		ЭлОбъект = Элементы.Добавить("Застраховано", Тип("ПолеФормы"), ГруппаФлажки);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлОбъект.ПутьКДанным = "Объект.Застраховано";
		ЭлОбъект.УстановитьДействие("ПриИзменении", "ЗастрахованоПриИзменении");
		
		ЭлОбъект = Элементы.Добавить("ДекорацияЗастраховано", Тип("ДекорацияФормы"), ГруппаФлажки);
		ЭлОбъект.Вид = ВидДекорацииФормы.Надпись;
		
		ЭлОбъект = Элементы.Добавить("СтраховаяКомпания", Тип("ПолеФормы"), ГруппаКонтрагенты);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.СтраховаяКомпания";
		
		ЭлОбъект = Элементы.Добавить("ДоговорСтрахования", Тип("ПолеФормы"), ГруппаКонтрагенты);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.ДоговорСтрахования";
		
		ЭлОбъект = Элементы.Добавить("ГруппаОСУУ", Тип("ПолеФормы"), ГруппаДоп);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.Заголовок = "Группа ОС УУ";
		ЭлОбъект.ПутьКДанным = "Объект.БИТ_ГруппаОСУУ";
		
		ЭлОбъект = Элементы.Добавить("ОК_ПараллельныйМСФО", Тип("ПолеФормы"), ГруппаДоп);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлОбъект.Заголовок = "Параллельный учет в МСФО";
		ЭлОбъект.ПутьКДанным = "Объект.ОК_ПараллельныйМСФО";
		
		ЭлОбъект = Элементы.Добавить("бит_НомерAx", Тип("ПолеФормы"), ГруппаДоп);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.ПутьКДанным = "Объект.бит_НомерAx";
		ЭлОбъект.Заголовок = "Номер AX";
		
		ЭлОбъект = Элементы.Вставить("бит_му_ТолькоМСФО", Тип("ПолеФормы"), Элементы.ГруппаШапка, Элементы.ГруппаУчетаОС);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлОбъект.ПутьКДанным = "Объект.бит_му_ТолькоМСФО";
		ЭлОбъект.Заголовок = "Только МСФО";
					
		// Установка доступности добавленных элементов
		Элементы.КонтрагентЛизинга.Доступность = Форма.Объект.ВЛизинге;
		Элементы.ДоговорЛизинга.Доступность = Форма.Объект.ВЛизинге;
		
	    Элементы.КонтрагентЗалога.Доступность = Форма.Объект.ВЗалоге;
		Элементы.ДоговорЗалога.Доступность = Форма.Объект.ВЗалоге;
	
		Элементы.КонтрагентАренды.Доступность = Форма.Объект.ВАренде;
		Элементы.ДоговорАренды.Доступность = Форма.Объект.ВАренде;

		Элементы.СтраховаяКомпания.Доступность = Форма.Объект.Застраховано;
		Элементы.ДоговорСтрахования.Доступность = Форма.Объект.Застраховано;
		
		// +СБ Кузнецова С. 2016-10-06 Redmine 2651
		ЭлОбъект = Элементы.Вставить("СБ_СвязанноеОС", Тип("ПолеФормы"), Форма, Элементы.НалогНаИмуществоГиперссылка);
		ЭлОбъект.Вид = ВидПоляФормы.ПолеВвода;
		ЭлОбъект.Заголовок = "Связанное ОС";
		ЭлОбъект.ПутьКДанным = "Объект.СБ_СвязанноеОС";
		ЭлОбъект.УстановитьДействие("НачалоВыбора", "СБ_СвязанноеОСНачалоВыбора");
		ЭлОбъект.УстановитьДействие("ОбработкаВыбора", "СБ_СвязанноеОСОбработкаВыбора");
		// -СБ Кузнецова С.
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.ОсновныеСредства.ФормаГруппы" Тогда
		
		//ОК Калинин М. 061112
		НовыйЭлемент = Элементы.Добавить("ВАренде", Тип("ПолеФормы"), );
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		// ОКЕЙ Чернов И.Е.(СофтЛаб) Начало 2018-04-05 (#2955)
		//НовыйЭлемент.ПутьКДанным = "Объект.ВАренде";
		НовыйЭлемент.ПутьКДанным = "Объект.бит_му_ТолькоМСФО";
		// ОКЕЙ Чернов И.Е.(СофтЛаб) Начало 2018-04-05 (#2955)
		НовыйЭлемент.Заголовок = "Только МСФО";
		НовыйЭлемент.Доступность = Истина;
		НовыйЭлемент.Видимость = Истина;
		//ОК Калинин М.
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.ОсновныеСредства.ФормаГрупповогоСоздания"  Тогда 		
		
		//ОК Калинин М. 290113
		НовыйЭлемент = Элементы.Добавить("Объект", Тип("ПолеФормы"), );
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект";
		НовыйЭлемент.Заголовок = "Объект";
		НовыйЭлемент.Доступность = Истина;
		НовыйЭлемент.Видимость = Истина;
		
		НовыйЭлемент = Элементы.Добавить("ГруппаОСУУ", Тип("ПолеФормы"), );
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "БИТ_ГруппаОСУУ";
		НовыйЭлемент.Заголовок = "Группа ОС УУ";
		НовыйЭлемент.Доступность = Истина;
		НовыйЭлемент.Видимость = Истина;
		//ОК Калинин М.
				
	ИначеЕсли ИдентификаторОбъекта = "Справочник.бит_ПравилаТрансляции.ФормаЭлементаУправляемая" Тогда
		
		НовыйЭлемент = Элементы.Добавить("Очередность", Тип("ПолеФормы"), );
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.Очередность";
		НовыйЭлемент.Заголовок = "Очередность";
		НовыйЭлемент.Доступность = Истина;
		НовыйЭлемент.Видимость = Истина;
	
	ИначеЕсли ИдентификаторОбъекта = "Справочник.бит_му_ВидыРБП.ФормаСпискаУправляемая" ИЛИ ИдентификаторОбъекта = "Справочник.бит_му_ВидыРБП.ФормаВыбораУправляемая" Тогда
		
		// 1c-izhtc, ChuckNorris, 27.07.2015 ( 
		ПолеТипСубконто1 = Элементы.Добавить("ТипСубконто1", Тип("ПолеФормы"), Элементы.Список);
		ПолеТипСубконто1.ПутьКДанным = "Список.ТипСубконто1";
		ПолеТипСубконто1.Заголовок = "Тип субконто 1";
		
		ПолеТипСубконто2 = Элементы.Добавить("ТипСубконто2", Тип("ПолеФормы"), Элементы.Список);
		ПолеТипСубконто2.ПутьКДанным = "Список.ТипСубконто2";
		ПолеТипСубконто2.Заголовок = "Тип субконто 2";
		
		ПолеОк_Функция = Элементы.Добавить("ОК_Функция", Тип("ПолеФормы"), Элементы.Список);
		ПолеОк_Функция.ПутьКДанным = "Список.ОК_Функция";
		ПолеОк_Функция.Заголовок = "Функция";
		// 1c-izhtc, ChuckNorris, 27.07.2015 ) 
	
	ИначеЕсли ИдентификаторОбъекта = "Справочник.бит_му_ВидыРБП.ФормаЭлементаУправляемая" Тогда
		
		// 1c-izhtc, ChuckNorris, 27.07.2015 ( 
		ПолеТипСубконто1 = Элементы.Добавить("ТипСубконто1", Тип("ПолеФормы"));
		ПолеТипСубконто1.ПутьКДанным = "Объект.ТипСубконто1";
		ПолеТипСубконто1.Вид = ВидПоляФормы.ПолеВвода;
		ПолеТипСубконто1.Заголовок = "Тип субконто 1";
		
		ПолеТипСубконто2 = Элементы.Добавить("ТипСубконто2", Тип("ПолеФормы"));
		ПолеТипСубконто2.ПутьКДанным = "Объект.ТипСубконто2";
		ПолеТипСубконто2.Вид = ВидПоляФормы.ПолеВвода;
		ПолеТипСубконто2.Заголовок = "Тип субконто 2";
		
		ПолеОк_Функция = Элементы.Добавить("ОК_Функция", Тип("ПолеФормы"));
		ПолеОк_Функция.ПутьКДанным = "Объект.ОК_Функция";
		ПолеОк_Функция.Вид = ВидПоляФормы.ПолеВвода;
		ПолеОк_Функция.Заголовок = "Функция";		
		// 1c-izhtc, ChuckNorris, 27.07.2015 ) 
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.ДоговорыКонтрагентов.ФормаЭлемента" Тогда
		
		// 1c-izhtc spawn 28.07.2015 (
		Надпись 			= Элементы.Добавить("ВидРасчета", Тип("ДекорацияФормы"), Элементы.ГруппаРасчеты);
		Надпись.Вид			= ВидДекорацииФормы.Надпись;
		Надпись.Заголовок	= "Вид расчета";
		Надпись.ГиперСсылка	= Истина;
		Надпись.УстановитьДействие("Нажатие", "ВидРасчетаНажатие");
		//**************************************************
		
		//***БИТ***Теплова***(
		ЭлементНомерАХ										= Элементы.Добавить("НомерАХ", Тип("ПолеФормы"), Элементы.ГруппаВидДоговора);	
		ЭлементНомерАХ.Вид									= ВидПоляФормы.ПолеВвода;
		ЭлементНомерАХ.Заголовок							= "Номер АХ";
		ЭлементНомерАХ.ПутьКДанным							= "Объект.бит_НомерАХ";
		ЭлементНомерАХ.РастягиватьПоГоризонтали				= Ложь;
		//
		ЭлементПогашениеВзаиморасчетом						= Элементы.Добавить("бит_ПогашениеВзаиморасчетом", Тип("ПолеФормы"), Элементы.ГруппаВидВзаиморасчетовПогашениеВзаиморасчетом);	
		ЭлементПогашениеВзаиморасчетом.Вид					= ВидПоляФормы.ПолеФлажка;
		ЭлементПогашениеВзаиморасчетом.ПутьКДанным			= "Объект.бит_ПогашениеВзаиморасчетом";
		ЭлементПогашениеВзаиморасчетом.Доступность			= Ложь;
		ЭлементПогашениеВзаиморасчетом.Заголовок			= "Погашение взаиморасчетом";
		ЭлементПогашениеВзаиморасчетом.ПоложениеЗаголовка	= ПоложениеЗаголовкаЭлементаФормы.Право;
		//
		Если РольДоступна("ПолныеПрава") Тогда
			ЭлементRECID			 						= Элементы.Добавить("RECID", Тип("ПолеФормы"), Элементы.ГруппаКомментарийRECID);
			ЭлементRECID.Вид		 						= ВидПоляФормы.ПолеВвода;
			ЭлементRECID.Заголовок	 						= "REC ID";
			ЭлементRECID.ПутьКДанным 						= "Объект.бит_RECID";
			ЭлементRECID.РастягиватьПоГоризонтали			= Ложь;
		КонецЕсли;
		//***БИТ***Теплова***)
		// 1c-izhtc spawn 28.07.2015 )
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-11-30 (#МДМ)
		ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь();
		ЭлементНомерАХ.Доступность = ЭтоПолноправныйПользователь;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-11-30 (#МДМ)
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.РасходыБудущихПериодов.ФормаЭлемента" Тогда
		
		// 1c-izhtc spawn 30.07.2015 (
		//БИТ Тртилек 13.01.2011 Создадим событие для создаваемой колонки ВидРБПМСФО
		Элементы.бит_ВидРБП_МСФО.УстановитьДействие("ПриИзменении", "ПриИзменениибит_ВидРБП_МСФО");
		//БИТ Тртилек 13.01.2011
		
		//БИТ Тртилек 01.12.2011
		ЭУ = Элементы.Добавить("бит_Субконто1", Тип("ПолеФормы"), Элементы.бит_ГруппаМСФО);
		ЭУ.Заголовок   = "Субконто 1 (МСФО)";
		ЭУ.ПутьКДанным = "Объект.бит_Субконто1";
		ЭУ.Вид         = ВидПоляФормы.ПолеВвода;
		
		ЭУ = Элементы.Добавить("бит_Субконто2", Тип("ПолеФормы"), Элементы.бит_ГруппаМСФО);
		ЭУ.Заголовок   = "Субконто 2 (МСФО)";
		ЭУ.ПутьКДанным = "Объект.бит_Субконто2";
		ЭУ.Вид         = ВидПоляФормы.ПолеВвода;
		//БИТ Тртилек
		
		Колонка = Элементы.Вставить("Объект", Тип("ПолеФормы"), , Элементы.ГруппаСчетИАналитикаЗатрат);
		Колонка.ПутьКДанным = "Объект.Объект";
		Колонка.Вид         = ВидПоляФормы.ПолеВвода;
		Колонка.УстановитьДействие("ПриИзменении", "ОбъектПриИзменении");
		//-------------------------------------
		Колонка = Элементы.Вставить("Контрагент", Тип("ПолеФормы"), , Элементы.ГруппаСчетИАналитикаЗатрат);
		Колонка.ПутьКДанным = "Объект.Контрагент";
		Колонка.Вид         = ВидПоляФормы.ПолеВвода;
		//-------------------------------------
		Колонка = Элементы.Вставить("ДоговорКонтрагента", Тип("ПолеФормы"), , Элементы.ГруппаСчетИАналитикаЗатрат);
		Колонка.ПутьКДанным = "Объект.ДоговорКонтрагента";
		Колонка.Вид         = ВидПоляФормы.ПолеВвода;
		//-------------------------------------
		
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Начало 2019-06-13 (#3372)
		СвязьПарВыбора = Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.Контрагент");
				
		мСвязейПарВыбора = Новый Массив();
		мСвязейПарВыбора.Добавить(СвязьПарВыбора);
				
		Колонка.СвязиПараметровВыбора = Новый ФиксированныйМассив(мСвязейПарВыбора);
		//ОКЕЙ Лобанов В.И.(СофтЛаб) Конец 2019-06-13 (#3372)
		
		Колонка = Элементы.Вставить("ПринадлежностьРасчетов", Тип("ПолеФормы"), , Элементы.ГруппаСчетИАналитикаЗатрат);
		Колонка.ПутьКДанным = "Объект.ПринадлежностьРасчетов";
		Колонка.Вид         = ВидПоляФормы.ПолеВвода;
		//-------------------------------------
		Колонка = Элементы.Вставить("Код77", Тип("ПолеФормы"), , Элементы.ГруппаСчетИАналитикаЗатрат);
		Колонка.ПутьКДанным = "Объект.Код77";
		Колонка.Вид         = ВидПоляФормы.ПолеВвода;
		//-------------------------------------
		Колонка = Элементы.Вставить("бит_НомерAx", Тип("ПолеФормы"), Форма, Элементы.Комментарий);
		Колонка.ПутьКДанным = "Объект.бит_НомерAx";
		Колонка.Вид         = ВидПоляФормы.ПолеВвода;
		//-------------------------------------
		Колонка = Элементы.Вставить("ОК_Функция", Тип("ПолеФормы"), Форма, Элементы.Комментарий);
		Колонка.ПутьКДанным = "Объект.ОК_Функция";
		Колонка.Вид         = ВидПоляФормы.ПолеВвода;
		Колонка.УстановитьДействие("ПриИзменении", "ОК_ФункцияПриИзменении");
		//-------------------------------------
		// 1c-izhtc spawn 30.07.2015 )
		
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Начало 2021-10-27 (#4382)
		ЭУ = Элементы.Вставить("ок_Проект", Тип("ПолеФормы"), , Элементы.ГруппаСчетИАналитикаЗатрат);
		ЭУ.Заголовок   		= "Проект";
		ЭУ.ПутьКДанным 		= "Объект.ок_Проект";
		ЭУ.Вид        		= ВидПоляФормы.ПолеВвода;
		ЭУ.ТолькоПросмотр	= Истина;
		// ОКЕЙ Сафронов А.А. (СофтЛаб) Конец 2021-10-27 (#4382)
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.РасходыБудущихПериодов.ФормаСписка" Тогда
		
		// 1c-izhtc spawn 30.07.2015 (
		//БИТ Тртилек 01.12.2011
		ГруппаСубконтоМСФО = Элементы.Добавить("бит_ГруппаСубконтоМСФО", Тип("ГруппаФормы"),Элементы.Список);
		ГруппаСубконтоМСФО.Вид                 = ВидГруппыФормы.ГруппаКолонок;
		
		ЭУ = Элементы.Добавить("бит_Субконто1", Тип("ПолеФормы"), ГруппаСубконтоМСФО);
		ЭУ.Заголовок   = "Субконто 1 (МСФО)";
		ЭУ.ПутьКДанным = "Список.бит_Субконто1";
		ЭУ.Вид         = ВидПоляФормы.ПолеВвода;
		
		ЭУ = Элементы.Добавить("бит_Субконто2", Тип("ПолеФормы"), ГруппаСубконтоМСФО);
		ЭУ.Заголовок   = "Субконто 2 (МСФО)";
		ЭУ.ПутьКДанным = "Список.бит_Субконто2";
		ЭУ.Вид         = ВидПоляФормы.ПолеВвода;
		//БИТ Тртилек
		
		Колонка = Элементы.Вставить("Объект", Тип("ПолеФормы"), Элементы.Список, Элементы.Комментарий);
		Колонка.ПутьКДанным = "Список.Объект";
		//-------------------------------------
		ГруппаКолонок = Элементы.Вставить("бит_ГруппаКолонок", Тип("ГруппаФормы"), Элементы.Список, Элементы.Комментарий);
		ГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
		//-------------------------------------
		Колонка = Элементы.Добавить("Контрагент", Тип("ПолеФормы"), ГруппаКолонок);
		Колонка.ПутьКДанным = "Список.Контрагент";
		//-------------------------------------
		Колонка = Элементы.Добавить("ДоговорКонтрагента", Тип("ПолеФормы"), ГруппаКолонок);
		Колонка.ПутьКДанным = "Список.ДоговорКонтрагента";
		//-------------------------------------
		Колонка = Элементы.Добавить("ПринадлежностьРасчетов", Тип("ПолеФормы"), ГруппаКолонок);
		Колонка.ПутьКДанным = "Список.ПринадлежностьРасчетов";
		//-------------------------------------
		Колонка = Элементы.Вставить("Код77", Тип("ПолеФормы"), Элементы.Список, Элементы.Комментарий);
		Колонка.ПутьКДанным = "Список.Код77";
		//-------------------------------------
		Колонка = Элементы.Вставить("бит_НомерAx", Тип("ПолеФормы"), Элементы.Список, Элементы.бит_ГруппаМСФО);
		Колонка.ПутьКДанным = "Список.бит_НомерAx";
		//-------------------------------------
		Колонка = Элементы.Добавить("ОК_Функция", Тип("ПолеФормы"), Элементы.Список);
		Колонка.ПутьКДанным = "Список.ОК_Функция";
		//-------------------------------------
		// 1c-izhtc spawn 30.07.2015 )
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.РасходыБудущихПериодов.ФормаВыбора" Тогда
		
		// 1c-izhtc spawn 30.07.2015 (
		//БИТ Тртилек 01.12.2011
		ГруппаСубконтоМСФО = Элементы.Добавить("бит_ГруппаСубконтоМСФО", Тип("ГруппаФормы"),Элементы.Список);
		ГруппаСубконтоМСФО.Вид                 = ВидГруппыФормы.ГруппаКолонок;
		
		ЭУ = Элементы.Добавить("бит_Субконто1", Тип("ПолеФормы"), ГруппаСубконтоМСФО);
		ЭУ.Заголовок   = "Субконто 1 (МСФО)";
		ЭУ.ПутьКДанным = "Список.бит_Субконто1";
		ЭУ.Вид         = ВидПоляФормы.ПолеВвода;
		
		ЭУ = Элементы.Добавить("бит_Субконто2", Тип("ПолеФормы"), ГруппаСубконтоМСФО);
		ЭУ.Заголовок   = "Субконто 2 (МСФО)";
		ЭУ.ПутьКДанным = "Список.бит_Субконто2";
		ЭУ.Вид         = ВидПоляФормы.ПолеВвода;
		//БИТ Тртилек
		
		Колонка = Элементы.Добавить("Объект", Тип("ПолеФормы"), Элементы.Список);
		Колонка.ПутьКДанным = "Список.Объект";
		//-------------------------------------
		ГруппаКолонок = Элементы.Добавить("бит_ГруппаКолонок", Тип("ГруппаФормы"), Элементы.Список);
		ГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
		//-------------------------------------
		Колонка = Элементы.Добавить("Контрагент", Тип("ПолеФормы"), ГруппаКолонок);
		Колонка.ПутьКДанным = "Список.Контрагент";
		//-------------------------------------
		Колонка = Элементы.Добавить("ДоговорКонтрагента", Тип("ПолеФормы"), ГруппаКолонок);
		Колонка.ПутьКДанным = "Список.ДоговорКонтрагента";
		//-------------------------------------
		Колонка = Элементы.Добавить("ПринадлежностьРасчетов", Тип("ПолеФормы"), ГруппаКолонок);
		Колонка.ПутьКДанным = "Список.ПринадлежностьРасчетов";
		//-------------------------------------
		Колонка = Элементы.Добавить("Код77", Тип("ПолеФормы"), Элементы.Список);
		Колонка.ПутьКДанным = "Список.Код77";
		//-------------------------------------
		Колонка = Элементы.Вставить("бит_НомерAx", Тип("ПолеФормы"), Элементы.Список, Элементы.бит_ГруппаМСФО);
		Колонка.ПутьКДанным = "Список.бит_НомерAx";
		//-------------------------------------
		Колонка = Элементы.Добавить("ОК_Функция", Тип("ПолеФормы"), Элементы.Список);
		Колонка.ПутьКДанным = "Список.ОК_Функция";
		//-------------------------------------
		// 1c-izhtc spawn 30.07.2015 )
		
	ИначеЕсли ИдентификаторОбъекта = "Документ.ПоступлениеДопРасходов.ФормаДокумента" Тогда 
		// 1c-izhtc alena 05.08.2015 (
		ИсходнаяСтраница	= Элементы.ГруппаСтраницы.ТекущаяСтраница;
		
		//Добавление элементов на страницу "Дополнительно"	
		Элементы.ГруппаСтраницы.ТекущаяСтраница	= Элементы.ГруппаГлавное;		
		ПолеВвода = Элементы.Добавить("ОК_ID_Разноска", Тип("ПолеФормы"), Элементы.ГруппаГлавное);
		ПолеВвода.Заголовок   = "ID разноска";
		ПолеВвода.ПутьКДанным = "Объект.ОК_ID_Разноска";
		ПолеВвода.Вид         = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Подсказка = "ID разноска";
		ПолеВвода.Доступность = Истина;
		ПолеВвода.АвтоВыборНезаполненного = Ложь;
		ПолеВвода.АвтоОтметкаНезаполненного = Ложь;
		ПолеВвода.АвтоПереносСтрок = Ложь;
		ПолеВвода.АктивизироватьПоУмолчанию = Ложь;
		ПолеВвода.Видимость = Истина;
		ПолеВвода.ВыбиратьТип = Истина;
		ПолеВвода.ВыделятьОтрицательные = Ложь;
		ПолеВвода.КнопкаВыбора = Ложь;
		ПолеВвода.КнопкаОткрытия = Ложь;
		ПолеВвода.КнопкаОчистки = Ложь;
		ПолеВвода.КнопкаРегулирования = Ложь;
		ПолеВвода.КнопкаСпискаВыбора = Ложь;
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-18 (#4191)
		//ПолеВвода.Маска = "9999-9999";
		ПолеВвода.Маска = "NNNN-NNNN";
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-18 (#4191)
		ПолеВвода.МногострочныйРежим = Ложь;
		ПолеВвода.ОтметкаНезаполненного = Ложь;	
		
		ПолеВвода.ПропускатьПриВводе = Ложь;
		ПолеВвода.РасширенноеРедактирование = Ложь;
		ПолеВвода.РедактированиеТекста = Истина;
		ПолеВвода.РежимВыбораИзСписка = Ложь;
		ПолеВвода.РежимПароля = Ложь;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-05 (#4145)
		//ПолеВвода.ТолькоПросмотр = Ложь;
		ПолеВвода.ТолькоПросмотр = Истина;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-05 (#4145)
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-14 (#3758)
		//кнопка "Заполнить ID из заявки на договор"
		ГруппаIDРазноска = Элементы.Вставить("ГруппаIDРазноска", Тип("ГруппаФормы"), Элементы.ГруппаГлавное);
		ГруппаIDРазноска.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаIDРазноска.Группировка 			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаIDРазноска.ОтображатьЗаголовок 	= Ложь;
		ГруппаIDРазноска.Отображение 			= ОтображениеОбычнойГруппы.Нет;
		
		Элементы.Переместить(Элементы.ОК_ID_Разноска, ГруппаIDРазноска);
		
		КомандаЗаполнитьIDИзЗаявкиНаДоговор = Форма.Команды.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор");
		КомандаЗаполнитьIDИзЗаявкиНаДоговор.Действие = "ЗаполнитьIDИзЗаявкиНаДоговор";
		
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор = Элементы.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор", Тип("КнопкаФормы"), ГруппаIDРазноска);
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.Заголовок  = "Заполнить ID из заявки на договор";
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.ИмяКоманды = "ок_ЗаполнитьIDИзЗаявкиНаДоговор";
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-14 (#3758)
		
		//Возвращение первоначальной активной страницы
		Элементы.ГруппаСтраницы.ТекущаяСтраница	= ИсходнаяСтраница;
		
		//БИТ Тртилек 11072013 добавим страницу Релаизация собственному ЮЛ
		//новая страница
		СтраницаРеализацияСобствЮЛ = Элементы.Добавить("бит_РеализацияУСобственногоЮЛ", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы);
		СтраницаРеализацияСобствЮЛ.Заголовок   = "Реализация у собств ЮЛ";
		СтраницаРеализацияСобствЮЛ.Вид         = ВидГруппыФормы.Страница;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = СтраницаРеализацияСобствЮЛ;
		
		//табличное поле на странице
		ТабличноеПолеСобственныхДокументов = Элементы.Добавить("бит_ТабличноеПолеДокументыСобственныхКонтрагентов", Тип("ТаблицаФормы"), СтраницаРеализацияСобствЮЛ);
		ТабличноеПолеСобственныхДокументов.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов";
		ТабличноеПолеСобственныхДокументов.ТолькоПросмотр = Ложь;
		ТабличноеПолеСобственныхДокументов.ИзменятьСоставСтрок = Истина;
		//Начало_бит_Магомедов_01.08.2013 
		ТабличноеПолеСобственныхДокументов.УстановитьДействие("ПриАктивизацииЯчейки", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовПриАктивизацииЯчейки");
		ТабличноеПолеСобственныхДокументов.УстановитьДействие("ПриИзменении", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовПриИзменении");
		
		
		Колонка = Элементы.Добавить("ДокументРеализацииПередачи", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.ДокументРеализацииПередачи";
		
		//БИТ Тртилек 26072013	
		Колонка.УстановитьДействие("ПриИзменении", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовДокументРеализацииПередачиПриИзменении");
		
		Колонка.УстановитьДействие("НачалоВыбора", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовДокументРеализацииПередачиНачалоВыбора");
		
		Колонка.КнопкаОткрытия = Истина;
		///БИТ Тртилек
		
		Колонка = Элементы.Добавить("ДатаДокументаРеализацииПередачи", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.ДатаДокументаРеализацииПередачи";
		
		Колонка = Элементы.Добавить("бит_Сумма", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.бит_Сумма";
		
		Колонка = Элементы.Добавить("бит_СуммаБезНДС", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.бит_СуммаБезНДС";
		
		
		
		//добавим командную панель для табличного поля
		КоманднаяПанельСобственныхКонтрагентов = Элементы.Добавить("бит_КоманднаяПанельСобственныхКонтрагентов", Тип("ГруппаФормы"), ТабличноеПолеСобственныхДокументов.КоманднаяПанель);
	    КоманднаяПанельСобственныхКонтрагентов.Вид         = ВидГруппыФормы.ГруппаКнопок;
		
		
		//кнопка подобрать документы
		КнопкаПодобратьДокументы = Элементы.Добавить("бит_КнопкаПодбораДокументов", Тип("КнопкаФормы"),КоманднаяПанельСобственныхКонтрагентов);
		КнопкаПодобратьДокументы.Заголовок = "Подбор";
		КомандаПодобратьДокументы = Форма.Команды.Добавить("бит_КнопкаПодбораДокументов");
		КомандаПодобратьДокументы.Действие = "ПодборДокументовНажатие";
		КнопкаПодобратьДокументы.ИмяКоманды = "бит_КнопкаПодбораДокументов";
		
		//итоговая сумма
		ГруппаСумм = Элементы.Добавить("битИтоговыеСуммы", Тип("ГруппаФормы"), СтраницаРеализацияСобствЮЛ);
		ГруппаСумм.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСумм.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаСумм.ОтображатьЗаголовок = Ложь;
		ГруппаСумм.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		ИтоговаяСумма = Элементы.Добавить("бит_ИтоговаяСумма", Тип("ПолеФормы"), ГруппаСумм);
		ИтоговаяСумма.Заголовок = "Сумма";
		ИтоговаяСумма.ПутьКДанным = "бит_ИтоговаяСумма";
		ИтоговаяСумма.Вид = ВидПоляФормы.ПолеВвода;
		ИтоговаяСумма.ТолькоПросмотр = Истина;
		ИтоговаяСумма.РедактированиеТекста = Ложь;

			
		//итоговая сумма без НДС
		ИтоговаяСуммаБезНДС = Элементы.Добавить("бит_ИтоговаяСуммаБезНДС", Тип("ПолеФормы"), ГруппаСумм);
		ИтоговаяСуммаБезНДС.Заголовок = "Сумма без НДС";
		ИтоговаяСуммаБезНДС.ПутьКДанным = "бит_ИтоговаяСуммаБезНДС";
		ИтоговаяСуммаБезНДС.Вид = ВидПоляФормы.ПолеВвода;
		ИтоговаяСуммаБезНДС.ТолькоПросмотр = Истина;
		ИтоговаяСуммаБезНДС.РедактированиеТекста = Ложь;
		
		
		// 1c-izhtc alena 05.08.2015 )
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.СценарииПланирования.ФормаЭлементаУправляемая" Тогда
		
		// 1c-izhtc spawn 30.07.2015 (
		ПолеВвода = Элементы.Добавить("КодЗагрузкиИзExcel", Тип("ПолеФормы"), Элементы.СтраницаОсновные);
		ПолеВвода.Заголовок   = "Код загрузки из Excel";
		ПолеВвода.ПутьКДанным = "Объект.КодЗагрузкиИзExcel";
		ПолеВвода.Вид         = ВидПоляФормы.ПолеВвода;
		// 1c-izhtc spawn 30.07.2015 )
		
	ИначеЕсли ИдентификаторОбъекта = "Справочник.Контрагенты.ФормаЭлемента" Тогда
		
		// 1c-izhtc spawn 07.08.2015 (
		ГруппаОКЕЙ = Элементы.Вставить("ГруппаОКЕЙ", Тип("ГруппаФормы"), , Элементы.ГруппаКонтактнаяИнформация);
		ГруппаОКЕЙ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаОКЕЙ.Заголовок = "ОКЕЙ";
		ГруппаОКЕЙ.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		ГруппаОКЕЙ.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
		ГруппаОКЕЙ.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		ГруппаФлажкиОКЕЙ = Элементы.Добавить("ГруппаФлажкиОКЕЙ", Тип("ГруппаФормы"), Элементы.ГруппаОКЕЙ);
		ГруппаФлажкиОКЕЙ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаФлажкиОКЕЙ.ОтображатьЗаголовок = Ложь;
		ГруппаФлажкиОКЕЙ.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаФлажкиОКЕЙ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		
		Флажок = Элементы.Добавить("КонтрагентОКЕЙ", Тип("ПолеФормы"), Элементы.ГруппаФлажкиОКЕЙ);
		Флажок.Вид = ВидПоляФормы.ПолеФлажка;
		Флажок.ПутьКДанным = "Объект.КонтрагентОКЕЙ";
		Флажок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		Флажок.Заголовок = "Контрагент ОКЕЙ";
		Флажок.Подсказка = "Контрагент ОКЕЙ";
		
		Флажок = Элементы.Добавить("ОК_КонтрагентБК", Тип("ПолеФормы"), Элементы.ГруппаФлажкиОКЕЙ);
		Флажок.Вид = ВидПоляФормы.ПолеФлажка;
		Флажок.ПутьКДанным = "Объект.ОК_КонтрагентБК";
		Флажок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		Флажок.Заголовок = "Контрагент БК";
		Флажок.Подсказка = "Контрагент БК";
		
		//Начало_бит_Магомедов_17.12.2012 
		Флажок = Элементы.Добавить("бит_му_СвязаннаяСторона", Тип("ПолеФормы"), Элементы.ГруппаФлажкиОКЕЙ);
		Флажок.Вид = ВидПоляФормы.ПолеФлажка;
		Флажок.ПутьКДанным = "Объект.бит_му_СвязаннаяСторона";
		Флажок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		Флажок.Заголовок = "Связанная сторона";
		Флажок.Подсказка = "Для удобства отбора данных по связанным сторонам в стандартных бухгалтерских отчетах (ОСВ, анализ счета и т.д.)";
		//Конец_бит_Магомедов_17.12.2012 
		// СофтБаланс Начало Кузнецова С. [07.04.2014] 
		Флажок.УстановитьДействие("ПриИзменении","бит_му_СвязаннаяСторонаПриИзменении");
		// СофтБаланс Окончание Кузнецова С. [07.04.2014]
		
		ГруппаНомДокИмпортКод77 = Элементы.Добавить("ГруппаНомДокИмпортКод77", Тип("ГруппаФормы"), Элементы.ГруппаОКЕЙ);
		ГруппаНомДокИмпортКод77.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаНомДокИмпортКод77.ОтображатьЗаголовок = Ложь;
		ГруппаНомДокИмпортКод77.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаНомДокИмпортКод77.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		
		ПолеВвода = Элементы.Добавить("НомДокИмпорт", Тип("ПолеФормы"), Элементы.ГруппаНомДокИмпортКод77);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "Ном док импорт";
		ПолеВвода.ПутьКДанным = "Объект.НомДокИмпорт";
		
		ПолеВвода = Элементы.Добавить("Код77", Тип("ПолеФормы"), Элементы.ГруппаНомДокИмпортКод77);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "Код77";
		ПолеВвода.ПутьКДанным = "Объект.Код77";
		
		ПолеВвода = Элементы.Добавить("ТипКонтрагента", Тип("ПолеФормы"), Элементы.ГруппаОКЕЙ);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "Тип контрагента";
		ПолеВвода.ПутьКДанным = "Объект.ТипКонтрагента";
		
		ПолеВвода = Элементы.Добавить("ПринадлежностьРасчетов", Тип("ПолеФормы"), Элементы.ГруппаОКЕЙ);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "Принадлежность расчетов";
		ПолеВвода.ПутьКДанным = "Объект.ПринадлежностьРасчетов";
		
		ПолеВвода = Элементы.Добавить("Подразделение", Тип("ПолеФормы"), Элементы.ГруппаОКЕЙ);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "Подразделение";
		ПолеВвода.ПутьКДанным = "Объект.Подразделение";
		
		// BIT AMerkulov 22.06.2014 ++ 
		Флажок = Элементы.Добавить("бит_Федеральный", Тип("ПолеФормы"), Элементы.ГруппаОКЕЙ);
		Флажок.Вид = ВидПоляФормы.ПолеФлажка;
		Флажок.ПутьКДанным = "Объект.бит_Федеральный";
		Флажок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		Флажок.Заголовок = "Федеральный";
		Флажок.Подсказка = "Федеральный";
		// BIT AMerkulov 22.06.2014 -- 
		
		//bit  auavseenkov++
		ПолеВвода = Элементы.Добавить("НомДокИмпорт2", Тип("ПолеФормы"), Элементы.ГруппаОКЕЙ);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "Ном док импорт 2";
		ПолеВвода.ПутьКДанным = "Объект.НомДокИмпорт2";
		
		//СофтЛаб Начало 2019-09-21 #3486
		//ПолеВвода = Элементы.Добавить("Статус", Тип("ПолеФормы"), Элементы.ГруппаОКЕЙ);
		//ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		//ПолеВвода.Заголовок = "Статус";
		//ПолеВвода.ПутьКДанным = "Объект.бит_Статус";
		
		ГруппаИсторияСтатусов = Элементы.Добавить("ГруппаИсторияСтатусов", Тип("ГруппаФормы"), Элементы.ГруппаОКЕЙ);
		ГруппаИсторияСтатусов.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаИсторияСтатусов.ОтображатьЗаголовок = Ложь;
		ГруппаИсторияСтатусов.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаИсторияСтатусов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		
		ПолеВвода = Элементы.Добавить("Статус", Тип("ПолеФормы"), Элементы.ГруппаИсторияСтатусов);
		ПолеВвода.Вид 				= ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок 		= "Статус";
		ПолеВвода.ПутьКДанным 		= "Объект.бит_Статус";
		ПолеВвода.ТолькоПросмотр 	= Истина;
		
		ПолеВвода = Элементы.Добавить("ИсторияСтатусов", Тип("ПолеФормы"), Элементы.ГруппаИсторияСтатусов);
		ПолеВвода.Вид 					= ВидПоляФормы.ПолеНадписи;
		ПолеВвода.Гиперссылка			= Истина;
		ПолеВвода.ПоложениеЗаголовка 	= ПоложениеЗаголовкаЭлементаФормы.Нет;
		ПолеВвода.ПутьКДанным 			= "ИсторияСтатусов";
		ПолеВвода.УстановитьДействие("Нажатие", "ИсторияСтатусовНажатие");
		//СофтЛаб Конец 2019-09-21 #3486
		
		ПолеВвода = Элементы.Добавить("ГруппаПоставщиков", Тип("ПолеФормы"), Элементы.ГруппаОКЕЙ);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "Группа поставщиков";
		ПолеВвода.ПутьКДанным = "Объект.бит_ГруппаПоставщиков";
		
		ПолеВвода = Элементы.Добавить("ГруппаКлиентов", Тип("ПолеФормы"), Элементы.ГруппаОКЕЙ);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "Группа клиентов";
		ПолеВвода.ПутьКДанным = "Объект.бит_ГруппаКлиентов";
		
		ПолеВвода = Элементы.Добавить("ВнешнийКодSoftSolution", Тип("ПолеФормы"), Элементы.ГруппаОКЕЙ);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "Внешний код SoftSolution";
		ПолеВвода.ПутьКДанным = "Объект.бит_ВнешнийКодSoftSolution";
		//}
		
		// +СБ. Кузнецова С. 2014-09-17 - поле перенесено в справочник "Договоры контрагентов"
		//// СофтБаланс Начало Кузнецова С. [07.04.2014] 
		//Надпись = ЭлементыФормы.Добавить(Тип("Надпись"),"НадписьСБ_ТипКонтрагентаДляСвязанныхСторон",Истина,ЭлементыФормы.Панель);
		//Надпись.Имя = "НадписьСБ_ТипКонтрагентаДляСвязанныхСторон";
		//Надпись.Заголовок = "Тип контрагента (для связанных сторон):";
		//Надпись.Верх = 314;
		//Надпись.Высота = 19;
		//Надпись.Ширина = 218;
		//Надпись.Лево = 6;
		//Надпись.Доступность = Истина;
		//Надпись.АвтоКонтекстноеМеню = Истина;
		//Надпись.АктивизироватьПоУмолчанию = Ложь;
		//Надпись.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
		//Надпись.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
		//Надпись.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
		//Надпись.Видимость = Истина;
		//Надпись.ВыделятьОтрицательные = Ложь;
		//Надпись.ГиперСсылка = Ложь;
		//Надпись.ИзменяетДанные = Ложь;
		//Надпись.ПервыйВГруппе = Ложь;
		//Надпись.ПоложениеКартинкиНадписи = ПоложениеКартинкиНадписи.Лево;
		//Надпись.ПорядокОтображения = 18;
		//Надпись.ПрозрачныйФон = Ложь;
		//Надпись.ПропускатьПриВводе = Ложь;
		//Надпись.РазмерКартинки = РазмерКартинки.АвтоРазмер;
		//Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.Панель,ГраницаЭлементаУправления.Низ);
		//Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ,ЭлементыФормы.НадписьСБ_ТипКонтрагентаДляСвязанныхСторон,ГраницаЭлементаУправления.Верх);
		//Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.НадписьСБ_ТипКонтрагентаДляСвязанныхСторон,ГраницаЭлементаУправления.Лево);
		//
		//ПолеВвода = ЭлементыФормы.Добавить(Тип("ПолеВвода"),"СБ_ТипКонтрагентаДляСвязанныхСторон",Истина,ЭлементыФормы.Панель);
		//ПолеВвода.Имя = "СБ_ТипКонтрагентаДляСвязанныхСторон";
		//ПолеВвода.Данные = "СБ_ТипКонтрагентаДляСвязанныхСторон";
		//ПолеВвода.Подсказка = "Тип контрагента (для связанных сторон)";
		//ПолеВвода.Верх = 314;
		//ПолеВвода.Высота = 19;
		//ПолеВвода.Ширина = 309;
		//ПолеВвода.Лево = 227;
		//ПолеВвода.Доступность = Истина;
		//ПолеВвода.АвтоВыборНезаполненного = Ложь;
		//ПолеВвода.АвтоКонтекстноеМеню = Истина;
		//ПолеВвода.АвтоОтметкаНезаполненного = Истина;
		//ПолеВвода.АвтоПереносСтрок = Истина;
		//ПолеВвода.АктивизироватьПоУмолчанию = Ложь;
		//ПолеВвода.БыстрыйВыбор = Истина;
		//ПолеВвода.ВертикальноеПоложение = ВертикальноеПоложение.Верх;
		//ПолеВвода.Видимость = Истина;
		//ПолеВвода.ВыбиратьТип = Ложь;
		//ПолеВвода.ВыборНезаполненного = Ложь;
		//ПолеВвода.ВыделятьОтрицательные = Ложь;
		//ПолеВвода.ИзменяетДанные = Истина;
		//ПолеВвода.КнопкаВыбора = Истина;
		//ПолеВвода.КнопкаОткрытия = Ложь;
		//ПолеВвода.КнопкаОчистки = Ложь;
		//ПолеВвода.КнопкаРегулирования = Ложь;
		//ПолеВвода.КнопкаСпискаВыбора = Ложь;
		//ПолеВвода.ПервыйВГруппе = Ложь;
		//ПолеВвода.ПорядокОтображения = 19;
		//ПолеВвода.ПрозрачныйФон = Ложь;
		//ПолеВвода.ПропускатьПриВводе = Ложь;
		//ПолеВвода.РедактированиеТекста = Истина;
		//ПолеВвода.РежимВыбораИзСписка = Ложь;
		//ПолеВвода.ТолькоПросмотр = Ложь;
		//ПолеВвода.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.Панель,ГраницаЭлементаУправления.Низ);
		//ПолеВвода.УстановитьПривязку(ГраницаЭлементаУправления.Низ,ЭлементыФормы.СБ_ТипКонтрагентаДляСвязанныхСторон,ГраницаЭлементаУправления.Верх);
		//ПолеВвода.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭтаФорма.Панель,ГраницаЭлементаУправления.Право);
		//
		//ЭлементыФормы.Панель.Высота = ЭлементыФормы.Панель.Высота - 24;
		//// СофтБаланс Окончание Кузнецова С. [07.04.2014]
		// -СБ. Кузнецова С.
		
		// +СБ. Кузнецова С. 2014-09-17 
		// добавление вкладки с табличной частью "Периметры консолидации"
		НоваяВкладка = Элементы.Вставить("СтраницаСБ_ПериметрыКонсолидации", Тип("ГруппаФормы"), , Элементы.ГруппаКонтактнаяИнформация);
		НоваяВкладка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		НоваяВкладка.Заголовок = "Периметры консолидации";
		НоваяВкладка.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		НоваяВкладка.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
		НоваяВкладка.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		ТабличнаяЧасть = Элементы.Добавить("СБ_ПериметрыКонсолидации", Тип("ТаблицаФормы"), Элементы.СтраницаСБ_ПериметрыКонсолидации);
		ТабличнаяЧасть.ПутьКДанным = "Объект.СБ_ПериметрыКонсолидации";
		
		Колонка = Элементы.Добавить("СБ_ПериметрыКонсолидацииНомерСтроки", Тип("ПолеФормы"), Элементы.СБ_ПериметрыКонсолидации);
		Колонка.ПутьКДанным = "Объект.СБ_ПериметрыКонсолидации.НомерСтроки";
		
		Колонка = Элементы.Добавить("СБ_ПериметрыКонсолидацииПериметрКонсолидации", Тип("ПолеФормы"), Элементы.СБ_ПериметрыКонсолидации);
		Колонка.ПутьКДанным = "Объект.СБ_ПериметрыКонсолидации.ПериметрКонсолидации";
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		// -СБ. Кузнецова С.
		// 1c-izhtc spawn 07.08.2015 )
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-11-30 (#МДМ)
		ИменаРолейДляЭДО = "ДобавлениеИзменениеНастроекОбменаСКонтрагентами";
		ИменаРолейДляЭДО = ИменаРолейДляЭДО + "," + "ЧтениеНастроекОбменаСКонтрагентами";
		
		РолиДляЭДОДоступны = Пользователи.РолиДоступны(ИменаРолейДляЭДО);
		ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь();
		
		Если Элементы.Найти("НомДокИмпорт") <> Неопределено Тогда
			Элементы.НомДокИмпорт.Доступность = ЭтоПолноправныйПользователь;
		КонецЕсли;
		Если Элементы.Найти("НомДокИмпорт2") <> Неопределено Тогда
			Элементы.НомДокИмпорт2.Доступность = ЭтоПолноправныйПользователь;
		КонецЕсли;
		Если Элементы.Найти("ГруппаЭДО") <> Неопределено Тогда
			Элементы.ГруппаЭДО.Доступность = РолиДляЭДОДоступны;
		КонецЕсли;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-11-30 (#МДМ)
		
	ИначеЕсли ИдентификаторОбъекта = "РегистрСведений.бит_му_НРП_ВНА.ФормаСписка" ИЛИ ИдентификаторОбъекта = "Документ.бит_му_КомплектацияОС.ФормаСписка"
		ИЛИ ИдентификаторОбъекта = "Документ.бит_му_КомплектацияОС.ФормаВыбора" ИЛИ ИдентификаторОбъекта = "Документ.бит_му_КомплектацияОС.ФормаДокумента" Тогда
		
		//izhtc-Kir 04.08.2015 (
		КомандаОткрытьСправку = Форма.Команды.Добавить("бит_си_ДействияФормыОткрытьСИ");
		КомандаОткрытьСправку.Действие = "бит_си_ДействияФормыОткрытьСИ";
		КомандаОткрытьСправку.Картинка = БиблиотекаКартинок.бит_си_Как;
		
		КнопкаОткрытьСправку = Элементы.Добавить("Кнопка_бит_си_ДействияФормыОткрытьСИ", Тип("КнопкаФормы"), Форма.КоманднаяПанель);
		КнопкаОткрытьСправку.ИмяКоманды = "бит_си_ДействияФормыОткрытьСИ";
		
		Если ИдентификаторОбъекта <> "РегистрСведений.бит_му_НРП_ВНА.ФормаСписка"
		    И бит_ХранениеДополнительнойИнформации.МеханизмХраненияДополнительнойИнформацииЕсть() Тогда
			
			КомандаПрисоединенныеФайлы = Форма.Команды.Добавить("ДИ_ПрикрепленныеФайлы");
			КомандаПрисоединенныеФайлы.Действие = "бит_ДействияФормыПрикрепленныеФайлы";
			КомандаПрисоединенныеФайлы.Картинка = БиблиотекаКартинок.бит_Скрепка;
			КомандаПрисоединенныеФайлы.Отображение = ОтображениеКнопки.КартинкаИТекст;
			КомандаПрисоединенныеФайлы.Подсказка   = "Открыть прикрепленные файлы";
			КомандаПрисоединенныеФайлы.Заголовок = "Файлы (БИТ)";
			
			КомандаПрисоединенныеФайлы = Элементы.Добавить("бит_ДействияФормыПрикрепленныеФайлы", Тип("КнопкаФормы"), Форма.КоманднаяПанель);
			КомандаПрисоединенныеФайлы.ИмяКоманды = "ДИ_ПрикрепленныеФайлы";
			
		КонецЕсли;
		//izhtc-Kir 04.08.2015 )
		
	ИначеЕсли ИдентификаторОбъекта = "Документ.ПоступлениеТоваровУслуг.ФормаДокументаОбщая" Тогда 
		// 1c-izhtc alena 11.08.2015 (
		
		ИсходнаяСтраница	= Элементы.ГруппаСтраницы.ТекущаяСтраница;
		
		//Добавление элементов на страницу "Дополнительно"	
		Элементы.ГруппаСтраницы.ТекущаяСтраница	= Элементы.ГруппаДополнительно;
		
		
		
		ПолеВвода = Элементы.Добавить("ОК_ID_Разноска", Тип("ПолеФормы"), Элементы.ГруппаДополнительно);
		ПолеВвода.Заголовок = "ID разноска";
		ПолеВвода.ПутьКДанным = "Объект.ОК_ID_Разноска";
		ПолеВвода.Подсказка = "ID разноска";
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Доступность = Истина;
		ПолеВвода.АвтоВыборНезаполненного = Ложь;
		ПолеВвода.АвтоОтметкаНезаполненного = Ложь;
		ПолеВвода.АвтоПереносСтрок = Ложь;
		ПолеВвода.АктивизироватьПоУмолчанию = Ложь;
		ПолеВвода.Видимость = Истина;
		ПолеВвода.ВыбиратьТип = Истина;
		ПолеВвода.ВыделятьОтрицательные = Ложь;
		ПолеВвода.КнопкаВыбора = Ложь;
		ПолеВвода.КнопкаОткрытия = Ложь;
		ПолеВвода.КнопкаОчистки = Ложь;
		ПолеВвода.КнопкаРегулирования = Ложь;
		ПолеВвода.КнопкаСпискаВыбора = Ложь;
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-18 (#4191)
		//ПолеВвода.Маска = "9999-9999";
		ПолеВвода.Маска = "NNNN-NNNN";
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-18 (#4191)
		ПолеВвода.МногострочныйРежим = Ложь;
		ПолеВвода.ОтметкаНезаполненного = Ложь;
		ПолеВвода.ПропускатьПриВводе = Ложь;
		ПолеВвода.РасширенноеРедактирование = Ложь;
		ПолеВвода.РедактированиеТекста = Истина;
		ПолеВвода.РежимВыбораИзСписка = Ложь;
		ПолеВвода.РежимПароля = Ложь;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-05 (#4145)
		//ПолеВвода.ТолькоПросмотр = Ложь;
		ПолеВвода.ТолькоПросмотр = Истина;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-05 (#4145)
		
		ПолеВвода.УстановитьДействие("ПриИзменении", "ОК_ID_РазноскаПриИзменении");
		//1c-izhtc alena 11.08.2015 ОК_РазнесениеОборотов не используется(
		//ПолеВвода 							= Элементы.Добавить("ОК_РазнесениеОборотов",Тип("ПолеФормы"), Элементы.ГруппаДополнительно);
		//ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		//ПолеВвода.ПутьКданным 				= "Объект.ОК_РазнесениеОборотов";
		//ПолеВвода.Заголовок 				= "Разнесение оборотов";
		//ПолеВвода.Подсказка 				= "Разнесение оборотов";
		//ПолеВвода.Доступность 				= Истина;
		//ПолеВвода.АвтоВыборНезаполненного 	= Ложь;
		//ПолеВвода.АвтоОтметкаНезаполненного = Ложь;
		//ПолеВвода.АвтоПереносСтрок 			= Ложь;
		//ПолеВвода.АктивизироватьПоУмолчанию = Ложь;
		//ПолеВвода.Видимость 				= Истина;
		//ПолеВвода.ВыбиратьТип 				= Истина;
		//ПолеВвода.ВыделятьОтрицательные 	= Ложь;
		//ПолеВвода.КнопкаВыбора 				= Ложь;
		//ПолеВвода.КнопкаОткрытия 			= Истина;
		//ПолеВвода.КнопкаОчистки 			= Ложь;
		//ПолеВвода.КнопкаРегулирования 		= Ложь;
		//ПолеВвода.КнопкаСпискаВыбора 		= Ложь;
		//ПолеВвода.ОтметкаНезаполненного 	= Ложь;
		//ПолеВвода.ПропускатьПриВводе 		= Ложь;
		//ПолеВвода.РедактированиеТекста 		= Истина;
		//ПолеВвода.РежимВыбораИзСписка 		= Ложь;
		//ПолеВвода.ТолькоПросмотр 			= Не (РольДоступна("ПолныеПрава") или РольДоступна("бит_БК_ГлавныйБК"));
		//1c-izhtc alena 11.08.2015 ОК_РазнесениеОборотов не используется)
		Флажок = Элементы.Добавить("ОК_ID_ВТЧ", Тип("ПолеФормы"), Элементы.ГруппаДополнительно);
		Флажок.Вид = ВидПоляФормы.ПолеФлажка;
		Флажок.ПутьКДанным = "Объект.ОК_ID_ВТЧ";
		Флажок.Заголовок = "ID в табличной части";
		Флажок.Подсказка = "ID в табличной части";
		Флажок.Доступность = Истина;
		Флажок.АктивизироватьПоУмолчанию = Ложь;
		Флажок.Видимость = Истина;
		Флажок.ПропускатьПриВводе = Ложь;
		Флажок.УстановитьДействие("ПриИзменении", "ОК_ID_ВТЧПриИзменении");
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-14 (#3758)
		//кнопка "Заполнить ID из заявки на договор"
		ГруппаIDРазноска = Элементы.Вставить("ГруппаIDРазноска", Тип("ГруппаФормы"), Элементы.ГруппаДополнительно);
		ГруппаIDРазноска.Вид 					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаIDРазноска.Группировка 			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаIDРазноска.ОтображатьЗаголовок 	= Ложь;
		ГруппаIDРазноска.Отображение 			= ОтображениеОбычнойГруппы.Нет;
		
		Элементы.Переместить(Элементы.ОК_ID_Разноска, ГруппаIDРазноска);
		
		КомандаЗаполнитьIDИзЗаявкиНаДоговор = Форма.Команды.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор");
		КомандаЗаполнитьIDИзЗаявкиНаДоговор.Действие = "ЗаполнитьIDИзЗаявкиНаДоговор";
		
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор = Элементы.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор", Тип("КнопкаФормы"), ГруппаIDРазноска);
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.Заголовок  = "Заполнить ID из заявки на договор";
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.ИмяКоманды = "ок_ЗаполнитьIDИзЗаявкиНаДоговор";
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-14 (#3758)
		
		Колонка = Элементы.Вставить("УслугиОК_ID_Разноска", Тип("ПолеФормы"), Элементы.Услуги, Элементы.УслугиОтступ);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.Услуги.ОК_ID_Разноска";
		Колонка.Заголовок = "ID разноска";
		Колонка.Доступность = Истина;
		Колонка.АвтоОтметкаНезаполненного = Ложь;
		Колонка.Видимость = Истина;
		Колонка.ПропускатьПриВводе = Ложь;
		Колонка.ТолькоПросмотр = Ложь;
		//.....................................
		Колонка.Доступность = Истина;
		Колонка.АвтоВыборНезаполненного = Ложь;
		Колонка.АвтоОтметкаНезаполненного = Ложь;
		Колонка.ВыбиратьТип = Истина;
		Колонка.ВыделятьОтрицательные = Ложь;
		Колонка.КнопкаВыбора = Ложь;
		Колонка.КнопкаОткрытия = Ложь;
		Колонка.КнопкаОчистки = Ложь;
		Колонка.КнопкаРегулирования = Ложь;
		Колонка.КнопкаСпискаВыбора = Ложь;
		Колонка.МногострочныйРежим = Ложь;
		Колонка.ОграничениеТипа = Новый ОписаниеТипов("",,,);
		Колонка.ОтметкаНезаполненного = Ложь;
		Колонка.РасширенноеРедактирование = Ложь;
		Колонка.РедактированиеТекста = Истина;
		Колонка.РежимВыбораИзСписка = Ложь;
		Колонка.ТолькоПросмотр = Ложь;
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-18 (#4191)
		//ПолеВвода.Маска = "9999-9999";
		ПолеВвода.Маска = "NNNN-NNNN";
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-18 (#4191)
		Колонка.УстановитьДействие("ПриИзменении", "ОК_ID_РазноскаПриТЧИзменении");
		
		//1c-izhtc alena 11.08.2015 ОК_РазнесениеОборотов не используется(
		//Колонка = Элементы.Добавить("УслугиОК_РазнесениеОборотов", Тип("ПолеФормы"), Элементы.Услуги);
		//Колонка.Вид = ВидПоляФормы.ПолеВвода;
		//Колонка.ПутьКДанным = "Объект.Услуги.ОК_РазнесениеОборотов";
		//Колонка.Заголовок = "Разнесение оборотов";
		//Колонка.Доступность = Истина;
		//Колонка.АвтоОтметкаНезаполненного = Ложь;
		//Колонка.Видимость = Истина;
		//Колонка.ПропускатьПриВводе = Ложь;
		//Колонка.ТолькоПросмотр = Ложь;
		////.....................................
		//Колонка.Доступность = Истина;
		//Колонка.АвтоВыборНезаполненного = Ложь;
		//Колонка.АвтоОтметкаНезаполненного = Ложь;
		//Колонка.ВыбиратьТип = Истина;
		//Колонка.ВыделятьОтрицательные = Ложь;
		//Колонка.КнопкаВыбора = Ложь;
		//Колонка.КнопкаОткрытия = Истина;
		//Колонка.КнопкаОчистки = Ложь;
		//Колонка.КнопкаРегулирования = Ложь;
		//Колонка.КнопкаСпискаВыбора = Ложь;
		//Колонка.ОграничениеТипа = Новый ОписаниеТипов("",,,);
		//Колонка.ОтметкаНезаполненного = Ложь;
		//Колонка.РедактированиеТекста = Истина;
		//Колонка.РежимВыбораИзСписка = Ложь;
		//Колонка.ТолькоПросмотр = Ложь;
		 //1c-izhtc alena 11.08.2015 ОК_РазнесениеОборотов не используется)
		Надпись = Элементы.Вставить("НадписьПодразделениеДоговора", Тип("ДекорацияФормы"), Элементы.ГруппаШапкаПравая, Элементы.Организация);
		Надпись.Вид = ВидДекорацииФормы.Надпись; 
		Надпись.Доступность = Истина;
		Надпись.Видимость = Истина;
		Надпись.ЦветТекста	= Новый Цвет(255, 0, 0);
		
		//Возвращение первоначальной активной страницы
		Элементы.ГруппаСтраницы.ТекущаяСтраница	= ИсходнаяСтраница;
		
		//БИТ Тртилек 11072013 добавим страницу Релаизация собственному ЮЛ
		//новая страница
		СтраницаРеализацияСобствЮЛ = Элементы.Добавить("бит_РеализацияУСобственногоЮЛ", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы); 
		СтраницаРеализацияСобствЮЛ.Заголовок = "Реализация у собств ЮЛ";
		СтраницаРеализацияСобствЮЛ.Вид = ВидГруппыФормы.Страница;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = СтраницаРеализацияСобствЮЛ;
		
		//табличное поле на странице
		ТабличноеПолеСобственныхДокументов = Элементы.Добавить("бит_ТабличноеПолеДокументыСобственныхКонтрагентов", Тип("ТаблицаФормы"), СтраницаРеализацияСобствЮЛ);
		ТабличноеПолеСобственныхДокументов.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов";
		ТабличноеПолеСобственныхДокументов.ТолькоПросмотр = Ложь;
		ТабличноеПолеСобственныхДокументов.ИзменятьСоставСтрок = Истина;
		//Начало_бит_Магомедов_01.08.2013 
		ТабличноеПолеСобственныхДокументов.УстановитьДействие("ПриАктивизацииЯчейки", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовПриАктивизацииЯчейки");
		ТабличноеПолеСобственныхДокументов.УстановитьДействие("ПриИзменении", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовПриИзменении");
		
		Колонка = Элементы.Добавить("ДокументРеализацииПередачи", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.ДокументРеализацииПередачи";
		
		//БИТ Тртилек 26072013	
		Колонка.УстановитьДействие("ПриИзменении", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовДокументРеализацииПередачиПриИзменении");
		
		Колонка.УстановитьДействие("НачалоВыбора", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовДокументРеализацииПередачиНачалоВыбора");
		
		Колонка.КнопкаОткрытия = Истина;
		///БИТ Тртилек
		
		Колонка = Элементы.Добавить("ДатаДокументаРеализацииПередачи", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.ДатаДокументаРеализацииПередачи";
		
		Колонка = Элементы.Добавить("бит_Сумма", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.бит_Сумма";
		
		Колонка = Элементы.Добавить("бит_СуммаБезНДС", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.бит_СуммаБезНДС";
		
		//добавим командную панель для табличного поля
		КоманднаяПанельСобственныхКонтрагентов = Элементы.Добавить("бит_КоманднаяПанельСобственныхКонтрагентов", Тип("ГруппаФормы"), ТабличноеПолеСобственныхДокументов.КоманднаяПанель);
		КоманднаяПанельСобственныхКонтрагентов.Вид         = ВидГруппыФормы.ГруппаКнопок;
		
		//кнопка подобрать документы
		КнопкаПодобратьДокументы = Элементы.Добавить("бит_КнопкаПодбораДокументов", Тип("КнопкаФормы"),КоманднаяПанельСобственныхКонтрагентов);
		КнопкаПодобратьДокументы.Заголовок = "Подбор";
		КомандаПодобратьДокументы = Форма.Команды.Добавить("бит_КнопкаПодбораДокументов");
		КомандаПодобратьДокументы.Действие = "ПодборДокументовНажатие";
		КнопкаПодобратьДокументы.ИмяКоманды = "бит_КнопкаПодбораДокументов";
		
		//итоговая сумма
		ГруппаСумм = Элементы.Добавить("битИтоговыеСуммы", Тип("ГруппаФормы"), СтраницаРеализацияСобствЮЛ);
		ГруппаСумм.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСумм.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаСумм.ОтображатьЗаголовок = Ложь;
		ГруппаСумм.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		ИтоговаяСумма = Элементы.Добавить("бит_ИтоговаяСумма", Тип("ПолеФормы"), ГруппаСумм);
		ИтоговаяСумма.Заголовок = "Сумма";
		ИтоговаяСумма.ПутьКДанным = "бит_ИтоговаяСумма";
		ИтоговаяСумма.Вид = ВидПоляФормы.ПолеВвода;
		ИтоговаяСумма.ТолькоПросмотр = Истина;
		ИтоговаяСумма.РедактированиеТекста = Ложь;
		
		
		//итоговая сумма без НДС
		ИтоговаяСуммаБезНДС = Элементы.Добавить("бит_ИтоговаяСуммаБезНДС", Тип("ПолеФормы"), ГруппаСумм);
		ИтоговаяСуммаБезНДС.Заголовок = "Сумма без НДС";
		ИтоговаяСуммаБезНДС.ПутьКДанным = "бит_ИтоговаяСуммаБезНДС";
		ИтоговаяСуммаБезНДС.Вид = ВидПоляФормы.ПолеВвода;
		ИтоговаяСуммаБезНДС.ТолькоПросмотр = Истина;
		ИтоговаяСуммаБезНДС.РедактированиеТекста = Ложь;
		///БИТ Тртилек
		// 1c-izhtc alena 11.08.2015 )
		
	// 1С-ИжТиСи Полина 12.08.2015 (
	ИначеЕсли ИдентификаторОбъекта = "Документ.КорректировкаПоступления.ФормаДокумента" Тогда
	
		//Добавление элементов на страницу "Дополнительно"
				
		//ОК+ Аверьянова 19.05.16 - исправление ошибки при открытии, теперь страница называется "Главное"
		//ПолеВвода = Элементы.Добавить("ОК_ID_Разноска", Тип("ПолеФормы"), Элементы.ГруппаДополнительно);
		ПолеВвода = Элементы.Добавить("ОК_ID_Разноска", Тип("ПолеФормы"), Элементы.ГруппаГлавное);
		//ОК-
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.ОК_ID_Разноска";
		ПолеВвода.Подсказка = "ID разноска";
		ПолеВвода.АктивизироватьПоУмолчанию = Ложь;
		ПолеВвода.ВыделятьОтрицательные = Ложь;
		ПолеВвода.ПропускатьПриВводе = Ложь;
		ПолеВвода.РежимПароля = Ложь;
		ПолеВвода.ТолькоПросмотр = Ложь;
	// 1С-ИжТиСи Полина 12.08.2015 )
	
	ИначеЕсли ИдентификаторОбъекта = "Документ.бит_му_ВыбытиеНМА.ФормаДокументаУправляемая" Тогда
	
		//ОК Калинин 170513
		ГруппаВалютаМСФО = Элементы.ГруппаВалютаМСФО;
		ПолеПериод = Элементы.Добавить("Период", Тип("ПолеФормы"), ГруппаВалютаМСФО);
		ПолеПериод.Вид = ВидПоляФормы.ПолеВвода;
		ПолеПериод.ПутьКДанным = "Объект.Период";
		ПолеПериод.КнопкаОчистки = Истина;
		//ОК Калинин 170513
		
	ИначеЕсли ИдентификаторОбъекта = "Документ.бит_ДополнительныеУсловияПоДоговору.ФормаДокументаУправляемая" Тогда

		// 1c-izhtc spawn 17.08.15 (
		Элементы.ДокументыПланированияУдалитьДокументыПланирования.Заголовок = "Документы планирования и заявки на договор";
		
		КомандаСоздатьЗаявкиНаДоговор			= Форма.Команды.Добавить("СоздатьЗаявкуНаДоговор");
		КомандаСоздатьЗаявкиНаДоговор.Действие	= "рс_СоздатьЗаявкуНаДоговор";
		КнопкаСоздатьЗаявкиНаДоговор			= Элементы.Добавить("СоздатьЗаявкуНаДоговор", Тип("КнопкаФормы"), Элементы.ГрафикНачисленийГруппаСоздать);
		КнопкаСоздатьЗаявкиНаДоговор.Заголовок	= "Заявки на договор";
		КнопкаСоздатьЗаявкиНаДоговор.ИмяКоманды	= "СоздатьЗаявкуНаДоговор";
		
		КомандаСоздатьПоПериодам			= Форма.Команды.Добавить("рс_СоздатьПоПериодам");
		КомандаСоздатьПоПериодам.Действие	= "рс_СоздатьПоПериодам";
		КнопкаСоздатьПоПериодам				= Элементы.Добавить("рс_СоздатьПоПериодам", Тип("КнопкаФормы"), Элементы.ГрафикНачисленийГруппаСоздать);
		КнопкаСоздатьПоПериодам.Заголовок	= "Заявки на договор (по периодам)";
		КнопкаСоздатьПоПериодам.ИмяКоманды	= "рс_СоздатьПоПериодам";
		
		КомандаРаспределитьПоПериодам			= Форма.Команды.Добавить("рс_РаспределитьПоПериодам");
		КомандаРаспределитьПоПериодам.Действие	= "рс_РаспределитьГрафикНачислений";
		КнопкаРаспределитьПоПериодам			= Элементы.Добавить("рс_РаспределитьПоПериодам", Тип("КнопкаФормы"), Элементы.ГрафикНачисленийКоманднаяПанель);
		КнопкаРаспределитьПоПериодам.Заголовок	= "Распределить по периодам";
		КнопкаРаспределитьПоПериодам.ИмяКоманды	= "рс_РаспределитьПоПериодам";
		
		//БИТ Тртилек 05112013
		КомандаЗаполнитьКолонку				= Форма.Команды.Добавить("ЗаполнитьКолонку");
		КомандаЗаполнитьКолонку.Действие	= "КонтекстноеМенюЗаполнитьКолонку";
		КомандаЗаполнитьКолонку.Картинка	= БиблиотекаКартинок.бит_СкопироватьВверхВниз;
		КомандаЗаполнитьКолонку.Отображение = ОтображениеКнопки.Авто;
		КнопкаЗаполнитьКолонку				= Элементы.Добавить("ГрафикНачисленийКонтекстноеМенюЗаполнитьКолонку", Тип("КнопкаФормы"), Элементы.ГрафикНачисленийКонтекстноеМеню);
		КнопкаЗаполнитьКолонку.Заголовок	= "Заполнить колонку";
		КнопкаЗаполнитьКолонку.ИмяКоманды	= "ЗаполнитьКолонку";
		КнопкаЗаполнитьКолонку				= Элементы.Добавить("ГрафикПлатежейКонтекстноеМенюЗаполнитьКолонку", Тип("КнопкаФормы"), Элементы.ГрафикПлатежейКонтекстноеМеню);
		КнопкаЗаполнитьКолонку.Заголовок	= "Заполнить колонку";
		КнопкаЗаполнитьКолонку.ИмяКоманды	= "ЗаполнитьКолонку";
		///БИТ Тртилек
		// 1c-izhtc spawn 17.08.15 )
	
	ИначеЕсли ИдентификаторОбъекта = "Документ.бит_ФормаВводаБюджета.ФормаСпискаУправляемая" Тогда

		// 1c-izhtc spawn 20.08.15 (
		Команда_ВНО = Форма.Команды.Добавить("бит_ВвестиНаОснованииКорректировкаКонтроляИБюджета");
		Команда_ВНО.Действие = "бит_ДействияФормыВвестиНаОсновании";
		Команда_ВНО.Заголовок = "Корректировка контрольных значений и бюджета";
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-08-04 (#3816)
		//Элемент_ВНО = Элементы.Добавить("бит_ВвестиНаОснованииКорректировкаКонтроляИБюджета", Тип("КнопкаФормы"), Элементы.ФормаКоманднаяПанель);
		Элемент_ВНО = Элементы.Добавить("бит_ВвестиНаОснованииКорректировкаКонтроляИБюджета", Тип("КнопкаФормы"), Элементы.ГруппаКоманднаяПанель);
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-08-04 (#3816)
		Элемент_ВНО.ИмяКоманды = "бит_ВвестиНаОснованииКорректировкаКонтроляИБюджета";
		// 1c-izhtc spawn 20.08.15 )
	
	//ОКЕЙ Бублик А.А.(СофтЛаб) Начало 2020-09-03 (#3824) - Форма ФормаСпискаУправляемаяGuest удалена
	//ИначеЕсли ИдентификаторОбъекта = "Документ.бит_ФормаВводаБюджета.ФормаСпискаУправляемаяGuest" Тогда

	//	// 1c-izhtc spawn 27.08.15 (
	//	НовыйЭлемент = Элементы.Добавить("Инициатор",Тип("ПолеФормы"),Элементы.Список); 
	//	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
	//	НовыйЭлемент.ПутьКДанным = "Список.бит_БК_Инициатор";
	//	НовыйЭлемент.ТолькоПросмотр = Истина; 		
	//	
	//	КомандаФормы  = Форма.Команды.Добавить("ИзменитьОтбор");
	//    КомандаФормы.Действие ="ИзменитьОтбор";	
	//	
	//	НоваяКнопка = Элементы.Добавить("ИзменитьОтбор", Тип("КнопкаФормы"),форма.КоманднаяПанель);
	//   	НоваяКнопка.ИмяКоманды = "ИзменитьОтбор";
	//   	НоваяКнопка.Заголовок = "ИзменитьОтбор";
	//	// 1c-izhtc spawn 27.08.15 )
	//	
	//ОКЕЙ Бублик А.А.(СофтЛаб) Конец 2020-09-03 (#3824)	
		
	ИначеЕсли ИдентификаторОбъекта = "Документ.бит_БК_КорректировкаКонтрольныхЗначенийИБюджета.ФормаДокумента" Тогда

		// 1c-izhtc spawn 25.08.15 (
		имякоманды="ЗаполнитьКолонку";
		команда=форма.Команды.Добавить(имякоманды);
		команда.Действие="КонтекстноеМенюЗаполнитьКолонку";
		команда.Картинка=БиблиотекаКартинок.бит_СкопироватьВверхВниз;
		
		кнЗаполнитьКолонку_=Элементы.Добавить("СуммыКорректировокПриход_ЗаполнитьКолонку", Тип("КнопкаФормы"), Элементы.СуммыКорректировокПриход.КонтекстноеМеню);
		кнЗаполнитьКолонку_.Заголовок="Заполнить колонку";
		кнЗаполнитьКолонку_.ИмяКоманды=имякоманды;
		
		кнЗаполнитьКолонку_=Элементы.Добавить("СуммыКорректировокРасход_ЗаполнитьКолонку", Тип("КнопкаФормы"), Элементы.СуммыКорректировокРасход.КонтекстноеМеню);
		кнЗаполнитьКолонку_.Заголовок="Заполнить колонку";
		кнЗаполнитьКолонку_.ИмяКоманды=имякоманды; 
		// 1c-izhtc spawn 25.08.15 )
		
	ИначеЕсли ИдентификаторОбъекта = "Документ.ИнвентаризацияРасчетовСКонтрагентами.ФормаДокумента" Тогда 
		
		//ижтиси, шадрин, 17.08.2015(
		Колонка = Элементы.Добавить("ОК_НомДокИмпортДебиторы", Тип("ПолеФормы"), Элементы.Дебиторы);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.Заголовок = "Ном Док Импорт";
		Колонка.ПутьКДанным = "Дебиторы.ОК_НомДокИмпорт";
		Колонка.КнопкаОчистки = Истина;
		//-------------------------------------
		
		Колонка = Элементы.Добавить("ОК_НомДокИмпортКредиторы", Тип("ПолеФормы"), Элементы.Кредиторы);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.Заголовок = "Ном Док Импорт";
		Колонка.ПутьКДанным = "Кредиторы.ОК_НомДокИмпорт";
		Колонка.КнопкаОчистки = Истина;
		//ижтиси, шадрин, 17.08.2015)
		
	ИначеЕсли ИдентификаторОбъекта = "Документ.ОперацияБух.ФормаДокумента" Тогда 
		
		//1c-izhtc spawn 18.08.15 (
		ПолеВвода = Элементы.Вставить("ОК_ID_Разноска", Тип("ПолеФормы"), Элементы.ГруппаШапкаПравая, Элементы.Организация);
		ПолеВвода.Заголовок   = "ID разноска";
		ПолеВвода.ПутьКДанным = "Объект.ОК_ID_Разноска";
		ПолеВвода.Вид         = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Подсказка = "ID разноска";
		ПолеВвода.Доступность = Истина;
		ПолеВвода.АвтоВыборНезаполненного = Ложь;
		ПолеВвода.АвтоОтметкаНезаполненного = Ложь;
		ПолеВвода.АвтоПереносСтрок = Ложь;
		ПолеВвода.АктивизироватьПоУмолчанию = Ложь;
		ПолеВвода.Видимость = Истина;
		ПолеВвода.ВыбиратьТип = Истина;
		ПолеВвода.ВыделятьОтрицательные = Ложь;
		ПолеВвода.КнопкаВыбора = Ложь;
		ПолеВвода.КнопкаОткрытия = Ложь;
		ПолеВвода.КнопкаОчистки = Ложь;
		ПолеВвода.КнопкаРегулирования = Ложь;
		ПолеВвода.КнопкаСпискаВыбора = Ложь;
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-18 (#4191)
		//ПолеВвода.Маска = "9999-9999";
		ПолеВвода.Маска = "NNNN-NNNN";
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-18 (#4191)
		ПолеВвода.МногострочныйРежим = Ложь;
		ПолеВвода.ОтметкаНезаполненного = Ложь;	
		
		ПолеВвода.ПропускатьПриВводе = Ложь;
		ПолеВвода.РасширенноеРедактирование = Ложь;
		ПолеВвода.РедактированиеТекста = Истина;
		ПолеВвода.РежимВыбораИзСписка = Ложь;
		ПолеВвода.РежимПароля = Ложь;
		ПолеВвода.ТолькоПросмотр = Ложь;
		//1c-izhtc spawn 18.08.15 )
		
	ИначеЕсли ИдентификаторОбъекта = "Документ.ПоступлениеТоваровУслуг.ФормаДокументаУслуги" Тогда 
		// 1c-izhtc alena 11.08.2015 (
		
		//итоговая сумма
		ГруппаIDРазноска = Элементы.Вставить("IDРазноска", Тип("ГруппаФормы"), ,Элементы.Услуги);
		ГруппаIDРазноска.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаIDРазноска.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаIDРазноска.ОтображатьЗаголовок = Ложь;
		ГруппаIDРазноска.Отображение = ОтображениеОбычнойГруппы.Нет;

		
		ПолеВвода = Элементы.Вставить("ОК_ID_Разноска", Тип("ПолеФормы"), ГруппаIDРазноска);
		ПолеВвода.Заголовок = "ID разноска";
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.ОК_ID_Разноска";
		ПолеВвода.Подсказка = "ID разноска";
		ПолеВвода.Доступность = Истина;
		ПолеВвода.АвтоВыборНезаполненного = Ложь;
		ПолеВвода.АвтоОтметкаНезаполненного = Ложь;
		ПолеВвода.АвтоПереносСтрок = Ложь;
		ПолеВвода.АктивизироватьПоУмолчанию = Ложь;
		ПолеВвода.Видимость = Истина;
		ПолеВвода.ВыбиратьТип = Истина;
		ПолеВвода.ВыделятьОтрицательные = Ложь;
		ПолеВвода.КнопкаВыбора = Ложь;
		ПолеВвода.КнопкаОткрытия = Ложь;
		ПолеВвода.КнопкаОчистки = Ложь;
		ПолеВвода.КнопкаРегулирования = Ложь;
		ПолеВвода.КнопкаСпискаВыбора = Ложь;
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-18 (#4191)
		//ПолеВвода.Маска = "9999-9999";
		ПолеВвода.Маска = "NNNN-NNNN";
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-18 (#4191)
		ПолеВвода.МногострочныйРежим = Ложь;
		ПолеВвода.ОтметкаНезаполненного = Ложь;
		ПолеВвода.ПропускатьПриВводе = Ложь;
		ПолеВвода.РасширенноеРедактирование = Ложь;
		ПолеВвода.РедактированиеТекста = Истина;
		ПолеВвода.РежимВыбораИзСписка = Ложь;
		ПолеВвода.РежимПароля = Ложь;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2021-07-05 (#4145)
		//ПолеВвода.ТолькоПросмотр = Ложь;
		ПолеВвода.ТолькоПросмотр = Истина;
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2021-07-05 (#4145)
		
		ПолеВвода.УстановитьДействие("ПриИзменении", "ОК_ID_РазноскаПриИзменении");
		
		Флажок = Элементы.Добавить("ОК_ID_ВТЧ", Тип("ПолеФормы"), ГруппаIDРазноска);
		Флажок.Вид = ВидПоляФормы.ПолеФлажка;
		Флажок.ПутьКДанным = "Объект.ОК_ID_ВТЧ";
		Флажок.Заголовок = "ID в табличной части";
		Флажок.Подсказка = "ID в табличной части";
		Флажок.Доступность = Истина;
		Флажок.АктивизироватьПоУмолчанию = Ложь;
		Флажок.Видимость = Истина;
		Флажок.ПропускатьПриВводе = Ложь;
		Флажок.УстановитьДействие("ПриИзменении", "ОК_ID_ВТЧПриИзменении");
		
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-07-14 (#3758)
		//кнопка "Заполнить ID из заявки на договор"
		КомандаЗаполнитьIDИзЗаявкиНаДоговор = Форма.Команды.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор");
		КомандаЗаполнитьIDИзЗаявкиНаДоговор.Действие = "ЗаполнитьIDИзЗаявкиНаДоговор";
		
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор = Элементы.Добавить("ок_ЗаполнитьIDИзЗаявкиНаДоговор", Тип("КнопкаФормы"), ГруппаIDРазноска);
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.Заголовок  = "Заполнить ID из заявки на договор";
		КнопкаЗаполнитьIDИзЗаявкиНаДоговор.ИмяКоманды = "ок_ЗаполнитьIDИзЗаявкиНаДоговор";
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-07-14 (#3758)
		
		Колонка = Элементы.Вставить("УслугиОК_ID_Разноска", Тип("ПолеФормы"), Элементы.Услуги,Элементы.УслугиОтступ);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.Услуги.ОК_ID_Разноска";
		Колонка.Заголовок = "ID разноска";
		Колонка.Доступность = Истина;
		Колонка.АвтоОтметкаНезаполненного = Ложь;
		Колонка.Видимость = Истина;
		Колонка.ПропускатьПриВводе = Ложь;
		Колонка.ТолькоПросмотр = Ложь;
		//.....................................
		Колонка.Доступность = Истина;
		Колонка.АвтоВыборНезаполненного = Ложь;
		Колонка.АвтоОтметкаНезаполненного = Ложь;
		Колонка.ВыбиратьТип = Истина;
		Колонка.ВыделятьОтрицательные = Ложь;
		Колонка.КнопкаВыбора = Ложь;
		Колонка.КнопкаОткрытия = Ложь;
		Колонка.КнопкаОчистки = Ложь;
		Колонка.КнопкаРегулирования = Ложь;
		Колонка.КнопкаСпискаВыбора = Ложь;
		Колонка.МногострочныйРежим = Ложь;
		Колонка.ОграничениеТипа = Новый ОписаниеТипов("",,,);
		Колонка.ОтметкаНезаполненного = Ложь;
		Колонка.РасширенноеРедактирование = Ложь;
		Колонка.РедактированиеТекста = Истина;
		Колонка.РежимВыбораИзСписка = Ложь;
		Колонка.ТолькоПросмотр = Ложь;
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-18 (#4191)
		//ПолеВвода.Маска = "9999-9999";
		ПолеВвода.Маска = "NNNN-NNNN";
		// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-18 (#4191)
		Колонка.УстановитьДействие("ПриИзменении", "ОК_ID_РазноскаПриТЧИзменении");
			
		ГруппаСтраницы = Элементы.Вставить("ГруппаСтраницы", Тип("ГруппаФормы"), ,Элементы.Услуги);
		ГруппаСтраницы.Вид = ВидГруппыФормы.Страницы;
		СтраницаУслуги = Элементы.Добавить("СтраницаУслуги", Тип("ГруппаФормы"), ГруппаСтраницы);
		СтраницаУслуги.Вид = ВидГруппыФормы.Страница;
		СтраницаУслуги.Заголовок = "Услуги";
		
		ИсходнаяСтраница	= Элементы.СтраницаУслуги;		
			
		Надпись = Элементы.Вставить("НадписьПодразделениеДоговора", Тип("ДекорацияФормы"), Элементы.ГруппаШапкаПравая, Элементы.Организация);
		Надпись.Вид = ВидДекорацииФормы.Надпись; 
		Надпись.Доступность = Истина;
		Надпись.Видимость = Истина;
		Надпись.ЦветТекста	= Новый Цвет(255, 0, 0);
		
		//Возвращение первоначальной активной страницы
		Элементы.ГруппаСтраницы.ТекущаяСтраница	= СтраницаУслуги;
		
		//БИТ Тртилек 11072013 добавим страницу Релаизация собственному ЮЛ
		//новая страница
		СтраницаРеализацияСобствЮЛ = Элементы.Добавить("бит_РеализацияУСобственногоЮЛ", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы); 
		СтраницаРеализацияСобствЮЛ.Заголовок = "Реализация у собств ЮЛ";
		СтраницаРеализацияСобствЮЛ.Вид = ВидГруппыФормы.Страница;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = СтраницаРеализацияСобствЮЛ;
		
		//табличное поле на странице
		ТабличноеПолеСобственныхДокументов = Элементы.Добавить("бит_ТабличноеПолеДокументыСобственныхКонтрагентов", Тип("ТаблицаФормы"), СтраницаРеализацияСобствЮЛ);
		ТабличноеПолеСобственныхДокументов.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов";
		ТабличноеПолеСобственныхДокументов.ТолькоПросмотр = Ложь;
		ТабличноеПолеСобственныхДокументов.ИзменятьСоставСтрок = Истина;
		//Начало_бит_Магомедов_01.08.2013 
		ТабличноеПолеСобственныхДокументов.УстановитьДействие("ПриАктивизацииЯчейки", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовПриАктивизацииЯчейки");
		ТабличноеПолеСобственныхДокументов.УстановитьДействие("ПриИзменении", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовПриИзменении");
		
		Колонка = Элементы.Добавить("ДокументРеализацииПередачи", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.ДокументРеализацииПередачи";
		
		//БИТ Тртилек 26072013	
		Колонка.УстановитьДействие("ПриИзменении", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовДокументРеализацииПередачиПриИзменении");
		
		Колонка.УстановитьДействие("НачалоВыбора", "бит_ТабличноеПолеДокументыСобственныхКонтрагентовДокументРеализацииПередачиНачалоВыбора");
		
		Колонка.КнопкаОткрытия = Истина;
		///БИТ Тртилек
		
		Колонка = Элементы.Добавить("ДатаДокументаРеализацииПередачи", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.ДатаДокументаРеализацииПередачи";
		
		Колонка = Элементы.Добавить("бит_Сумма", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.бит_Сумма";
		
		Колонка = Элементы.Добавить("бит_СуммаБезНДС", Тип("ПолеФормы"), Элементы.бит_ТабличноеПолеДокументыСобственныхКонтрагентов);
		Колонка.Вид = ВидПоляФормы.ПолеВвода;
		Колонка.ПутьКДанным = "Объект.бит_ДокументыСобственныхКонтрагентов.бит_СуммаБезНДС";
		
		//добавим командную панель для табличного поля
		КоманднаяПанельСобственныхКонтрагентов = Элементы.Добавить("бит_КоманднаяПанельСобственныхКонтрагентов", Тип("ГруппаФормы"), ТабличноеПолеСобственныхДокументов.КоманднаяПанель);
		КоманднаяПанельСобственныхКонтрагентов.Вид         = ВидГруппыФормы.ГруппаКнопок;
		
		//кнопка подобрать документы
		КнопкаПодобратьДокументы = Элементы.Добавить("бит_КнопкаПодбораДокументов", Тип("КнопкаФормы"),КоманднаяПанельСобственныхКонтрагентов);
		КнопкаПодобратьДокументы.Заголовок = "Подбор";
		КомандаПодобратьДокументы = Форма.Команды.Добавить("бит_КнопкаПодбораДокументов");
		КомандаПодобратьДокументы.Действие = "ПодборДокументовНажатие";
		КнопкаПодобратьДокументы.ИмяКоманды = "бит_КнопкаПодбораДокументов";
		
		//итоговая сумма
		ГруппаСумм = Элементы.Добавить("битИтоговыеСуммы", Тип("ГруппаФормы"), СтраницаРеализацияСобствЮЛ);
		ГруппаСумм.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСумм.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаСумм.ОтображатьЗаголовок = Ложь;
		ГруппаСумм.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		ИтоговаяСумма = Элементы.Добавить("бит_ИтоговаяСумма", Тип("ПолеФормы"), ГруппаСумм);
		ИтоговаяСумма.Заголовок = "Сумма";
		ИтоговаяСумма.ПутьКДанным = "бит_ИтоговаяСумма";
		ИтоговаяСумма.Вид = ВидПоляФормы.ПолеВвода;
		ИтоговаяСумма.ТолькоПросмотр = Истина;
		ИтоговаяСумма.РедактированиеТекста = Ложь;
		
		
		//итоговая сумма без НДС
		ИтоговаяСуммаБезНДС = Элементы.Добавить("бит_ИтоговаяСуммаБезНДС", Тип("ПолеФормы"), ГруппаСумм);
		ИтоговаяСуммаБезНДС.Заголовок = "Сумма без НДС";
		ИтоговаяСуммаБезНДС.ПутьКДанным = "бит_ИтоговаяСуммаБезНДС";
		ИтоговаяСуммаБезНДС.Вид = ВидПоляФормы.ПолеВвода;
		ИтоговаяСуммаБезНДС.ТолькоПросмотр = Истина;
		ИтоговаяСуммаБезНДС.РедактированиеТекста = Ложь;
		///БИТ Тртилек
		// 1c-izhtc alena 11.08.2015 )
	ИначеЕсли ИдентификаторОбъекта = "Документ.СчетНаОплатуПокупателю.ФормаДокумента" Тогда 
		// 1c-izhtc alena 11.08.2015 (
		ТекСтраница	= Элементы.ГруппаСтраницы.ТекущаяСтраница;
		
		//**************************************************
		//ижтиси, шадрин, 12.02.2016(
		//ПолеВвода = Элементы.Добавить("Реализация", Тип("ПолеФормы"), Элементы.ГруппаАдресСклад);
		ПолеВвода = Элементы.Добавить("Реализация", Тип("ПолеФормы"), Элементы.ГруппаШапкаЛевая);
		//ижтиси, шадрин, 12.02.2016)
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.Реализация";
		ПолеВвода.Подсказка = "Реализация";
		ПолеВвода.Доступность = Ложь;
		ПолеВвода.АвтоВыборНезаполненного = Ложь;
		ПолеВвода.АвтоОтметкаНезаполненного = Ложь;
		ПолеВвода.АктивизироватьПоУмолчанию = Ложь;
		ПолеВвода.Видимость = Истина;
		ПолеВвода.ВыбиратьТип = Истина;
		ПолеВвода.КнопкаВыбора = Истина;
		ПолеВвода.КнопкаОткрытия = Ложь;
		ПолеВвода.КнопкаОчистки = Истина;
		ПолеВвода.КнопкаРегулирования = Ложь;
		ПолеВвода.КнопкаСпискаВыбора = Ложь;
		ПолеВвода.ОтметкаНезаполненного = Ложь;
		ПолеВвода.РедактированиеТекста = Истина;
		ПолеВвода.РежимВыбораИзСписка = Ложь;
		ПолеВвода.ТолькоПросмотр = Ложь;
		//**************************************************
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница	= ТекСтраница;
		// 1c-izhtc alena 11.08.2015 )
	ИначеЕсли ИдентификаторОбъекта = "Документ.РеализацияТоваровУслуг.ФормаДокументаОбщая"
		ИЛИ ИдентификаторОбъекта = "Документ.РеализацияТоваровУслуг.ФормаДокументаТовары"
		ИЛИ ИдентификаторОбъекта = "Документ.РеализацияТоваровУслуг.ФормаДокументаУслуги" Тогда 
		// 1c-izhtc alena 11.08.2015 (
		Если  ИдентификаторОбъекта = "Документ.РеализацияТоваровУслуг.ФормаДокументаОбщая" Тогда 
			ТекВкладка	= Элементы.ГруппаСтраницы.ТекущаяСтраница;
			Элементы.ГруппаСтраницы.ТекущаяСтраница	= Элементы.ГруппаДополнительно;
			
			//**************************************************
			ПолеВвода = Элементы.Вставить("ДатаПередачиДокументов", Тип("ПолеФормы"),Элементы.ГруппаДополнительноПраво, Элементы.Грузоотправитель);
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.ПутьКДанным = "Объект.ДатаПередачиДокументов";
			ПолеВвода.Подсказка = "Дата передачи документов";
			ПолеВвода.Доступность = Истина;
			ПолеВвода.АвтоВыборНезаполненного = Ложь;
			ПолеВвода.АвтоОтметкаНезаполненного = Ложь;
			ПолеВвода.АвтоПереносСтрок = Ложь;
			ПолеВвода.АктивизироватьПоУмолчанию = Ложь;
			ПолеВвода.Видимость = Истина;
			ПолеВвода.ВыбиратьТип = Истина;
			ПолеВвода.КнопкаВыбора = Истина;
			ПолеВвода.КнопкаОткрытия = Ложь;
			ПолеВвода.КнопкаОчистки = Ложь;
			ПолеВвода.КнопкаРегулирования = Ложь;
			ПолеВвода.КнопкаСпискаВыбора = Ложь;
			ПолеВвода.РедактированиеТекста = Истина;
			ПолеВвода.РежимВыбораИзСписка = Ложь;
			ПолеВвода.ТолькоПросмотр = Ложь;
			ПолеВвода.РАстягиватьПоГоризонтали = Истина
		КонецЕсли;
		//**************************************************
		
		//ОК Калинин М. 260313 вывод в таб часть субконто3
		Если ИдентификаторОбъекта = "Документ.РеализацияТоваровУслуг.ФормаДокументаОбщая"
			ИЛИ ИдентификаторОбъекта = "Документ.РеализацияТоваровУслуг.ФормаДокументаТовары"  Тогда 
			ТекКолонка = Элементы.Вставить("ТоварыСубконто3", Тип("ПолеФормы"), Элементы.Товары, Элементы.ТоварыОтступ);
			ТекКолонка.ПутьКДанным = "Объект.Товары.Субконто3";
			ТекКолонка.Вид = ВидПоляФормы.ПолеВвода;
			ТекКолонка.КнопкаВыбора = Истина;
			ТекКолонка.ВыборГруппИЭлементов = ГруппыИЭлементы.Элементы;
			ТекКолонка.УстановитьДействие("НачалоВыбора", "ТоварыСубконто3НачалоВыбора");
		КонецЕсли;
		
		Если ИдентификаторОбъекта = "Документ.РеализацияТоваровУслуг.ФормаДокументаОбщая"
			ИЛИ ИдентификаторОбъекта = "Документ.РеализацияТоваровУслуг.ФормаДокументаУслуги" Тогда 
			ТекКолонка = Элементы.Вставить("УслугиСубконто3", Тип("ПолеФормы"), Элементы.Услуги, Элементы.УслугиОтступ);
			ТекКолонка.Вид = ВидПоляФормы.ПолеВвода;
			ТекКолонка.Заголовок = "Субконто3";
			ТекКолонка.ПутьКДанным = "Объект.Услуги.Субконто3";
			ТекКолонка.КнопкаВыбора = Истина;
			ТекКолонка.ВыборГруппИЭлементов = ГруппыИЭлементы.Элементы;
			ТекКолонка.УстановитьДействие("НачалоВыбора", "УслугиСубконто3НачалоВыбора");
		КонецЕсли;
		//ОК Калинин М.
		Если  ИдентификаторОбъекта = "Документ.РеализацияТоваровУслуг.ФормаДокументаОбщая" Тогда 
			Элементы.ГруппаСтраницы.ТекущаяСтраница	= ТекВкладка;
		КонецЕсли;			
		
	ИначеЕсли  ИдентификаторОбъекта = "Документ.бит_му_НачислениеАмортизацииНМА.ФормаДокументаУправляемая" Тогда
		
		//ОК Калинин 170513
		ГруппаВалютаМСФО = Элементы.ГруппаВалютаМСФО;
		ПолеПериод = Элементы.Добавить("Период", Тип("ПолеФормы"), ГруппаВалютаМСФО);
		ПолеПериод.Вид = ВидПоляФормы.ПолеВвода;
		ПолеПериод.ПутьКДанным = "Объект.Период";
		ПолеПериод.КнопкаОчистки = Истина;	
		//ОК Калинин
	ИначеЕсли  ИдентификаторОбъекта = "Документ.бит_ЗаявкаНаРасходованиеСредств.ФормаСпискаУправляемая" Тогда
		// +СБ. Широков Николай. 2014-09-04. 
		Таблица = Форма.Элементы.Список;
		КолонкаТаблицы = Элементы.Вставить("СБ_ИдентификаторЗаписиAXAPTA", Тип("ПолеФормы"), Таблица, Элементы.Номер);
		КолонкаТаблицы.ПутьКДанным = "Список.СБ_ИдентификаторЗаписиAXAPTA";
		КолонкаТаблицы.Заголовок = "RECID";
		// -СБ. Широков Николай
	ИначеЕсли  ИдентификаторОбъекта = "Документ.бит_ЗаявкаНаРасходованиеСредств.ФормаВыбораУправляемая" Тогда
		// +СБ. Широков Николай. 2014-09-04. 
		Таблица = Форма.Элементы.Список;
		КолонкаТаблицы = Элементы.Вставить("СБ_ИдентификаторЗаписиAXAPTA", Тип("ПолеФормы"), Таблица, Элементы.Номер);
		КолонкаТаблицы.ПутьКДанным = "Список.СБ_ИдентификаторЗаписиAXAPTA";
		КолонкаТаблицы.Заголовок = "RECID";
		// -СБ. Широков Николай
	ИначеЕсли  ИдентификаторОбъекта = "Документ.бит_ЗаявкаНаРасходованиеСредств.ФормаДокументаУправляемая" Тогда
		ЭлементыФормы 		= Форма.Элементы;
		
		ЭлементыФормы.ЦФО.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ЦФО.ОтметкаНезаполненного		= Ложь;
		
		//ВысотаЭлемента 		= 19;
		//ПромежутокУ			= 3;
		//ПромежутокХ			= 7;
		//мВерх				= ЭлементыФормы.ЭтоКазначейство.Верх;
		//мЛево				= 6;

		ПолеВвода = ЭлементыФормы.Добавить("СБ_ИдентификаторЗаписиAXAPTA", Тип("ПолеФормы"), ЭлементыФормы.СБ_Группа);
		//ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.СБ_ИдентификаторЗаписиAXAPTA";
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.Заголовок = "RECID";
		ПолеВвода.ТолькоПросмотр 	= Истина;
		
		ПолеВвода = ЭлементыФормы.Добавить("СБ_ПрофильРазноски", Тип("ПолеФормы"), ЭлементыФормы.СБ_Группа);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.СБ_ПрофильРазноски";
		ПолеВвода.Заголовок = "Профиль разноски";
		ПолеВвода.КнопкаВыбора				= Истина;
		ПолеВвода.АвтоОтметкаНезаполненного = Истина;
		ПолеВвода.УстановитьДействие("НачалоВыбора", 			"СБ_ПрофильРазноскиНачалоВыбора");
		ПолеВвода.УстановитьДействие("АвтоПодбор", 		"СБ_ПрофильРазноскиАвтоПодбор");
		ПолеВвода.УстановитьДействие("ОкончаниеВводаТекста", 	"СБ_ПрофильРазноскиОкончаниеВводаТекста");

		ПолеВвода = ЭлементыФормы.Добавить("СБ_СрокИсполнения", Тип("ПолеФормы"), ЭлементыФормы.СБ_Группа);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.СБ_СрокИсполнения";
		ПолеВвода.Заголовок = "Срок исполнения";
		
		ПолеВвода = ЭлементыФормы.Добавить("СБ_Инициатор", Тип("ПолеФормы"), ЭлементыФормы.СБ_Группа);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.СБ_Инициатор";
		ПолеВвода.Заголовок = "Инициатор";
		
		// +СБ. Широков Николай. 2014-10-22. Доработка #1094
		Если Форма.Объект.Ссылка = ПредопределенноеЗначение("Документ.бит_ЗаявкаНаРасходованиеСредств.ПустаяСсылка") Тогда
		
			Если НЕ ПоОрганизацииРазрешенВводЗаявок(Форма.Объект.Организация) Тогда
				Форма.Объект.Организация = Справочники.Организации.ПустаяСсылка();	
			КонецЕсли; 
		
		КонецЕсли;
	
		ЭлементыФормы.Организация.УстановитьДействие("НачалоВыбора",	"СБ_ОрганизацияНачалоВыбора");
		// -СБ. Широков Николай 
	ИначеЕсли  ИдентификаторОбъекта = "Документ.бит_ПлатежнаяПозиция.ФормаДокументаУправляемая" Тогда
		// +СБ. Широков Николай. 2014-10-06. ТЗ "Казначейство" 2.2.2.4 
		
		//Определим доступность редактирования
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		СписокДоступныхВиз 	= бит_Визирование.ПолучитьВизыПользователя(ТекущийПользователь, Форма.Объект);
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-29 (#3842)
		ок_РазрешеноРедактированиеЗакладкиПеречислениеВБюджетВДокументеПлатежнаяПозиция = бит_ПраваДоступа.ПолучитьЗначениеДопПраваПользователя(
												   бит_ОбщиеПеременныеСервер.ЗначениеПеременной("глТекущийПользователь"),
	 					                           ПредопределенноеЗначение("ПланВидовХарактеристик.бит_ДополнительныеПраваПользователей.ок_РазрешеноРедактированиеЗакладкиПеречислениеВБюджетВДокументеПлатежнаяПозиция"));
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-29 (#3842)
		
		Если СписокДоступныхВиз.НайтиПоЗначению(Справочники.бит_ГруппыВиз.ВсеВизы) <> Неопределено Тогда
			//Доступны все визы
		ИначеЕсли СписокДоступныхВиз.НайтиПоЗначению(СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("Виза_БухгалтерБК")) <> Неопределено Тогда	
			//Бухгалтер (банк.группа)
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Начало 2020-10-29 (#3842)
		ИначеЕсли ок_РазрешеноРедактированиеЗакладкиПеречислениеВБюджетВДокументеПлатежнаяПозиция Тогда
		//ОКЕЙ Поздняков А.С. (СофтЛаб) Конец 2020-10-29 (#3842)
		Иначе
			Форма.ТолькоПросмотр = Истина;
		КонецЕсли; 

			//1c-izhtc А.В. Пушин ( Функционал кнопки Заполнить уже реализован типовым механизмом кнопкой "Заполнить по шаблону"

		//ЭлементыФормы 		= Форма.Элементы;
		//ПанельОсновная	 	= ЭлементыФормы.ГруппаВидПеречисленияВБюджет;
		//
		//Если НЕ Форма.Объект.ПеречислениеВБюджет Тогда
		//	Возврат Неопределено;	
		//КонецЕсли; 
		//
		//ЭлементВидПеречисленияВБюджет = ЭлементыФормы.Найти("ВидПеречисленияВБюджет");
		//Если  НЕ ЗначениеЗаполнено(Форма.Объект.ВидПеречисленияВБюджет) Тогда //ЭлементВидПеречисленияВБюджет = Неопределено Тогда
		//	Возврат Неопределено;
		//КонецЕсли; 
		//
		//мТекущаяСтраница 	= ПанельОсновная.ТекущаяСтраница;	
		//
		//ПанельОсновная.ТекущаяСтраница = ПанельОсновная.Страницы.СтраницаПеречислениеВБюджет;
		//
		// Добавим Команду
		//КомандаЗаполнить = Форма.Команды.Добавить("СБ_ЗаполнитьСтраницуПеречислениеВБюджет");
		//КомандаЗаполнить.Действие = "СБ_ЗаполнитьСтраницуПеречислениеВБюджетНажатие";
		//КомандаЗаполнить.Заголовок 	= "Заполнить";
		//КомандаЗаполнить.ИзменяетСохраняемыеДанные = Истина;
		//
		//Добавим кнопку
		//Кнопка = Элементы.Добавить("СБ_ЗаполнитьСтраницуПеречислениеВБюджет", Тип("КнопкаФормы"),ПанельОсновная);
		//Кнопка.Заголовок 	= "Заполнить";
		//Кнопка.ИмяКоманды = "СБ_ЗаполнитьСтраницуПеречислениеВБюджет";
		//
		//Кнопка.Верх			= ЭлементВидПеречисленияВБюджет.Верх;
		//Кнопка.Лево			= ЭлементВидПеречисленияВБюджет.Лево + ЭлементВидПеречисленияВБюджет.Ширина + 3;
		//Кнопка.Высота 		= ЭлементВидПеречисленияВБюджет.Высота;
		//Кнопка.Ширина 		= 85;
	    //
		//Кнопка.ИзменяетДанные = Истина;
	    //
		//Кнопка.УстановитьДействие("Нажатие", 			"СБ_ЗаполнитьСтраницуПеречислениеВБюджетНажатие");
	    //
		//ПанельОсновная.ТекущаяСтраница = мТекущаяСтраница;
	    //
		//Форма.УстановитьДействие("ОбработкаВыбора", "ОбработкаВыбора");
			//1c-izhtc А.В. Пушин )	
	
		// -СБ. Широков Николай 

	ИначеЕсли  ИдентификаторОбъекта = "Документ.бит_ПланируемоеПоступлениеДенежныхСредств.ФормаДокументаУправляемая" Тогда
		ЭлементыФормы 		= Форма.Элементы;
		
		ЭлементыФормы.ЦФО.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ЦФО.ОтметкаНезаполненного		= Ложь;
		
		ЭлементОснование = ЭлементыФормы.Найти("ДокументОснование");
		Если ЭлементОснование = Неопределено Тогда
			ПолеВвода = ЭлементыФормы.Добавить("ДокументОснование", Тип("ПолеФормы"), ЭлементыФормы.ЛеваяКолонкаШапки);
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.ПутьКДанным = "Объект.ДокументОснование";
			ПолеВвода.Заголовок = "Основание";
		КонецЕсли;
		
		ПолеВвода = ЭлементыФормы.Добавить("СБ_Сценарий", Тип("ПолеФормы"), ЭлементыФормы.ПраваяКолонкаШапки);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.СБ_Сценарий";
		ПолеВвода.Заголовок = "Сценарий";
	ИначеЕсли  ИдентификаторОбъекта = "Документ.бит_ЗаявкаНаРасходованиеСредствОбщая.ФормаДокументаУправляемая" Тогда
		ЭлементыФормы = Форма.Элементы;
	
		ЭлементыФормы.ЦФО.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ЦФО.ОтметкаНезаполненного		= Ложь;
	
		ЭлементыФормы.Сценарий.УстановитьДействие("ПриИзменении", 			"СБ_СценарийПриИзменении");
		ЭлементыФормы.Сценарий_Список.УстановитьДействие("ПриИзменении", 	"СБ_Сценарий_СписокПриИзменении");
		
		ДобавитьКолонкиВТабличноеПолеРаспределение(Форма);
	
		бит_ЗаявкаНаРасходованиеСредствОбщаяУстановитьВидимостьЭлементов(Форма);
		
	ИначеЕсли  ИдентификаторОбъекта = "Документ.бит_РеестрПлатежей.ФормаДокументаУправляемая" Тогда
	    // +СБ. Широков Николай. 2014-09-11. ТЗ "Казначейство" 2.2.3.1.
		Форма.КлючСохраненияПоложенияОкна = Новый УникальныйИдентификатор();	
	
		Если Форма.Объект.Ссылка = ПредопределенноеЗначение("Документ.бит_РеестрПлатежей.ПустаяСсылка") Тогда
			Форма.Объект.СБ_ВидДокумента = Перечисления.СБ_ВидыРеестраПлатежа.Дополнительный;		
		КонецЕсли;
	
		ЭлементыФормы 		= Форма.Элементы;
	//1) Реквизит «Вид документа» добавить в шапку документа «Реестр платежей».
		ЭлементПроект 					= ЭлементыФормы.Проект;
	
		ЭлементПроект.Видимость 		= Ложь;
		
		ПолеВвода = ЭлементыФормы.Вставить("СБ_ВидДокумента", Тип("ПолеФормы"), ЭлементыФормы.ЛеваяКолонка);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.СБ_ВидДокумента";
		ПолеВвода.Заголовок = "Вид документа";

	//2)	Требуется выполнять проверку при записи документа с видом «Основной» на наличие в БД уже введеного основного реестра.
		Форма.УстановитьДействие("ПередЗаписью", "СБ_ПередЗаписью");	

		// Добавим подменю "Заполнить" на командную панель ТЧ "Заявки"	
		Подменю = ЭлементыФормы.Добавить("СБ_Действия", Тип("ГруппаФормы"), ЭлементыФормы.КомандыСпискаЗаявок);
		Подменю.Вид = ВидГруппыФормы.Подменю;
		Подменю.Заголовок = "Действия";
	
		//Добавить команду "СБ_РаспределитьПоБИК"
	    КомандаПодМеню = Форма.Команды.Добавить("СБ_РаспределитьПоБИК");
		КомандаПодМеню.Действие = "СБ_РаспределитьПоБИК";
		КомандаПодМеню.Заголовок 	= "Распределить по БИК";
		КомандаПодМеню.ИзменяетСохраняемыеДанные = Истина;
		//Добавим кнопку "СБ_РаспределитьПоБИК"
		КнопкаПодМеню = ЭлементыФормы.Добавить("СБ_РаспределитьПоБИК", Тип("КнопкаФормы"),Подменю);
		КнопкаПодМеню.Заголовок 	= "Распределить по БИК";
		КнопкаПодМеню.ИмяКоманды = "СБ_РаспределитьПоБИК";
		
		//Добавить команду "СБ_РаспределитьПоСумме"
	    КомандаПодМеню = Форма.Команды.Добавить("СБ_РаспределитьПоСумме");
		КомандаПодМеню.Действие = "СБ_РаспределитьПоСумме";
		КомандаПодМеню.Заголовок 	= "Распределить по сумме";
		КомандаПодМеню.ИзменяетСохраняемыеДанные = Истина;
		//Добавим кнопку "СБ_РаспределитьПоСумме"
		КнопкаПодМеню = ЭлементыФормы.Добавить("СБ_РаспределитьПоСумме", Тип("КнопкаФормы"),Подменю);
		КнопкаПодМеню.Заголовок 	= "Распределить по сумме";
		КнопкаПодМеню.ИмяКоманды = "СБ_РаспределитьПоСумме";
		
		ГруппаКнопокПодМеню = ЭлементыФормы.Добавить("СБ_РазделительКоманд", Тип("ГруппаФормы"),Подменю);
		ГруппаКнопокПодМеню.Вид = ВидГруппыФормы.ГруппаКнопок;
		
		//Добавить команду "СБ_ОчиститьБанковскийСчет"
	    КомандаПодМеню = Форма.Команды.Добавить("СБ_ОчиститьБанковскийСчет");
		КомандаПодМеню.Действие = "СБ_ОчиститьБанковскийСчет";
		КомандаПодМеню.Заголовок 	= "Очистить банковский счет";
		КомандаПодМеню.ИзменяетСохраняемыеДанные = Истина;
		//Добавим кнопку "СБ_ОчиститьБанковскийСчет"
		КнопкаПодМеню = ЭлементыФормы.Добавить("СБ_ОчиститьБанковскийСчет", Тип("КнопкаФормы"),ГруппаКнопокПодМеню);
		КнопкаПодМеню.Заголовок 	= "Очистить банковский счет";
		КнопкаПодМеню.ИмяКоманды = "СБ_ОчиститьБанковскийСчет";
	
		//Добавить команду "СБ_ОчиститьЗаявки"
	    КомандаПодМеню = Форма.Команды.Добавить("СБ_ОчиститьЗаявки");
		КомандаПодМеню.Действие = "СБ_ОчиститьЗаявки";
		КомандаПодМеню.Заголовок 	= "Очистить заявки";
		КомандаПодМеню.ИзменяетСохраняемыеДанные = Истина;
		//Добавим кнопку "СБ_ОчиститьЗаявки"
		КнопкаПодМеню = ЭлементыФормы.Добавить("СБ_ОчиститьЗаявки", Тип("КнопкаФормы"),ГруппаКнопокПодМеню);
		КнопкаПодМеню.Заголовок 	= "Очистить заявки";
		КнопкаПодМеню.ИмяКоманды = "СБ_ОчиститьЗаявки";
		
		//Добавить команду "СБ_ПрочиататьБанковскиеСчета"
	    КомандаПодМеню = Форма.Команды.Добавить("СБ_ПрочитататьБанковскиеСчета");
		КомандаПодМеню.Действие = "СБ_ПрочитататьБанковскиеСчета";
		КомандаПодМеню.Заголовок 	= "Прочитать банковские счета";
		КомандаПодМеню.ИзменяетСохраняемыеДанные = Истина;
		//Добавим кнопку "СБ_ПрочитататьБанковскиеСчета"
		КнопкаПодМеню = ЭлементыФормы.Добавить("СБ_ПрочитататьБанковскиеСчета", Тип("КнопкаФормы"),ГруппаКнопокПодМеню);
		КнопкаПодМеню.Заголовок 	= "Прочитать банковские счета";
		КнопкаПодМеню.ИмяКоманды = "СБ_ПрочитататьБанковскиеСчета";
		
	//5)	Добавить в табличную часть документа поле «Вид статьи оборота» 
	
		//ИндексКолонкиПроект = КоллекцияКолонок.Индекс(КоллекцияКолонок.Найти("Проект"));      //Проект не используется
	
		Таблица = Форма.Элементы.Заявки;
		КолонкаТаблицы = Элементы.Вставить("СБ_ВидСтатьиОборота", Тип("ПолеФормы"), Таблица);
		КолонкаТаблицы.ПутьКДанным = "Объект.Заявки.ВидСтатьиОборота";
		КолонкаТаблицы.Заголовок = "Вид статьи";
		КолонкаТаблицы.Вид = ВидПоляФормы.ПолеВвода;
		КолонкаТаблицы.Видимость	= Ложь;

	//Дополнительный отбор
		КоллекцияКнопокОтбора = ЭлементыФормы.ЗаявкиГруппаКнопокОтбор;
	
		//Добавить команду "СБ_ДополнительныйОтбор"
	    КомандаОтбора = Форма.Команды.Добавить("СБ_ДополнительныйОтбор");
		КомандаОтбора.Действие = "СБ_ДополнительныйОтбор";
		КомандаОтбора.Заголовок 	= "Дополнительный отбор";
		КомандаОтбора.Картинка =  БиблиотекаКартинок.ОтборИСортировка;
		КомандаОтбора.Отображение = ОтображениеКнопки.Картинка;
		КомандаОтбора.Подсказка = "Отбор";
		//Добавим кнопку "СБ_ДополнительныйОтбор"
		КнопкаОтбора = ЭлементыФормы.Добавить("СБ_ДополнительныйОтбор", Тип("КнопкаФормы"),КоллекцияКнопокОтбора);
		КнопкаОтбора.Заголовок 	= "Дополнительный отбор";
		КнопкаОтбора.ИмяКоманды = "СБ_ДополнительныйОтбор";	
	
		//Добавить команду "СБ_ОтборПоЗначениюВТекущейКононке"
	    КомандаОтбора = Форма.Команды.Добавить("СБ_ОтборПоЗначениюВТекущейКононке");
		КомандаОтбора.Действие = "СБ_ОтборПоЗначениюВТекущейКононке";
		КомандаОтбора.Заголовок 	= "Отбор по значению в текущей кононке";
		КомандаОтбора.Картинка =  БиблиотекаКартинок.ОтборПоТекущемуЗначению;
		КомандаОтбора.Отображение = ОтображениеКнопки.Картинка;
		КомандаОтбора.Подсказка = "Отбор по значению в текущей кононке";
		//Добавим кнопку "СБ_ОтборПоЗначениюВТекущейКононке"
		КнопкаОтбора = ЭлементыФормы.Добавить("СБ_ОтборПоЗначениюВТекущейКононке", Тип("КнопкаФормы"),КоллекцияКнопокОтбора);
		КнопкаОтбора.Заголовок 	= "Отбор по значению в текущей кононке";
		КнопкаОтбора.ИмяКоманды = "СБ_ОтборПоЗначениюВТекущейКононке";	
		
		//Добавить команду "СБ_ОтключитьОтбор"
	    КомандаОтбора = Форма.Команды.Добавить("СБ_ОтключитьОтбор");
		КомандаОтбора.Действие = "СБ_ОтключитьОтбор";
		КомандаОтбора.Заголовок 	= "Отключить отбор";
		КомандаОтбора.Картинка =  БиблиотекаКартинок.ОтключитьОтбор;
		КомандаОтбора.Отображение = ОтображениеКнопки.Картинка;
		КомандаОтбора.Подсказка = "Отбор";
		//Добавим кнопку "СБ_ОтключитьОтбор"
		КнопкаОтбора = ЭлементыФормы.Добавить("СБ_ОтключитьОтбор", Тип("КнопкаФормы"),КоллекцияКнопокОтбора);
		КнопкаОтбора.Заголовок 	= "Отключить отбор";
		КнопкаОтбора.ИмяКоманды = "СБ_ОтключитьОтбор";
		КнопкаОтбора.Доступность = Ложь;

		//ЭлементыФормы.Заявки.УстановитьДействие("ПриАктивизацииКолонки", "СБ_ЗаявкиПриАктивизацииКолонки");
		ЭлементыФормы.Заявки.УстановитьДействие("ПриАктивизацииПоля", "СБ_ЗаявкиПриАктивизацииКолонки");

		//Контекстное меню  
		КоллекцияКнопокОтбораКонтекстногоМеню = ЭлементыФормы.СБ_КонтекстноеМенюЗаявки;
		
		//Добавим кнопку "СБ_КонтекстноеМенюЗаявкиОтборПоЗначениюВТекущейКононке"
		КнопкаОтбора = ЭлементыФормы.Добавить("СБ_КонтекстноеМенюЗаявкиОтборПоЗначениюВТекущейКононке", Тип("КнопкаФормы"),КоллекцияКнопокОтбораКонтекстногоМеню);
		КнопкаОтбора.Заголовок 	= "Отбор по значению в текущей кононке";
		КнопкаОтбора.ИмяКоманды = "СБ_ОтборПоЗначениюВТекущейКононке";	
		
		//Добавим кнопку "СБ_КонтекстноеМенюЗаявкиОтключитьОтбор"
		КнопкаОтбора = ЭлементыФормы.Добавить("СБ_КонтекстноеМенюЗаявкиОтключитьОтбор", Тип("КнопкаФормы"),КоллекцияКнопокОтбораКонтекстногоМеню);
		КнопкаОтбора.Заголовок 	= "Отключить отбор";
		КнопкаОтбора.ИмяКоманды = "СБ_ОтключитьОтбор";
		КнопкаОтбора.Доступность = Ложь;
		
		//КоманднаяПанель = ЭлементыФормы.Добавить(Тип("КоманднаяПанель"), "СБ_КонтекстноеМенюЗаявки", Ложь);
		//КоманднаяПанель.ИсточникДействий 	= ЭлементыФормы.Заявки; 
		//КоманднаяПанель.Автозаполнение		= Истина;
	
		СБ_КоманднаяПанель	= ЭлементыФормы.СБ_КонтекстноеМенюЗаявки;
//		//ЭлементыФормы.Заявки.АвтоКонтекстноеМеню 	= Ложь;
//		//ЭлементыФормы.Заявки.КонтекстноеМеню 		= СБ_КоманднаяПанель;	
		// -СБ. Широков Николай
	ИначеЕсли  ИдентификаторОбъекта = "Документ.бит_РеестрПлатежей.ФормаСпискаУправляемая" Тогда
		// +СБ. Широков Николай. 2014-09-11. ТЗ "Казначейство" 2.2.3.1.
		Таблица = Форма.Элементы.Список;
		КолонкаТаблицы = Элементы.Вставить("СБ_ВидДокумента", Тип("ПолеФормы"), Таблица, Элементы.Организация);
		КолонкаТаблицы.ПутьКДанным = "Список.СБ_ВидДокумента";
		КолонкаТаблицы.Заголовок = "Вид документа";
		// -СБ. Широков Николай
	
	//	КолонкаТаблицы = Таблица.Колонки.Вставить(5, "Вид документа");	
	//	КолонкаТаблицы.Данные = "СБ_ВидДокумента";
	//
	//	Таблица.НастройкаОтбора.СБ_ВидДокумента.Доступность = Истина;
	ИначеЕсли  ИдентификаторОбъекта = "Справочник.БанковскиеСчета.ФормаЭлемента" Тогда
		ЭлементыФормы 		= Форма.Элементы;
		
		ЭлементПрямыеРасчеты = ЭлементыФормы.Найти("ГруппаИспользуетсяБанкДляРасчетов");	// ("ПрямыеРасчеты");
		Если ЭлементПрямыеРасчеты = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Флажок = Элементы.Добавить("СБ_РаспределениеПоБанкам", Тип("ПолеФормы"),ЭлементПрямыеРасчеты);
		Флажок.Вид = ВидПоляФормы.ПолеФлажка;
		Флажок.ПутьКДанным = "Объект.СБ_РаспределениеПоБанкам";
		Флажок.Заголовок = "Распределение по банкам";
		Флажок.Подсказка = "Распределение по банкам";
		Флажок.ПоложениеЗаголовка  = ПоложениеЗаголовкаЭлементаФормы.Право;
		
	ИначеЕсли  ИдентификаторОбъекта = "Документ.ПлатежноеПоручение.ФормаСписка" Тогда
		// +СБ. Широков Николай. 2015-02-25. Консультация #1356
		
		Таблица = Форма.Элементы.Список;
		
		КолонкаТаблицы = Элементы.Вставить("СБ_ВыгруженВКлиентБанка", Тип("ПолеФормы"), Таблица, Элементы.СуммаДокумента);
		КолонкаТаблицы.ПутьКДанным = "Список.СБ_ВыгруженВКлиентБанка";
		КолонкаТаблицы.Заголовок = "Выгружен в клиент банка";
		КолонкаТаблицы.Подсказка = "Выгружен в клиент банка";

		// -СБ. Широков Николай 
		
	//ИначеЕсли  ИдентификаторОбъекта = "Справочник.БанковскиеСчета.ФормаЭлемента" Тогда
		
	ИначеЕсли  ИдентификаторОбъекта = "Обработка.бит_ПанельФункцийКазначейство.Форма" Тогда
		
		ЭлементыФормы 		= Форма.Элементы;
		
		////1) Реквизит «Вид документа» добавить в шапку документа «Реестр платежей».
		//	ЭлементПроект 					= ЭлементыФормы.Проект;
		//	ЭлементСтатьяОборотов 			= ЭлементыФормы.СтатьяОборотов;
		//
		//	ЭлементПроект.Видимость 		= Ложь;
		//	
		//	ПолеВвода = ЭлементыФормы.Вставить("СБ_ВидДокумента", Тип("ПолеФормы"), ЭлементыФормы.ЛеваяКолонка, ЭлементСтатьяОборотов);
		//	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		//	ПолеВвода.ПутьКДанным = "Объект.СБ_ВидДокумента";
		//	ПолеВвода.Заголовок = "Вид документа";
		
		////2)	Требуется выполнять проверку при записи документа с видом «Основной» на наличие в БД уже введеного основного реестра.
		//	Форма.УстановитьДействие("ПередЗаписью", "СБ_ПередЗаписью");	
		ОсновнаяПанельСправочники		= ЭлементыФормы.ГруппаЗаявкиНаРасходСправочникиИРС;
		ПослеЭтогоЭлемента				= ЭлементыФормы.РегистрСведений_битchr95СтатьиОборотовchr95СтатьиРегл_ФормаСписка;
		ГруппаОбработки1				= ЭлементыФормы.ГруппаОбработки1;
		ГруппаОбработки2				= ЭлементыФормы.ГруппаОбработки2;
		ГруппаОтчеты2					= ЭлементыФормы.ГруппаОтчеты2;
		ГруппаОтчеты3					= ЭлементыФормы.ГруппаОтчеты3;
		
		Надпись = ЭлементыФормы.Вставить("РегистрСведений_битchr95СоответствияАналитик_ФормаСписка", Тип("ДекорацияФормы"), ОсновнаяПанельСправочники, ПослеЭтогоЭлемента);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Соответствия аналитик";
		Надпись.Гиперссылка  =Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		ПослеЭтогоЭлемента				= Надпись;
		
		Надпись = ЭлементыФормы.Вставить("СБ_НастройкиКазначейства", Тип("ДекорацияФормы"), ОсновнаяПанельСправочники, ПослеЭтогоЭлемента);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Настройки казначейства";
		Надпись.Гиперссылка  =Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ОткрытьНастройкиКазначейства");
		
		ПослеЭтогоЭлемента				= Надпись;
		
		// Профили разноски
		Надпись = ЭлементыФормы.Вставить("СБ_ПрофилиРазноски", Тип("ДекорацияФормы"), ОсновнаяПанельСправочники, ПослеЭтогоЭлемента);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Профили разноски";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ОткрытьПрофилиРазноски");
		
		ПослеЭтогоЭлемента				= Надпись;
		
		////// Обработка "СБ_ФормированиеЗаявокНаОплату"
		//Надпись = ЭлементыФормы.Вставить("Обработка_СБchr95ФормированиеЗаявокНаОплату_Форма", Тип("ДекорацияФормы"), ГруппаОбработки1);
		//Надпись.Вид = ВидДекорацииФормы.Надпись;
		//Надпись.Заголовок = "Формирование заявок на оплату";
		//Надпись.Гиперссылка  = Истина;
		//
		//Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		//
		//ПослеЭтогоЭлемента				= Надпись;
		//
		//// Обработка "СБ_ФормированиеРеестраРазрешенныхОплатПоЗаявкам"
		Надпись = ЭлементыФормы.Вставить("Обработка_СБchr95ФормированиеРеестраРазрешенныхОплатПоЗаявкам_Форма", Тип("ДекорацияФормы"), ГруппаОбработки1);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Формирование реестра разрешенных оплат по заявкам";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		ПослеЭтогоЭлемента				= Надпись;
		
		//// Обработка "СБ_ВыгрузкаБанковскихВыписокВAXAPTA"
		Надпись = ЭлементыФормы.Вставить("Обработка_СБchr95ВыгрузкаБанковскихВыписокВAXAPTA_Форма", Тип("ДекорацияФормы"), ГруппаОбработки2);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Выгрузка банковских выписок в AXAPTA";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		ПослеЭтогоЭлемента				= Надпись;
		
		////Отчеты
		Надпись = ЭлементыФормы.Вставить("Отчет_СБchr95КонтрольОтложенныхЗаявок_Форма", Тип("ДекорацияФормы"), ГруппаОтчеты2);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Контроль отложенных заявок";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		ПослеЭтогоЭлемента				= Надпись;
		
		//// Отчет "СБ_ПланИФактДДС"
		Надпись = ЭлементыФормы.Вставить("Отчет_СБchr95ПланИФактДДС_Форма", Тип("ДекорацияФормы"), ГруппаОтчеты2);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Плановые и фактические ДДС";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		ПослеЭтогоЭлемента				= Надпись;
		
		//// Отчет "СБ_МежгрупповыеПоступленияИВыплаты"
		Надпись = ЭлементыФормы.Вставить("Отчет_СБchr95МежгрупповыеПоступленияИВыплаты_Форма", Тип("ДекорацияФормы"), ГруппаОтчеты3);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Межгрупповые поступления и выплаты";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		ПослеЭтогоЭлемента				= Надпись;
		
		//// Отчет "СБ_ПланФактВыплатДС"
		Надпись = ЭлементыФормы.Вставить("Отчет_СБchr95ПланФактВыплатДС_Форма", Тип("ДекорацияФормы"), ГруппаОтчеты3);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "План-Факт выплат ДС";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		ПослеЭтогоЭлемента				= Надпись;
		
	ИначеЕсли  ИдентификаторОбъекта = "Обработка.бит_ПанельФункцийМСФО.Форма" Тогда
		//////////МСФО***************************
		ЭлементыФормы 		= Форма.Элементы;
		
		ГруппаСправочниковМСФО = ЭлементыФормы.ГруппаОбщиеСведенияНСИ;
		
		Надпись = ЭлементыФормы.Вставить("РегистрСведений_битchr95муchr95Настройки1_ФормаСписка", Тип("ДекорацияФормы"), ГруппаСправочниковМСФО);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Настройки (МСФО)";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
	
		Надпись.УстановитьДействие("Нажатие", "ОткрытьНастройкиМСФО");
		
		ПослеЭтогоЭлемента				= Надпись;
		
		//**************Финансовые инструменты****************************
		ГруппаФинансовыеИнструментыПодвал = ЭлементыФормы.ГруппаФинансовыеИнструментыПодвал;
		ГруппаСправочниковФинИнструменты = ЭлементыФормы.ГруппаФинансовыеИнструментыСправочникиИРегСв;
		
		Надпись = ЭлементыФормы.Вставить("РегистрСведений_битchr95муchr95ДоговорыКВзаимозачету_ФормаСписка", Тип("ДекорацияФормы"), ГруппаСправочниковФинИнструменты);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Договоры к взаимозачету";
		Надпись.Гиперссылка  = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		ГруппаФинИнсОбработки = ЭлементыФормы.Вставить("ГруппаСтраницаФинИнсОбработки", Тип("ГруппаФормы"), ГруппаФинансовыеИнструментыПодвал);
		ГруппаФинИнсОбработки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаФинИнсОбработки.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
		ГруппаФинИнсОбработки.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
		ГруппаФинИнсОбработки.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Авто;
		ГруппаФинИнсОбработки.ОтображатьОтступСлева = Истина;
		ГруппаФинИнсОбработки.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		ГруппаФинИнсОбработки.ОтображатьЗаголовок = Истина;
		ГруппаФинИнсОбработки.Заголовок = "Обработки";
		
		Надпись = ЭлементыФормы.Вставить("Обработка_битchr95СворачиваниеЗадолженности_Форма", Тип("ДекорацияФормы"), ГруппаФинИнсОбработки);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Сворачивание задолженности";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");

		Надпись = ЭлементыФормы.Вставить("Обработка_СБchr95ЗагрузкаДанныхОПлавающихСтавкахКредитов_Форма", Тип("ДекорацияФормы"), ГруппаФинИнсОбработки);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Загрузка данных о плавающих ставках";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		Надпись = ЭлементыФормы.Вставить("Обработка_СБchr95АктуализацияГрафиковПлатежей_Форма", Тип("ДекорацияФормы"), ГруппаФинИнсОбработки);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Актуализация графиков платежей";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		ГруппаОтчетыФинИнструменты = ЭлементыФормы.ГруппаФинансовыеИнструментыОтчеты;
		
		Надпись = ЭлементыФормы.Вставить("Отчет_битchr95ОперацииАксаптыВзаиморасчеты_Форма", Тип("ДекорацияФормы"), ГруппаОтчетыФинИнструменты);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Операции БУ/НУ на основании оп-ций аксапты";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		//*****************ОС**********************
		
		ГруппаСтраницыОсновная = ЭлементыФормы.ГруппаСтраницыОсновная;
		ГруппаОС = ЭлементыФормы.Вставить("ГруппаСтраницаОС", Тип("ГруппаФормы"), ГруппаСтраницыОсновная);
		ГруппаОС.Вид = ВидГруппыФормы.Страница;
		ГруппаОС.Заголовок = "ОС";
		
		ГруппаОСВерх = ЭлементыФормы.Вставить("ГруппаСтраницаОСВверх", Тип("ГруппаФормы"), ГруппаОС);
		ГруппаОСВерх.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		//графическая схема
		ГрафСхема = ЭлементыФормы.Вставить("ГрафическаяСхемаОС",Тип("ПолеФормы"), ГруппаОСВерх);
		ГрафСхема.ПутьКДанным = "СхемаОС";
		ГрафСхема.Вид = ВидПоляФормы.ПолеГрафическойСхемы;
		ГрафСхема.ТолькоПросмотр = Истина;
		
		ГрафСхема.УстановитьДействие("Выбор", "СхемаОСВыбор");
		
		ГруппаОСНиз = ЭлементыФормы.Вставить("ГруппаСтраницаОСНиз", Тип("ГруппаФормы"), ГруппаОС);
		ГруппаОСНиз.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаОСНиз.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		
		//ОС справочники
		ГруппаОССправочники = ЭлементыФормы.Вставить("ГруппаСтраницаОССправочники", Тип("ГруппаФормы"), ГруппаОСНиз);
		ГруппаОССправочники.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаОССправочники.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
		ГруппаОССправочники.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
		ГруппаОССправочники.ОтображатьОтступСлева = Истина;
		ГруппаОССправочники.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		ГруппаОССправочники.ОтображатьЗаголовок = Истина;
		ГруппаОССправочники.Заголовок = "Справочники и рег. сведений";
		
		Надпись = ЭлементыФормы.Вставить("РегистрНакопления_битchr95муchr95КомплектацияОС_ФормаСписка", Тип("ДекорацияФормы"), ГруппаОССправочники);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Комплектация ОС";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		Надпись = ЭлементыФормы.Вставить("РегистрСведений_битchr95муchr95НРПchr95ВНА_ФормаСписка", Тип("ДекорацияФормы"), ГруппаОССправочники);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "НРП ВНА";
		Надпись.Гиперссылка  = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		
		//ОС Обработки
		ГруппаОСОбработки = ЭлементыФормы.Вставить("ГруппаСтраницаОСОбработки", Тип("ГруппаФормы"), ГруппаОСНиз);
		ГруппаОСОбработки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаОСОбработки.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
		ГруппаОСОбработки.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
		ГруппаОСОбработки.ОтображатьОтступСлева = Истина;
		ГруппаОСОбработки.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		ГруппаОСОбработки.ОтображатьЗаголовок = Истина;
		ГруппаОСОбработки.Заголовок = "Обработки";
		
		Надпись = ЭлементыФормы.Вставить("Обработка_битchr95муchr95АнализОттранслированныхПроводокОС_Форма", Тип("ДекорацияФормы"), ГруппаОСОбработки);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Анализ оттранслированных проводок ОС";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		Надпись = ЭлементыФормы.Вставить("Обработка_битchr95ПроведениеПоРегиструНРПВНА_Форма", Тип("ДекорацияФормы"), ГруппаОСОбработки);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Проведение по регистру НРП ВНА";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		Надпись = ЭлементыФормы.Вставить("Обработка_битchr95ЗаполнениеСубконтоНоменклатураНа123Счете_Форма", Тип("ДекорацияФормы"), ГруппаОСОбработки);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Заполнение субконто номенклатура на 123 счете";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		//ОС Отчеты
		ГруппаОСОтчеты = ЭлементыФормы.Вставить("ГруппаСтраницаОСОтчеты", Тип("ГруппаФормы"), ГруппаОСНиз);
		ГруппаОСОтчеты.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаОСОтчеты.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
		ГруппаОСОтчеты.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
		ГруппаОСОтчеты.ОтображатьОтступСлева = Истина;
		ГруппаОСОтчеты.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		ГруппаОСОтчеты.ОтображатьЗаголовок = Истина;
		ГруппаОСОтчеты.Заголовок = "Отчеты";
		
		Надпись = ЭлементыФормы.Вставить("Отчет_битchr95муchr95СравнениеДанныхОСchr95РСБУchr95МСФО_Форма", Тип("ДекорацияФормы"), ГруппаОСОтчеты);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Отчет «Сравнение данных ОС между РСБУ и МСФО (параллельный учет)»";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		Надпись = ЭлементыФормы.Вставить("Отчет_битchr95АмортизацияОСНаРазныхОбъектах_Форма", Тип("ДекорацияФормы"), ГруппаОСОтчеты);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Отчет «Амортизация ОС на разных объектах»";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		Надпись = ЭлементыФормы.Вставить("Отчет_битchr95КомплектацияОС_Форма", Тип("ДекорацияФормы"), ГруппаОСОтчеты);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Отчет «Комплектация ОС»";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		Надпись = ЭлементыФормы.Вставить("Отчет_битchr95РеестрICLL_Форма", Тип("ДекорацияФормы"), ГруппаОСОтчеты);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Отчет «Реестр ICLL»";
		Надпись.Гиперссылка  = Истина;
		Надпись.РастягиватьПоГоризонтали = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		Надпись = ЭлементыФормы.Вставить("Отчет_битchr95НесопоставленныеДокументыМСФО_Форма", Тип("ДекорацияФормы"), ГруппаОСОтчеты);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Отчет «Несопоставленные документы (МСФО)»";
		Надпись.РастягиватьПоГоризонтали = Истина;
		Надпись.Гиперссылка  = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
		
		Надпись = ЭлементыФормы.Вставить("Отчет_битchr95НРПВНА_Форма", Тип("ДекорацияФормы"), ГруппаОСОтчеты);
		Надпись.Вид = ВидДекорацииФормы.Надпись;
		Надпись.Заголовок = "Отчет «НРП ВНА»";
		Надпись.РастягиватьПоГоризонтали = Истина;
		Надпись.Гиперссылка  = Истина;
		
		Надпись.УстановитьДействие("Нажатие", "ДекорацияНажатие");
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Начало 2021-06-18 (#4191)
	ИначеЕсли ИдентификаторОбъекта = "Документ.ТребованиеНакладная.Форма.ФормаДокумента" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ОК_ID_Разноска", "Маска", "NNNN-NNNN");
	// ОКЕЙ Смирнов М.В. (СофтЛаб) Конец 2021-06-18 (#4191)
	КонецЕсли;	
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
Функция ПоОрганизацииРазрешенВводЗаявок(Организация)Экспорт

	Если Организация.Пустая() Тогда
		Возврат Ложь;	
	КонецЕсли; 
	
	СписокРазрешенныхОрганизаций = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("СписокОрганизаций_ФормироватьЗаявкиНаОплату");
	Если СписокРазрешенныхОрганизаций.НайтиПоЗначению(Организация) = Неопределено Тогда
		Возврат Ложь;	
	Иначе
		Возврат Истина;
	КонецЕсли; 
		
КонецФункции // ()

// +СБ. Широков Николай. 2014-09-10. ТЗ "Казначейство" 2.2.2.11.	
Процедура бит_ЗаявкаНаРасходованиеСредствОбщаяУстановитьВидимостьЭлементов(Форма)  Экспорт 

	ЭлементыФормы = Форма.Элементы;
	
	ТаблицаРаспределение 	= ЭлементыФормы.Распределение;
	КоллекцияКолонок		= ТаблицаРаспределение.ПодчиненныеЭлементы;
	
	Если КоллекцияКолонок.Найти("СБ_Контрагент") = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	ЭтоОперативныйСценарий = ЭтоСценарийОперативногоПланирования(Форма.Объект.Сценарий);	
	
	//Видимость элементов шапки	
	ПеренесенныеРеквизиты = Новый Массив;
	ПеренесенныеРеквизиты.Добавить("ВалютаДокумента");
	ПеренесенныеРеквизиты.Добавить("КурсДокумента");
	ПеренесенныеРеквизиты.Добавить("ДатаРасхода");
	ПеренесенныеРеквизиты.Добавить("ДатаПлатежаКрайняя");
	ПеренесенныеРеквизиты.Добавить("БанковскийСчетОрганизации");
	ПеренесенныеРеквизиты.Добавить("Контрагент");

	Для каждого ИмяРеквизита Из ПеренесенныеРеквизиты Цикл
		ЭлементыФормы[ИмяРеквизита + "_Список"].Видимость 				= НЕ ЭтоОперативныйСценарий;		
	КонецЦикла; 
	
	//Видимость колонок
	ДобавленныеРеквизитыТЧ	= Новый Массив;
	ДобавленныеРеквизитыТЧ.Добавить("СБ_Контрагент");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_ДатаРасхода");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_БанковскийСчетОрганизации");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_Валюта");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_Курс");
	ДобавленныеРеквизитыТЧ.Добавить("СБ_Кратность");
	
	Для каждого ИмяРеквизита Из ДобавленныеРеквизитыТЧ Цикл
	
		КолонкаТаблицы = КоллекцияКолонок.Найти(ИмяРеквизита);	
		КолонкаТаблицы.Видимость = ЭтоОперативныйСценарий;
		
	КонецЦикла; 
	
КонецПроцедуры // -СБ. Широков Николай 

// +СБ. Широков Николай. 2014-09-10. ТЗ "Казначейство" 2.2.2.11.	
Процедура ДобавитьКолонкиВТабличноеПолеРаспределение(Форма)  Экспорт

	ЭлементыФормы = Форма.Элементы;
	
	//Добавим колонки в табличное поле "Распределение"
	ТаблицаРаспределение 	= ЭлементыФормы.Распределение;
	КоллекцияКолонок		= ТаблицаРаспределение.ПодчиненныеЭлементы;
	
	КолонкаТаблицы = ЭлементыФормы.Вставить("РаспределениеСБ_Контрагент", Тип("ПолеФормы"), ТаблицаРаспределение, ЭлементыФормы.РаспределениеДоговорКонтрагента);
	КолонкаТаблицы.ПутьКДанным 		= "Объект.Распределение.СБ_Контрагент";
	КолонкаТаблицы.Заголовок 			= "Контрагент";
	КолонкаТаблицы.Вид = ВидПоляФормы.ПолеВвода;
	
	КолонкаТаблицы.КнопкаВыбора 	= Истина;
	КолонкаТаблицы.КнопкаОчистки 	= Истина;
	КолонкаТаблицы.КнопкаОткрытия 	= Истина;
	КолонкаТаблицы.УстановитьДействие("ПриИзменении", 			"СБ_КонтрагентПриИзменении");
	
	КолонкаТаблицы = ЭлементыФормы.Вставить("РаспределениеСБ_Кратность", Тип("ПолеФормы"), ТаблицаРаспределение, ЭлементыФормы.РаспределениеСумма);
	КолонкаТаблицы.ПутьКДанным 		= "Объект.Распределение.СБ_Кратность";
	КолонкаТаблицы.Заголовок	= "Кратность";
	КолонкаТаблицы.Вид = ВидПоляФормы.ПолеВвода;
	
	КолонкаТаблицы = ЭлементыФормы.Вставить("РаспределениеСБ_Курс", Тип("ПолеФормы"), ТаблицаРаспределение, ЭлементыФормы.РаспределениеСумма);
	КолонкаТаблицы.ПутьКДанным 		= "Объект.Распределение.СБ_Курс";
	КолонкаТаблицы.Заголовок 	= "Курс";
	КолонкаТаблицы.Вид = ВидПоляФормы.ПолеВвода;
	
	КолонкаТаблицы = ЭлементыФормы.Вставить("РаспределениеСБ_Валюта", Тип("ПолеФормы"), ТаблицаРаспределение, ЭлементыФормы.РаспределениеСумма);
	КолонкаТаблицы.ПутьКДанным 		= "Объект.Распределение.СБ_Валюта";
	КолонкаТаблицы.Заголовок 			= "Валюта";
	КолонкаТаблицы.Вид = ВидПоляФормы.ПолеВвода;
	
	КолонкаТаблицы.КнопкаСпискаВыбора	= Истина;
	КолонкаТаблицы.КнопкаОткрытия 		= Истина;
	КолонкаТаблицы.УстановитьДействие("НачалоВыбораИзСписка", 	"СБ_ВалютаНачалоВыбораИзСписка");
	КолонкаТаблицы.УстановитьДействие("ПриИзменении", 			"СБ_ВалютаПриИзменении");
	
	КолонкаТаблицы = ЭлементыФормы.Вставить("РаспределениеСБ_БанковскийСчетОрганизации", Тип("ПолеФормы"), ТаблицаРаспределение, ЭлементыФормы.РаспределениеСумма);
	КолонкаТаблицы.ПутьКДанным 		= "Объект.Распределение.СБ_БанковскийСчетОрганизации";
	КолонкаТаблицы.Заголовок 			= "Р/сч плательщика";
	КолонкаТаблицы.Вид = ВидПоляФормы.ПолеВвода;
	
	КолонкаТаблицы.КнопкаВыбора 	= Истина;
	КолонкаТаблицы.КнопкаОчистки 	= Истина;
	КолонкаТаблицы.КнопкаОткрытия 	= Истина;
	КолонкаТаблицы.УстановитьДействие("НачалоВыбора", 			"СБ_БанковскийСчетОрганизацииНачалоВыбора");
	КолонкаТаблицы.УстановитьДействие("ПриИзменении", 			"СБ_БанковскийСчетОрганизацииПриИзменении");
	
	КолонкаТаблицы = ЭлементыФормы.Вставить("РаспределениеСБ_ДатаРасхода", Тип("ПолеФормы"), ТаблицаРаспределение, ЭлементыФормы.РаспределениеСумма);
	КолонкаТаблицы.ПутьКДанным 		= "Объект.Распределение.СБ_ДатаРасхода";
	КолонкаТаблицы.Заголовок 			= "Дата расхода";
	КолонкаТаблицы.Вид = ВидПоляФормы.ПолеВвода;
	
	КолонкаТаблицы.КнопкаВыбора 		= Истина;
	КолонкаТаблицы.УстановитьДействие("ПриИзменении", 			"СБ_ДатаРасходаПриИзменении");

КонецПроцедуры // -СБ. Широков Николай

Функция ЭтоСценарийОперативногоПланирования(Знач Сценарий) Экспорт

	ОперативныйСценарийПланирования = СБ_КазначействоПовтИсп.ПолучитьЗначениеКонстанты("ОперативныйСценарийПланирования");
	Если НЕ ЗначениеЗаполнено(ОперативныйСценарийПланирования) Тогда
		Возврат Ложь;                                                          	
	КонецЕсли; 
	
	Возврат (Сценарий = ОперативныйСценарийПланирования);	
	
КонецФункции // ()

//загрузка из Аксапты
Процедура ВыполнитьЗагрузку(Адрес) Экспорт
	
	СтруктураПараметров = ПолучитьИзВременногоХранилища(Адрес);
	Объект = СтруктураПараметров.Объект;
	RecNo = СтруктураПараметров.RecNo;
	Объект.ЗагрузитьГруппу(RecNo);
КонецПроцедуры

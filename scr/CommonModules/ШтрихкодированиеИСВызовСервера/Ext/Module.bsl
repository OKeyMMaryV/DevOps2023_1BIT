#Область СлужебныйПрограммныйИнтерфейс

// Выполняет обработку штрихкода и возвращает результат этой обработки.
//
// Параметры:
//  Штрихкод - Строка - Значение штрихкода.
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиент.ПараметрыСканирования).
//  КэшированныеЗначения - Структура - Содержит поля кэшируемых значений.
//  УникальныйИдентификатор - УникальныйИдентификатор - Идентификатор, по которому будут помещены данные по обработанным
//                                                      штрихкодам в хранилище.
// Возвращаемое значение:
//  Структура - (См. ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода).
Функция ОбработатьШтрихкод(Штрихкод, ПараметрыСканирования, КэшированныеЗначения, УникальныйИдентификатор) Экспорт
	
	Штрихкод = ШтрихкодированиеИС.НормализованныйШтрихкод(Штрихкод, ПараметрыСканирования);
	
	СписокШтрихкодов = Новый Массив;
	СписокШтрихкодов.Добавить(Штрихкод);
	
	Результат = ОбработатьШтрихкоды(
		СписокШтрихкодов, ПараметрыСканирования, КэшированныеЗначения, УникальныйИдентификатор);
	
	Если Результат.ШтрихкодыПродукцииДляСопоставления.Количество() > 0 Тогда
		
		РезультатОбработкиШтрихкода = ШтрихкодированиеИС.РезультатОбработкиТребуетсяСопоставлениеНоменклатуры(
			Результат.ШтрихкодыПродукцииДляСопоставления, Новый Структура("Штрихкод, Количество", Штрихкод, 1), ПараметрыСканирования);
		
		Возврат РезультатОбработкиШтрихкода;
		
	КонецЕсли;
	
	Возврат Результат.РезультатыОбработки[Штрихкод];
	
КонецФункции

//Выполняет обработку штрихкодов и возвращает результат этой обработки.
//
//Параметры:
//  СписокШтрихкодов - Массив из Строка - значения штрихкодов
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиент.ПараметрыСканирования).
//  КэшированныеЗначения - Структура - Содержит поля кэшируемых значений.
//  УникальныйИдентификатор - УникальныйИдентификатор - Идентификатор, по которому будут помещены данные по обработанным
//                                                      штрихкодам в хранилище.
//Возвращаемое значение:
//  (См. ИнициализацияРезультатаОбработкиШтрихкодов).
Функция ОбработатьШтрихкоды(СписокШтрихкодов, ПараметрыСканирования, КэшированныеЗначения, УникальныйИдентификатор) Экспорт
	
	РезультатПроверок = ШтрихкодированиеИС.ВыполнитьПроверкиПередПолучениемДанныхПоШтрихкодам(
		СписокШтрихкодов, ПараметрыСканирования);
	
	Если РезультатПроверок.Количество() > 0 Тогда
		
		РезультатОбработкиШтрихкодов = ИнициализацияРезультатаОбработкиШтрихкодов();
		РезультатОбработкиШтрихкодов.РезультатыОбработки = РезультатПроверок;
		
		Возврат РезультатОбработкиШтрихкодов;
		
	КонецЕсли;
	
	ДанныеПоШтрихкодам = ШтрихкодированиеИС.ДанныеПоШтрихкодам(СписокШтрихкодов, ПараметрыСканирования, КэшированныеЗначения);
	
	РезультатОбработкиШтрихкодов = ОбработатьДанныеШтрихкодов(
		ДанныеПоШтрихкодам, УникальныйИдентификатор, ПараметрыСканирования);
	
	Возврат РезультатОбработкиШтрихкодов;
	
КонецФункции

// Добавляет серию в элемент справочника "ШтрихкодыУпаковок".
//
// Параметры:
//  РезультатОбработки - Структура - (См. ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода).
//  Серия - ОпределяемыйТип.СерияНоменклатуры - Серия.
// Возвращаемое значение:
// (См. ШтрихкодированиеИС.ИнициализироватьДанныеШтрихкода).
Функция ОбработатьДанныеШтрихкодаПослеВыбораСерии(РезультатОбработки, РезультатВыбора) Экспорт
	
	ДанныеШтрихкода = ПолучитьИзВременногоХранилища(РезультатОбработки.АдресДанныхШтрихкода);
	ДанныеШтрихкода.Серия = РезультатВыбора.ДанныеВыбора.Серия;
	ДанныеШтрихкода.ДополнительныеПараметры = РезультатВыбора;
	
	Если ЗначениеЗаполнено(ДанныеШтрихкода.ШтрихкодУпаковки) Тогда
		УстановитьПривилегированныйРежим(Истина);
		ШтрихкодУпаковкиОбъект       = ДанныеШтрихкода.ШтрихкодУпаковки.ПолучитьОбъект();
		ШтрихкодУпаковкиОбъект.Серия = РезультатВыбора.ДанныеВыбора.Серия;
		ШтрихкодУпаковкиОбъект.Записать();
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ДанныеШтрихкода;
	
КонецФункции

// Возвращает вид продукции по коду GTIN.
//
// Параметры:
//  GTIN - Строка - Код формата GTIN.
// Возвращаемое значение:
//  ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции ИС.
Функция ВидПродукцииПоGTIN(GTIN) Экспорт

	ШтрихкодыEAN = Новый Массив;
	ШтрихкодEAN = ШтрихкодированиеИС.ШтрихкодEANИзGTIN(GTIN);
	ШтрихкодыEAN.Добавить(ШтрихкодEAN);

	ДанныеПоШтрихкодам = ШтрихкодированиеИС.ДанныеПоШтрихкодамEAN(ШтрихкодыEAN);
	Если ДанныеПоШтрихкодам.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;

	Возврат ДанныеПоШтрихкодам[0].ВидПродукции;

КонецФункции

// Очищает отложенные коды маркировки.
// 
// Параметры:
//  АдресХранилища - Строка - Адрес временного хранилища.
Процедура ОчиститьОтложенныеКодыМаркировки(АдресХранилища) Экспорт

	Если Не ЭтоАдресВременногоХранилища(АдресХранилища) Тогда
		Возврат;
	КонецЕсли;
	
	КэшМаркируемойПродукции = ПолучитьИзВременногоХранилища(АдресХранилища);
	КэшМаркируемойПродукции.ОтложенныеКодыМаркировки.Очистить();
	
КонецПроцедуры

// Получает данные для уточнения сведений у пользователя из кэша по адресу.
// 
// Параметры:
//  АдресВременногоХранилища - Строка - Адрес кэша обработки кодов маркировки.
// Возвращаемое значение:
//  Неопределено - Структура - 
Функция ДанныеДляУточненияСведенийПользователя(АдресВременногоХранилища) Экспорт
	
	Если Не ЭтоАдресВременногоХранилища(АдресВременногоХранилища) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеКэша = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Возврат ДанныеКэша.ДанныеДляУточненияСведенийПользователя;
	
КонецФункции

Процедура ОбработатьУточнениеДанныхДляФормыПроверкиИПодбора(РезультатВыбора, РезультатОбработки, ПараметрыСканирования, КэшированныеЗначения) Экспорт
	
	ШтрихкодированиеИС.ОбработатьУточнениеДанныхДляФормыПроверкиИПодбора(РезультатВыбора, РезультатОбработки, ПараметрыСканирования, КэшированныеЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполняет обработку данных по штрихкодам.
//
// Параметры:
//  ДанныеПоШтрихкодам - (См. ШтрихкодированиеИС.ИнициализацияДанныхПоШтрихкодам).
//  УникальныйИдентификатор - УникальныйИдентификатор - Идентификатор, по которому будут помещены данные по обработанным
//  штрихкодам в хранилище.
//  ПараметрыСканирования - Структура - (См. ШтрихкодированиеИСКлиент.ПараметрыСканирования и ШтрихкодированиеИС.ПараметрыСканирования).
// Возвращаемое значение:
//  Структура, Структура - Описание:
// * ШтрихкодыПродукцииДляСопоставления - Массив из Строка - Штрихкоды, которые необходимо сопоставить с номенклатурой.
// * РезультатыОбработки - (См. ШтрихкодированиеВызовСервера.ИнициализацияРезультатаОбработкиШтрихкодов).
Функция ОбработатьДанныеШтрихкодов(ДанныеПоШтрихкодам, УникальныйИдентификатор, ПараметрыСканирования)
	
	ЭтоПакетнаяЗагрузка = ДанныеПоШтрихкодам.ВсеШтрихкоды.Количество() > 1;
	
	Результат = ИнициализацияРезультатаОбработкиШтрихкодов();
	
	ШтрихкодированиеИС.ВыполнитьПроверкуНаОшибкиДанныхПоШтрихкодам(ДанныеПоШтрихкодам, ПараметрыСканирования);
	
	Если ДанныеПоШтрихкодам.ЕстьОшибки Тогда
		
		Для Каждого Штрихкод Из ДанныеПоШтрихкодам.ВсеШтрихкоды Цикл
			
			РезультатОбработки = ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода(ПараметрыСканирования);
			РезультатОбработки.ТекстОшибки = ДанныеПоШтрихкодам.ТекстОшибки;
			РезультатОбработки.ЕстьОшибки  = ДанныеПоШтрихкодам.ЕстьОшибки;
			РезультатОбработки.ОбщаяОшибка = Истина;
			
			Результат.РезультатыОбработки.Вставить(Штрихкод, РезультатОбработки);
			
		КонецЦикла;
		
		Возврат Результат;
	КонецЕсли;
	
	Результат.ШтрихкодыПродукцииДляСопоставления = ДанныеПоШтрихкодам.ШтрихкодыПродукцииДляСопоставления;
	
	Если ДанныеПоШтрихкодам.ВложенныеШтрихкоды <> Неопределено Тогда
		АдресДереваУпаковок = ПоместитьВоВременноеХранилище(ДанныеПоШтрихкодам.ВложенныеШтрихкоды.ДеревоУпаковок, УникальныйИдентификатор);
	КонецЕсли;
	
	ШтрихкодированиеИС.СформироватьДанныеДокументаОснования(ПараметрыСканирования);
	
	ДанныеДляКэширования = Новый Массив;
	ОшибкиПриОбработке   = Ложь;
	Для Каждого КлючЗначение Из ДанныеПоШтрихкодам.ОбработанныеШтрихкоды Цикл
		
		ДанныеШтрихкода = КлючЗначение.Значение;
		Штрихкод        = КлючЗначение.Ключ;
		
		Если ДанныеПоШтрихкодам.ОшибкаДопустимостиВидовПродукции Тогда
		
			РезультатОбработки = ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода(ПараметрыСканирования, ДанныеШтрихкода);
			РезультатОбработки.ОшибкаДопустимостиВидовПродукции = Истина;
			Если ДанныеПоШтрихкодам.ЕстьОшибкиВДеревеУпаковок Тогда
				РезультатОбработки.ЕстьОшибкиВДеревеУпаковок = Истина;
				РезультатОбработки.АдресДереваУпаковок       = АдресДереваУпаковок;
			КонецЕсли;
		
		ИначеЕсли ИнтеграцияИСКлиентСервер.ЭтоУпаковка(ДанныеШтрихкода.ТипУпаковки) Тогда
			
			РезультатОбработки = ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода(ПараметрыСканирования);
			ЗаполнитьЗначенияСвойств(РезультатОбработки, ДанныеШтрихкода);
			
			РезультатОбработки.АдресДанныхШтрихкода = ПоместитьВоВременноеХранилище(ДанныеШтрихкода, УникальныйИдентификатор);
			РезультатОбработки.АдресДереваУпаковок  = АдресДереваУпаковок;
			РезультатОбработки.ЕстьОшибкиВДеревеУпаковок = ДанныеПоШтрихкодам.ЕстьОшибкиВДеревеУпаковок;
			
		ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ГосИС.ЕГАИС")
			И ШтрихкодированиеИС.ПрисутствуетАлкогольнаяПродукция(ДанныеШтрихкода.ВидыПродукции) Тогда
			
			МодульШтрихкодированиеЕГАИС = ОбщегоНазначения.ОбщийМодуль("ШтрихкодированиеЕГАИС");
			РезультатОбработки = МодульШтрихкодированиеЕГАИС.РезультатОбработкиШтрихкодаАкцизнойМарки(
				ДанныеШтрихкода, ПараметрыСканирования, УникальныйИдентификатор);
			
		ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ГосИС.ИСМП")
			И ШтрихкодированиеИС.ПрисутствуетТабачнаяПродукция(ДанныеШтрихкода.ВидыПродукции) Тогда
			
			МодульШтрихкодированиеМОТП = ОбщегоНазначения.ОбщийМодуль("ШтрихкодированиеМОТП");
			РезультатОбработки = МодульШтрихкодированиеМОТП.РезультатОбработкиКодаМаркировки(
				ДанныеШтрихкода, ПараметрыСканирования, УникальныйИдентификатор);
			
		ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ГосИС.ИСМП")
			И ШтрихкодированиеИС.ПрисутствуетОбувнаяПродукция(ДанныеШтрихкода.ВидыПродукции) Тогда
			
			МодульШтрихкодированиеИСМПСлужебный = ОбщегоНазначения.ОбщийМодуль("ШтрихкодированиеИСМПСлужебный");
			РезультатОбработки = МодульШтрихкодированиеИСМПСлужебный.РезультатОбработкиКодаМаркировки(
				ДанныеШтрихкода, ПараметрыСканирования, УникальныйИдентификатор,,ДанныеПоШтрихкодам);
			
		КонецЕсли;
		
		Результат.РезультатыОбработки.Вставить(Штрихкод, РезультатОбработки);
		
		Если ДанныеПоШтрихкодам.ВложенныеШтрихкоды <> Неопределено Тогда
			ДеревоУпаковок = ДанныеПоШтрихкодам.ВложенныеШтрихкоды.ДеревоУпаковок;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеШтрихкода.ТекстОшибки) Или  ДанныеПоШтрихкодам.ЕстьОшибкиВДеревеУпаковок Тогда
			ОшибкиПриОбработке = Истина;
		Иначе
			ДанныеКэша = Новый Структура("ДанныеШтрихкода, РезультатОбработки, ДеревоУпаковок", ДанныеШтрихкода, РезультатОбработки, ДеревоУпаковок);
			ДанныеДляКэширования.Добавить(ДанныеКэша);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ОшибкиПриОбработке Тогда
		
		Для Каждого ДанныеКэша Из ДанныеДляКэширования Цикл
			
			ШтрихкодированиеИС.ЗакэшироватьОбработанныеШтрихкоды(
				ПараметрыСканирования, ДанныеКэша.ДанныеШтрихкода, ДанныеКэша.РезультатОбработки, ДанныеКэша.ДеревоУпаковок);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого КлючЗначение Из ДанныеПоШтрихкодам.НеобработанныеШтрихкоды Цикл
		
		ДанныеШтрихкода = КлючЗначение.Значение;
		
		РезультатОбработки = ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода(ПараметрыСканирования, ДанныеШтрихкода);
		РезультатОбработки.АдресДанныхШтрихкода = ПоместитьВоВременноеХранилище(ДанныеШтрихкода, УникальныйИдентификатор);
		
		Если ЭтоПакетнаяЗагрузка И Не ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура) Тогда
			РезультатОбработки.ТребуетсяСопоставлениеНоменклатуры = Истина;
		КонецЕсли;
		
		Результат.РезультатыОбработки.Вставить(КлючЗначение.Ключ, РезультатОбработки);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Инициализирует структуру результата обработки штрихкодов.
//
// Возвращаемое значение:
//  Структура - Описание:
//  * ШтрихкодыПродукцииДляСопоставления - Массив Из Строка - Штрихкоды, которым небходимо сопоставить номенклатуру.
//  * РезультатыОбработки - Соответствие:
//    ** Ключ     - Строка - значение штрихкода
//    ** Значение - (См. ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода).
Функция ИнициализацияРезультатаОбработкиШтрихкодов()
	
	Результат = Новый Структура;
	Результат.Вставить("РезультатыОбработки",                Новый Соответствие);
	Результат.Вставить("ШтрихкодыПродукцииДляСопоставления", Новый Массив);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти